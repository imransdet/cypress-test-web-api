{"version":3,"file":"/Users/alimran/AquaProjects/CypressDemoProject/cypress-realworld-app-new/backend/notification-routes.ts","sources":["/Users/alimran/AquaProjects/CypressDemoProject/cypress-realworld-app-new/backend/notification-routes.ts"],"names":[],"mappings":";AAAA,gCAAgC;;;;;;;;;;;;;;AAEhC,oDAA8B;AAC9B,uCAIoB;AACpB,qCAAoE;AACpE,2CAIsB;AACtB,IAAM,MAAM,GAAG,iBAAO,CAAC,MAAM,EAAE,CAAC;AAEhC,SAAS;AAET,qBAAqB;AACrB,MAAM,CAAC,GAAG,CAAC,GAAG,EAAE,6BAAmB,EAAE,UAAC,GAAG,EAAE,GAAG;;IAC5C,0BAA0B;IAC1B,IAAM,aAAa,GAAG,IAAA,yCAA8B,EAAC,MAAA,GAAG,CAAC,IAAI,0CAAE,EAAG,CAAC,CAAC;IAEpE,GAAG,CAAC,MAAM,CAAC,GAAG,CAAC,CAAC;IAChB,GAAG,CAAC,IAAI,CAAC,EAAE,OAAO,EAAE,aAAa,EAAE,CAAC,CAAC;AACvC,CAAC,CAAC,CAAC;AAEH,0BAA0B;AAC1B,MAAM,CAAC,IAAI,CACT,OAAO,EACP,6BAAmB,EACnB,IAAA,4BAAkB,oBAAK,yCAA4B,QAAE,EACrD,UAAC,GAAG,EAAE,GAAG;;IACC,IAAA,KAAK,GAAK,GAAG,CAAC,IAAI,MAAb,CAAc;IAC3B,0BAA0B;IAC1B,IAAM,aAAa,GAAG,IAAA,8BAAmB,EAAC,MAAA,GAAG,CAAC,IAAI,0CAAE,EAAG,EAAE,KAAK,CAAC,CAAC;IAEhE,GAAG,CAAC,MAAM,CAAC,GAAG,CAAC,CAAC;IAChB,aAAa;IACb,GAAG,CAAC,IAAI,CAAC,EAAE,OAAO,EAAE,aAAa,EAAE,CAAC,CAAC;AACvC,CAAC,CACF,CAAC;AAEF,oDAAoD;AACpD,MAAM,CAAC,KAAK,CACV,kBAAkB,EAClB,6BAAmB,EACnB,IAAA,4BAAkB,iBAAE,IAAA,8BAAiB,EAAC,gBAAgB,CAAC,GAAK,yCAA4B,QAAE,EAC1F,UAAC,GAAG,EAAE,GAAG;;IACC,IAAA,cAAc,GAAK,GAAG,CAAC,MAAM,eAAf,CAAgB;IACtC,0BAA0B;IAC1B,IAAA,iCAAsB,EAAC,MAAA,GAAG,CAAC,IAAI,0CAAE,EAAG,EAAE,cAAc,EAAE,GAAG,CAAC,IAAI,CAAC,CAAC;IAEhE,GAAG,CAAC,UAAU,CAAC,GAAG,CAAC,CAAC;AACtB,CAAC,CACF,CAAC;AAEF,kBAAe,MAAM,CAAC","sourcesContent":["///<reference path=\"types.ts\" />\n\nimport express from \"express\";\nimport {\n  createNotifications,\n  updateNotificationById,\n  getUnreadNotificationsByUserId,\n} from \"./database\";\nimport { ensureAuthenticated, validateMiddleware } from \"./helpers\";\nimport {\n  isNotificationsBodyValidator,\n  shortIdValidation,\n  isNotificationPatchValidator,\n} from \"./validators\";\nconst router = express.Router();\n\n// Routes\n\n//GET /notifications/\nrouter.get(\"/\", ensureAuthenticated, (req, res) => {\n  /* istanbul ignore next */\n  const notifications = getUnreadNotificationsByUserId(req.user?.id!);\n\n  res.status(200);\n  res.json({ results: notifications });\n});\n\n//POST /notifications/bulk\nrouter.post(\n  \"/bulk\",\n  ensureAuthenticated,\n  validateMiddleware([...isNotificationsBodyValidator]),\n  (req, res) => {\n    const { items } = req.body;\n    /* istanbul ignore next */\n    const notifications = createNotifications(req.user?.id!, items);\n\n    res.status(200);\n    // @ts-ignore\n    res.json({ results: notifications });\n  }\n);\n\n//PATCH /notifications/:notificationId - scoped-user\nrouter.patch(\n  \"/:notificationId\",\n  ensureAuthenticated,\n  validateMiddleware([shortIdValidation(\"notificationId\"), ...isNotificationPatchValidator]),\n  (req, res) => {\n    const { notificationId } = req.params;\n    /* istanbul ignore next */\n    updateNotificationById(req.user?.id!, notificationId, req.body);\n\n    res.sendStatus(204);\n  }\n);\n\nexport default router;\n"]}