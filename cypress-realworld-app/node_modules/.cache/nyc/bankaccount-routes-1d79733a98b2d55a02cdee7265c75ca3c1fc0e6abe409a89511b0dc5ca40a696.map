{"version":3,"file":"/Users/alimran/AquaProjects/CypressDemoProject/cypress-realworld-app/backend/bankaccount-routes.ts","sources":["/Users/alimran/AquaProjects/CypressDemoProject/cypress-realworld-app/backend/bankaccount-routes.ts"],"names":[],"mappings":";AAAA,gCAAgC;;;;;AAEhC,oDAA8B;AAE9B,uCAKoB;AACpB,qCAAoE;AACpE,2CAAyE;AACzE,IAAM,MAAM,GAAG,iBAAO,CAAC,MAAM,EAAE,CAAC;AAEhC,SAAS;AAET,iCAAiC;AACjC,MAAM,CAAC,GAAG,CAAC,GAAG,EAAE,6BAAmB,EAAE,UAAC,GAAG,EAAE,GAAG;;IAC5C,0BAA0B;IAC1B,IAAM,QAAQ,GAAG,IAAA,kCAAuB,EAAC,MAAA,GAAG,CAAC,IAAI,0CAAE,EAAG,CAAC,CAAC;IAExD,GAAG,CAAC,MAAM,CAAC,GAAG,CAAC,CAAC;IAChB,GAAG,CAAC,IAAI,CAAC,EAAE,OAAO,EAAE,QAAQ,EAAE,CAAC,CAAC;AAClC,CAAC,CAAC,CAAC;AAEH,gDAAgD;AAChD,MAAM,CAAC,GAAG,CACR,iBAAiB,EACjB,6BAAmB,EACnB,IAAA,4BAAkB,EAAC,CAAC,IAAA,8BAAiB,EAAC,eAAe,CAAC,CAAC,CAAC,EACxD,UAAC,GAAG,EAAE,GAAG;IACC,IAAA,aAAa,GAAK,GAAG,CAAC,MAAM,cAAf,CAAgB;IAErC,IAAM,OAAO,GAAG,IAAA,6BAAkB,EAAC,aAAa,CAAC,CAAC;IAElD,GAAG,CAAC,MAAM,CAAC,GAAG,CAAC,CAAC;IAChB,GAAG,CAAC,IAAI,CAAC,EAAE,OAAO,SAAA,EAAE,CAAC,CAAC;AACxB,CAAC,CACF,CAAC;AAEF,kCAAkC;AAClC,MAAM,CAAC,IAAI,CAAC,GAAG,EAAE,6BAAmB,EAAE,IAAA,4BAAkB,EAAC,mCAAsB,CAAC,EAAE,UAAC,GAAG,EAAE,GAAG;;IACzF,0BAA0B;IAC1B,IAAM,OAAO,GAAG,IAAA,mCAAwB,EAAC,MAAA,GAAG,CAAC,IAAI,0CAAE,EAAG,EAAE,GAAG,CAAC,IAAI,CAAC,CAAC;IAElE,GAAG,CAAC,MAAM,CAAC,GAAG,CAAC,CAAC;IAChB,GAAG,CAAC,IAAI,CAAC,EAAE,OAAO,SAAA,EAAE,CAAC,CAAC;AACxB,CAAC,CAAC,CAAC;AAEH,2CAA2C;AAC3C,MAAM,CAAC,MAAM,CACX,iBAAiB,EACjB,6BAAmB,EACnB,IAAA,4BAAkB,EAAC,CAAC,IAAA,8BAAiB,EAAC,eAAe,CAAC,CAAC,CAAC,EACxD,UAAC,GAAG,EAAE,GAAG;IACC,IAAA,aAAa,GAAK,GAAG,CAAC,MAAM,cAAf,CAAgB;IAErC,IAAM,OAAO,GAAG,IAAA,gCAAqB,EAAC,aAAa,CAAC,CAAC;IAErD,GAAG,CAAC,MAAM,CAAC,GAAG,CAAC,CAAC;IAChB,GAAG,CAAC,IAAI,CAAC,EAAE,OAAO,SAAA,EAAE,CAAC,CAAC;AACxB,CAAC,CACF,CAAC;AAEF,kBAAe,MAAM,CAAC","sourcesContent":["///<reference path=\"types.ts\" />\n\nimport express from \"express\";\n\nimport {\n  getBankAccountsByUserId,\n  getBankAccountById,\n  createBankAccountForUser,\n  removeBankAccountById,\n} from \"./database\";\nimport { ensureAuthenticated, validateMiddleware } from \"./helpers\";\nimport { shortIdValidation, isBankAccountValidator } from \"./validators\";\nconst router = express.Router();\n\n// Routes\n\n//GET /bankAccounts (scoped-user)\nrouter.get(\"/\", ensureAuthenticated, (req, res) => {\n  /* istanbul ignore next */\n  const accounts = getBankAccountsByUserId(req.user?.id!);\n\n  res.status(200);\n  res.json({ results: accounts });\n});\n\n//GET /bankAccounts/:bankAccountId (scoped-user)\nrouter.get(\n  \"/:bankAccountId\",\n  ensureAuthenticated,\n  validateMiddleware([shortIdValidation(\"bankAccountId\")]),\n  (req, res) => {\n    const { bankAccountId } = req.params;\n\n    const account = getBankAccountById(bankAccountId);\n\n    res.status(200);\n    res.json({ account });\n  }\n);\n\n//POST /bankAccounts (scoped-user)\nrouter.post(\"/\", ensureAuthenticated, validateMiddleware(isBankAccountValidator), (req, res) => {\n  /* istanbul ignore next */\n  const account = createBankAccountForUser(req.user?.id!, req.body);\n\n  res.status(200);\n  res.json({ account });\n});\n\n//DELETE (soft) /bankAccounts (scoped-user)\nrouter.delete(\n  \"/:bankAccountId\",\n  ensureAuthenticated,\n  validateMiddleware([shortIdValidation(\"bankAccountId\")]),\n  (req, res) => {\n    const { bankAccountId } = req.params;\n\n    const account = removeBankAccountById(bankAccountId);\n\n    res.status(200);\n    res.json({ account });\n  }\n);\n\nexport default router;\n"]}