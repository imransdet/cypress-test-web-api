{"version":3,"file":"/Users/alimran/AquaProjects/CypressDemoProject/cypress-realworld-app/backend/auth.ts","sources":["/Users/alimran/AquaProjects/CypressDemoProject/cypress-realworld-app/backend/auth.ts"],"names":[],"mappings":"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","sourcesContent":["import bcrypt from \"bcryptjs\";\nimport passport from \"passport\";\nimport express, { Request, Response } from \"express\";\nimport { User } from \"../src/models/user\";\nimport { getUserBy, getUserById } from \"./database\";\n\nconst LocalStrategy = require(\"passport-local\").Strategy;\nconst router = express.Router();\n\n// configure passport for local strategy\npassport.use(\n  new LocalStrategy(function (username: string, password: string, done: Function) {\n    const user = getUserBy(\"username\", username);\n\n    const failureMessage = \"Incorrect username or password.\";\n    if (!user) {\n      return done(null, false, { message: failureMessage });\n    }\n\n    // validate password\n    if (!bcrypt.compareSync(password, user.password)) {\n      return done(null, false, { message: failureMessage });\n    }\n\n    return done(null, user);\n  })\n);\n\npassport.serializeUser(function (user: User, done) {\n  done(null, user.id);\n});\n\npassport.deserializeUser(function (id: string, done) {\n  const user = getUserById(id);\n  done(null, user);\n});\n\n// authentication routes\nrouter.post(\"/login\", passport.authenticate(\"local\"), (req: Request, res: Response): void => {\n  if (req.body.remember) {\n    req.session!.cookie.maxAge = 24 * 60 * 60 * 1000 * 30; // Expire in 30 days\n  } else {\n    req.session!.cookie.expires = undefined;\n  }\n\n  res.send({ user: req.user });\n});\n\nrouter.post(\"/logout\", (req: Request, res: Response): void => {\n  res.clearCookie(\"connect.sid\");\n  req.logout(() => res.redirect(\"/\"));\n  req.session!.destroy(function (err) {\n    res.redirect(\"/\");\n  });\n});\n\nrouter.get(\"/checkAuth\", (req, res) => {\n  /* istanbul ignore next */\n  if (!req.user) {\n    res.status(401).json({ error: \"User is unauthorized\" });\n  } else {\n    res.status(200).json({ user: req.user });\n  }\n});\n\nexport default router;\n"]}