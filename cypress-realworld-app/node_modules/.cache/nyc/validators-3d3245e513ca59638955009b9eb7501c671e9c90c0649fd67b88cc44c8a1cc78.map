{"version":3,"file":"/Users/alimran/AquaProjects/CypressDemoProject/cypress-realworld-app/backend/validators.ts","sources":["/Users/alimran/AquaProjects/CypressDemoProject/cypress-realworld-app/backend/validators.ts"],"names":[],"mappings":"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","sourcesContent":["import { body, check, oneOf, query, sanitizeQuery } from \"express-validator\";\nimport { isValid } from \"shortid\";\nimport {\n  TransactionStatus,\n  TransactionRequestStatus,\n  DefaultPrivacyLevel,\n  NotificationsType,\n} from \"../src/models\";\nimport { includes } from \"lodash/fp\";\n\nconst TransactionStatusValues = Object.values(TransactionStatus);\nconst RequestStatusValues = Object.values(TransactionRequestStatus);\nconst DefaultPrivacyLevelValues = Object.values(DefaultPrivacyLevel);\nconst NotificationsTypeValues = Object.values(NotificationsType);\n\n// Validators\n\nconst isShortId = (value: string) => isValid(value);\n\nexport const shortIdValidation = (key: string) => check(key).custom(isShortId);\n\nexport const searchValidation = query(\"q\").exists();\n\nexport const userFieldsValidator = oneOf([\n  check(\"firstName\").exists(),\n  check(\"lastName\").exists(),\n  check(\"password\").exists(),\n  check(\"balance\").exists(),\n  check(\"avatar\").exists(),\n  check(\"defaultPrivacyLevel\").exists(),\n]);\n\nexport const isBankAccountValidator = [\n  body(\"bankName\").isString().trim(),\n  body(\"accountNumber\").isString().trim(),\n  body(\"routingNumber\").isString().trim(),\n];\n\nexport const isUserValidator = [\n  check(\"firstName\").optional({ checkFalsy: true }).isString().trim(),\n  check(\"lastName\").optional({ checkFalsy: true }).isString().trim(),\n  check(\"username\").optional({ checkFalsy: true }).isString().trim(),\n  check(\"password\").optional({ checkFalsy: true }).isString().trim(),\n  check(\"email\").optional({ checkFalsy: true }).isString().trim(),\n  check(\"phoneNumber\").optional({ checkFalsy: true }).isString().trim(),\n  check(\"balance\").optional({ checkFalsy: true }).isNumeric().trim(),\n  check(\"avatar\").optional({ checkFalsy: true }).isURL().trim(),\n  check(\"defaultPrivacyLevel\")\n    .optional({ checkFalsy: true })\n    .isIn([\"public\", \"private\", \"contacts\"]),\n];\n\nexport const sanitizeTransactionStatus = sanitizeQuery(\"status\").customSanitizer((value) => {\n  /* istanbul ignore if*/\n  if (includes(value, TransactionStatusValues)) {\n    return value;\n  }\n  return;\n});\n\n// default request status to undefined if not provided\nexport const sanitizeRequestStatus = sanitizeQuery(\"requestStatus\").customSanitizer((value) => {\n  /* istanbul ignore if*/\n  if (includes(value, RequestStatusValues)) {\n    return value;\n  }\n  return;\n});\n\nexport const isTransactionQSValidator = [\n  query(\"status\").isIn(TransactionStatusValues).optional().trim(),\n  query(\"requestStatus\").optional({ checkFalsy: true }).isIn(RequestStatusValues).trim(),\n  query(\"receiverId\").optional({ checkFalsy: true }).isString().trim(),\n  query(\"senderId\").optional({ checkFalsy: true }).isString().trim(),\n  query(\"rangeStartTs\").optional({ checkFalsy: true }).isString().trim(),\n  query(\"rangeEndTs\").optional({ checkFalsy: true }).isString().trim(),\n  query(\"amountMax\").optional({ checkFalsy: true }).isNumeric().trim(),\n  query(\"amountMin\").optional({ checkFalsy: true }).isNumeric().trim(),\n];\n\nexport const isTransactionPayloadValidator = [\n  body(\"transactionType\").isIn([\"payment\", \"request\"]).trim(),\n  body(\"privacyLevel\").optional().isIn(DefaultPrivacyLevelValues).trim(),\n  body(\"source\").optional().isString().trim(),\n  body(\"receiverId\").isString().trim(),\n  body(\"description\").isString().trim(),\n  body(\"amount\").isNumeric().trim().toInt(),\n];\n\nexport const isTransactionPatchValidator = [body(\"requestStatus\").isIn(RequestStatusValues)];\n\nexport const isTransactionPublicQSValidator = [\n  query(\"order\").optional({ checkFalsy: true }).isIn([\"default\"]),\n];\n\nexport const isCommentValidator = body(\"content\").isString().trim();\n\nexport const isNotificationsBodyValidator = [\n  body(\"items.*.type\").isIn(NotificationsTypeValues).trim(),\n  body(\"items.*.transactionId\").custom(isShortId),\n];\n\nexport const isNotificationPatchValidator = [body(\"isRead\").isBoolean()];\n\nexport const isValidEntityValidator = [\n  check(\"entity\")\n    .isIn([\n      \"users\",\n      \"contacts\",\n      \"bankaccounts\",\n      \"notifications\",\n      \"transactions\",\n      \"likes\",\n      \"comments\",\n      \"banktransfers\",\n    ])\n    .trim(),\n];\n"]}