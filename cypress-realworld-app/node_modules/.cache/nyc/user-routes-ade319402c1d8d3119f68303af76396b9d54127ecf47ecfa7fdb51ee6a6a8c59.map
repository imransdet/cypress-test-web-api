{"version":3,"file":"/Users/alimran/AquaProjects/CypressDemoProject/cypress-realworld-app-new/backend/user-routes.ts","sources":["/Users/alimran/AquaProjects/CypressDemoProject/cypress-realworld-app-new/backend/user-routes.ts"],"names":[],"mappings":"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","sourcesContent":["///<reference path=\"types.ts\" />\n\nimport express from \"express\";\nimport { isEqual, pick } from \"lodash/fp\";\n\nimport {\n  getAllUsers,\n  createUser,\n  updateUserById,\n  getUserById,\n  getUserByUsername,\n  searchUsers,\n  removeUserFromResults,\n} from \"./database\";\nimport { User } from \"../src/models/user\";\nimport { ensureAuthenticated, validateMiddleware } from \"./helpers\";\nimport {\n  shortIdValidation,\n  searchValidation,\n  userFieldsValidator,\n  isUserValidator,\n} from \"./validators\";\nconst router = express.Router();\n\n// Routes\nrouter.get(\"/\", ensureAuthenticated, (req, res) => {\n  /* istanbul ignore next */\n  const users = removeUserFromResults(req.user?.id!, getAllUsers());\n  res.status(200).json({ results: users });\n});\n\nrouter.get(\"/search\", ensureAuthenticated, validateMiddleware([searchValidation]), (req, res) => {\n  const { q } = req.query;\n\n  /* istanbul ignore next */\n  const users = removeUserFromResults(req.user?.id!, searchUsers(q as string));\n\n  res.status(200).json({ results: users });\n});\n\nrouter.post(\"/\", userFieldsValidator, validateMiddleware(isUserValidator), (req, res) => {\n  const userDetails: User = req.body;\n\n  const user = createUser(userDetails);\n\n  res.status(201);\n  res.json({ user: user });\n});\n\nrouter.get(\n  \"/:userId\",\n  ensureAuthenticated,\n  validateMiddleware([shortIdValidation(\"userId\")]),\n  (req, res) => {\n    const { userId } = req.params;\n\n    // Permission: account owner\n    /* istanbul ignore next */\n    if (!isEqual(userId, req.user?.id)) {\n      return res.status(401).send({\n        error: \"Unauthorized\",\n      });\n    }\n\n    const user = getUserById(userId);\n\n    res.status(200);\n    res.json({ user });\n  }\n);\n\nrouter.get(\"/profile/:username\", (req, res) => {\n  const { username } = req.params;\n\n  const user = pick([\"firstName\", \"lastName\", \"avatar\"], getUserByUsername(username));\n\n  res.status(200);\n  res.json({ user });\n});\n\nrouter.patch(\n  \"/:userId\",\n  ensureAuthenticated,\n  userFieldsValidator,\n  validateMiddleware([shortIdValidation(\"userId\"), ...isUserValidator]),\n  (req, res) => {\n    const { userId } = req.params;\n\n    const edits: User = req.body;\n\n    updateUserById(userId, edits);\n\n    res.sendStatus(204);\n  }\n);\n\nexport default router;\n"]}