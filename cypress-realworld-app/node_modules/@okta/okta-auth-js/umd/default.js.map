{"version":3,"file":"default.js","mappings":"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","sources":["webpack://OktaAuth/webpack/universalModuleDefinition","webpack://OktaAuth/./lib/authn/util/stateToken.ts","webpack://OktaAuth/./lib/authn/api.ts","webpack://OktaAuth/./lib/authn/util/link2fn.ts","webpack://OktaAuth/./lib/authn/util/poll.ts","webpack://OktaAuth/./lib/authn/util/flattenEmbedded.ts","webpack://OktaAuth/./lib/authn/util/links2fns.ts","webpack://OktaAuth/./lib/authn/AuthnTransactionImpl.ts","webpack://OktaAuth/./lib/authn/factory.ts","webpack://OktaAuth/./lib/authn/mixin.ts","webpack://OktaAuth/./lib/base/factory.ts","webpack://OktaAuth/./lib/base/options.ts","webpack://OktaAuth/./node_modules/js-cookie/dist/js.cookie.mjs","webpack://OktaAuth/./lib/browser/browserStorage.ts","webpack://OktaAuth/./lib/browser/fingerprint.ts","webpack://OktaAuth/./lib/constants.ts","webpack://OktaAuth/./lib/core/AuthStateManager.ts","webpack://OktaAuth/./node_modules/broadcast-channel/dist/esbrowser/util.js","webpack://OktaAuth/./node_modules/broadcast-channel/dist/esbrowser/methods/native.js","webpack://OktaAuth/./node_modules/oblivious-set/dist/es/index.js","webpack://OktaAuth/./node_modules/broadcast-channel/dist/esbrowser/options.js","webpack://OktaAuth/./node_modules/broadcast-channel/dist/esbrowser/methods/indexed-db.js","webpack://OktaAuth/./node_modules/broadcast-channel/dist/esbrowser/methods/localstorage.js","webpack://OktaAuth/./node_modules/broadcast-channel/dist/esbrowser/methods/simulate.js","webpack://OktaAuth/./node_modules/broadcast-channel/dist/esbrowser/method-chooser.js","webpack://OktaAuth/./node_modules/broadcast-channel/dist/esbrowser/broadcast-channel.js","webpack://OktaAuth/./node_modules/unload/dist/es/index.js","webpack://OktaAuth/./node_modules/unload/dist/es/node.js","webpack://OktaAuth/./node_modules/unload/dist/es/browser.js","webpack://OktaAuth/./node_modules/broadcast-channel/dist/esbrowser/leader-election-util.js","webpack://OktaAuth/./node_modules/broadcast-channel/dist/esbrowser/leader-election-web-lock.js","webpack://OktaAuth/./node_modules/broadcast-channel/dist/esbrowser/leader-election.js","webpack://OktaAuth/./lib/services/LeaderElectionService.ts","webpack://OktaAuth/./lib/services/AutoRenewService.ts","webpack://OktaAuth/./lib/services/SyncStorageService.ts","webpack://OktaAuth/./lib/services/RenewOnTabActivationService.ts","webpack://OktaAuth/./lib/core/ServiceManager/browser.ts","webpack://OktaAuth/./lib/core/factory.ts","webpack://OktaAuth/./lib/core/mixin.ts","webpack://OktaAuth/./lib/core/options.ts","webpack://OktaAuth/./lib/core/storage.ts","webpack://OktaAuth/./lib/crypto/base64.ts","webpack://OktaAuth/./lib/crypto/browser.ts","webpack://OktaAuth/./lib/crypto/oidcHash.ts","webpack://OktaAuth/./lib/crypto/verifyToken.ts","webpack://OktaAuth/./lib/errors/AuthApiError.ts","webpack://OktaAuth/./lib/errors/AuthPollStopError.ts","webpack://OktaAuth/./lib/errors/AuthSdkError.ts","webpack://OktaAuth/./node_modules/@babel/runtime/helpers/esm/construct.js","webpack://OktaAuth/./node_modules/@babel/runtime/helpers/esm/isNativeReflectConstruct.js","webpack://OktaAuth/./node_modules/@babel/runtime/helpers/esm/wrapNativeSuper.js","webpack://OktaAuth/./node_modules/@babel/runtime/helpers/esm/isNativeFunction.js","webpack://OktaAuth/./lib/errors/CustomError.ts","webpack://OktaAuth/./lib/errors/OAuthError.ts","webpack://OktaAuth/./lib/errors/WWWAuthError.ts","webpack://OktaAuth/./lib/errors/index.ts","webpack://OktaAuth/./lib/features.ts","webpack://OktaAuth/./lib/http/OktaUserAgent.ts","webpack://OktaAuth/./lib/http/headers.ts","webpack://OktaAuth/./lib/http/mixin.ts","webpack://OktaAuth/./lib/fetch/fetchRequest.ts","webpack://OktaAuth/./lib/http/options.ts","webpack://OktaAuth/./lib/http/request.ts","webpack://OktaAuth/./lib/idx/IdxTransactionManager.ts","webpack://OktaAuth/./lib/idx/authenticate.ts","webpack://OktaAuth/./lib/idx/authenticator/Authenticator.ts","webpack://OktaAuth/./lib/idx/authenticator/OktaPassword.ts","webpack://OktaAuth/./lib/idx/authenticator/util.ts","webpack://OktaAuth/./lib/idx/cancel.ts","webpack://OktaAuth/./lib/idx/emailVerify.ts","webpack://OktaAuth/./lib/idx/factory/OktaAuthIdx.ts","webpack://OktaAuth/./lib/idx/factory/api.ts","webpack://OktaAuth/./lib/idx/flow/AuthenticationFlow.ts","webpack://OktaAuth/./lib/idx/flow/PasswordRecoveryFlow.ts","webpack://OktaAuth/./lib/idx/flow/RegistrationFlow.ts","webpack://OktaAuth/./lib/idx/flow/AccountUnlockFlow.ts","webpack://OktaAuth/./lib/idx/flow/FlowSpecification.ts","webpack://OktaAuth/./lib/idx/handleInteractionCodeRedirect.ts","webpack://OktaAuth/./lib/idx/idxState/v1/actionParser.ts","webpack://OktaAuth/./lib/idx/idxState/v1/generateIdxAction.ts","webpack://OktaAuth/./lib/idx/idxState/v1/remediationParser.ts","webpack://OktaAuth/./lib/util/jsonpath.ts","webpack://OktaAuth/./lib/idx/idxState/v1/idxResponseParser.ts","webpack://OktaAuth/./lib/idx/idxState/v1/parsers.ts","webpack://OktaAuth/./lib/idx/idxState/v1/makeIdxState.ts","webpack://OktaAuth/./lib/idx/idxState/index.ts","webpack://OktaAuth/./lib/idx/mixinMinimal.ts","webpack://OktaAuth/./lib/idx/factory/minimalApi.ts","webpack://OktaAuth/./lib/oidc/mixin/minimal.ts","webpack://OktaAuth/./lib/oidc/factory/baseApi.ts","webpack://OktaAuth/./lib/idx/factory/MinimalOktaAuthIdx.ts","webpack://OktaAuth/./lib/idx/interact.ts","webpack://OktaAuth/./lib/idx/introspect.ts","webpack://OktaAuth/./lib/idx/mixin.ts","webpack://OktaAuth/./lib/idx/options.ts","webpack://OktaAuth/./lib/idx/poll.ts","webpack://OktaAuth/./lib/idx/proceed.ts","webpack://OktaAuth/./lib/idx/recoverPassword.ts","webpack://OktaAuth/./lib/idx/register.ts","webpack://OktaAuth/./lib/idx/remediators/AuthenticatorEnrollmentData.ts","webpack://OktaAuth/./lib/idx/remediators/AuthenticatorVerificationData.ts","webpack://OktaAuth/./lib/idx/remediators/Base/AuthenticatorData.ts","webpack://OktaAuth/./lib/idx/remediators/Base/Remediator.ts","webpack://OktaAuth/./lib/idx/remediators/Base/SelectAuthenticator.ts","webpack://OktaAuth/./lib/idx/authenticator/VerificationCodeAuthenticator.ts","webpack://OktaAuth/./lib/idx/authenticator/OktaVerifyTotp.ts","webpack://OktaAuth/./lib/idx/authenticator/SecurityQuestionEnrollment.ts","webpack://OktaAuth/./lib/idx/authenticator/SecurityQuestionVerification.ts","webpack://OktaAuth/./lib/idx/authenticator/WebauthnEnrollment.ts","webpack://OktaAuth/./lib/idx/authenticator/WebauthnVerification.ts","webpack://OktaAuth/./lib/idx/remediators/Base/VerifyAuthenticator.ts","webpack://OktaAuth/./lib/idx/authenticator/getAuthenticator.ts","webpack://OktaAuth/./lib/idx/remediators/ChallengeAuthenticator.ts","webpack://OktaAuth/./lib/idx/remediators/ChallengePoll.ts","webpack://OktaAuth/./lib/idx/remediators/EnrollAuthenticator.ts","webpack://OktaAuth/./lib/idx/remediators/EnrollPoll.ts","webpack://OktaAuth/./lib/idx/remediators/EnrollProfile.ts","webpack://OktaAuth/./lib/idx/remediators/EnrollmentChannelData.ts","webpack://OktaAuth/./lib/idx/remediators/GenericRemediator/util.ts","webpack://OktaAuth/./lib/idx/remediators/GenericRemediator/GenericRemediator.ts","webpack://OktaAuth/./lib/idx/remediators/Identify.ts","webpack://OktaAuth/./lib/idx/remediators/ReEnrollAuthenticator.ts","webpack://OktaAuth/./lib/idx/remediators/ReEnrollAuthenticatorWarning.ts","webpack://OktaAuth/./lib/idx/remediators/RedirectIdp.ts","webpack://OktaAuth/./lib/idx/remediators/ResetAuthenticator.ts","webpack://OktaAuth/./lib/idx/remediators/SelectAuthenticatorAuthenticate.ts","webpack://OktaAuth/./lib/idx/remediators/SelectAuthenticatorEnroll.ts","webpack://OktaAuth/./lib/idx/remediators/SelectAuthenticatorUnlockAccount.ts","webpack://OktaAuth/./lib/idx/remediators/SelectEnrollProfile.ts","webpack://OktaAuth/./lib/idx/remediators/SelectEnrollmentChannel.ts","webpack://OktaAuth/./lib/idx/remediators/Skip.ts","webpack://OktaAuth/./lib/idx/remediators/util.ts","webpack://OktaAuth/./lib/idx/remediate.ts","webpack://OktaAuth/./lib/idx/run.ts","webpack://OktaAuth/./lib/idx/startTransaction.ts","webpack://OktaAuth/./lib/idx/storage.ts","webpack://OktaAuth/./lib/idx/transactionMeta.ts","webpack://OktaAuth/./lib/idx/types/api.ts","webpack://OktaAuth/./lib/idx/types/idx-js.ts","webpack://OktaAuth/./lib/idx/unlockAccount.ts","webpack://OktaAuth/./lib/idx/util.ts","webpack://OktaAuth/./lib/idx/webauthn.ts","webpack://OktaAuth/./lib/myaccount/transactions/Base.ts","webpack://OktaAuth/./lib/myaccount/request.ts","webpack://OktaAuth/./lib/myaccount/transactions/ProfileTransaction.ts","webpack://OktaAuth/./lib/myaccount/transactions/ProfileSchemaTransaction.ts","webpack://OktaAuth/./lib/myaccount/profileApi.ts","webpack://OktaAuth/./lib/myaccount/transactions/EmailStatusTransaction.ts","webpack://OktaAuth/./lib/myaccount/transactions/EmailChallengeTransaction.ts","webpack://OktaAuth/./lib/myaccount/transactions/EmailTransaction.ts","webpack://OktaAuth/./lib/myaccount/emailApi.ts","webpack://OktaAuth/./lib/myaccount/transactions/PhoneTransaction.ts","webpack://OktaAuth/./lib/myaccount/phoneApi.ts","webpack://OktaAuth/./lib/myaccount/transactions/PasswordTransaction.ts","webpack://OktaAuth/./lib/myaccount/passwordApi.ts","webpack://OktaAuth/./lib/myaccount/factory.ts","webpack://OktaAuth/./lib/myaccount/mixin.ts","webpack://OktaAuth/./lib/myaccount/types.ts","webpack://OktaAuth/./lib/clock.ts","webpack://OktaAuth/./lib/oidc/TokenManager.ts","webpack://OktaAuth/./lib/oidc/util/sharedStorage.ts","webpack://OktaAuth/./lib/oidc/TransactionManager.ts","webpack://OktaAuth/./lib/oidc/decodeToken.ts","webpack://OktaAuth/./lib/oidc/dpop.ts","webpack://OktaAuth/./lib/oidc/endpoints/authorize.ts","webpack://OktaAuth/./lib/oidc/endpoints/token.ts","webpack://OktaAuth/./lib/oidc/endpoints/well-known.ts","webpack://OktaAuth/./lib/oidc/exchangeCodeForTokens.ts","webpack://OktaAuth/./lib/oidc/enrollAuthenticator.ts","webpack://OktaAuth/./lib/oidc/factory/api.ts","webpack://OktaAuth/./lib/oidc/factory/OktaAuthOAuth.ts","webpack://OktaAuth/./lib/oidc/getToken.ts","webpack://OktaAuth/./lib/oidc/getUserInfo.ts","webpack://OktaAuth/./lib/oidc/getWithPopup.ts","webpack://OktaAuth/./lib/oidc/getWithRedirect.ts","webpack://OktaAuth/./lib/oidc/getWithoutPrompt.ts","webpack://OktaAuth/./lib/oidc/handleOAuthResponse.ts","webpack://OktaAuth/./lib/oidc/introspect.ts","webpack://OktaAuth/./lib/oidc/mixin/index.ts","webpack://OktaAuth/./lib/oidc/mixin/browser.ts","webpack://OktaAuth/./lib/oidc/options/browser.ts","webpack://OktaAuth/./lib/oidc/options/OAuthOptionsConstructor.ts","webpack://OktaAuth/./lib/oidc/parseFromUrl.ts","webpack://OktaAuth/./lib/oidc/renewToken.ts","webpack://OktaAuth/./lib/oidc/renewTokens.ts","webpack://OktaAuth/./lib/oidc/renewTokensWithRefresh.ts","webpack://OktaAuth/./lib/oidc/revokeToken.ts","webpack://OktaAuth/./lib/oidc/storage.ts","webpack://OktaAuth/./lib/oidc/types/Token.ts","webpack://OktaAuth/./lib/oidc/types/TokenManager.ts","webpack://OktaAuth/./lib/oidc/types/Transaction.ts","webpack://OktaAuth/./lib/oidc/util/browser.ts","webpack://OktaAuth/./lib/oidc/util/defaultEnrollAuthenticatorParams.ts","webpack://OktaAuth/./lib/oidc/util/defaultTokenParams.ts","webpack://OktaAuth/./lib/oidc/util/enrollAuthenticatorMeta.ts","webpack://OktaAuth/./lib/oidc/util/errors.ts","webpack://OktaAuth/./lib/oidc/util/loginRedirect.ts","webpack://OktaAuth/./lib/oidc/util/oauth.ts","webpack://OktaAuth/./lib/oidc/util/oauthMeta.ts","webpack://OktaAuth/./lib/oidc/util/pkce.ts","webpack://OktaAuth/./lib/oidc/util/prepareEnrollAuthenticatorParams.ts","webpack://OktaAuth/./lib/oidc/util/prepareTokenParams.ts","webpack://OktaAuth/./lib/oidc/util/refreshToken.ts","webpack://OktaAuth/./lib/oidc/util/urlParams.ts","webpack://OktaAuth/./lib/oidc/util/validateClaims.ts","webpack://OktaAuth/./lib/oidc/util/validateToken.ts","webpack://OktaAuth/./lib/oidc/verifyToken.ts","webpack://OktaAuth/./lib/session/api.ts","webpack://OktaAuth/./lib/session/factory.ts","webpack://OktaAuth/./lib/session/mixin.ts","webpack://OktaAuth/./lib/storage/BaseStorageManager.ts","webpack://OktaAuth/./lib/storage/SavedObject.ts","webpack://OktaAuth/./lib/storage/mixin.ts","webpack://OktaAuth/./lib/storage/options/browser.ts","webpack://OktaAuth/./lib/storage/options/StorageOptionsConstructor.ts","webpack://OktaAuth/./lib/util/PromiseQueue.ts","webpack://OktaAuth/./lib/util/console.ts","webpack://OktaAuth/./lib/util/misc.ts","webpack://OktaAuth/./lib/util/object.ts","webpack://OktaAuth/./lib/util/types.ts","webpack://OktaAuth/./lib/util/url.ts","webpack://OktaAuth/./node_modules/p-cancelable/index.js","webpack://OktaAuth/./node_modules/cross-fetch/dist/browser-ponyfill.js","webpack://OktaAuth/./node_modules/tiny-emitter/index.js","webpack://OktaAuth/./node_modules/@babel/runtime/helpers/assertThisInitialized.js","webpack://OktaAuth/./node_modules/@babel/runtime/helpers/classCallCheck.js","webpack://OktaAuth/./node_modules/@babel/runtime/helpers/construct.js","webpack://OktaAuth/./node_modules/@babel/runtime/helpers/createClass.js","webpack://OktaAuth/./node_modules/@babel/runtime/helpers/getPrototypeOf.js","webpack://OktaAuth/./node_modules/@babel/runtime/helpers/inherits.js","webpack://OktaAuth/./node_modules/@babel/runtime/helpers/isNativeFunction.js","webpack://OktaAuth/./node_modules/@babel/runtime/helpers/isNativeReflectConstruct.js","webpack://OktaAuth/./node_modules/@babel/runtime/helpers/possibleConstructorReturn.js","webpack://OktaAuth/./node_modules/@babel/runtime/helpers/regeneratorRuntime.js","webpack://OktaAuth/./node_modules/@babel/runtime/helpers/setPrototypeOf.js","webpack://OktaAuth/./node_modules/@babel/runtime/helpers/typeof.js","webpack://OktaAuth/./node_modules/@babel/runtime/helpers/wrapNativeSuper.js","webpack://OktaAuth/./node_modules/@babel/runtime/regenerator/index.js","webpack://OktaAuth/./node_modules/@babel/runtime/helpers/esm/arrayLikeToArray.js","webpack://OktaAuth/./node_modules/@babel/runtime/helpers/esm/assertThisInitialized.js","webpack://OktaAuth/./node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js","webpack://OktaAuth/./node_modules/@babel/runtime/helpers/esm/classCallCheck.js","webpack://OktaAuth/./node_modules/@babel/runtime/helpers/esm/createClass.js","webpack://OktaAuth/./node_modules/@babel/runtime/helpers/esm/defineProperty.js","webpack://OktaAuth/./node_modules/@babel/runtime/helpers/esm/get.js","webpack://OktaAuth/./node_modules/@babel/runtime/helpers/esm/superPropBase.js","webpack://OktaAuth/./node_modules/@babel/runtime/helpers/esm/getPrototypeOf.js","webpack://OktaAuth/./node_modules/@babel/runtime/helpers/esm/inherits.js","webpack://OktaAuth/./node_modules/@babel/runtime/helpers/esm/objectWithoutProperties.js","webpack://OktaAuth/./node_modules/@babel/runtime/helpers/esm/objectWithoutPropertiesLoose.js","webpack://OktaAuth/./node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn.js","webpack://OktaAuth/./node_modules/@babel/runtime/helpers/esm/setPrototypeOf.js","webpack://OktaAuth/./node_modules/@babel/runtime/helpers/esm/slicedToArray.js","webpack://OktaAuth/./node_modules/@babel/runtime/helpers/esm/arrayWithHoles.js","webpack://OktaAuth/./node_modules/@babel/runtime/helpers/esm/iterableToArrayLimit.js","webpack://OktaAuth/./node_modules/@babel/runtime/helpers/esm/nonIterableRest.js","webpack://OktaAuth/./node_modules/@babel/runtime/helpers/esm/toConsumableArray.js","webpack://OktaAuth/./node_modules/@babel/runtime/helpers/esm/arrayWithoutHoles.js","webpack://OktaAuth/./node_modules/@babel/runtime/helpers/esm/iterableToArray.js","webpack://OktaAuth/./node_modules/@babel/runtime/helpers/esm/nonIterableSpread.js","webpack://OktaAuth/./node_modules/@babel/runtime/helpers/esm/typeof.js","webpack://OktaAuth/./node_modules/@babel/runtime/helpers/esm/unsupportedIterableToArray.js","webpack://OktaAuth/webpack/bootstrap","webpack://OktaAuth/webpack/runtime/compat get default export","webpack://OktaAuth/webpack/runtime/define property getters","webpack://OktaAuth/webpack/runtime/global","webpack://OktaAuth/webpack/runtime/hasOwnProperty shorthand","webpack://OktaAuth/webpack/runtime/make namespace object","webpack://OktaAuth/./lib/exports/default.ts"],"sourcesContent":["(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory();\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine([], factory);\n\telse if(typeof exports === 'object')\n\t\texports[\"OktaAuth\"] = factory();\n\telse\n\t\troot[\"OktaAuth\"] = factory();\n})(self, function() {\nreturn ","/*!\n * Copyright (c) 2015-present, Okta, Inc. and/or its affiliates. All rights reserved.\n * The Okta software accompanied by this notice is provided pursuant to the Apache License, Version 2.0 (the \"License.\")\n *\n * You may obtain a copy of the License at http://www.apache.org/licenses/LICENSE-2.0.\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT\n * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n *\n * See the License for the specific language governing permissions and limitations under the License.\n *\n */\n\n\nimport { AuthnTransactionState } from '../types';\n\nexport function addStateToken(res, options?) {\n  var builtArgs = {} as AuthnTransactionState;\n  Object.assign(builtArgs, options);\n\n  // Add the stateToken if one isn't passed and we have one\n  if (!builtArgs.stateToken && res.stateToken) {\n    builtArgs.stateToken = res.stateToken;\n  }\n\n  return builtArgs;\n}\n\nexport function getStateToken(res) {\n  return addStateToken(res);\n}\n","/*!\n * Copyright (c) 2015-present, Okta, Inc. and/or its affiliates. All rights reserved.\n * The Okta software accompanied by this notice is provided pursuant to the Apache License, Version 2.0 (the \"License.\")\n *\n * You may obtain a copy of the License at http://www.apache.org/licenses/LICENSE-2.0.\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT\n * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n *\n * See the License for the specific language governing permissions and limitations under the License.\n *\n */\n\n/* eslint-disable complexity, max-statements */\nimport { post } from '../http';\nimport AuthSdkError from '../errors/AuthSdkError';\nimport { STATE_TOKEN_KEY_NAME } from '../constants';\nimport { OktaAuthHttpInterface } from '../http/types';\nimport { OktaAuthStorageOptions } from '../storage/types';\nimport { addStateToken } from './util/stateToken';\nimport { AuthnTransactionAPI } from './types';\nimport { OktaAuthBaseInterface } from '../base/types';\n\nexport function transactionStatus(sdk: OktaAuthHttpInterface, args) {\n  args = addStateToken(sdk, args);\n  return post(sdk, sdk.getIssuerOrigin() + '/api/v1/authn', args, { withCredentials: true });\n}\n\nexport function resumeTransaction(sdk: OktaAuthHttpInterface, tx: AuthnTransactionAPI, args) {\n  if (!args || !args.stateToken) {\n    var stateToken = getSavedStateToken(sdk);\n    if (stateToken) {\n      args = {\n        stateToken: stateToken\n      };\n    } else {\n      return Promise.reject(new AuthSdkError('No transaction to resume'));\n    }\n  }\n  return transactionStatus(sdk, args)\n    .then(function(res) {\n      return tx.createTransaction(res);\n    });\n}\n\nexport function introspectAuthn (sdk: OktaAuthHttpInterface, tx: AuthnTransactionAPI, args) {\n  if (!args || !args.stateToken) {\n    var stateToken = getSavedStateToken(sdk);\n    if (stateToken) {\n      args = {\n        stateToken: stateToken\n      };\n    } else {\n      return Promise.reject(new AuthSdkError('No transaction to evaluate'));\n    }\n  }\n  return transactionStep(sdk, args)\n    .then(function (res) {\n      return tx.createTransaction(res);\n    });\n}\n\nexport function transactionStep(sdk: OktaAuthHttpInterface, args) {\n  args = addStateToken(sdk, args);\n  // v1 pipeline introspect API\n  return post(sdk, sdk.getIssuerOrigin() + '/api/v1/authn/introspect', args, { withCredentials: true });\n}\n\nexport function transactionExists(sdk: OktaAuthBaseInterface<OktaAuthStorageOptions>) {\n  // We have a cookie state token\n  return !!getSavedStateToken(sdk);\n}\n\nexport function postToTransaction(sdk: OktaAuthHttpInterface, tx: AuthnTransactionAPI, url: string, args, options?) {\n  options = Object.assign({ withCredentials: true }, options);\n  return post(sdk, url, args, options)\n    .then(function(res) {\n      return tx.createTransaction(res);\n    });\n}\n\nexport function getSavedStateToken(sdk: OktaAuthBaseInterface<OktaAuthStorageOptions>) {\n    // eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n    const storage = sdk.options.storageUtil!.storage;\n    return storage.get(STATE_TOKEN_KEY_NAME);\n}\n","import { OktaAuthHttpInterface } from '../../http/types';\nimport { find, omit, toQueryString } from '../../util';\nimport AuthSdkError from '../../errors/AuthSdkError';\nimport { get } from '../../http';\nimport { AuthnTransactionAPI, AuthnTransactionState } from '../types';\nimport { postToTransaction } from '../api';\nimport { addStateToken } from './stateToken';\n\n\n// query parameters to post url\ninterface PostToTransactionParams {\n  autoPush?: boolean;\n  rememberDevice?: boolean;\n  updatePhone?: boolean;\n}\n\n// eslint-disable-next-line max-params\nexport function link2fn(sdk: OktaAuthHttpInterface, tx: AuthnTransactionAPI, res, obj, link, ref) {\n  if (Array.isArray(link)) {\n    return function(name, opts?) {\n      if (!name) {\n        throw new AuthSdkError('Must provide a link name');\n      }\n\n      var lk = find(link, {name: name});\n      if (!lk) {\n        throw new AuthSdkError('No link found for that name');\n      }\n\n      return link2fn(sdk, tx, res, obj, lk, ref)(opts);\n    };\n\n  } else if (link.hints &&\n      link.hints.allow &&\n      link.hints.allow.length === 1) {\n    var method = link.hints.allow[0];\n    switch (method) {\n\n      case 'GET':\n        return function() {\n          return get(sdk, link.href, { withCredentials: true });\n        };\n\n      case 'POST':\n        // eslint-disable-next-line max-statements,complexity\n        return function(opts: AuthnTransactionState) {\n          if (ref && ref.isPolling) {\n            ref.isPolling = false;\n          }\n\n          var data = addStateToken(res, opts);\n\n          if (res.status === 'MFA_ENROLL' || res.status === 'FACTOR_ENROLL') {\n            // Add factorType and provider\n            Object.assign(data, {\n              factorType: obj.factorType,\n              provider: obj.provider\n            });\n          }\n\n          var params = {} as PostToTransactionParams;\n          var autoPush = data.autoPush;\n          if (autoPush !== undefined) {\n            if (typeof autoPush === 'function') {\n              try {\n                params.autoPush = !!autoPush();\n              }\n              catch (e) {\n                return Promise.reject(new AuthSdkError('AutoPush resulted in an error.'));\n              }\n            }\n            else if (autoPush !== null) {\n              params.autoPush = !!autoPush;\n            }\n            data = omit(data, 'autoPush');\n          }\n\n          var rememberDevice = data.rememberDevice;\n          if (rememberDevice !== undefined) {\n            if (typeof rememberDevice === 'function') {\n              try {\n                params.rememberDevice = !!rememberDevice();\n              }\n              catch (e) {\n                return Promise.reject(new AuthSdkError('RememberDevice resulted in an error.'));\n              }\n            }\n            else if (rememberDevice !== null) {\n              params.rememberDevice = !!rememberDevice;\n            }\n            data = omit(data, 'rememberDevice');\n\n          } else if (data.profile &&\n                    data.profile.updatePhone !== undefined) {\n            if (data.profile.updatePhone) {\n              params.updatePhone = true;\n            }\n            data.profile = omit(data.profile, 'updatePhone');\n          }\n          var href = link.href + toQueryString(params);\n          return postToTransaction(sdk, tx, href, data);\n        };\n    }\n  }\n}\n\n\n","/*!\n * Copyright (c) 2015-present, Okta, Inc. and/or its affiliates. All rights reserved.\n * The Okta software accompanied by this notice is provided pursuant to the Apache License, Version 2.0 (the \"License.\")\n *\n * You may obtain a copy of the License at http://www.apache.org/licenses/LICENSE-2.0.\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT\n * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n *\n * See the License for the specific language governing permissions and limitations under the License.\n *\n */\n\nimport { post } from '../../http';\nimport { isNumber, isObject, getLink, toQueryString, delay as delayFn } from '../../util';\nimport { DEFAULT_POLLING_DELAY } from '../../constants';\nimport AuthSdkError from '../../errors/AuthSdkError';\nimport AuthPollStopError from '../../errors/AuthPollStopError';\nimport { AuthnTransactionState } from '../types';\nimport { getStateToken } from './stateToken';\nimport { isIOS } from '../../features';\n\ninterface PollOptions {\n  delay?: number;\n  rememberDevice?: boolean;\n  autoPush?: boolean;\n  transactionCallBack?: (AuthnTransactionState) => void;\n}\n\nexport function getPollFn(sdk, res: AuthnTransactionState, ref) {\n  return function (options: PollOptions | number) {\n    var delay;\n    var rememberDevice;\n    var autoPush;\n    var transactionCallBack;\n\n    if (isNumber(options)) {\n      delay = options;\n    } else if (isObject(options)) {\n      options = options as PollOptions;\n      delay = options.delay;\n      rememberDevice = options.rememberDevice;\n      autoPush = options.autoPush;\n      transactionCallBack = options.transactionCallBack;\n    }\n\n    if (!delay && delay !== 0) {\n      delay = DEFAULT_POLLING_DELAY;\n    }\n\n    // Get the poll function\n    var pollLink = getLink(res, 'next', 'poll');\n    // eslint-disable-next-line complexity\n    function pollFn() {\n      var opts = {} as PollOptions;\n      if (typeof autoPush === 'function') {\n        try {\n          opts.autoPush = !!autoPush();\n        }\n        catch (e) {\n          return Promise.reject(new AuthSdkError('AutoPush resulted in an error.'));\n        }\n      }\n      else if (autoPush !== undefined && autoPush !== null) {\n        opts.autoPush = !!autoPush;\n      }\n      if (typeof rememberDevice === 'function') {\n        try {\n          opts.rememberDevice = !!rememberDevice();\n        }\n        catch (e) {\n          return Promise.reject(new AuthSdkError('RememberDevice resulted in an error.'));\n        }\n      }\n      else if (rememberDevice !== undefined && rememberDevice !== null) {\n        opts.rememberDevice = !!rememberDevice;\n      }\n\n      var href = pollLink.href + toQueryString(opts);\n      return post(sdk, href, getStateToken(res), {\n        saveAuthnState: false,\n        withCredentials: true\n      });\n    }\n\n    const delayNextPoll = (ms) => {\n      // no need for extra logic in non-iOS environments, just continue polling\n      if (!isIOS()) {\n        return delayFn(ms);\n      }\n\n      let timeoutId: ReturnType<typeof setTimeout>;\n      const cancelableDelay = () => {\n        return new Promise((resolve) => {\n          timeoutId = setTimeout(resolve, ms);\n        });\n      };\n\n      const delayForFocus = () => {\n        let pageVisibilityHandler;\n        return new Promise<void>((resolve) => {\n          let pageDidHide = false;\n          pageVisibilityHandler = () => {\n            if (document.hidden) {\n              clearTimeout(timeoutId);\n              pageDidHide = true;\n            }\n            else if (pageDidHide) {\n              resolve();\n            }\n          };\n\n          document.addEventListener('visibilitychange', pageVisibilityHandler);\n        })\n        .then(() => {\n          document.removeEventListener('visibilitychange', pageVisibilityHandler);\n        });\n      };\n\n      return Promise.race([\n        // this function will never resolve if the page changes to hidden because the timeout gets cleared\n        cancelableDelay(),\n        // this function won't resolve until the page becomes visible after being hidden\n        delayForFocus(),\n      ]);\n    };\n\n    ref.isPolling = true;\n\n    var retryCount = 0;\n    var recursivePoll = function () {\n      // If the poll was manually stopped during the delay\n      if (!ref.isPolling) {\n        return Promise.reject(new AuthPollStopError());\n      }\n\n      // don't trigger polling request if page is hidden wait until window is visible again\n      if (isIOS() && document.hidden) {\n        let handler;\n        return new Promise<void>((resolve) => {\n          handler = () => {\n            if (!document.hidden) {\n              resolve();\n            }\n          };\n          document.addEventListener('visibilitychange', handler);\n        })\n        .then(() => {\n          document.removeEventListener('visibilitychange', handler);\n          return recursivePoll();\n        });\n      }\n\n      return pollFn()\n        .then(function (pollRes) {\n          // Reset our retry counter on success\n          retryCount = 0;\n\n          // If we're still waiting\n          if (pollRes.factorResult && pollRes.factorResult === 'WAITING') {\n\n            // If the poll was manually stopped while the pollFn was called\n            if (!ref.isPolling) {\n              throw new AuthPollStopError();\n            }\n\n            if (typeof transactionCallBack === 'function') {\n              transactionCallBack(pollRes);\n            }\n\n            // Continue poll\n            return delayNextPoll(delay).then(recursivePoll);\n\n          } else {\n            // Any non-waiting result, even if polling was stopped\n            // during a request, will return\n            ref.isPolling = false;\n            return sdk.tx.createTransaction(pollRes);\n          }\n        })\n        .catch(function(err) {\n          // Exponential backoff, up to 16 seconds\n          if (err.xhr &&\n              (err.xhr.status === 0 || err.xhr.status === 429) &&\n              retryCount <= 4) {\n            var delayLength = Math.pow(2, retryCount) * 1000;\n            retryCount++;\n            return delayNextPoll(delayLength)\n              .then(recursivePoll);\n          }\n          throw err;\n        });\n    };\n    return recursivePoll()\n      .catch(function(err) {\n        ref.isPolling = false;\n        throw err;\n      });\n  };\n}\n","/* eslint-disable complexity */\nimport { OktaAuthHttpInterface } from '../../http/types';\nimport { clone, isObject, omit } from '../../util';\nimport { AuthnTransactionAPI } from '../types';\nimport { links2fns } from './links2fns';\n\nexport function flattenEmbedded(sdk: OktaAuthHttpInterface, tx: AuthnTransactionAPI, res, obj, ref) {\n  obj = obj || res;\n  obj = clone(obj);\n\n  if (Array.isArray(obj)) {\n    var objArr = [];\n    for (var o = 0, ol = obj.length; o < ol; o++) {\n      objArr.push(flattenEmbedded(sdk, tx, res, obj[o], ref) as never);\n    }\n    return objArr;\n  }\n\n  var embedded = obj._embedded || {};\n\n  for (var key in embedded) {\n    if (!Object.prototype.hasOwnProperty.call(embedded, key)) {\n      continue;\n    }\n\n    // Flatten any nested _embedded objects\n    if (isObject(embedded[key]) || Array.isArray(embedded[key])) {\n      embedded[key] = flattenEmbedded(sdk, tx, res, embedded[key], ref);\n    }\n  }\n\n  // Convert any links on the embedded object\n  var fns = links2fns(sdk, tx, res, obj, ref);\n  Object.assign(embedded, fns);\n\n  obj = omit(obj, '_embedded', '_links');\n  Object.assign(obj, embedded);\n  return obj;\n}\n","import { OktaAuthHttpInterface } from '../../http/types';\nimport { AuthnTransactionFunctions, AuthnTransactionAPI } from '../types';\nimport { link2fn } from './link2fn';\nimport { getPollFn } from './poll';\n\nexport function links2fns(sdk: OktaAuthHttpInterface, tx: AuthnTransactionAPI, res, obj, ref) {\n  var fns = {} as AuthnTransactionFunctions;\n  for (var linkName in obj._links) {\n    if (!Object.prototype.hasOwnProperty.call(obj._links, linkName)) {\n      continue;\n    }\n\n    var link = obj._links[linkName];\n    \n    if (linkName === 'next') {\n      linkName = link.name;\n    }\n\n    if (link.type) {\n      fns[linkName] = link;\n      continue;\n    }\n\n    switch (linkName) {\n      // poll is only found at the transaction\n      // level, so we don't need to pass the link\n      case 'poll':\n        fns.poll = getPollFn(sdk, res, ref);\n        break;\n\n      default:\n        var fn = link2fn(sdk, tx, res, obj, link, ref);\n        if (fn) {\n          fns[linkName] = fn;\n        }\n    }\n  }\n  return fns;\n}\n","/*!\n * Copyright (c) 2015-present, Okta, Inc. and/or its affiliates. All rights reserved.\n * The Okta software accompanied by this notice is provided pursuant to the Apache License, Version 2.0 (the \"License.\")\n *\n * You may obtain a copy of the License at http://www.apache.org/licenses/LICENSE-2.0.\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT\n * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n *\n * See the License for the specific language governing permissions and limitations under the License.\n *\n */\n\nimport { OktaAuthHttpInterface } from '../http/types';\nimport {\n  AuthnTransactionFunction,\n  AuthnTransaction,\n  AuthnTransactionAPI,\n  AuthnTransactionState\n} from './types';\nimport { flattenEmbedded } from './util/flattenEmbedded';\n\nexport class AuthnTransactionImpl implements AuthnTransaction {\n  next?: AuthnTransactionFunction;\n  cancel?: AuthnTransactionFunction;\n  skip?: AuthnTransactionFunction;\n  unlock?: AuthnTransactionFunction;\n  changePassword?: AuthnTransactionFunction;\n  resetPassword?: AuthnTransactionFunction;\n  answer?: AuthnTransactionFunction;\n  recovery?: AuthnTransactionFunction;\n  verify?: AuthnTransactionFunction;\n  resend?: AuthnTransactionFunction;\n  activate?: AuthnTransactionFunction;\n  poll?: AuthnTransactionFunction;\n  prev?: AuthnTransactionFunction;\n\n  data?: AuthnTransactionState;\n  stateToken?: string;\n  sessionToken?: string;\n  status: string;\n  user?: Record<string, any>;\n  factor?: Record<string, any>;\n  factors?: Array<Record<string, any> >;\n  policy?: Record<string, any>;\n  scopes?: Array<Record<string, any> >;\n  target?: Record<string, any>;\n  authentication?: Record<string, any>;\n  constructor(sdk: OktaAuthHttpInterface, tx: AuthnTransactionAPI, res: AuthnTransactionState | null = null) {\n    this.data = undefined;\n    this.status = undefined as unknown as string;\n    if (res) {\n      this.data = res;\n\n      // Parse response from Authn V1\n      Object.assign(this, flattenEmbedded(sdk, tx, res, res, {}));\n      delete this.stateToken;\n\n      // RECOVERY_CHALLENGE has some responses without _links.\n      // Without _links, we emulate cancel to make it intuitive\n      // to return to the starting state. We may remove this\n      // when OKTA-75434 is resolved\n      if (res.status === 'RECOVERY_CHALLENGE' && !res._links) {\n        this.cancel = function() {\n          return Promise.resolve(tx.createTransaction());\n        };\n      }\n    }\n  }\n}\n","/*!\n * Copyright (c) 2015-present, Okta, Inc. and/or its affiliates. All rights reserved.\n * The Okta software accompanied by this notice is provided pursuant to the Apache License, Version 2.0 (the \"License.\")\n *\n * You may obtain a copy of the License at http://www.apache.org/licenses/LICENSE-2.0.\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT\n * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n *\n * See the License for the specific language governing permissions and limitations under the License.\n *\n */\n\nimport { RequestData, RequestOptions, OktaAuthHttpInterface } from '../http/types';\nimport {\n  introspectAuthn,\n  transactionStatus,\n  transactionExists,\n  resumeTransaction,\n  postToTransaction\n} from './api';\nimport { AuthnTransactionImpl } from './AuthnTransactionImpl';\nimport { AuthnTransactionAPI, AuthnTransactionState } from './types';\n\n// Factory\nexport function createAuthnTransactionAPI(sdk: OktaAuthHttpInterface): AuthnTransactionAPI {\n  const tx: AuthnTransactionAPI = {\n    status: transactionStatus.bind(null, sdk),\n    resume(args) {\n      return resumeTransaction(sdk, tx, args);\n    },\n    exists: transactionExists.bind(null, sdk),\n    introspect(args) {\n      return introspectAuthn(sdk, tx, args);\n    },\n    createTransaction: (res?: AuthnTransactionState) => {\n      return new AuthnTransactionImpl(sdk, tx, res);\n    },\n    postToTransaction: (url: string, args?: RequestData, options?: RequestOptions) => {\n      return postToTransaction(sdk, tx, url, args, options);\n    }\n  };\n  return tx;\n}\n","/* eslint-disable max-statements */\n/* eslint-disable complexity */\n/*!\n * Copyright (c) 2015-present, Okta, Inc. and/or its affiliates. All rights reserved.\n * The Okta software accompanied by this notice is provided pursuant to the Apache License, Version 2.0 (the \"License.\")\n *\n * You may obtain a copy of the License at http://www.apache.org/licenses/LICENSE-2.0.\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT\n * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n *\n * See the License for the specific language governing permissions and limitations under the License.\n */\n\nimport { \n  clone,\n} from '../util';\nimport fingerprint from '../browser/fingerprint';\nimport {\n  SigninWithCredentialsOptions,\n  ForgotPasswordOptions,\n  VerifyRecoveryTokenOptions,\n  SigninOptions,\n  OktaAuthTxInterface,\n  AuthnTransaction,\n  AuthnTransactionAPI\n} from './types';\nimport {\n  createAuthnTransactionAPI,\n} from './factory';\nimport { StorageManagerInterface } from '../storage/types';\nimport { OktaAuthHttpInterface, OktaAuthHttpOptions } from '../http/types';\nimport { FingerprintAPI, OktaAuthConstructor } from '../base/types';\n\nexport function mixinAuthn\n<\n  S extends StorageManagerInterface = StorageManagerInterface,\n  O extends OktaAuthHttpOptions = OktaAuthHttpOptions,\n  TBase extends OktaAuthConstructor<OktaAuthHttpInterface<S, O>>\n    = OktaAuthConstructor<OktaAuthHttpInterface<S, O>>\n>\n(Base: TBase): TBase & OktaAuthConstructor<OktaAuthTxInterface<S, O>>\n{\n  return class OktaAuthTx extends Base implements OktaAuthTxInterface<S, O> {\n    tx: AuthnTransactionAPI; // legacy, may be removed in future version\n    authn: AuthnTransactionAPI;\n    fingerprint: FingerprintAPI;\n\n    constructor(...args: any[]) {\n      super(...args);\n\n      this.authn = this.tx = createAuthnTransactionAPI(this);\n      \n      // Fingerprint API\n      this.fingerprint = fingerprint.bind(null, this);\n    }\n\n    // Authn  V1\n    async signIn(opts: SigninOptions): Promise<AuthnTransaction> {\n      opts = clone(opts || {});\n      const _postToTransaction = (options?) => {\n        delete opts.sendFingerprint;\n        return this.tx.postToTransaction('/api/v1/authn', opts, options);\n      };\n      if (!opts.sendFingerprint) {\n        return _postToTransaction();\n      }\n      return this.fingerprint()\n      .then(function(fingerprint) {\n        return _postToTransaction({\n          headers: {\n            'X-Device-Fingerprint': fingerprint\n          }\n        });\n      });\n    }\n\n    // Authn  V1\n    async signInWithCredentials(opts: SigninWithCredentialsOptions): Promise<AuthnTransaction> {\n      return this.signIn(opts);\n    }\n\n    // { username, (relayState) }\n    forgotPassword(opts): Promise<AuthnTransaction> {\n      return this.tx.postToTransaction('/api/v1/authn/recovery/password', opts);\n    }\n\n    // { username, (relayState) }\n    unlockAccount(opts: ForgotPasswordOptions): Promise<AuthnTransaction> {\n      return this.tx.postToTransaction('/api/v1/authn/recovery/unlock', opts);\n    }\n\n    // { recoveryToken }\n    verifyRecoveryToken(opts: VerifyRecoveryTokenOptions): Promise<AuthnTransaction> {\n      return this.tx.postToTransaction('/api/v1/authn/recovery/token', opts);\n    }\n\n  };\n}\n","\n\n// Do not use this type in code, so it won't be emitted in the declaration output\nimport { removeNils } from '../util';\n\nimport * as features from '../features';\nimport * as constants from '../constants';\n\n// eslint-disable-next-line @typescript-eslint/ban-ts-comment\n// @ts-ignore \n// Do not use this type in code, so it won't be emitted in the declaration output\nimport Emitter from 'tiny-emitter';\n\nimport {\n  EventEmitter,\n  OktaAuthConstructor,\n  OktaAuthBaseInterface,\n  OktaAuthBaseOptions,\n  OktaAuthOptionsConstructor, \n  FeaturesAPI,\n} from './types';\n\nexport function createOktaAuthBase\n<\n  O extends OktaAuthBaseOptions = OktaAuthBaseOptions,\n>\n(\n  OptionsConstructor: OktaAuthOptionsConstructor<O>\n): OktaAuthConstructor<OktaAuthBaseInterface<O>>\n{\n  class OktaAuthBase implements OktaAuthBaseInterface<O>\n  {\n    options: O;\n    emitter: EventEmitter;\n    features: FeaturesAPI;\n    static features: FeaturesAPI = features;\n    static constants = constants;\n    \n    constructor(...args: any[]) {\n      const options = new OptionsConstructor(args.length ? args[0] || {} : {});\n      this.options = removeNils(options) as O; // clear out undefined values\n      this.emitter = new Emitter();\n      this.features = features;\n    }\n  }\n\n  // Hoist feature detection functions to prototype & static type\n  OktaAuthBase.features = OktaAuthBase.prototype.features = features;\n\n  // Also hoist constants for CommonJS users\n  Object.assign(OktaAuthBase, {\n    constants\n  });\n\n  return OktaAuthBase;\n}\n","/*!\n * Copyright (c) 2015-present, Okta, Inc. and/or its affiliates. All rights reserved.\n * The Okta software accompanied by this notice is provided pursuant to the Apache License, Version 2.0 (the \"License.\")\n *\n * You may obtain a copy of the License at http://www.apache.org/licenses/LICENSE-2.0.\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT\n * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * \n * See the License for the specific language governing permissions and limitations under the License.\n */\n\nimport { OktaAuthBaseOptions } from './types';\n\nexport function createBaseOptionsConstructor() {\n\n  return class BaseOptionsConstructor implements Required<OktaAuthBaseOptions> {\n    devMode: boolean;\n\n    constructor(args: any) {\n      this.devMode = !!args.devMode;\n    }\n  };\n\n}\n","/*! js-cookie v3.0.1 | MIT */\n/* eslint-disable no-var */\nfunction assign (target) {\n  for (var i = 1; i < arguments.length; i++) {\n    var source = arguments[i];\n    for (var key in source) {\n      target[key] = source[key];\n    }\n  }\n  return target\n}\n/* eslint-enable no-var */\n\n/* eslint-disable no-var */\nvar defaultConverter = {\n  read: function (value) {\n    if (value[0] === '\"') {\n      value = value.slice(1, -1);\n    }\n    return value.replace(/(%[\\dA-F]{2})+/gi, decodeURIComponent)\n  },\n  write: function (value) {\n    return encodeURIComponent(value).replace(\n      /%(2[346BF]|3[AC-F]|40|5[BDE]|60|7[BCD])/g,\n      decodeURIComponent\n    )\n  }\n};\n/* eslint-enable no-var */\n\n/* eslint-disable no-var */\n\nfunction init (converter, defaultAttributes) {\n  function set (key, value, attributes) {\n    if (typeof document === 'undefined') {\n      return\n    }\n\n    attributes = assign({}, defaultAttributes, attributes);\n\n    if (typeof attributes.expires === 'number') {\n      attributes.expires = new Date(Date.now() + attributes.expires * 864e5);\n    }\n    if (attributes.expires) {\n      attributes.expires = attributes.expires.toUTCString();\n    }\n\n    key = encodeURIComponent(key)\n      .replace(/%(2[346B]|5E|60|7C)/g, decodeURIComponent)\n      .replace(/[()]/g, escape);\n\n    var stringifiedAttributes = '';\n    for (var attributeName in attributes) {\n      if (!attributes[attributeName]) {\n        continue\n      }\n\n      stringifiedAttributes += '; ' + attributeName;\n\n      if (attributes[attributeName] === true) {\n        continue\n      }\n\n      // Considers RFC 6265 section 5.2:\n      // ...\n      // 3.  If the remaining unparsed-attributes contains a %x3B (\";\")\n      //     character:\n      // Consume the characters of the unparsed-attributes up to,\n      // not including, the first %x3B (\";\") character.\n      // ...\n      stringifiedAttributes += '=' + attributes[attributeName].split(';')[0];\n    }\n\n    return (document.cookie =\n      key + '=' + converter.write(value, key) + stringifiedAttributes)\n  }\n\n  function get (key) {\n    if (typeof document === 'undefined' || (arguments.length && !key)) {\n      return\n    }\n\n    // To prevent the for loop in the first place assign an empty array\n    // in case there are no cookies at all.\n    var cookies = document.cookie ? document.cookie.split('; ') : [];\n    var jar = {};\n    for (var i = 0; i < cookies.length; i++) {\n      var parts = cookies[i].split('=');\n      var value = parts.slice(1).join('=');\n\n      try {\n        var foundKey = decodeURIComponent(parts[0]);\n        jar[foundKey] = converter.read(value, foundKey);\n\n        if (key === foundKey) {\n          break\n        }\n      } catch (e) {}\n    }\n\n    return key ? jar[key] : jar\n  }\n\n  return Object.create(\n    {\n      set: set,\n      get: get,\n      remove: function (key, attributes) {\n        set(\n          key,\n          '',\n          assign({}, attributes, {\n            expires: -1\n          })\n        );\n      },\n      withAttributes: function (attributes) {\n        return init(this.converter, assign({}, this.attributes, attributes))\n      },\n      withConverter: function (converter) {\n        return init(assign({}, this.converter, converter), this.attributes)\n      }\n    },\n    {\n      attributes: { value: Object.freeze(defaultAttributes) },\n      converter: { value: Object.freeze(converter) }\n    }\n  )\n}\n\nvar api = init(defaultConverter, { path: '/' });\n/* eslint-enable no-var */\n\nexport default api;\n","/* eslint-disable @typescript-eslint/no-non-null-assertion */\n/*!\n * Copyright (c) 2015-present, Okta, Inc. and/or its affiliates. All rights reserved.\n * The Okta software accompanied by this notice is provided pursuant to the Apache License, Version 2.0 (the \"License.\")\n *\n * You may obtain a copy of the License at http://www.apache.org/licenses/LICENSE-2.0.\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT\n * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n *\n * See the License for the specific language governing permissions and limitations under the License.\n *\n */\n\nimport Cookies from 'js-cookie';\nimport AuthSdkError from '../errors/AuthSdkError';\nimport {\n  StorageOptions,\n  CookieOptions,\n  SimpleStorage,\n  StorageType,\n  StorageUtil,\n} from '../storage/types';\nimport { warn } from '../util';\nimport { isIE11OrLess } from '../features';\n\nexport interface CookieStorage extends SimpleStorage {\n  setItem(key: string, value: any, expiresAt?: string | null): void; // can customize expiresAt\n  getItem(key?: string): any; // if no key is passed, all cookies are returned\n  removeItem(key: string); // remove a cookie\n}\n\nexport interface BrowserStorageUtil extends StorageUtil {\n  browserHasLocalStorage(): boolean;\n  browserHasSessionStorage(): boolean;\n  getStorageByType(storageType: StorageType, options: StorageOptions): SimpleStorage;\n  getLocalStorage(): Storage;\n  getSessionStorage(): Storage;\n  getInMemoryStorage(): SimpleStorage;\n  getCookieStorage(options?: StorageOptions): CookieStorage;\n  testStorage(storage: any): boolean;\n  storage: Cookies;\n  inMemoryStore: Record<string, unknown>;\n}\n\n// Building this as an object allows us to mock the functions in our tests\nvar storageUtil: BrowserStorageUtil = {\n\n  // IE11 bug that Microsoft doesn't plan to fix\n  // https://connect.microsoft.com/IE/Feedback/Details/1496040\n  browserHasLocalStorage: function() {\n    try {\n      var storage = this.getLocalStorage();\n      return this.testStorage(storage);\n    } catch (e) {\n      return false;\n    }\n  },\n\n  browserHasSessionStorage: function() {\n    try {\n      var storage = this.getSessionStorage();\n      return this.testStorage(storage);\n    } catch (e) {\n      return false;\n    }\n  },\n\n  testStorageType: function(storageType: StorageType): boolean {\n    var supported = false;\n    switch (storageType) {\n      case 'sessionStorage':\n        supported = this.browserHasSessionStorage();\n        break;\n      case 'localStorage':\n        supported = this.browserHasLocalStorage();\n        break;\n      case 'cookie':\n      case 'memory':\n        supported = true;\n        break;\n      default:\n        supported = false;\n        break;\n    }\n    return supported;\n  },\n\n  getStorageByType: function(storageType: StorageType, options?: StorageOptions): SimpleStorage {\n    let storageProvider;\n    switch (storageType) {\n      case 'sessionStorage':\n        storageProvider = this.getSessionStorage();\n        break;\n      case 'localStorage':\n        storageProvider = this.getLocalStorage();\n        break;\n      case 'cookie':\n        storageProvider = this.getCookieStorage(options);\n        break;\n      case 'memory':\n        storageProvider = this.getInMemoryStorage();\n        break;\n      default:\n        throw new AuthSdkError(`Unrecognized storage option: ${storageType}`);\n        break;\n    }\n    return storageProvider;\n  },\n\n  findStorageType: function(types: StorageType[]) {\n    let curType;\n    let nextType;\n    \n    types = types.slice(); // copy array\n    curType = types.shift();\n    nextType = types.length ? types[0] : null;\n    if (!nextType) {\n      return curType;\n    }\n\n    if (this.testStorageType(curType)) {\n      return curType;\n    }\n\n    // preferred type was unsupported.\n    warn(`This browser doesn't support ${curType}. Switching to ${nextType}.`);\n\n    // fallback to the next type. this is a recursive call\n    return this.findStorageType(types);\n  },\n\n  getLocalStorage: function() {\n    // Workaound for synchronization issue of LocalStorage cross tabs in IE11\n    if (isIE11OrLess() && !window.onstorage) {\n      window.onstorage = function() {};\n    }\n    \n    return localStorage;\n  },\n\n  getSessionStorage: function() {\n    return sessionStorage;\n  },\n\n  // Provides webStorage-like interface for cookies\n  getCookieStorage: function(options): CookieStorage {\n    const secure = options!.secure;\n    const sameSite = options!.sameSite;\n    const sessionCookie = options!.sessionCookie;\n    if (typeof secure === 'undefined' || typeof sameSite === 'undefined') {\n      throw new AuthSdkError('getCookieStorage: \"secure\" and \"sameSite\" options must be provided');\n    }\n    const storage: CookieStorage = {\n      getItem: this.storage.get,\n      setItem: (key, value, expiresAt = '2200-01-01T00:00:00.000Z') => {\n        // By defauilt, cookie shouldn't expire\n        expiresAt = (sessionCookie ? null : expiresAt) as string;\n        this.storage.set(key, value, expiresAt, {\n          secure: secure, \n          sameSite: sameSite,\n        });\n      },\n      removeItem: (key) => {\n        this.storage.delete(key);\n      },\n    };\n\n    if (!options!.useSeparateCookies) {\n      return storage;\n    }\n\n    // Tokens are stored separately because cookies have size limits.\n    // Can only be used when storing an object value. Object properties will be saved to separate cookies.\n    // Each property of the object must also be an object.\n    return {\n      getItem: function(key) {\n        var data = storage.getItem(); // read all cookies\n        var value = {};\n        Object.keys(data).forEach(k => {\n          if (k.indexOf(key!) === 0) { // filter out unrelated cookies\n            value[k.replace(`${key}_`, '')] = JSON.parse(data[k]); // populate with cookie data\n          }\n        });\n        return JSON.stringify(value);\n      },\n      setItem: function(key, value) {\n        var existingValues = JSON.parse(this.getItem(key));\n        value = JSON.parse(value);\n        // Set key-value pairs from input to cookies\n        Object.keys(value).forEach(k => {\n          var storageKey = key + '_' + k;\n          var valueToStore = JSON.stringify(value[k]);\n          storage.setItem(storageKey, valueToStore);\n          delete existingValues[k];\n        });\n        // Delete unmatched keys from existing cookies\n        Object.keys(existingValues).forEach(k => {\n          storage.removeItem(key + '_' + k);\n        });\n      },\n      removeItem: function(key) {\n        var existingValues = JSON.parse(this.getItem(key));\n        Object.keys(existingValues).forEach(k => {\n          storage.removeItem(key + '_' + k);\n        });\n      },\n    };\n  },\n\n  // Provides an in-memory solution\n  inMemoryStore: {}, // override this for a unique memory store per instance\n  getInMemoryStorage: function() {\n    return {\n      getItem: (key) => {\n        return this.inMemoryStore[key];\n      },\n      setItem: (key, value) => {\n        this.inMemoryStore[key] = value;\n      },\n    };\n  },\n\n  testStorage: function(storage) {\n    var key = 'okta-test-storage';\n    try {\n      storage.setItem(key, key);\n      storage.removeItem(key);\n      return true;\n    } catch (e) {\n      return false;\n    }\n  },\n\n  storage: {\n    set: function(name: string, value: string, expiresAt: string, options: CookieOptions): string {\n      const { sameSite, secure } = options;\n      if (typeof secure === 'undefined' || typeof sameSite === 'undefined') {\n        throw new AuthSdkError('storage.set: \"secure\" and \"sameSite\" options must be provided');\n      }\n      var cookieOptions: CookieOptions = {\n        path: options.path || '/',\n        secure,\n        sameSite\n      };\n\n      // eslint-disable-next-line no-extra-boolean-cast\n      if (!!(Date.parse(expiresAt))) {\n        // Expires value can be converted to a Date object.\n        //\n        // If the 'expiresAt' value is not provided, or the value cannot be\n        // parsed as a Date object, the cookie will set as a session cookie.\n        cookieOptions.expires = new Date(expiresAt);\n      }\n\n      Cookies.set(name, value, cookieOptions);\n      return this.get(name);\n    },\n\n    get: function(name?: string): string {\n      // return all cookies when no args is provided\n      if (!arguments.length) {\n        return Cookies.get();\n      }\n      return Cookies.get(name);\n    },\n\n    delete: function(name: string): string {\n      return Cookies.remove(name, { path: '/' });\n    }\n  }\n};\n\nexport default storageUtil;\n","/*!\n * Copyright (c) 2015-present, Okta, Inc. and/or its affiliates. All rights reserved.\n * The Okta software accompanied by this notice is provided pursuant to the Apache License, Version 2.0 (the \"License.\")\n *\n * You may obtain a copy of the License at http://www.apache.org/licenses/LICENSE-2.0.\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT\n * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * \n * See the License for the specific language governing permissions and limitations under the License.\n */\n\n\nimport { AuthSdkError } from '../errors';\nimport { isFingerprintSupported } from '../features';\nimport {\n  addListener,\n  removeListener\n} from '../oidc';\nimport { FingerprintOptions } from '../base/types';\nimport { OktaAuthHttpInterface } from '../http/types';\n\nconst isMessageFromCorrectSource = (iframe: HTMLIFrameElement, event: MessageEvent)\n: boolean => event.source === iframe.contentWindow;\n\nexport default function fingerprint(sdk: OktaAuthHttpInterface, options?: FingerprintOptions): Promise<string> {\n  if (!isFingerprintSupported()) {\n    return Promise.reject(new AuthSdkError('Fingerprinting is not supported on this device'));\n  }\n\n  const container = options?.container ?? document.body;\n  let timeout: NodeJS.Timeout;\n  let iframe: HTMLIFrameElement;\n  let listener: (this: Window, ev: MessageEvent) => void;\n  const promise = new Promise(function (resolve, reject) {\n    iframe = document.createElement('iframe');\n    iframe.style.display = 'none';\n\n    // eslint-disable-next-line complexity\n    listener = function listener(e: MessageEvent) {\n      if (!isMessageFromCorrectSource(iframe, e)) {\n        return;\n      }\n\n      if (!e || !e.data || e.origin !== sdk.getIssuerOrigin()) {\n        return;\n      }\n\n      let msg;\n      try {\n        msg = JSON.parse(e.data);\n      } catch (err) {\n        // iframe messages should all be parsable\n        // skip not parsable messages come from other sources in same origin (browser extensions)\n        // TODO: add namespace flag in okta-core to distinguish messages that come from other sources\n        return;\n      }\n\n      if (!msg) { return; }\n      if (msg.type === 'FingerprintAvailable') {\n        return resolve(msg.fingerprint as string);\n      } else if (msg.type === 'FingerprintServiceReady') {\n        iframe?.contentWindow?.postMessage(JSON.stringify({\n          type: 'GetFingerprint'\n        }), e.origin);\n      } else {\n        return reject(new AuthSdkError('No data'));\n      }\n    };\n    addListener(window, 'message', listener);\n\n    iframe.src = sdk.getIssuerOrigin() + '/auth/services/devicefingerprint';\n    container.appendChild(iframe);\n\n    timeout = setTimeout(function() {\n      reject(new AuthSdkError('Fingerprinting timed out'));\n    }, options?.timeout || 15000);\n  });\n\n  return promise.finally(function() {\n    clearTimeout(timeout);\n    removeListener(window, 'message', listener);\n    if (container.contains(iframe)) {\n      iframe.parentElement?.removeChild(iframe);\n    }\n  }) as Promise<string>;\n}\n","/*!\n * Copyright (c) 2015-present, Okta, Inc. and/or its affiliates. All rights reserved.\n * The Okta software accompanied by this notice is provided pursuant to the Apache License, Version 2.0 (the \"License.\")\n *\n * You may obtain a copy of the License at http://www.apache.org/licenses/LICENSE-2.0.\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT\n * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n *\n * See the License for the specific language governing permissions and limitations under the License.\n */\n\nexport const STATE_TOKEN_KEY_NAME = 'oktaStateToken';\nexport const DEFAULT_POLLING_DELAY = 500;\nexport const DEFAULT_MAX_CLOCK_SKEW = 300;\nexport const DEFAULT_CACHE_DURATION = 86400;\nexport const TOKEN_STORAGE_NAME = 'okta-token-storage';\nexport const CACHE_STORAGE_NAME = 'okta-cache-storage';\nexport const PKCE_STORAGE_NAME = 'okta-pkce-storage';\nexport const TRANSACTION_STORAGE_NAME = 'okta-transaction-storage';\nexport const SHARED_TRANSACTION_STORAGE_NAME = 'okta-shared-transaction-storage';\nexport const ORIGINAL_URI_STORAGE_NAME = 'okta-original-uri-storage';\nexport const IDX_RESPONSE_STORAGE_NAME = 'okta-idx-response-storage';\nexport const ACCESS_TOKEN_STORAGE_KEY = 'accessToken';\nexport const ID_TOKEN_STORAGE_KEY =  'idToken';\nexport const REFRESH_TOKEN_STORAGE_KEY =  'refreshToken';\nexport const REFERRER_PATH_STORAGE_KEY = 'referrerPath';\n\n// Code verifier: Random URL-safe string with a minimum length of 43 characters.\n// Code challenge: Base64 URL-encoded SHA-256 hash of the code verifier.\nexport const MIN_VERIFIER_LENGTH = 43;\nexport const MAX_VERIFIER_LENGTH = 128;\nexport const DEFAULT_CODE_CHALLENGE_METHOD = 'S256';\n\nexport const IDX_API_VERSION = '1.0.0';","/*!\n * Copyright (c) 2015-present, Okta, Inc. and/or its affiliates. All rights reserved.\n * The Okta software accompanied by this notice is provided pursuant to the Apache License, Version 2.0 (the \"License.\")\n *\n * You may obtain a copy of the License at http://www.apache.org/licenses/LICENSE-2.0.\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT\n * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * \n * See the License for the specific language governing permissions and limitations under the License.\n */\n \n// eslint-disable-next-line @typescript-eslint/ban-ts-comment\n// @ts-ignore \n// Do not use this type in code, so it won't be emitted in the declaration output\nimport PCancelable from 'p-cancelable';\nimport { AuthSdkError } from '../errors';\nimport {\n  EVENT_ADDED,\n  EVENT_REMOVED,\n  OAuthStorageManagerInterface,\n  OAuthTransactionMeta,\n  OktaAuthOAuthInterface\n} from '../oidc';\nimport {\n  AuthState,\n  AuthStateLogOptions,\n  OktaAuthCoreOptions,\n} from './types';\nimport { PromiseQueue, getConsole } from '../util';\n\nexport const INITIAL_AUTH_STATE = null;\nconst DEFAULT_PENDING = {\n  updateAuthStatePromise: null,\n  canceledTimes: 0\n};\nconst EVENT_AUTH_STATE_CHANGE = 'authStateChange';\nconst MAX_PROMISE_CANCEL_TIMES = 10;\n\n// only compare first level of authState\nconst isSameAuthState = (prevState: AuthState | null, state: AuthState) => {\n  // initial state is null\n  if (!prevState) {\n    return false;\n  }\n\n  return prevState.isAuthenticated === state.isAuthenticated \n    && JSON.stringify(prevState.idToken) === JSON.stringify(state.idToken)\n    && JSON.stringify(prevState.accessToken) === JSON.stringify(state.accessToken)\n    && prevState.error === state.error;\n};\n\n\nexport class AuthStateManager\n<\n  M extends OAuthTransactionMeta,\n  S extends OAuthStorageManagerInterface<M>,\n  O extends OktaAuthCoreOptions\n>\n{\n  _sdk: OktaAuthOAuthInterface<M, S, O>;\n  _pending: { \n    updateAuthStatePromise: any;\n    canceledTimes: number; \n  };\n  _authState: AuthState | null;\n  _prevAuthState: AuthState | null;\n  _logOptions: AuthStateLogOptions;\n  _transformQueue: PromiseQueue;\n\n  constructor(sdk: OktaAuthOAuthInterface<M, S, O>) {\n    if (!sdk.emitter) {\n      throw new AuthSdkError('Emitter should be initialized before AuthStateManager');\n    }\n\n    this._sdk = sdk;\n    this._pending = { ...DEFAULT_PENDING };\n    this._authState = INITIAL_AUTH_STATE;\n    this._logOptions = {};\n    this._prevAuthState = null;\n    this._transformQueue = new PromiseQueue({\n      quiet: true\n    });\n\n    // Listen on tokenManager events to start updateState process\n    // \"added\" event is emitted in both add and renew process\n    // Only listen on \"added\" event to update auth state\n    sdk.tokenManager.on(EVENT_ADDED, (key, token) => {\n      this._setLogOptions({ event: EVENT_ADDED, key, token });\n      this.updateAuthState();\n    });\n    sdk.tokenManager.on(EVENT_REMOVED, (key, token) => {\n      this._setLogOptions({ event: EVENT_REMOVED, key, token });\n      this.updateAuthState();\n    });\n  }\n\n  _setLogOptions(options) {\n    this._logOptions = options;\n  }\n\n  getAuthState(): AuthState | null {\n    return this._authState;\n  }\n\n  getPreviousAuthState(): AuthState | null {\n    return this._prevAuthState;\n  }\n\n  async updateAuthState(): Promise<AuthState> {\n    const { transformAuthState, devMode } = this._sdk.options;\n\n    const log = (status) => {\n      const { event, key, token } = this._logOptions;\n      getConsole().group(`OKTA-AUTH-JS:updateAuthState: Event:${event} Status:${status}`);\n      getConsole().log(key, token);\n      getConsole().log('Current authState', this._authState);\n      getConsole().groupEnd();\n      \n      // clear log options after logging\n      this._logOptions = {};\n    };\n\n    const emitAuthStateChange = (authState) => {\n      if (isSameAuthState(this._authState, authState)) {\n        devMode && log('unchanged'); \n        return;\n      }\n      this._prevAuthState = this._authState;\n      this._authState = authState;\n      // emit new authState object\n      this._sdk.emitter.emit(EVENT_AUTH_STATE_CHANGE, { ...authState });\n      devMode && log('emitted');\n    };\n\n    const finalPromise = (origPromise) => {       \n      return this._pending.updateAuthStatePromise.then(() => {\n        const curPromise = this._pending.updateAuthStatePromise;\n        if (curPromise && curPromise !== origPromise) {\n          return finalPromise(curPromise);\n        }\n        return this.getAuthState();\n      });\n    };\n\n    if (this._pending.updateAuthStatePromise) {\n      if (this._pending.canceledTimes >= MAX_PROMISE_CANCEL_TIMES) {\n        // stop canceling then starting a new promise\n        // let existing promise finish to prevent running into loops\n        devMode && log('terminated');\n        return finalPromise(this._pending.updateAuthStatePromise);\n      } else {\n        this._pending.updateAuthStatePromise.cancel();\n      }\n    }\n\n    /* eslint-disable complexity */\n    const cancelablePromise = new PCancelable((resolve, _, onCancel) => {\n      onCancel.shouldReject = false;\n      onCancel(() => {\n        this._pending.updateAuthStatePromise = null;\n        this._pending.canceledTimes = this._pending.canceledTimes + 1;\n        devMode && log('canceled');\n      });\n\n      const emitAndResolve = (authState) => {\n        if (cancelablePromise.isCanceled) {\n          resolve();\n          return;\n        }\n        // emit event and resolve promise \n        emitAuthStateChange(authState);\n        resolve();\n\n        // clear pending states after resolve\n        this._pending = { ...DEFAULT_PENDING };\n      };\n\n      this._sdk.isAuthenticated()\n        .then(() => {\n          if (cancelablePromise.isCanceled) {\n            resolve();\n            return;\n          }\n\n          const { accessToken, idToken, refreshToken } = this._sdk.tokenManager.getTokensSync();\n          const authState = {\n            accessToken,\n            idToken,\n            refreshToken,\n            isAuthenticated: !!(accessToken && idToken)\n          };\n\n          // Enqueue transformAuthState so that it does not run concurrently\n          const promise: Promise<AuthState> = transformAuthState\n            ? this._transformQueue.push(transformAuthState, null, this._sdk, authState) as Promise<AuthState>\n            : Promise.resolve(authState);\n\n          promise\n            .then(authState => emitAndResolve(authState))\n            .catch(error => emitAndResolve({\n              accessToken, \n              idToken, \n              refreshToken,\n              isAuthenticated: false, \n              error\n            }));\n        });\n    });\n    /* eslint-enable complexity */\n    this._pending.updateAuthStatePromise = cancelablePromise;\n\n    return finalPromise(cancelablePromise);\n  }\n\n  subscribe(handler): void {\n    this._sdk.emitter.on(EVENT_AUTH_STATE_CHANGE, handler);\n  }\n\n  unsubscribe(handler?): void {\n    this._sdk.emitter.off(EVENT_AUTH_STATE_CHANGE, handler);\n  }\n}\n","/**\n * returns true if the given object is a promise\n */\nexport function isPromise(obj) {\n  return obj && typeof obj.then === 'function';\n}\nexport var PROMISE_RESOLVED_FALSE = Promise.resolve(false);\nexport var PROMISE_RESOLVED_TRUE = Promise.resolve(true);\nexport var PROMISE_RESOLVED_VOID = Promise.resolve();\nexport function sleep(time, resolveWith) {\n  if (!time) time = 0;\n  return new Promise(function (res) {\n    return setTimeout(function () {\n      return res(resolveWith);\n    }, time);\n  });\n}\nexport function randomInt(min, max) {\n  return Math.floor(Math.random() * (max - min + 1) + min);\n}\n\n/**\n * https://stackoverflow.com/a/8084248\n */\nexport function randomToken() {\n  return Math.random().toString(36).substring(2);\n}\nvar lastMs = 0;\nvar additional = 0;\n\n/**\n * returns the current time in micro-seconds,\n * WARNING: This is a pseudo-function\n * Performance.now is not reliable in webworkers, so we just make sure to never return the same time.\n * This is enough in browsers, and this function will not be used in nodejs.\n * The main reason for this hack is to ensure that BroadcastChannel behaves equal to production when it is used in fast-running unit tests.\n */\nexport function microSeconds() {\n  var ms = new Date().getTime();\n  if (ms === lastMs) {\n    additional++;\n    return ms * 1000 + additional;\n  } else {\n    lastMs = ms;\n    additional = 0;\n    return ms * 1000;\n  }\n}\n\n/**\n * Check if WebLock API is supported.\n * @link https://developer.mozilla.org/en-US/docs/Web/API/Web_Locks_API\n */\nexport function supportsWebLockAPI() {\n  if (typeof navigator !== 'undefined' && typeof navigator.locks !== 'undefined' && typeof navigator.locks.request === 'function') {\n    return true;\n  } else {\n    return false;\n  }\n}","import { microSeconds as micro, PROMISE_RESOLVED_VOID } from '../util.js';\nexport var microSeconds = micro;\nexport var type = 'native';\nexport function create(channelName) {\n  var state = {\n    messagesCallback: null,\n    bc: new BroadcastChannel(channelName),\n    subFns: [] // subscriberFunctions\n  };\n\n  state.bc.onmessage = function (msg) {\n    if (state.messagesCallback) {\n      state.messagesCallback(msg.data);\n    }\n  };\n  return state;\n}\nexport function close(channelState) {\n  channelState.bc.close();\n  channelState.subFns = [];\n}\nexport function postMessage(channelState, messageJson) {\n  try {\n    channelState.bc.postMessage(messageJson, false);\n    return PROMISE_RESOLVED_VOID;\n  } catch (err) {\n    return Promise.reject(err);\n  }\n}\nexport function onMessage(channelState, fn) {\n  channelState.messagesCallback = fn;\n}\nexport function canBeUsed() {\n  if ((typeof window !== 'undefined' || typeof self !== 'undefined') && typeof BroadcastChannel === 'function') {\n    if (BroadcastChannel._pubkey) {\n      throw new Error('BroadcastChannel: Do not overwrite window.BroadcastChannel with this module, this is not a polyfill');\n    }\n    return true;\n  } else {\n    return false;\n  }\n}\nexport function averageResponseTime() {\n  return 150;\n}\nexport var NativeMethod = {\n  create: create,\n  close: close,\n  onMessage: onMessage,\n  postMessage: postMessage,\n  canBeUsed: canBeUsed,\n  type: type,\n  averageResponseTime: averageResponseTime,\n  microSeconds: microSeconds\n};","/**\n * this is a set which automatically forgets\n * a given entry when a new entry is set and the ttl\n * of the old one is over\n */\nvar ObliviousSet = /** @class */ (function () {\n    function ObliviousSet(ttl) {\n        this.ttl = ttl;\n        this.map = new Map();\n        /**\n         * Creating calls to setTimeout() is expensive,\n         * so we only do that if there is not timeout already open.\n         */\n        this._to = false;\n    }\n    ObliviousSet.prototype.has = function (value) {\n        return this.map.has(value);\n    };\n    ObliviousSet.prototype.add = function (value) {\n        var _this = this;\n        this.map.set(value, now());\n        /**\n         * When a new value is added,\n         * start the cleanup at the next tick\n         * to not block the cpu for more important stuff\n         * that might happen.\n         */\n        if (!this._to) {\n            this._to = true;\n            setTimeout(function () {\n                _this._to = false;\n                removeTooOldValues(_this);\n            }, 0);\n        }\n    };\n    ObliviousSet.prototype.clear = function () {\n        this.map.clear();\n    };\n    return ObliviousSet;\n}());\nexport { ObliviousSet };\n/**\n * Removes all entries from the set\n * where the TTL has expired\n */\nexport function removeTooOldValues(obliviousSet) {\n    var olderThen = now() - obliviousSet.ttl;\n    var iterator = obliviousSet.map[Symbol.iterator]();\n    /**\n     * Because we can assume the new values are added at the bottom,\n     * we start from the top and stop as soon as we reach a non-too-old value.\n     */\n    while (true) {\n        var next = iterator.next().value;\n        if (!next) {\n            return; // no more elements\n        }\n        var value = next[0];\n        var time = next[1];\n        if (time < olderThen) {\n            obliviousSet.map.delete(value);\n        }\n        else {\n            // We reached a value that is not old enough\n            return;\n        }\n    }\n}\nexport function now() {\n    return new Date().getTime();\n}\n//# sourceMappingURL=index.js.map","export function fillOptionsWithDefaults() {\n  var originalOptions = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n  var options = JSON.parse(JSON.stringify(originalOptions));\n\n  // main\n  if (typeof options.webWorkerSupport === 'undefined') options.webWorkerSupport = true;\n\n  // indexed-db\n  if (!options.idb) options.idb = {};\n  //  after this time the messages get deleted\n  if (!options.idb.ttl) options.idb.ttl = 1000 * 45;\n  if (!options.idb.fallbackInterval) options.idb.fallbackInterval = 150;\n  //  handles abrupt db onclose events.\n  if (originalOptions.idb && typeof originalOptions.idb.onclose === 'function') options.idb.onclose = originalOptions.idb.onclose;\n\n  // localstorage\n  if (!options.localstorage) options.localstorage = {};\n  if (!options.localstorage.removeTimeout) options.localstorage.removeTimeout = 1000 * 60;\n\n  // custom methods\n  if (originalOptions.methods) options.methods = originalOptions.methods;\n\n  // node\n  if (!options.node) options.node = {};\n  if (!options.node.ttl) options.node.ttl = 1000 * 60 * 2; // 2 minutes;\n  /**\n   * On linux use 'ulimit -Hn' to get the limit of open files.\n   * On ubuntu this was 4096 for me, so we use half of that as maxParallelWrites default.\n   */\n  if (!options.node.maxParallelWrites) options.node.maxParallelWrites = 2048;\n  if (typeof options.node.useFastPath === 'undefined') options.node.useFastPath = true;\n  return options;\n}","/**\n * this method uses indexeddb to store the messages\n * There is currently no observerAPI for idb\n * @link https://github.com/w3c/IndexedDB/issues/51\n * \n * When working on this, ensure to use these performance optimizations:\n * @link https://rxdb.info/slow-indexeddb.html\n */\n\nimport { sleep, randomInt, randomToken, microSeconds as micro, PROMISE_RESOLVED_VOID } from '../util.js';\nexport var microSeconds = micro;\nimport { ObliviousSet } from 'oblivious-set';\nimport { fillOptionsWithDefaults } from '../options.js';\nvar DB_PREFIX = 'pubkey.broadcast-channel-0-';\nvar OBJECT_STORE_ID = 'messages';\n\n/**\n * Use relaxed durability for faster performance on all transactions.\n * @link https://nolanlawson.com/2021/08/22/speeding-up-indexeddb-reads-and-writes/\n */\nexport var TRANSACTION_SETTINGS = {\n  durability: 'relaxed'\n};\nexport var type = 'idb';\nexport function getIdb() {\n  if (typeof indexedDB !== 'undefined') return indexedDB;\n  if (typeof window !== 'undefined') {\n    if (typeof window.mozIndexedDB !== 'undefined') return window.mozIndexedDB;\n    if (typeof window.webkitIndexedDB !== 'undefined') return window.webkitIndexedDB;\n    if (typeof window.msIndexedDB !== 'undefined') return window.msIndexedDB;\n  }\n  return false;\n}\n\n/**\n * If possible, we should explicitly commit IndexedDB transactions\n * for better performance.\n * @link https://nolanlawson.com/2021/08/22/speeding-up-indexeddb-reads-and-writes/\n */\nexport function commitIndexedDBTransaction(tx) {\n  if (tx.commit) {\n    tx.commit();\n  }\n}\nexport function createDatabase(channelName) {\n  var IndexedDB = getIdb();\n\n  // create table\n  var dbName = DB_PREFIX + channelName;\n\n  /**\n   * All IndexedDB databases are opened without version\n   * because it is a bit faster, especially on firefox\n   * @link http://nparashuram.com/IndexedDB/perf/#Open%20Database%20with%20version\n   */\n  var openRequest = IndexedDB.open(dbName);\n  openRequest.onupgradeneeded = function (ev) {\n    var db = ev.target.result;\n    db.createObjectStore(OBJECT_STORE_ID, {\n      keyPath: 'id',\n      autoIncrement: true\n    });\n  };\n  return new Promise(function (res, rej) {\n    openRequest.onerror = function (ev) {\n      return rej(ev);\n    };\n    openRequest.onsuccess = function () {\n      res(openRequest.result);\n    };\n  });\n}\n\n/**\n * writes the new message to the database\n * so other readers can find it\n */\nexport function writeMessage(db, readerUuid, messageJson) {\n  var time = new Date().getTime();\n  var writeObject = {\n    uuid: readerUuid,\n    time: time,\n    data: messageJson\n  };\n  var tx = db.transaction([OBJECT_STORE_ID], 'readwrite', TRANSACTION_SETTINGS);\n  return new Promise(function (res, rej) {\n    tx.oncomplete = function () {\n      return res();\n    };\n    tx.onerror = function (ev) {\n      return rej(ev);\n    };\n    var objectStore = tx.objectStore(OBJECT_STORE_ID);\n    objectStore.add(writeObject);\n    commitIndexedDBTransaction(tx);\n  });\n}\nexport function getAllMessages(db) {\n  var tx = db.transaction(OBJECT_STORE_ID, 'readonly', TRANSACTION_SETTINGS);\n  var objectStore = tx.objectStore(OBJECT_STORE_ID);\n  var ret = [];\n  return new Promise(function (res) {\n    objectStore.openCursor().onsuccess = function (ev) {\n      var cursor = ev.target.result;\n      if (cursor) {\n        ret.push(cursor.value);\n        //alert(\"Name for SSN \" + cursor.key + \" is \" + cursor.value.name);\n        cursor[\"continue\"]();\n      } else {\n        commitIndexedDBTransaction(tx);\n        res(ret);\n      }\n    };\n  });\n}\nexport function getMessagesHigherThan(db, lastCursorId) {\n  var tx = db.transaction(OBJECT_STORE_ID, 'readonly', TRANSACTION_SETTINGS);\n  var objectStore = tx.objectStore(OBJECT_STORE_ID);\n  var ret = [];\n  var keyRangeValue = IDBKeyRange.bound(lastCursorId + 1, Infinity);\n\n  /**\n   * Optimization shortcut,\n   * if getAll() can be used, do not use a cursor.\n   * @link https://rxdb.info/slow-indexeddb.html\n   */\n  if (objectStore.getAll) {\n    var getAllRequest = objectStore.getAll(keyRangeValue);\n    return new Promise(function (res, rej) {\n      getAllRequest.onerror = function (err) {\n        return rej(err);\n      };\n      getAllRequest.onsuccess = function (e) {\n        res(e.target.result);\n      };\n    });\n  }\n  function openCursor() {\n    // Occasionally Safari will fail on IDBKeyRange.bound, this\n    // catches that error, having it open the cursor to the first\n    // item. When it gets data it will advance to the desired key.\n    try {\n      keyRangeValue = IDBKeyRange.bound(lastCursorId + 1, Infinity);\n      return objectStore.openCursor(keyRangeValue);\n    } catch (e) {\n      return objectStore.openCursor();\n    }\n  }\n  return new Promise(function (res, rej) {\n    var openCursorRequest = openCursor();\n    openCursorRequest.onerror = function (err) {\n      return rej(err);\n    };\n    openCursorRequest.onsuccess = function (ev) {\n      var cursor = ev.target.result;\n      if (cursor) {\n        if (cursor.value.id < lastCursorId + 1) {\n          cursor[\"continue\"](lastCursorId + 1);\n        } else {\n          ret.push(cursor.value);\n          cursor[\"continue\"]();\n        }\n      } else {\n        commitIndexedDBTransaction(tx);\n        res(ret);\n      }\n    };\n  });\n}\nexport function removeMessagesById(channelState, ids) {\n  if (channelState.closed) {\n    return Promise.resolve([]);\n  }\n  var tx = channelState.db.transaction(OBJECT_STORE_ID, 'readwrite', TRANSACTION_SETTINGS);\n  var objectStore = tx.objectStore(OBJECT_STORE_ID);\n  return Promise.all(ids.map(function (id) {\n    var deleteRequest = objectStore[\"delete\"](id);\n    return new Promise(function (res) {\n      deleteRequest.onsuccess = function () {\n        return res();\n      };\n    });\n  }));\n}\nexport function getOldMessages(db, ttl) {\n  var olderThen = new Date().getTime() - ttl;\n  var tx = db.transaction(OBJECT_STORE_ID, 'readonly', TRANSACTION_SETTINGS);\n  var objectStore = tx.objectStore(OBJECT_STORE_ID);\n  var ret = [];\n  return new Promise(function (res) {\n    objectStore.openCursor().onsuccess = function (ev) {\n      var cursor = ev.target.result;\n      if (cursor) {\n        var msgObk = cursor.value;\n        if (msgObk.time < olderThen) {\n          ret.push(msgObk);\n          //alert(\"Name for SSN \" + cursor.key + \" is \" + cursor.value.name);\n          cursor[\"continue\"]();\n        } else {\n          // no more old messages,\n          commitIndexedDBTransaction(tx);\n          res(ret);\n        }\n      } else {\n        res(ret);\n      }\n    };\n  });\n}\nexport function cleanOldMessages(channelState) {\n  return getOldMessages(channelState.db, channelState.options.idb.ttl).then(function (tooOld) {\n    return removeMessagesById(channelState, tooOld.map(function (msg) {\n      return msg.id;\n    }));\n  });\n}\nexport function create(channelName, options) {\n  options = fillOptionsWithDefaults(options);\n  return createDatabase(channelName).then(function (db) {\n    var state = {\n      closed: false,\n      lastCursorId: 0,\n      channelName: channelName,\n      options: options,\n      uuid: randomToken(),\n      /**\n       * emittedMessagesIds\n       * contains all messages that have been emitted before\n       * @type {ObliviousSet}\n       */\n      eMIs: new ObliviousSet(options.idb.ttl * 2),\n      // ensures we do not read messages in parallel\n      writeBlockPromise: PROMISE_RESOLVED_VOID,\n      messagesCallback: null,\n      readQueuePromises: [],\n      db: db\n    };\n\n    /**\n     * Handle abrupt closes that do not originate from db.close().\n     * This could happen, for example, if the underlying storage is\n     * removed or if the user clears the database in the browser's\n     * history preferences.\n     */\n    db.onclose = function () {\n      state.closed = true;\n      if (options.idb.onclose) options.idb.onclose();\n    };\n\n    /**\n     * if service-workers are used,\n     * we have no 'storage'-event if they post a message,\n     * therefore we also have to set an interval\n     */\n    _readLoop(state);\n    return state;\n  });\n}\nfunction _readLoop(state) {\n  if (state.closed) return;\n  readNewMessages(state).then(function () {\n    return sleep(state.options.idb.fallbackInterval);\n  }).then(function () {\n    return _readLoop(state);\n  });\n}\nfunction _filterMessage(msgObj, state) {\n  if (msgObj.uuid === state.uuid) return false; // send by own\n  if (state.eMIs.has(msgObj.id)) return false; // already emitted\n  if (msgObj.data.time < state.messagesCallbackTime) return false; // older then onMessageCallback\n  return true;\n}\n\n/**\n * reads all new messages from the database and emits them\n */\nfunction readNewMessages(state) {\n  // channel already closed\n  if (state.closed) return PROMISE_RESOLVED_VOID;\n\n  // if no one is listening, we do not need to scan for new messages\n  if (!state.messagesCallback) return PROMISE_RESOLVED_VOID;\n  return getMessagesHigherThan(state.db, state.lastCursorId).then(function (newerMessages) {\n    var useMessages = newerMessages\n    /**\n     * there is a bug in iOS where the msgObj can be undefined sometimes\n     * so we filter them out\n     * @link https://github.com/pubkey/broadcast-channel/issues/19\n     */.filter(function (msgObj) {\n      return !!msgObj;\n    }).map(function (msgObj) {\n      if (msgObj.id > state.lastCursorId) {\n        state.lastCursorId = msgObj.id;\n      }\n      return msgObj;\n    }).filter(function (msgObj) {\n      return _filterMessage(msgObj, state);\n    }).sort(function (msgObjA, msgObjB) {\n      return msgObjA.time - msgObjB.time;\n    }); // sort by time\n    useMessages.forEach(function (msgObj) {\n      if (state.messagesCallback) {\n        state.eMIs.add(msgObj.id);\n        state.messagesCallback(msgObj.data);\n      }\n    });\n    return PROMISE_RESOLVED_VOID;\n  });\n}\nexport function close(channelState) {\n  channelState.closed = true;\n  channelState.db.close();\n}\nexport function postMessage(channelState, messageJson) {\n  channelState.writeBlockPromise = channelState.writeBlockPromise.then(function () {\n    return writeMessage(channelState.db, channelState.uuid, messageJson);\n  }).then(function () {\n    if (randomInt(0, 10) === 0) {\n      /* await (do not await) */\n      cleanOldMessages(channelState);\n    }\n  });\n  return channelState.writeBlockPromise;\n}\nexport function onMessage(channelState, fn, time) {\n  channelState.messagesCallbackTime = time;\n  channelState.messagesCallback = fn;\n  readNewMessages(channelState);\n}\nexport function canBeUsed() {\n  return !!getIdb();\n}\nexport function averageResponseTime(options) {\n  return options.idb.fallbackInterval * 2;\n}\nexport var IndexedDBMethod = {\n  create: create,\n  close: close,\n  onMessage: onMessage,\n  postMessage: postMessage,\n  canBeUsed: canBeUsed,\n  type: type,\n  averageResponseTime: averageResponseTime,\n  microSeconds: microSeconds\n};","/**\n * A localStorage-only method which uses localstorage and its 'storage'-event\n * This does not work inside webworkers because they have no access to localstorage\n * This is basically implemented to support IE9 or your grandmother's toaster.\n * @link https://caniuse.com/#feat=namevalue-storage\n * @link https://caniuse.com/#feat=indexeddb\n */\n\nimport { ObliviousSet } from 'oblivious-set';\nimport { fillOptionsWithDefaults } from '../options.js';\nimport { sleep, randomToken, microSeconds as micro } from '../util.js';\nexport var microSeconds = micro;\nvar KEY_PREFIX = 'pubkey.broadcastChannel-';\nexport var type = 'localstorage';\n\n/**\n * copied from crosstab\n * @link https://github.com/tejacques/crosstab/blob/master/src/crosstab.js#L32\n */\nexport function getLocalStorage() {\n  var localStorage;\n  if (typeof window === 'undefined') return null;\n  try {\n    localStorage = window.localStorage;\n    localStorage = window['ie8-eventlistener/storage'] || window.localStorage;\n  } catch (e) {\n    // New versions of Firefox throw a Security exception\n    // if cookies are disabled. See\n    // https://bugzilla.mozilla.org/show_bug.cgi?id=1028153\n  }\n  return localStorage;\n}\nexport function storageKey(channelName) {\n  return KEY_PREFIX + channelName;\n}\n\n/**\n* writes the new message to the storage\n* and fires the storage-event so other readers can find it\n*/\nexport function postMessage(channelState, messageJson) {\n  return new Promise(function (res) {\n    sleep().then(function () {\n      var key = storageKey(channelState.channelName);\n      var writeObj = {\n        token: randomToken(),\n        time: new Date().getTime(),\n        data: messageJson,\n        uuid: channelState.uuid\n      };\n      var value = JSON.stringify(writeObj);\n      getLocalStorage().setItem(key, value);\n\n      /**\n       * StorageEvent does not fire the 'storage' event\n       * in the window that changes the state of the local storage.\n       * So we fire it manually\n       */\n      var ev = document.createEvent('Event');\n      ev.initEvent('storage', true, true);\n      ev.key = key;\n      ev.newValue = value;\n      window.dispatchEvent(ev);\n      res();\n    });\n  });\n}\nexport function addStorageEventListener(channelName, fn) {\n  var key = storageKey(channelName);\n  var listener = function listener(ev) {\n    if (ev.key === key) {\n      fn(JSON.parse(ev.newValue));\n    }\n  };\n  window.addEventListener('storage', listener);\n  return listener;\n}\nexport function removeStorageEventListener(listener) {\n  window.removeEventListener('storage', listener);\n}\nexport function create(channelName, options) {\n  options = fillOptionsWithDefaults(options);\n  if (!canBeUsed()) {\n    throw new Error('BroadcastChannel: localstorage cannot be used');\n  }\n  var uuid = randomToken();\n\n  /**\n   * eMIs\n   * contains all messages that have been emitted before\n   * @type {ObliviousSet}\n   */\n  var eMIs = new ObliviousSet(options.localstorage.removeTimeout);\n  var state = {\n    channelName: channelName,\n    uuid: uuid,\n    eMIs: eMIs // emittedMessagesIds\n  };\n\n  state.listener = addStorageEventListener(channelName, function (msgObj) {\n    if (!state.messagesCallback) return; // no listener\n    if (msgObj.uuid === uuid) return; // own message\n    if (!msgObj.token || eMIs.has(msgObj.token)) return; // already emitted\n    if (msgObj.data.time && msgObj.data.time < state.messagesCallbackTime) return; // too old\n\n    eMIs.add(msgObj.token);\n    state.messagesCallback(msgObj.data);\n  });\n  return state;\n}\nexport function close(channelState) {\n  removeStorageEventListener(channelState.listener);\n}\nexport function onMessage(channelState, fn, time) {\n  channelState.messagesCallbackTime = time;\n  channelState.messagesCallback = fn;\n}\nexport function canBeUsed() {\n  var ls = getLocalStorage();\n  if (!ls) return false;\n  try {\n    var key = '__broadcastchannel_check';\n    ls.setItem(key, 'works');\n    ls.removeItem(key);\n  } catch (e) {\n    // Safari 10 in private mode will not allow write access to local\n    // storage and fail with a QuotaExceededError. See\n    // https://developer.mozilla.org/en-US/docs/Web/API/Web_Storage_API#Private_Browsing_Incognito_modes\n    return false;\n  }\n  return true;\n}\nexport function averageResponseTime() {\n  var defaultTime = 120;\n  var userAgent = navigator.userAgent.toLowerCase();\n  if (userAgent.includes('safari') && !userAgent.includes('chrome')) {\n    // safari is much slower so this time is higher\n    return defaultTime * 2;\n  }\n  return defaultTime;\n}\nexport var LocalstorageMethod = {\n  create: create,\n  close: close,\n  onMessage: onMessage,\n  postMessage: postMessage,\n  canBeUsed: canBeUsed,\n  type: type,\n  averageResponseTime: averageResponseTime,\n  microSeconds: microSeconds\n};","import { microSeconds as micro } from '../util.js';\nexport var microSeconds = micro;\nexport var type = 'simulate';\nvar SIMULATE_CHANNELS = new Set();\nexport function create(channelName) {\n  var state = {\n    name: channelName,\n    messagesCallback: null\n  };\n  SIMULATE_CHANNELS.add(state);\n  return state;\n}\nexport function close(channelState) {\n  SIMULATE_CHANNELS[\"delete\"](channelState);\n}\nexport function postMessage(channelState, messageJson) {\n  return new Promise(function (res) {\n    return setTimeout(function () {\n      var channelArray = Array.from(SIMULATE_CHANNELS);\n      channelArray.filter(function (channel) {\n        return channel.name === channelState.name;\n      }).filter(function (channel) {\n        return channel !== channelState;\n      }).filter(function (channel) {\n        return !!channel.messagesCallback;\n      }).forEach(function (channel) {\n        return channel.messagesCallback(messageJson);\n      });\n      res();\n    }, 5);\n  });\n}\nexport function onMessage(channelState, fn) {\n  channelState.messagesCallback = fn;\n}\nexport function canBeUsed() {\n  return true;\n}\nexport function averageResponseTime() {\n  return 5;\n}\nexport var SimulateMethod = {\n  create: create,\n  close: close,\n  onMessage: onMessage,\n  postMessage: postMessage,\n  canBeUsed: canBeUsed,\n  type: type,\n  averageResponseTime: averageResponseTime,\n  microSeconds: microSeconds\n};","import { NativeMethod } from './methods/native.js';\nimport { IndexedDBMethod } from './methods/indexed-db.js';\nimport { LocalstorageMethod } from './methods/localstorage.js';\nimport { SimulateMethod } from './methods/simulate.js';\n// the line below will be removed from es5/browser builds\n\n// order is important\nvar METHODS = [NativeMethod,\n// fastest\nIndexedDBMethod, LocalstorageMethod];\nexport function chooseMethod(options) {\n  var chooseMethods = [].concat(options.methods, METHODS).filter(Boolean);\n\n  // the line below will be removed from es5/browser builds\n\n  // directly chosen\n  if (options.type) {\n    if (options.type === 'simulate') {\n      // only use simulate-method if directly chosen\n      return SimulateMethod;\n    }\n    var ret = chooseMethods.find(function (m) {\n      return m.type === options.type;\n    });\n    if (!ret) throw new Error('method-type ' + options.type + ' not found');else return ret;\n  }\n\n  /**\n   * if no webworker support is needed,\n   * remove idb from the list so that localstorage will be chosen\n   */\n  if (!options.webWorkerSupport) {\n    chooseMethods = chooseMethods.filter(function (m) {\n      return m.type !== 'idb';\n    });\n  }\n  var useMethod = chooseMethods.find(function (method) {\n    return method.canBeUsed();\n  });\n  if (!useMethod) {\n    throw new Error(\"No usable method found in \" + JSON.stringify(METHODS.map(function (m) {\n      return m.type;\n    })));\n  } else {\n    return useMethod;\n  }\n}","import { isPromise, PROMISE_RESOLVED_FALSE, PROMISE_RESOLVED_VOID } from './util.js';\nimport { chooseMethod } from './method-chooser.js';\nimport { fillOptionsWithDefaults } from './options.js';\n\n/**\n * Contains all open channels,\n * used in tests to ensure everything is closed.\n */\nexport var OPEN_BROADCAST_CHANNELS = new Set();\nvar lastId = 0;\nexport var BroadcastChannel = function BroadcastChannel(name, options) {\n  // identifier of the channel to debug stuff\n  this.id = lastId++;\n  OPEN_BROADCAST_CHANNELS.add(this);\n  this.name = name;\n  if (ENFORCED_OPTIONS) {\n    options = ENFORCED_OPTIONS;\n  }\n  this.options = fillOptionsWithDefaults(options);\n  this.method = chooseMethod(this.options);\n\n  // isListening\n  this._iL = false;\n\n  /**\n   * _onMessageListener\n   * setting onmessage twice,\n   * will overwrite the first listener\n   */\n  this._onML = null;\n\n  /**\n   * _addEventListeners\n   */\n  this._addEL = {\n    message: [],\n    internal: []\n  };\n\n  /**\n   * Unsent message promises\n   * where the sending is still in progress\n   * @type {Set<Promise>}\n   */\n  this._uMP = new Set();\n\n  /**\n   * _beforeClose\n   * array of promises that will be awaited\n   * before the channel is closed\n   */\n  this._befC = [];\n\n  /**\n   * _preparePromise\n   */\n  this._prepP = null;\n  _prepareChannel(this);\n};\n\n// STATICS\n\n/**\n * used to identify if someone overwrites\n * window.BroadcastChannel with this\n * See methods/native.js\n */\nBroadcastChannel._pubkey = true;\n\n/**\n * clears the tmp-folder if is node\n * @return {Promise<boolean>} true if has run, false if not node\n */\nexport function clearNodeFolder(options) {\n  options = fillOptionsWithDefaults(options);\n  var method = chooseMethod(options);\n  if (method.type === 'node') {\n    return method.clearNodeFolder().then(function () {\n      return true;\n    });\n  } else {\n    return PROMISE_RESOLVED_FALSE;\n  }\n}\n\n/**\n * if set, this method is enforced,\n * no mather what the options are\n */\nvar ENFORCED_OPTIONS;\nexport function enforceOptions(options) {\n  ENFORCED_OPTIONS = options;\n}\n\n// PROTOTYPE\nBroadcastChannel.prototype = {\n  postMessage: function postMessage(msg) {\n    if (this.closed) {\n      throw new Error('BroadcastChannel.postMessage(): ' + 'Cannot post message after channel has closed ' +\n      /**\n       * In the past when this error appeared, it was really hard to debug.\n       * So now we log the msg together with the error so it at least\n       * gives some clue about where in your application this happens.\n       */\n      JSON.stringify(msg));\n    }\n    return _post(this, 'message', msg);\n  },\n  postInternal: function postInternal(msg) {\n    return _post(this, 'internal', msg);\n  },\n  set onmessage(fn) {\n    var time = this.method.microSeconds();\n    var listenObj = {\n      time: time,\n      fn: fn\n    };\n    _removeListenerObject(this, 'message', this._onML);\n    if (fn && typeof fn === 'function') {\n      this._onML = listenObj;\n      _addListenerObject(this, 'message', listenObj);\n    } else {\n      this._onML = null;\n    }\n  },\n  addEventListener: function addEventListener(type, fn) {\n    var time = this.method.microSeconds();\n    var listenObj = {\n      time: time,\n      fn: fn\n    };\n    _addListenerObject(this, type, listenObj);\n  },\n  removeEventListener: function removeEventListener(type, fn) {\n    var obj = this._addEL[type].find(function (obj) {\n      return obj.fn === fn;\n    });\n    _removeListenerObject(this, type, obj);\n  },\n  close: function close() {\n    var _this = this;\n    if (this.closed) {\n      return;\n    }\n    OPEN_BROADCAST_CHANNELS[\"delete\"](this);\n    this.closed = true;\n    var awaitPrepare = this._prepP ? this._prepP : PROMISE_RESOLVED_VOID;\n    this._onML = null;\n    this._addEL.message = [];\n    return awaitPrepare\n    // wait until all current sending are processed\n    .then(function () {\n      return Promise.all(Array.from(_this._uMP));\n    })\n    // run before-close hooks\n    .then(function () {\n      return Promise.all(_this._befC.map(function (fn) {\n        return fn();\n      }));\n    })\n    // close the channel\n    .then(function () {\n      return _this.method.close(_this._state);\n    });\n  },\n  get type() {\n    return this.method.type;\n  },\n  get isClosed() {\n    return this.closed;\n  }\n};\n\n/**\n * Post a message over the channel\n * @returns {Promise} that resolved when the message sending is done\n */\nfunction _post(broadcastChannel, type, msg) {\n  var time = broadcastChannel.method.microSeconds();\n  var msgObj = {\n    time: time,\n    type: type,\n    data: msg\n  };\n  var awaitPrepare = broadcastChannel._prepP ? broadcastChannel._prepP : PROMISE_RESOLVED_VOID;\n  return awaitPrepare.then(function () {\n    var sendPromise = broadcastChannel.method.postMessage(broadcastChannel._state, msgObj);\n\n    // add/remove to unsent messages list\n    broadcastChannel._uMP.add(sendPromise);\n    sendPromise[\"catch\"]().then(function () {\n      return broadcastChannel._uMP[\"delete\"](sendPromise);\n    });\n    return sendPromise;\n  });\n}\nfunction _prepareChannel(channel) {\n  var maybePromise = channel.method.create(channel.name, channel.options);\n  if (isPromise(maybePromise)) {\n    channel._prepP = maybePromise;\n    maybePromise.then(function (s) {\n      // used in tests to simulate slow runtime\n      /*if (channel.options.prepareDelay) {\n           await new Promise(res => setTimeout(res, this.options.prepareDelay));\n      }*/\n      channel._state = s;\n    });\n  } else {\n    channel._state = maybePromise;\n  }\n}\nfunction _hasMessageListeners(channel) {\n  if (channel._addEL.message.length > 0) return true;\n  if (channel._addEL.internal.length > 0) return true;\n  return false;\n}\nfunction _addListenerObject(channel, type, obj) {\n  channel._addEL[type].push(obj);\n  _startListening(channel);\n}\nfunction _removeListenerObject(channel, type, obj) {\n  channel._addEL[type] = channel._addEL[type].filter(function (o) {\n    return o !== obj;\n  });\n  _stopListening(channel);\n}\nfunction _startListening(channel) {\n  if (!channel._iL && _hasMessageListeners(channel)) {\n    // someone is listening, start subscribing\n\n    var listenerFn = function listenerFn(msgObj) {\n      channel._addEL[msgObj.type].forEach(function (listenerObject) {\n        /**\n         * Getting the current time in JavaScript has no good precision.\n         * So instead of only listening to events that happened 'after' the listener\n         * was added, we also listen to events that happened 100ms before it.\n         * This ensures that when another process, like a WebWorker, sends events\n         * we do not miss them out because their timestamp is a bit off compared to the main process.\n         * Not doing this would make messages missing when we send data directly after subscribing and awaiting a response.\n         * @link https://johnresig.com/blog/accuracy-of-javascript-time/\n         */\n        var hundredMsInMicro = 100 * 1000;\n        var minMessageTime = listenerObject.time - hundredMsInMicro;\n        if (msgObj.time >= minMessageTime) {\n          listenerObject.fn(msgObj.data);\n        }\n      });\n    };\n    var time = channel.method.microSeconds();\n    if (channel._prepP) {\n      channel._prepP.then(function () {\n        channel._iL = true;\n        channel.method.onMessage(channel._state, listenerFn, time);\n      });\n    } else {\n      channel._iL = true;\n      channel.method.onMessage(channel._state, listenerFn, time);\n    }\n  }\n}\nfunction _stopListening(channel) {\n  if (channel._iL && !_hasMessageListeners(channel)) {\n    // no one is listening, stop subscribing\n    channel._iL = false;\n    var time = channel.method.microSeconds();\n    channel.method.onMessage(channel._state, null, time);\n  }\n}","import { addBrowser } from './browser.js';\nimport { addNode } from './node.js';\n\n/**\n * Use the code directly to prevent import problems\n * with the detect-node package.\n * @link https://github.com/iliakan/detect-node/blob/master/index.js\n */\nvar isNode = Object.prototype.toString.call(typeof process !== 'undefined' ? process : 0) === '[object process]';\nvar USE_METHOD = isNode ? addNode : addBrowser;\nvar LISTENERS = new Set();\nvar startedListening = false;\nfunction startListening() {\n  if (startedListening) {\n    return;\n  }\n  startedListening = true;\n  USE_METHOD(runAll);\n}\nexport function add(fn) {\n  startListening();\n  if (typeof fn !== 'function') {\n    throw new Error('Listener is no function');\n  }\n  LISTENERS.add(fn);\n  var addReturn = {\n    remove: function remove() {\n      return LISTENERS[\"delete\"](fn);\n    },\n    run: function run() {\n      LISTENERS[\"delete\"](fn);\n      return fn();\n    }\n  };\n  return addReturn;\n}\nexport function runAll() {\n  var promises = [];\n  LISTENERS.forEach(function (fn) {\n    promises.push(fn());\n    LISTENERS[\"delete\"](fn);\n  });\n  return Promise.all(promises);\n}\nexport function removeAll() {\n  LISTENERS.clear();\n}\nexport function getSize() {\n  return LISTENERS.size;\n}","export function addNode(fn) {\n  process.on('exit', function () {\n    return fn();\n  });\n\n  /**\n   * on the following events,\n   * the process will not end if there are\n   * event-handlers attached,\n   * therefore we have to call process.exit()\n   */\n  process.on('beforeExit', function () {\n    return fn().then(function () {\n      return process.exit();\n    });\n  });\n  // catches ctrl+c event\n  process.on('SIGINT', function () {\n    return fn().then(function () {\n      return process.exit();\n    });\n  });\n  // catches uncaught exceptions\n  process.on('uncaughtException', function (err) {\n    return fn().then(function () {\n      console.trace(err);\n      process.exit(101);\n    });\n  });\n}","/* global WorkerGlobalScope */\n\nexport function addBrowser(fn) {\n  if (typeof WorkerGlobalScope === 'function' && self instanceof WorkerGlobalScope) {\n    /**\n     * Because killing a worker does directly stop the excution\n     * of the code, our only chance is to overwrite the close function\n     * which could work some times.\n     * @link https://stackoverflow.com/q/72903255/3443137\n     */\n    var oldClose = self.close.bind(self);\n    self.close = function () {\n      fn();\n      return oldClose();\n    };\n  } else {\n    /**\n     * if we are on react-native, there is no window.addEventListener\n     * @link https://github.com/pubkey/unload/issues/6\n     */\n    if (typeof window.addEventListener !== 'function') {\n      return;\n    }\n\n    /**\n     * for normal browser-windows, we use the beforeunload-event\n     */\n    window.addEventListener('beforeunload', function () {\n      fn();\n    }, true);\n\n    /**\n     * for iframes, we have to use the unload-event\n     * @link https://stackoverflow.com/q/47533670/3443137\n     */\n    window.addEventListener('unload', function () {\n      fn();\n    }, true);\n  }\n\n  /**\n   * TODO add fallback for safari-mobile\n   * @link https://stackoverflow.com/a/26193516/3443137\n   */\n}","import { add as unloadAdd } from 'unload';\n\n/**\n * sends and internal message over the broadcast-channel\n */\nexport function sendLeaderMessage(leaderElector, action) {\n  var msgJson = {\n    context: 'leader',\n    action: action,\n    token: leaderElector.token\n  };\n  return leaderElector.broadcastChannel.postInternal(msgJson);\n}\nexport function beLeader(leaderElector) {\n  leaderElector.isLeader = true;\n  leaderElector._hasLeader = true;\n  var unloadFn = unloadAdd(function () {\n    return leaderElector.die();\n  });\n  leaderElector._unl.push(unloadFn);\n  var isLeaderListener = function isLeaderListener(msg) {\n    if (msg.context === 'leader' && msg.action === 'apply') {\n      sendLeaderMessage(leaderElector, 'tell');\n    }\n    if (msg.context === 'leader' && msg.action === 'tell' && !leaderElector._dpLC) {\n      /**\n       * another instance is also leader!\n       * This can happen on rare events\n       * like when the CPU is at 100% for long time\n       * or the tabs are open very long and the browser throttles them.\n       * @link https://github.com/pubkey/broadcast-channel/issues/414\n       * @link https://github.com/pubkey/broadcast-channel/issues/385\n       */\n      leaderElector._dpLC = true;\n      leaderElector._dpL(); // message the lib user so the app can handle the problem\n      sendLeaderMessage(leaderElector, 'tell'); // ensure other leader also knows the problem\n    }\n  };\n\n  leaderElector.broadcastChannel.addEventListener('internal', isLeaderListener);\n  leaderElector._lstns.push(isLeaderListener);\n  return sendLeaderMessage(leaderElector, 'tell');\n}","import { randomToken } from './util.js';\nimport { sendLeaderMessage, beLeader } from './leader-election-util.js';\n\n/**\n * A faster version of the leader elector that uses the WebLock API\n * @link https://developer.mozilla.org/en-US/docs/Web/API/Web_Locks_API\n */\nexport var LeaderElectionWebLock = function LeaderElectionWebLock(broadcastChannel, options) {\n  var _this = this;\n  this.broadcastChannel = broadcastChannel;\n  broadcastChannel._befC.push(function () {\n    return _this.die();\n  });\n  this._options = options;\n  this.isLeader = false;\n  this.isDead = false;\n  this.token = randomToken();\n  this._lstns = [];\n  this._unl = [];\n  this._dpL = function () {}; // onduplicate listener\n  this._dpLC = false; // true when onduplicate called\n\n  this._wKMC = {}; // stuff for cleanup\n\n  // lock name\n  this.lN = 'pubkey-bc||' + broadcastChannel.method.type + '||' + broadcastChannel.name;\n};\nLeaderElectionWebLock.prototype = {\n  hasLeader: function hasLeader() {\n    var _this2 = this;\n    return navigator.locks.query().then(function (locks) {\n      var relevantLocks = locks.held ? locks.held.filter(function (lock) {\n        return lock.name === _this2.lN;\n      }) : [];\n      if (relevantLocks && relevantLocks.length > 0) {\n        return true;\n      } else {\n        return false;\n      }\n    });\n  },\n  awaitLeadership: function awaitLeadership() {\n    var _this3 = this;\n    if (!this._wLMP) {\n      this._wKMC.c = new AbortController();\n      var returnPromise = new Promise(function (res, rej) {\n        _this3._wKMC.res = res;\n        _this3._wKMC.rej = rej;\n      });\n      this._wLMP = new Promise(function (res) {\n        navigator.locks.request(_this3.lN, {\n          signal: _this3._wKMC.c.signal\n        }, function () {\n          // if the lock resolved, we can drop the abort controller\n          _this3._wKMC.c = undefined;\n          beLeader(_this3);\n          res();\n          return returnPromise;\n        })[\"catch\"](function () {});\n      });\n    }\n    return this._wLMP;\n  },\n  set onduplicate(_fn) {\n    // Do nothing because there are no duplicates in the WebLock version\n  },\n  die: function die() {\n    var _this4 = this;\n    this._lstns.forEach(function (listener) {\n      return _this4.broadcastChannel.removeEventListener('internal', listener);\n    });\n    this._lstns = [];\n    this._unl.forEach(function (uFn) {\n      return uFn.remove();\n    });\n    this._unl = [];\n    if (this.isLeader) {\n      this.isLeader = false;\n    }\n    this.isDead = true;\n    if (this._wKMC.res) {\n      this._wKMC.res();\n    }\n    if (this._wKMC.c) {\n      this._wKMC.c.abort('LeaderElectionWebLock.die() called');\n    }\n    return sendLeaderMessage(this, 'death');\n  }\n};","import { sleep, randomToken, PROMISE_RESOLVED_VOID, PROMISE_RESOLVED_TRUE, supportsWebLockAPI } from './util.js';\nimport { sendLeaderMessage, beLeader } from './leader-election-util.js';\nimport { LeaderElectionWebLock } from './leader-election-web-lock.js';\nvar LeaderElection = function LeaderElection(broadcastChannel, options) {\n  var _this = this;\n  this.broadcastChannel = broadcastChannel;\n  this._options = options;\n  this.isLeader = false;\n  this._hasLeader = false;\n  this.isDead = false;\n  this.token = randomToken();\n\n  /**\n   * Apply Queue,\n   * used to ensure we do not run applyOnce()\n   * in parallel.\n   */\n  this._aplQ = PROMISE_RESOLVED_VOID;\n  // amount of unfinished applyOnce() calls\n  this._aplQC = 0;\n\n  // things to clean up\n  this._unl = []; // _unloads\n  this._lstns = []; // _listeners\n  this._dpL = function () {}; // onduplicate listener\n  this._dpLC = false; // true when onduplicate called\n\n  /**\n   * Even when the own instance is not applying,\n   * we still listen to messages to ensure the hasLeader flag\n   * is set correctly.\n   */\n  var hasLeaderListener = function hasLeaderListener(msg) {\n    if (msg.context === 'leader') {\n      if (msg.action === 'death') {\n        _this._hasLeader = false;\n      }\n      if (msg.action === 'tell') {\n        _this._hasLeader = true;\n      }\n    }\n  };\n  this.broadcastChannel.addEventListener('internal', hasLeaderListener);\n  this._lstns.push(hasLeaderListener);\n};\nLeaderElection.prototype = {\n  hasLeader: function hasLeader() {\n    return Promise.resolve(this._hasLeader);\n  },\n  /**\n   * Returns true if the instance is leader,\n   * false if not.\n   * @async\n   */\n  applyOnce: function applyOnce(\n  // true if the applyOnce() call came from the fallbackInterval cycle\n  isFromFallbackInterval) {\n    var _this2 = this;\n    if (this.isLeader) {\n      return sleep(0, true);\n    }\n    if (this.isDead) {\n      return sleep(0, false);\n    }\n\n    /**\n     * Already applying more than once,\n     * -> wait for the apply queue to be finished.\n     */\n    if (this._aplQC > 1) {\n      return this._aplQ;\n    }\n\n    /**\n     * Add a new apply-run\n     */\n    var applyRun = function applyRun() {\n      /**\n       * Optimization shortcuts.\n       * Directly return if a previous run\n       * has already elected a leader.\n       */\n      if (_this2.isLeader) {\n        return PROMISE_RESOLVED_TRUE;\n      }\n      var stopCriteria = false;\n      var stopCriteriaPromiseResolve;\n      /**\n       * Resolves when a stop criteria is reached.\n       * Uses as a performance shortcut so we do not\n       * have to await the responseTime when it is already clear\n       * that the election failed.\n       */\n      var stopCriteriaPromise = new Promise(function (res) {\n        stopCriteriaPromiseResolve = function stopCriteriaPromiseResolve() {\n          stopCriteria = true;\n          res();\n        };\n      });\n      var handleMessage = function handleMessage(msg) {\n        if (msg.context === 'leader' && msg.token != _this2.token) {\n          if (msg.action === 'apply') {\n            // other is applying\n            if (msg.token > _this2.token) {\n              /**\n               * other has higher token\n               * -> stop applying and let other become leader.\n               */\n              stopCriteriaPromiseResolve();\n            }\n          }\n          if (msg.action === 'tell') {\n            // other is already leader\n            stopCriteriaPromiseResolve();\n            _this2._hasLeader = true;\n          }\n        }\n      };\n      _this2.broadcastChannel.addEventListener('internal', handleMessage);\n\n      /**\n       * If the applyOnce() call came from the fallbackInterval,\n       * we can assume that the election runs in the background and\n       * not critical process is waiting for it.\n       * When this is true, we give the other instances\n       * more time to answer to messages in the election cycle.\n       * This makes it less likely to elect duplicate leaders.\n       * But also it takes longer which is not a problem because we anyway\n       * run in the background.\n       */\n      var waitForAnswerTime = isFromFallbackInterval ? _this2._options.responseTime * 4 : _this2._options.responseTime;\n      return sendLeaderMessage(_this2, 'apply') // send out that this one is applying\n      .then(function () {\n        return Promise.race([sleep(waitForAnswerTime), stopCriteriaPromise.then(function () {\n          return Promise.reject(new Error());\n        })]);\n      })\n      // send again in case another instance was just created\n      .then(function () {\n        return sendLeaderMessage(_this2, 'apply');\n      })\n      // let others time to respond\n      .then(function () {\n        return Promise.race([sleep(waitForAnswerTime), stopCriteriaPromise.then(function () {\n          return Promise.reject(new Error());\n        })]);\n      })[\"catch\"](function () {}).then(function () {\n        _this2.broadcastChannel.removeEventListener('internal', handleMessage);\n        if (!stopCriteria) {\n          // no stop criteria -> own is leader\n          return beLeader(_this2).then(function () {\n            return true;\n          });\n        } else {\n          // other is leader\n          return false;\n        }\n      });\n    };\n    this._aplQC = this._aplQC + 1;\n    this._aplQ = this._aplQ.then(function () {\n      return applyRun();\n    }).then(function () {\n      _this2._aplQC = _this2._aplQC - 1;\n    });\n    return this._aplQ.then(function () {\n      return _this2.isLeader;\n    });\n  },\n  awaitLeadership: function awaitLeadership() {\n    if ( /* _awaitLeadershipPromise */\n    !this._aLP) {\n      this._aLP = _awaitLeadershipOnce(this);\n    }\n    return this._aLP;\n  },\n  set onduplicate(fn) {\n    this._dpL = fn;\n  },\n  die: function die() {\n    var _this3 = this;\n    this._lstns.forEach(function (listener) {\n      return _this3.broadcastChannel.removeEventListener('internal', listener);\n    });\n    this._lstns = [];\n    this._unl.forEach(function (uFn) {\n      return uFn.remove();\n    });\n    this._unl = [];\n    if (this.isLeader) {\n      this._hasLeader = false;\n      this.isLeader = false;\n    }\n    this.isDead = true;\n    return sendLeaderMessage(this, 'death');\n  }\n};\n\n/**\n * @param leaderElector {LeaderElector}\n */\nfunction _awaitLeadershipOnce(leaderElector) {\n  if (leaderElector.isLeader) {\n    return PROMISE_RESOLVED_VOID;\n  }\n  return new Promise(function (res) {\n    var resolved = false;\n    function finish() {\n      if (resolved) {\n        return;\n      }\n      resolved = true;\n      leaderElector.broadcastChannel.removeEventListener('internal', whenDeathListener);\n      res(true);\n    }\n\n    // try once now\n    leaderElector.applyOnce().then(function () {\n      if (leaderElector.isLeader) {\n        finish();\n      }\n    });\n\n    /**\n     * Try on fallbackInterval\n     * @recursive\n     */\n    var tryOnFallBack = function tryOnFallBack() {\n      return sleep(leaderElector._options.fallbackInterval).then(function () {\n        if (leaderElector.isDead || resolved) {\n          return;\n        }\n        if (leaderElector.isLeader) {\n          finish();\n        } else {\n          return leaderElector.applyOnce(true).then(function () {\n            if (leaderElector.isLeader) {\n              finish();\n            } else {\n              tryOnFallBack();\n            }\n          });\n        }\n      });\n    };\n    tryOnFallBack();\n\n    // try when other leader dies\n    var whenDeathListener = function whenDeathListener(msg) {\n      if (msg.context === 'leader' && msg.action === 'death') {\n        leaderElector._hasLeader = false;\n        leaderElector.applyOnce().then(function () {\n          if (leaderElector.isLeader) {\n            finish();\n          }\n        });\n      }\n    };\n    leaderElector.broadcastChannel.addEventListener('internal', whenDeathListener);\n    leaderElector._lstns.push(whenDeathListener);\n  });\n}\nfunction fillOptionsWithDefaults(options, channel) {\n  if (!options) options = {};\n  options = JSON.parse(JSON.stringify(options));\n  if (!options.fallbackInterval) {\n    options.fallbackInterval = 3000;\n  }\n  if (!options.responseTime) {\n    options.responseTime = channel.method.averageResponseTime(channel.options);\n  }\n  return options;\n}\nexport function createLeaderElection(channel, options) {\n  if (channel._leaderElector) {\n    throw new Error('BroadcastChannel already has a leader-elector');\n  }\n  options = fillOptionsWithDefaults(options, channel);\n  var elector = supportsWebLockAPI() ? new LeaderElectionWebLock(channel, options) : new LeaderElection(channel, options);\n  channel._befC.push(function () {\n    return elector.die();\n  });\n  channel._leaderElector = elector;\n  return elector;\n}","/*!\n * Copyright (c) 2015-present, Okta, Inc. and/or its affiliates. All rights reserved.\n * The Okta software accompanied by this notice is provided pursuant to the Apache License, Version 2.0 (the \"License.\")\n *\n * You may obtain a copy of the License at http://www.apache.org/licenses/LICENSE-2.0.\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT\n * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * \n * See the License for the specific language governing permissions and limitations under the License.\n */\n\n\nimport { ServiceInterface, ServiceManagerOptions } from '../core/types';\nimport {\n  BroadcastChannel,\n  createLeaderElection,\n  LeaderElector\n} from 'broadcast-channel';\nimport { isBrowser } from '../features';\n\ndeclare type OnLeaderHandler = (() => Promise<void>);\ndeclare type ServiceOptions = ServiceManagerOptions & {\n  onLeader?: OnLeaderHandler;\n};\n\nexport class LeaderElectionService implements ServiceInterface {\n  private options: ServiceOptions;\n  private channel?: BroadcastChannel;\n  private elector?: LeaderElector;\n  private started = false;\n\n  constructor(options: ServiceOptions = {}) {\n    this.options = options;\n    this.onLeaderDuplicate = this.onLeaderDuplicate.bind(this);\n    this.onLeader = this.onLeader.bind(this);\n  }\n\n  private onLeaderDuplicate() {\n  }\n\n  private async onLeader() {\n    await this.options.onLeader?.();\n  }\n\n  isLeader() {\n    return !!this.elector?.isLeader;\n  }\n\n  hasLeader() {\n    return !!this.elector?.hasLeader;\n  }\n\n  async start() {\n    if (this.canStart()) {\n      const { electionChannelName } = this.options;\n      this.channel = new BroadcastChannel(electionChannelName as string);\n      this.elector = createLeaderElection(this.channel);\n      this.elector.onduplicate = this.onLeaderDuplicate;\n      this.elector.awaitLeadership().then(this.onLeader);\n      this.started = true;\n    }\n  }\n\n  async stop() {\n    if (this.started) {\n      if (this.elector) {\n        await this.elector.die();\n        this.elector = undefined;\n      }\n      if (this.channel) {\n        // Workaround to fix error `Failed to execute 'postMessage' on 'BroadcastChannel': Channel is closed`\n        (this.channel as any).postInternal = () => Promise.resolve();\n        await this.channel.close();\n        this.channel = undefined;\n      }\n      this.started = false;\n    }\n  }\n\n  requiresLeadership() {\n    return false;\n  }\n\n  isStarted() {\n    return this.started;\n  }\n\n  canStart() {\n    return isBrowser() && !this.started;\n  }\n\n}\n","/*!\n * Copyright (c) 2015-present, Okta, Inc. and/or its affiliates. All rights reserved.\n * The Okta software accompanied by this notice is provided pursuant to the Apache License, Version 2.0 (the \"License.\")\n *\n * You may obtain a copy of the License at http://www.apache.org/licenses/LICENSE-2.0.\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT\n * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * \n * See the License for the specific language governing permissions and limitations under the License.\n */\n\n\nimport { AuthSdkError } from '../errors';\nimport { ServiceInterface, ServiceManagerOptions } from '../core/types';\nimport { EVENT_EXPIRED, TokenManagerInterface, isRefreshToken } from '../oidc/types';\nimport { isBrowser } from '../features';\n\nexport class AutoRenewService implements ServiceInterface {\n  private tokenManager: TokenManagerInterface;\n  private options: ServiceManagerOptions;\n  private renewTimeQueue: Array<number>;\n  private started = false;\n\n  constructor(tokenManager: TokenManagerInterface, options: ServiceManagerOptions = {}) {\n    this.tokenManager = tokenManager;\n    this.options = options;\n    this.renewTimeQueue = [];\n    this.onTokenExpiredHandler = this.onTokenExpiredHandler.bind(this);\n  }\n  \n  private shouldThrottleRenew(): boolean {\n    let res = false;\n    this.renewTimeQueue.push(Date.now());\n    if (this.renewTimeQueue.length >= 10) {\n      // get and remove first item from queue\n      const firstTime = this.renewTimeQueue.shift() as number;\n      const lastTime = this.renewTimeQueue[this.renewTimeQueue.length - 1];\n      res = (lastTime - firstTime) < 30 * 1000;\n    }\n    return res;\n  }\n\n  requiresLeadership() {\n    // If tokens sync storage is enabled, handle tokens expiration only in 1 leader tab\n    return !!this.options.syncStorage && isBrowser();\n  }\n\n  private processExpiredTokens() {\n    const tokenStorage = this.tokenManager.getStorage();\n    const tokens = tokenStorage.getStorage();\n    Object.keys(tokens).forEach(key => {\n      const token = tokens[key];\n      if (!isRefreshToken(token) && this.tokenManager.hasExpired(token)) {\n        this.onTokenExpiredHandler(key);\n      }\n    });\n  }\n\n  private onTokenExpiredHandler(key: string) {\n    if (this.options.autoRenew) {\n      if (this.shouldThrottleRenew()) {\n        const error = new AuthSdkError('Too many token renew requests');\n        this.tokenManager.emitError(error);\n      } else {\n        this.tokenManager.renew(key).catch(() => {}); // Renew errors will emit an \"error\" event \n      }\n    } else if (this.options.autoRemove) {\n      this.tokenManager.remove(key);\n    }\n  }\n\n  canStart() {\n    return (!!this.options.autoRenew || !!this.options.autoRemove) && !this.started;\n  }\n\n  async start() {\n    if (this.canStart()) {\n      this.tokenManager.on(EVENT_EXPIRED, this.onTokenExpiredHandler);\n      if (this.tokenManager.isStarted()) {\n        // If token manager has been already started, we could miss token expire events,\n        //  so need to process expired tokens manually.\n        this.processExpiredTokens();\n      }\n      this.started = true;\n    }\n  }\n\n  async stop() {\n    if (this.started) {\n      this.tokenManager.off(EVENT_EXPIRED, this.onTokenExpiredHandler);\n      this.renewTimeQueue = [];\n      this.started = false;\n    }\n  }\n\n  isStarted() {\n    return this.started;\n  }\n}\n","/*!\n * Copyright (c) 2015-present, Okta, Inc. and/or its affiliates. All rights reserved.\n * The Okta software accompanied by this notice is provided pursuant to the Apache License, Version 2.0 (the \"License.\")\n *\n * You may obtain a copy of the License at http://www.apache.org/licenses/LICENSE-2.0.\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT\n * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * \n * See the License for the specific language governing permissions and limitations under the License.\n */\n\nimport { BroadcastChannel } from 'broadcast-channel';\nimport { isBrowser } from '../features';\nimport {\n  ServiceManagerOptions, ServiceInterface\n} from '../core/types';\nimport {\n  Token, Tokens, \n  EVENT_ADDED, EVENT_REMOVED, EVENT_RENEWED, EVENT_SET_STORAGE, TokenManagerInterface\n} from '../oidc/types';\nimport { AuthSdkError } from '../errors';\n\nexport type SyncMessage = {\n  type: string;\n  key?: string;\n  token?: Token;\n  oldToken?: Token;\n  storage?: Tokens;\n};\nexport class SyncStorageService implements ServiceInterface {\n  private tokenManager: TokenManagerInterface;\n  private options: ServiceManagerOptions;\n  private channel?: BroadcastChannel<SyncMessage>;\n  private started = false;\n  private enablePostMessage = true;\n\n  constructor(tokenManager: TokenManagerInterface, options: ServiceManagerOptions = {}) {\n    this.tokenManager = tokenManager;\n    this.options = options;\n    this.onTokenAddedHandler = this.onTokenAddedHandler.bind(this);\n    this.onTokenRemovedHandler = this.onTokenRemovedHandler.bind(this);\n    this.onTokenRenewedHandler = this.onTokenRenewedHandler.bind(this);\n    this.onSetStorageHandler = this.onSetStorageHandler.bind(this);\n    this.onSyncMessageHandler = this.onSyncMessageHandler.bind(this);\n  }\n\n  requiresLeadership() {\n    return false;\n  }\n\n  isStarted() {\n    return this.started;\n  }\n\n  canStart() {\n    return !!this.options.syncStorage && isBrowser() && !this.started;\n  }\n\n  async start() {\n    if (!this.canStart()) {\n      return;\n    }\n    \n    const { syncChannelName } = this.options;\n    try {\n      // BroadcastChannel throws if no supported method can be found\n      this.channel = new BroadcastChannel(syncChannelName as string);\n    } catch (err) {\n      throw new AuthSdkError('SyncStorageService is not supported in current browser.');\n    }\n\n    this.tokenManager.on(EVENT_ADDED, this.onTokenAddedHandler);\n    this.tokenManager.on(EVENT_REMOVED, this.onTokenRemovedHandler);\n    this.tokenManager.on(EVENT_RENEWED, this.onTokenRenewedHandler);\n    this.tokenManager.on(EVENT_SET_STORAGE, this.onSetStorageHandler);\n    this.channel.addEventListener('message', this.onSyncMessageHandler);\n    this.started = true;\n  }\n\n  async stop() {\n    if (this.started) {\n      this.tokenManager.off(EVENT_ADDED, this.onTokenAddedHandler);\n      this.tokenManager.off(EVENT_REMOVED, this.onTokenRemovedHandler);\n      this.tokenManager.off(EVENT_RENEWED, this.onTokenRenewedHandler);\n      this.tokenManager.off(EVENT_SET_STORAGE, this.onSetStorageHandler);\n      this.channel?.removeEventListener('message', this.onSyncMessageHandler);\n      await this.channel?.close();\n      this.channel = undefined;\n      this.started = false;\n    }\n  }\n\n  private onTokenAddedHandler(key: string, token: Token) {\n    if (!this.enablePostMessage) {\n      return;\n    }\n    this.channel?.postMessage({\n      type: EVENT_ADDED,\n      key,\n      token\n    });\n  }\n\n  private onTokenRemovedHandler(key: string, token: Token) {\n    if (!this.enablePostMessage) {\n      return;\n    }\n    this.channel?.postMessage({\n      type: EVENT_REMOVED,\n      key,\n      token\n    });\n  }\n\n  private onTokenRenewedHandler(key: string, token: Token, oldToken?: Token) {\n    if (!this.enablePostMessage) {\n      return;\n    }\n    this.channel?.postMessage({\n      type: EVENT_RENEWED,\n      key,\n      token,\n      oldToken\n    });\n  }\n\n  private onSetStorageHandler(storage: Tokens) {\n    this.channel?.postMessage({\n      type: EVENT_SET_STORAGE,\n      storage\n    });\n  }\n\n  /* eslint-disable complexity */\n  private onSyncMessageHandler(msg: SyncMessage) {\n    // Notes:\n    // 1. Using `enablePostMessage` flag here to prevent sync message loop.\n    //    If this flag is on, tokenManager event handlers do not post sync message.\n    // 2. IE11 has known issue with synchronization of LocalStorage cross tabs.\n    //    One workaround is to set empty event handler for `window.onstorage`.\n    //    But it's not 100% working, sometimes you still get old value from LocalStorage.\n    //    Better approch is to explicitly udpate LocalStorage with `setStorage`.\n\n    this.enablePostMessage = false;\n    switch (msg.type) {\n      case EVENT_SET_STORAGE:\n        this.tokenManager.getStorage().setStorage(msg.storage);\n        break;\n      case EVENT_ADDED:\n        this.tokenManager.emitAdded(msg.key!, msg.token!);\n        this.tokenManager.setExpireEventTimeout(msg.key!, msg.token!);\n        break;\n      case EVENT_REMOVED:\n        this.tokenManager.clearExpireEventTimeout(msg.key!);\n        this.tokenManager.emitRemoved(msg.key!, msg.token!);\n        break;\n      case EVENT_RENEWED:\n        this.tokenManager.emitRenewed(msg.key!, msg.token!, msg.oldToken);\n        break;\n      default:\n        break;\n    }\n    this.enablePostMessage = true;\n  }\n} ","import { ServiceInterface, ServiceManagerOptions } from '../core/types';\nimport { TokenManagerInterface } from '../oidc/types';\nimport { isBrowser } from '../features';\n\nconst getNow = () => Math.floor(Date.now() / 1000);\n\nexport class RenewOnTabActivationService implements ServiceInterface {\n  private tokenManager: TokenManagerInterface;\n  private started = false;\n  private options: ServiceManagerOptions;\n  private lastHidden = -1;\n  onPageVisbilityChange: () => void;\n\n  constructor(tokenManager: TokenManagerInterface, options: ServiceManagerOptions = {}) {\n    this.tokenManager = tokenManager;\n    this.options = options;\n    // store this context for event handler\n    this.onPageVisbilityChange = this._onPageVisbilityChange.bind(this);\n  }\n\n  // do not use directly, use `onPageVisbilityChange` (with binded this context)\n  /* eslint complexity: [0, 10] */\n  private _onPageVisbilityChange () {\n    if (document.hidden) {\n      this.lastHidden = getNow();\n    }\n    // renew will only attempt if tab was inactive for duration\n    else if (this.lastHidden > 0 && (getNow() - this.lastHidden >= this.options.tabInactivityDuration!)) {\n      const { accessToken, idToken } = this.tokenManager.getTokensSync();\n      if (!!accessToken && this.tokenManager.hasExpired(accessToken)) {\n        const key = this.tokenManager.getStorageKeyByType('accessToken');\n        // Renew errors will emit an \"error\" event\n        this.tokenManager.renew(key).catch(() => {});\n      }\n      else if (!!idToken && this.tokenManager.hasExpired(idToken)) {\n        const key = this.tokenManager.getStorageKeyByType('idToken');\n        // Renew errors will emit an \"error\" event\n        this.tokenManager.renew(key).catch(() => {});\n      }\n    }\n  }\n\n  async start () {\n    if (this.canStart() && !!document) {\n      document.addEventListener('visibilitychange', this.onPageVisbilityChange);\n      this.started = true;\n    }\n  }\n\n  async stop () {\n    if (document) {\n      document.removeEventListener('visibilitychange', this.onPageVisbilityChange);\n      this.started = false;\n    }\n  }\n\n  canStart(): boolean {\n    return isBrowser() &&\n    !!this.options.autoRenew &&\n    !!this.options.renewOnTabActivation &&\n    !this.started;\n  }\n\n  requiresLeadership(): boolean {\n    return false;\n  }\n\n  isStarted(): boolean {\n    return this.started;\n  }\n}\n","/*!\n * Copyright (c) 2015-present, Okta, Inc. and/or its affiliates. All rights reserved.\n * The Okta software accompanied by this notice is provided pursuant to the Apache License, Version 2.0 (the \"License.\")\n *\n * You may obtain a copy of the License at http://www.apache.org/licenses/LICENSE-2.0.\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT\n * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * \n * See the License for the specific language governing permissions and limitations under the License.\n */\n\n\nimport {\n  OAuthTransactionMeta,\n  OAuthStorageManagerInterface,\n} from '../../oidc';\n\nimport {\n  ServiceManagerInterface,\n  ServiceInterface,\n  ServiceManagerOptions,\n  OktaAuthCoreInterface,\n  OktaAuthCoreOptions\n} from '../types';\nimport { AutoRenewService,\n  SyncStorageService,\n  LeaderElectionService,\n  RenewOnTabActivationService\n} from '../../services';\nimport { removeNils } from '../../util';\n\nconst AUTO_RENEW = 'autoRenew';\nconst SYNC_STORAGE = 'syncStorage';\nconst LEADER_ELECTION = 'leaderElection';\nconst RENEW_ON_TAB_ACTIVATION = 'renewOnTabActivation';\n\nexport class ServiceManager\n<\n  M extends OAuthTransactionMeta,\n  S extends OAuthStorageManagerInterface<M>,\n  O extends OktaAuthCoreOptions\n>\nimplements ServiceManagerInterface \n{\n  private sdk: OktaAuthCoreInterface<M, S, O>;\n  private options: ServiceManagerOptions;\n  private services: Map<string, ServiceInterface>;\n  private started: boolean;\n\n  private static knownServices = [AUTO_RENEW, SYNC_STORAGE, LEADER_ELECTION, RENEW_ON_TAB_ACTIVATION];\n\n  private static defaultOptions: ServiceManagerOptions = {\n    autoRenew: true,\n    autoRemove: true,\n    syncStorage: true,\n    renewOnTabActivation: true,\n    tabInactivityDuration: 1800,    // 30 mins in seconds\n  };\n\n  constructor(sdk: OktaAuthCoreInterface<M, S, O>, options: ServiceManagerOptions = {}) {\n    this.sdk = sdk;\n    this.onLeader = this.onLeader.bind(this);\n\n    // TODO: backwards compatibility, remove in next major version - OKTA-473815\n    const { autoRenew, autoRemove, syncStorage } = sdk.tokenManager.getOptions();\n    options.electionChannelName = options.electionChannelName || options.broadcastChannelName;\n    this.options = Object.assign({}, \n      ServiceManager.defaultOptions,\n      { autoRenew, autoRemove, syncStorage }, \n      {\n        electionChannelName: `${sdk.options.clientId}-election`,\n        syncChannelName: `${sdk.options.clientId}-sync`,\n      },\n      removeNils(options)\n    );\n\n    this.started = false;\n    this.services = new Map();\n\n    ServiceManager.knownServices.forEach(name => {\n      const svc = this.createService(name);\n      if (svc) {\n        this.services.set(name, svc);\n      }\n    });\n  }\n\n  private async onLeader() {\n    if (this.started) {\n      // Start services that requires leadership\n      await this.startServices();\n    }\n  }\n\n  isLeader() {\n    return (this.getService(LEADER_ELECTION) as LeaderElectionService)?.isLeader();\n  }\n\n  isLeaderRequired() {\n    return [...this.services.values()].some(srv => srv.canStart() && srv.requiresLeadership());\n  }\n\n  async start() {\n    if (this.started) {\n      return;     // noop if services have already started\n    }\n    await this.startServices();\n    this.started = true;\n  }\n  \n  async stop() {\n    await this.stopServices();\n    this.started = false;\n  }\n\n  getService(name: string): ServiceInterface | undefined {\n    return this.services.get(name);\n  }\n\n  private async startServices() {\n    for (const [name, srv] of this.services.entries()) {\n      if (this.canStartService(name, srv)) {\n        await srv.start();\n      }\n    }\n  }\n\n  private async stopServices() {\n    for (const srv of this.services.values()) {\n      await srv.stop();\n    }\n  }\n\n  // eslint-disable-next-line complexity\n  private canStartService(name: string, srv: ServiceInterface): boolean {\n    let canStart = srv.canStart() && !srv.isStarted();\n    // only start election if a leader is required\n    if (name === LEADER_ELECTION) {\n      canStart &&= this.isLeaderRequired();\n    } else if (srv.requiresLeadership()) {\n      canStart &&= this.isLeader();\n    }\n    return canStart;\n  }\n\n  private createService(name: string): ServiceInterface {\n    const tokenManager = this.sdk.tokenManager;\n\n    let service: ServiceInterface;\n    switch (name) {\n      case LEADER_ELECTION:\n        service = new LeaderElectionService({...this.options, onLeader: this.onLeader});\n        break;\n      case AUTO_RENEW:\n        service = new AutoRenewService(tokenManager, {...this.options});\n        break;\n      case SYNC_STORAGE:\n        service = new SyncStorageService(tokenManager, {...this.options});\n        break;\n      case RENEW_ON_TAB_ACTIVATION:\n        service = new RenewOnTabActivationService(tokenManager, {...this.options});\n        break;\n      default:\n        throw new Error(`Unknown service ${name}`);\n    }\n    return service;\n  }\n\n}\n","import { StorageManagerConstructor } from '../storage/types';\nimport { OktaAuthConstructor, OktaAuthOptionsConstructor } from '../base/types';\n\nimport { OktaAuthCoreInterface, OktaAuthCoreOptions } from './types';\nimport { createOktaAuthBase } from '../base';\nimport { mixinStorage } from '../storage/mixin';\nimport { mixinHttp } from '../http/mixin';\nimport { mixinOAuth } from '../oidc/mixin';\nimport {\n  OAuthStorageManagerInterface,\n  PKCETransactionMeta,\n  TransactionManagerConstructor,\n  TransactionManagerInterface\n} from '../oidc/types';\nimport { mixinCore } from './mixin';\nimport { mixinSession } from '../session/mixin';\n\nexport function createOktaAuthCore<\n  M extends PKCETransactionMeta = PKCETransactionMeta,\n  S extends OAuthStorageManagerInterface<M> = OAuthStorageManagerInterface<M>,\n  O extends OktaAuthCoreOptions = OktaAuthCoreOptions,\n  TM extends TransactionManagerInterface = TransactionManagerInterface\n>(\n  StorageManagerConstructor: StorageManagerConstructor<S>,\n  OptionsConstructor: OktaAuthOptionsConstructor<O>,\n  TransactionManagerConstructor: TransactionManagerConstructor<TM>\n): OktaAuthConstructor<OktaAuthCoreInterface<M, S, O, TM>>\n{\n  const Base = createOktaAuthBase(OptionsConstructor);\n  const WithStorage = mixinStorage<S, O>(Base, StorageManagerConstructor);\n  const WithHttp = mixinHttp<S, O>(WithStorage);\n  const WithSession = mixinSession<S, O>(WithHttp);\n  const WithOAuth = mixinOAuth<M, S, O, TM>(WithSession, TransactionManagerConstructor);\n  const Core = mixinCore<M, S, O, TM>(WithOAuth);\n  return Core;\n}\n","import { parseOAuthResponseFromUrl } from '../oidc/parseFromUrl';\nimport { OktaAuthConstructor } from '../base/types';\nimport {\n  OAuthStorageManagerInterface,\n  OAuthTransactionMeta,\n  OktaAuthOAuthInterface,\n  PKCETransactionMeta,\n  Tokens,\n  TransactionManagerInterface,\n} from '../oidc/types';\nimport { AuthStateManager } from './AuthStateManager';\nimport { ServiceManager } from './ServiceManager';\nimport { OktaAuthCoreInterface, OktaAuthCoreOptions } from './types';\n\nexport function mixinCore\n<\n  M extends OAuthTransactionMeta = PKCETransactionMeta,\n  S extends OAuthStorageManagerInterface<M> = OAuthStorageManagerInterface<M>,\n  O extends OktaAuthCoreOptions = OktaAuthCoreOptions,\n  TM extends TransactionManagerInterface = TransactionManagerInterface,\n  TBase extends OktaAuthConstructor<OktaAuthOAuthInterface<M, S, O, TM>>\n    = OktaAuthConstructor<OktaAuthOAuthInterface<M, S, O, TM>>\n>\n(Base: TBase): TBase & OktaAuthConstructor<OktaAuthCoreInterface<M, S, O, TM>>\n{\n  return class OktaAuthCore extends Base implements OktaAuthCoreInterface<M, S, O, TM>\n  {\n    authStateManager: AuthStateManager<M, S, O>;\n    serviceManager: ServiceManager<M, S, O>;\n    \n    constructor(...args: any[]) {\n      super(...args);\n\n      // AuthStateManager\n      this.authStateManager = new AuthStateManager<M, S, O>(this);\n\n      // ServiceManager\n      this.serviceManager = new ServiceManager<M, S, O>(this, this.options.services);\n    }\n\n    async start() {\n      await this.serviceManager.start();\n      // TODO: review tokenManager.start\n      this.tokenManager.start();\n      if (!this.token.isLoginRedirect()) {\n        await this.authStateManager.updateAuthState();\n      }\n    }\n  \n    async stop() {\n      // TODO: review tokenManager.stop\n      this.tokenManager.stop();\n      await this.serviceManager.stop();\n    }\n\n    async handleRedirect(originalUri?: string): Promise<void> {\n      await this.handleLoginRedirect(undefined, originalUri);\n    }\n\n    // eslint-disable-next-line complexity\n    async handleLoginRedirect(tokens?: Tokens, originalUri?: string): Promise<void> {\n      let state = this.options.state;\n  \n      // Store tokens and update AuthState by the emitted events\n      if (tokens) {\n        this.tokenManager.setTokens(tokens);\n        originalUri = originalUri || this.getOriginalUri(this.options.state);\n      } else if (this.isLoginRedirect()) {\n        try {\n          // For redirect flow, get state from the URL and use it to retrieve the originalUri\n          const oAuthResponse = await parseOAuthResponseFromUrl(this, {});\n          state = oAuthResponse.state;\n          originalUri = originalUri || this.getOriginalUri(state);\n          await this.storeTokensFromRedirect();\n        } catch(e) {\n          // auth state should be updated\n          await this.authStateManager.updateAuthState();\n          throw e;\n        }\n      } else {\n        return; // nothing to do\n      }\n      \n      // ensure auth state has been updated\n      await this.authStateManager.updateAuthState();\n  \n      // clear originalUri from storage\n      this.removeOriginalUri(state);\n  \n      // Redirect to originalUri\n      const { restoreOriginalUri } = this.options;\n      if (restoreOriginalUri) {\n        await restoreOriginalUri(this, originalUri);\n      } else if (originalUri) {\n        window.location.replace(originalUri);\n      }\n    }\n  };\n}\n","/*!\n * Copyright (c) 2015-present, Okta, Inc. and/or its affiliates. All rights reserved.\n * The Okta software accompanied by this notice is provided pursuant to the Apache License, Version 2.0 (the \"License.\")\n *\n * You may obtain a copy of the License at http://www.apache.org/licenses/LICENSE-2.0.\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT\n * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * \n * See the License for the specific language governing permissions and limitations under the License.\n */\n\nimport { createOAuthOptionsConstructor } from '../oidc';\nimport { AuthState, OktaAuthCoreInterface, OktaAuthCoreOptions, ServiceManagerOptions } from './types';\n\n\nexport function createCoreOptionsConstructor()\n{\n  const OAuthOptionsConstructor = createOAuthOptionsConstructor();\n  return class CoreOptionsConstructor\n    extends OAuthOptionsConstructor\n    implements Required<OktaAuthCoreOptions>\n  {\n    services: ServiceManagerOptions;\n    transformAuthState: (oktaAuth: OktaAuthCoreInterface, authState: AuthState) => Promise<AuthState>;\n\n    constructor(options: any) {\n      super(options);\n      this.services = options.services;\n      this.transformAuthState = options.transformAuthState;\n    }\n  };\n}\n","import { createOAuthStorageManager } from '../oidc/storage';\nimport { PKCETransactionMeta } from '../oidc/types';\n\nexport function createCoreStorageManager<M extends PKCETransactionMeta = PKCETransactionMeta>() {\n  return createOAuthStorageManager<M>();\n}\n","/*!\n * Copyright (c) 2015-present, Okta, Inc. and/or its affiliates. All rights reserved.\n * The Okta software accompanied by this notice is provided pursuant to the Apache License, Version 2.0 (the \"License.\")\n *\n * You may obtain a copy of the License at http://www.apache.org/licenses/LICENSE-2.0.\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT\n * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n *\n * See the License for the specific language governing permissions and limitations under the License.\n */\n\nimport { AuthSdkError } from '../errors';\nimport { atob, btoa } from './webcrypto';\n\n// converts a string to base64 (url/filename safe variant)\nexport function stringToBase64Url(str) {\n  var b64 = btoa(str);\n  return base64ToBase64Url(b64);\n}\n\n// converts a standard base64-encoded string to a \"url/filename safe\" variant\nexport function base64ToBase64Url(b64) {\n  return b64.replace(/\\+/g, '-').replace(/\\//g, '_').replace(/=+$/, '');\n}\n\n// converts a \"url/filename safe\" base64 string to a \"standard\" base64 string\nexport function base64UrlToBase64(b64u) {\n  return b64u.replace(/-/g, '+').replace(/_/g, '/');\n}\n\nexport function base64UrlToString(b64u) {\n  var b64 = base64UrlToBase64(b64u);\n  switch (b64.length % 4) {\n    case 0:\n      break;\n    case 2:\n      b64 += '==';\n      break;\n    case 3:\n      b64 += '=';\n      break;\n    default:\n      throw new AuthSdkError('Not a valid Base64Url');\n  }\n  var utf8 = atob(b64);\n  try {\n    return decodeURIComponent(escape(utf8));\n  } catch (e) {\n    return utf8;\n  }\n}\n\nexport function stringToBuffer(str) {\n  var buffer = new Uint8Array(str.length);\n  for (var i = 0; i < str.length; i++) {\n    buffer[i] = str.charCodeAt(i);\n  }\n  return buffer;\n}\n\nexport function base64UrlDecode(str) {\n  return atob(base64UrlToBase64(str));\n}\n\n// Converts base64 string to binary data view\nexport function base64UrlToBuffer(b64u) {\n  return Uint8Array.from(base64UrlDecode(b64u), (c: string) => c.charCodeAt(0));\n}\n\n// Converts an ArrayBuffer object that contains binary data to base64 encoded string\nexport function bufferToBase64Url(bin) {\n  return btoa(new Uint8Array(bin).reduce((s, byte) => s + String.fromCharCode(byte), ''));\n}\n\n\n","/*!\n * Copyright (c) 2015-present, Okta, Inc. and/or its affiliates. All rights reserved.\n * The Okta software accompanied by this notice is provided pursuant to the Apache License, Version 2.0 (the \"License.\")\n *\n * You may obtain a copy of the License at http://www.apache.org/licenses/LICENSE-2.0.\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT\n * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * \n * See the License for the specific language governing permissions and limitations under the License.\n */\n\n\n/* global atob, btoa, crypto */\nconst a = function(str) { return atob(str); };\nconst b = function (str) { return btoa(str); };\nconst c = typeof crypto === 'undefined' ? null : crypto;\n\nexport { a as atob, b as btoa, c as webcrypto };\n","/*!\n * Copyright (c) 2015-present, Okta, Inc. and/or its affiliates. All rights reserved.\n * The Okta software accompanied by this notice is provided pursuant to the Apache License, Version 2.0 (the \"License.\")\n *\n * You may obtain a copy of the License at http://www.apache.org/licenses/LICENSE-2.0.\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT\n * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n *\n * See the License for the specific language governing permissions and limitations under the License.\n */\n\n/* global TextEncoder */\nimport { stringToBase64Url } from './base64';\nimport { webcrypto } from './webcrypto';\n\nexport function getOidcHash(str) {  \n  var buffer = new TextEncoder().encode(str);\n  return webcrypto.subtle.digest('SHA-256', buffer).then(function(arrayBuffer) {\n    var intBuffer = new Uint8Array(arrayBuffer);\n    var firstHalf = intBuffer.slice(0, 16);\n    var hash = String.fromCharCode.apply(null, firstHalf as unknown as number[]);\n    var b64u = stringToBase64Url(hash); // url-safe base64 variant\n    return b64u;\n  });\n}\n","/*!\n * Copyright (c) 2015-present, Okta, Inc. and/or its affiliates. All rights reserved.\n * The Okta software accompanied by this notice is provided pursuant to the Apache License, Version 2.0 (the \"License.\")\n *\n * You may obtain a copy of the License at http://www.apache.org/licenses/LICENSE-2.0.\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT\n * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n *\n * See the License for the specific language governing permissions and limitations under the License.\n */\n\nimport { clone } from '../util';\nimport { stringToBuffer, base64UrlDecode } from './base64';\nimport { webcrypto } from './webcrypto';\n\nexport function verifyToken(idToken, key) {\n  key = clone(key);\n\n  var format = 'jwk';\n  var algo = {\n    name: 'RSASSA-PKCS1-v1_5',\n    hash: { name: 'SHA-256' }\n  };\n  var extractable = true;\n  var usages = ['verify'];\n\n  // https://connect.microsoft.com/IE/feedback/details/2242108/webcryptoapi-importing-jwk-with-use-field-fails\n  // This is a metadata tag that specifies the intent of how the key should be used.\n  // It's not necessary to properly verify the jwt's signature.\n  delete key.use;\n\n  // eslint-disable-next-line @typescript-eslint/ban-ts-comment\n  // @ts-ignore\n  return webcrypto.subtle.importKey(\n    format,\n    key,\n    algo,\n    extractable,\n    usages\n  )\n  .then(function(cryptoKey) {\n    var jwt = idToken.split('.');\n    var payload = stringToBuffer(jwt[0] + '.' + jwt[1]);\n    var b64Signature = base64UrlDecode(jwt[2]);\n    var signature = stringToBuffer(b64Signature);\n\n    return webcrypto.subtle.verify(\n      algo,\n      cryptoKey,\n      signature,\n      payload\n    );\n  });\n}\n\n","/*!\n * Copyright (c) 2015-present, Okta, Inc. and/or its affiliates. All rights reserved.\n * The Okta software accompanied by this notice is provided pursuant to the Apache License, Version 2.0 (the \"License.\")\n *\n * You may obtain a copy of the License at http://www.apache.org/licenses/LICENSE-2.0.\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT\n * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n *\n * See the License for the specific language governing permissions and limitations under the License.\n */\n\nimport CustomError from './CustomError';\nimport { HttpResponse } from '../http/types';\nimport { APIError, FieldError } from './types';\n\nexport default class AuthApiError extends CustomError implements APIError {\n  errorSummary: string;\n  errorCode?: string;\n  errorLink?: string;\n  errorId?: string;\n  errorCauses?: Array<FieldError>;\n  xhr?: HttpResponse;\n  meta?: Record<string, string | number>;\n\n  constructor(err: APIError, xhr?: HttpResponse, meta?: Record<string, string | number>) {\n    const message = err.errorSummary;\n    super(message);\n\n    this.name = 'AuthApiError';\n    this.errorSummary = err.errorSummary;\n    this.errorCode = err.errorCode;\n    this.errorLink = err.errorLink;\n    this.errorId = err.errorId;\n    this.errorCauses = err.errorCauses;\n\n    if (xhr) {\n      this.xhr = xhr;\n    }\n\n    if (meta) {\n      this.meta = meta;\n    }\n  }\n}\n","/*!\n * Copyright (c) 2015-present, Okta, Inc. and/or its affiliates. All rights reserved.\n * The Okta software accompanied by this notice is provided pursuant to the Apache License, Version 2.0 (the \"License.\")\n *\n * You may obtain a copy of the License at http://www.apache.org/licenses/LICENSE-2.0.\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT\n * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n *\n * See the License for the specific language governing permissions and limitations under the License.\n */\n\nimport CustomError from './CustomError';\n\nexport default class AuthPollStopError extends CustomError {\n  constructor() {\n    const message = 'The poll was stopped by the sdk';\n    super(message);\n  }\n}\n","/*!\n * Copyright (c) 2015-present, Okta, Inc. and/or its affiliates. All rights reserved.\n * The Okta software accompanied by this notice is provided pursuant to the Apache License, Version 2.0 (the \"License.\")\n *\n * You may obtain a copy of the License at http://www.apache.org/licenses/LICENSE-2.0.\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT\n * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n *\n * See the License for the specific language governing permissions and limitations under the License.\n */\n\nimport CustomError from './CustomError';\nimport { APIError, FieldError } from './types';\n\nexport default class AuthSdkError extends CustomError implements APIError {\n  errorSummary: string;\n  errorCode: string;\n  errorLink: string;\n  errorId: string;\n  errorCauses: Array<FieldError>;\n  xhr?: XMLHttpRequest;\n\n  constructor(msg: string, xhr?: XMLHttpRequest) {\n    super(msg);\n    this.name = 'AuthSdkError';\n    this.errorCode = 'INTERNAL';\n    this.errorSummary = msg;\n    this.errorLink = 'INTERNAL';\n    this.errorId = 'INTERNAL';\n    this.errorCauses = [];\n    if (xhr) {\n      this.xhr = xhr;\n    }\n  }\n}\n","import setPrototypeOf from \"./setPrototypeOf.js\";\nimport isNativeReflectConstruct from \"./isNativeReflectConstruct.js\";\nexport default function _construct(Parent, args, Class) {\n  if (isNativeReflectConstruct()) {\n    _construct = Reflect.construct.bind();\n  } else {\n    _construct = function _construct(Parent, args, Class) {\n      var a = [null];\n      a.push.apply(a, args);\n      var Constructor = Function.bind.apply(Parent, a);\n      var instance = new Constructor();\n      if (Class) setPrototypeOf(instance, Class.prototype);\n      return instance;\n    };\n  }\n  return _construct.apply(null, arguments);\n}","export default function _isNativeReflectConstruct() {\n  if (typeof Reflect === \"undefined\" || !Reflect.construct) return false;\n  if (Reflect.construct.sham) return false;\n  if (typeof Proxy === \"function\") return true;\n  try {\n    Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {}));\n    return true;\n  } catch (e) {\n    return false;\n  }\n}","import getPrototypeOf from \"./getPrototypeOf.js\";\nimport setPrototypeOf from \"./setPrototypeOf.js\";\nimport isNativeFunction from \"./isNativeFunction.js\";\nimport construct from \"./construct.js\";\nexport default function _wrapNativeSuper(Class) {\n  var _cache = typeof Map === \"function\" ? new Map() : undefined;\n  _wrapNativeSuper = function _wrapNativeSuper(Class) {\n    if (Class === null || !isNativeFunction(Class)) return Class;\n    if (typeof Class !== \"function\") {\n      throw new TypeError(\"Super expression must either be null or a function\");\n    }\n    if (typeof _cache !== \"undefined\") {\n      if (_cache.has(Class)) return _cache.get(Class);\n      _cache.set(Class, Wrapper);\n    }\n    function Wrapper() {\n      return construct(Class, arguments, getPrototypeOf(this).constructor);\n    }\n    Wrapper.prototype = Object.create(Class.prototype, {\n      constructor: {\n        value: Wrapper,\n        enumerable: false,\n        writable: true,\n        configurable: true\n      }\n    });\n    return setPrototypeOf(Wrapper, Class);\n  };\n  return _wrapNativeSuper(Class);\n}","export default function _isNativeFunction(fn) {\n  return Function.toString.call(fn).indexOf(\"[native code]\") !== -1;\n}","/*!\n * Copyright (c) 2015-present, Okta, Inc. and/or its affiliates. All rights reserved.\n * The Okta software accompanied by this notice is provided pursuant to the Apache License, Version 2.0 (the \"License.\")\n *\n * You may obtain a copy of the License at http://www.apache.org/licenses/LICENSE-2.0.\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT\n * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n *\n * See the License for the specific language governing permissions and limitations under the License.\n */\n\nexport default class CustomError extends Error {\n  constructor(message: string) {\n    // https://stackoverflow.com/questions/41102060/typescript-extending-error-class\n    super(message); // 'Error' breaks prototype chain here\n    Object.setPrototypeOf(this, new.target.prototype); // restore prototype chain\n  }\n}\n","/* eslint-disable camelcase */\n/*!\n * Copyright (c) 2015-present, Okta, Inc. and/or its affiliates. All rights reserved.\n * The Okta software accompanied by this notice is provided pursuant to the Apache License, Version 2.0 (the \"License.\")\n *\n * You may obtain a copy of the License at http://www.apache.org/licenses/LICENSE-2.0.\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT\n * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n *\n * See the License for the specific language governing permissions and limitations under the License.\n */\n\nimport CustomError from './CustomError';\nimport type { HttpResponse } from '../http';\n\nexport default class OAuthError extends CustomError {\n  errorCode: string;\n  errorSummary: string;\n\n  // for widget / idx-js backward compatibility\n  error: string;\n  error_description: string;\n\n  resp: HttpResponse | null = null;\n\n  constructor(errorCode: string, summary: string, resp?: HttpResponse) {\n    super(summary);\n\n    this.name = 'OAuthError';\n    this.errorCode = errorCode;\n    this.errorSummary = summary;\n\n    // for widget / idx-js backward compatibility\n    this.error = errorCode;\n    this.error_description = summary;\n\n    // an OAuth error (should) always result from a network request\n    // therefore include that in error for potential error handling\n    if (resp) {\n      this.resp = resp;\n    }\n  }\n}\n\n","/*!\n * Copyright (c) 2015-present, Okta, Inc. and/or its affiliates. All rights reserved.\n * The Okta software accompanied by this notice is provided pursuant to the Apache License, Version 2.0 (the \"License.\")\n *\n * You may obtain a copy of the License at http://www.apache.org/licenses/LICENSE-2.0.\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT\n * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n *\n * See the License for the specific language governing permissions and limitations under the License.\n */\n\n\nimport type { HttpResponse } from '../http';\nimport CustomError from './CustomError';\nimport { isFunction } from '../util';\n\n// Error thrown after an unsuccessful network request which requires an Authorization header \n// and returns a 4XX error with a www-authenticate header. The header value is parsed to construct \n// an error instance, which contains key/value pairs parsed out\nexport default class WWWAuthError extends CustomError {\n  static UNKNOWN_ERROR = 'UNKNOWN_WWW_AUTH_ERROR';\n\n  scheme: string;\n  parameters: Record<string, string>;\n  name = 'WWWAuthError';\n\n  resp: HttpResponse | null = null;\n\n  constructor(scheme: string, parameters: Record<string, string>, resp?: HttpResponse) {\n    // defaults to unknown error. `error` being returned in the www-authenticate header is expected\n    // but cannot be guaranteed. Throwing an error within a error constructor seems awkward\n    super(parameters.error ?? WWWAuthError.UNKNOWN_ERROR);\n    this.scheme = scheme;\n    this.parameters = parameters;\n\n    if (resp) {\n      this.resp = resp;\n    }\n  }\n\n  // convenience references\n  get error (): string { return this.parameters.error; }\n  get errorCode (): string { return this.error; }                 // parity with other error props\n  // eslint-disable-next-line camelcase\n  get error_description (): string { return this.parameters.error_description; }\n  // eslint-disable-next-line camelcase\n  get errorDescription (): string { return this.error_description; }\n  get errorSummary (): string { return this.errorDescription; }   // parity with other error props\n  get realm (): string { return this.parameters.realm; }\n\n  // parses the www-authenticate header for releveant\n  static parseHeader (header: string): WWWAuthError | null {\n    // header cannot be empty string\n    if (!header) {\n      return null;\n    }\n\n    // example string: Bearer error=\"invalid_token\", error_description=\"The access token is invalid\"\n    // regex will match on `error=\"invalid_token\", error_description=\"The access token is invalid\"`\n    // see unit test for more examples of possible www-authenticate values\n    // eslint-disable-next-line max-len\n    const regex = /(?:,|, )?([a-zA-Z0-9!#$%&'*+\\-.^_`|~]+)=(?:\"([a-zA-Z0-9!#$%&'*+\\-.,^_`|~ /:]+)\"|([a-zA-Z0-9!#$%&'*+\\-.^_`|~/:]+))/g;\n    const firstSpace = header.indexOf(' ');\n    const scheme = header.slice(0, firstSpace);\n    const remaining = header.slice(firstSpace + 1);\n    const params = {};\n\n    // Reference: foo=\"hello\", bar=\"bye\"\n    // i=0, match=[foo=\"hello1\", foo, hello]\n    // i=1, match=[bar=\"bye\", bar, bye]\n    let match;\n    while ((match = regex.exec(remaining)) !== null) {\n      params[match[1]] = (match[2] ?? match[3]);\n    }\n\n    return new WWWAuthError(scheme, params);\n  }\n\n  // finds the value of the `www-authenticate` header. HeadersInit allows for a few different\n  // representations of headers with different access patterns (.get vs [key])\n  static getWWWAuthenticateHeader (headers: HeadersInit = {}): string | null {\n    if (isFunction((headers as Headers)?.get)) {\n      return (headers as Headers).get('WWW-Authenticate');\n    }\n    return headers['www-authenticate'] ?? headers['WWW-Authenticate'];\n  }\n}\n","\n/*!\n * Copyright (c) 2015-present, Okta, Inc. and/or its affiliates. All rights reserved.\n * The Okta software accompanied by this notice is provided pursuant to the Apache License, Version 2.0 (the \"License.\")\n *\n * You may obtain a copy of the License at http://www.apache.org/licenses/LICENSE-2.0.\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT\n * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n *\n * See the License for the specific language governing permissions and limitations under the License.\n */\n\nimport AuthApiError from './AuthApiError';\nimport AuthPollStopError from './AuthPollStopError';\nimport AuthSdkError from './AuthSdkError';\nimport OAuthError from './OAuthError';\nimport WWWAuthError from './WWWAuthError';\n\nfunction isAuthApiError(obj: any): obj is AuthApiError {\n  return (obj instanceof AuthApiError);\n}\n\nfunction isOAuthError(obj: any): obj is OAuthError {\n  return (obj instanceof OAuthError);\n}\n\nfunction isWWWAuthError(obj: any): obj is WWWAuthError {\n  return (obj instanceof WWWAuthError);\n}\n\nexport {\n  isAuthApiError,\n  isOAuthError,\n  isWWWAuthError,\n  AuthApiError,\n  AuthPollStopError,\n  AuthSdkError,\n  OAuthError,\n  WWWAuthError\n};\n\nexport * from './types';\n","/*!\n * Copyright (c) 2015-present, Okta, Inc. and/or its affiliates. All rights reserved.\n * The Okta software accompanied by this notice is provided pursuant to the Apache License, Version 2.0 (the \"License.\")\n *\n * You may obtain a copy of the License at http://www.apache.org/licenses/LICENSE-2.0.\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT\n * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n *\n * See the License for the specific language governing permissions and limitations under the License.\n */\n\n/* eslint-disable node/no-unsupported-features/node-builtins */\n/* global document, window, TextEncoder, navigator */\n\nimport { webcrypto } from './crypto';\n\nconst isWindowsPhone = /windows phone|iemobile|wpdesktop/i;\t\n\nexport function isBrowser() {\n  return typeof document !== 'undefined' && typeof window !== 'undefined';\n}\n\nexport function isIE11OrLess() {\n  if (!isBrowser()) {\n    return false;\n  }\n  const documentMode = (document as any).documentMode;\n  return !!documentMode && documentMode <= 11;\n}\n\nexport function getUserAgent() {\n  return navigator.userAgent;\n}\n\nexport function isFingerprintSupported() {\n  const agent = getUserAgent();\n  return agent && !isWindowsPhone.test(agent);\t\n}\n\nexport function isPopupPostMessageSupported() {\n  if (!isBrowser()) {\n    return false;\n  }\n  const documentMode = (document as any).documentMode;\n  var isIE8or9 = documentMode && documentMode < 10;\n  if (typeof window.postMessage !== 'undefined' && !isIE8or9) {\n    return true;\n  }\n  return false;\n}\n\nfunction isWebCryptoSubtleSupported () {\n  return typeof webcrypto !== 'undefined'\n    && webcrypto !== null\n    && typeof webcrypto.subtle !== 'undefined'\n    && typeof Uint8Array !== 'undefined';\n}\n\nexport function isTokenVerifySupported() {\n  return isWebCryptoSubtleSupported();\n}\n\nexport function hasTextEncoder() {\n  return typeof TextEncoder !== 'undefined';\n}\n\nexport function isPKCESupported() {\n  return isTokenVerifySupported() && hasTextEncoder();\n}\n\nexport function isHTTPS() {\n  if (!isBrowser()) {\n    return false;\n  }\n  return window.location.protocol === 'https:';\n}\n\nexport function isLocalhost() {\n  // eslint-disable-next-line compat/compat\n  return isBrowser() && window.location.hostname === 'localhost';\n}\n\n// For now, DPoP is only supported on browsers\nexport function isDPoPSupported () {\n  return !isIE11OrLess() &&\n    typeof window.indexedDB !== 'undefined' &&\n    hasTextEncoder() &&\n    isWebCryptoSubtleSupported();\n}\n\nexport function isIOS () {\n  // iOS detection from: http://stackoverflow.com/a/9039885/177710\n  return isBrowser() && typeof navigator !== 'undefined' && typeof navigator.userAgent !== 'undefined' &&\n    // @ts-expect-error - MSStream is not in `window` type, unsurprisingly\n    (/iPad|iPhone|iPod/.test(navigator.userAgent) && !window.MSStream);\n}\n","/*!\n * Copyright (c) 2015-present, Okta, Inc. and/or its affiliates. All rights reserved.\n * The Okta software accompanied by this notice is provided pursuant to the Apache License, Version 2.0 (the \"License.\")\n *\n * You may obtain a copy of the License at http://www.apache.org/licenses/LICENSE-2.0.\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT\n * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n *\n * See the License for the specific language governing permissions and limitations under the License.\n *\n */\n\n/* global SDK_VERSION */\n\nimport { isBrowser } from '../features';\nexport class OktaUserAgent {\n  environments: string[];\n\n  constructor() {\n    // add base sdk env\n    this.environments = [`okta-auth-js/${SDK_VERSION}`];\n    this.maybeAddNodeEnvironment();\n  }\n\n  addEnvironment(env: string) {\n    this.environments.push(env);\n  }\n\n  getHttpHeader() {\n    return { 'X-Okta-User-Agent-Extended': this.environments.join(' ') };\n  }\n\n  getVersion() {\n    return SDK_VERSION;\n  }\n\n  maybeAddNodeEnvironment() {\n    if (isBrowser() || !process || !process.versions) {\n      return;\n    }\n    const { node: version } = process.versions;\n    this.environments.push(`nodejs/${version}`);\n  }\n}\n","/*!\n * Copyright (c) 2015-present, Okta, Inc. and/or its affiliates. All rights reserved.\n * The Okta software accompanied by this notice is provided pursuant to the Apache License, Version 2.0 (the \"License.\")\n *\n * You may obtain a copy of the License at http://www.apache.org/licenses/LICENSE-2.0.\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT\n * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n *\n * See the License for the specific language governing permissions and limitations under the License.\n *\n */\nimport { OktaAuthHttpInterface } from './types';\n\nexport function setRequestHeader(authClient: OktaAuthHttpInterface, headerName, headerValue) {\n  authClient.options.headers = authClient.options.headers || {};\n  authClient.options.headers[headerName] = headerValue;\n}","import { OktaAuthStorageInterface, StorageManagerInterface } from '../storage/types';\nimport { OktaAuthConstructor } from '../base/types';\nimport {\n  HttpAPI,\n  OktaAuthHttpInterface,\n  OktaAuthHttpOptions,\n} from './types';\nimport { OktaUserAgent } from './OktaUserAgent';\nimport { setRequestHeader } from './headers';\nimport { toQueryString } from '../util';\nimport { get } from './request';\n\nexport function mixinHttp\n<\n  S extends StorageManagerInterface = StorageManagerInterface,\n  O extends OktaAuthHttpOptions = OktaAuthHttpOptions,\n  TBase extends OktaAuthConstructor<OktaAuthStorageInterface<S, O>>\n    = OktaAuthConstructor<OktaAuthStorageInterface<S, O>>\n>\n(Base: TBase): TBase & OktaAuthConstructor<OktaAuthHttpInterface<S, O>>\n{\n  return class OktaAuthHttp extends Base implements OktaAuthHttpInterface<S, O>\n  {\n    _oktaUserAgent: OktaUserAgent;\n    http: HttpAPI;\n    \n    constructor(...args: any[]) {\n      super(...args);\n\n      this._oktaUserAgent = new OktaUserAgent();\n\n      // HTTP\n      this.http = {\n        setRequestHeader: setRequestHeader.bind(null, this)\n      };\n    }\n\n    setHeaders(headers) {\n      this.options.headers = Object.assign({}, this.options.headers, headers);\n    }\n  \n    getIssuerOrigin(): string {\n      // Infer the URL from the issuer URL, omitting the /oauth2/{authServerId}\n      // eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n      return this.options.issuer!.split('/oauth2/')[0];\n    }\n  \n    webfinger(opts): Promise<object> {\n      var url = '/.well-known/webfinger' + toQueryString(opts);\n      var options = {\n        headers: {\n          'Accept': 'application/jrd+json'\n        }\n      };\n      return get(this, url, options);\n    }\n  };\n}\n","/*!\n * Copyright (c) 2018-present, Okta, Inc. and/or its affiliates. All rights reserved.\n * The Okta software accompanied by this notice is provided pursuant to the Apache License, Version 2.0 (the \"License.\")\n *\n * You may obtain a copy of the License at http://www.apache.org/licenses/LICENSE-2.0.\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT\n * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n *\n * See the License for the specific language governing permissions and limitations under the License.\n */\n\nimport crossFetch from 'cross-fetch';\nimport { FetchOptions, HttpResponse } from '../http/types';\n\n// content-type = application/json OR application/ion+json\nconst appJsonContentTypeRegex = /application\\/\\w*\\+?json/;\n\nfunction readData(response: Response): Promise<object | string> {\n  if (response.headers.get('Content-Type') &&\n    // eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n    response.headers.get('Content-Type')!.toLowerCase().indexOf('application/json') >= 0) {\n  return response.json()\n    // JSON parse can fail if response is not a valid object\n    .catch(e => {\n      return {\n        error: e,\n        errorSummary: 'Could not parse server response'\n      };\n    });\n  } else {\n    return response.text();\n  }\n}\n\nfunction formatResult(status: number, data: object | string, response: Response) {\n  const isObject = typeof data === 'object';\n  const headers = {};\n  for (const pair of (response.headers as any).entries()) {\n    headers[pair[0]] = pair[1];\n  }\n  const result: HttpResponse = {\n    responseText: isObject ? JSON.stringify(data) : data as string,\n    status: status,\n    headers\n  };\n  if (isObject) {\n    result.responseType = 'json';\n    result.responseJSON = data as object;\n  }\n  return result;\n}\n\n/* eslint-disable complexity */\nfunction fetchRequest(method: string, url: string, args: FetchOptions) {\n  var body = args.data;\n  var headers = args.headers || {};\n  var contentType = (headers['Content-Type'] || headers['content-type'] || '');\n\n  if (body && typeof body !== 'string') {\n    // JSON encode body (if appropriate)\n    if (appJsonContentTypeRegex.test(contentType)) {\n      body = JSON.stringify(body);\n    }\n    else if (contentType === 'application/x-www-form-urlencoded') {\n      body = Object.entries(body)\n      .map( ([param, value]) => `${param}=${encodeURIComponent(value)}` )\n      .join('&');\n    }\n  }\n\n  var fetch = global.fetch || crossFetch;\n  var fetchPromise = fetch(url, {\n    method: method,\n    headers: args.headers,\n    body: body as string,\n    credentials: args.withCredentials ? 'include' : 'omit'\n  });\n\n  if (!fetchPromise.finally) {\n    fetchPromise = Promise.resolve(fetchPromise);\n  }\n\n  return fetchPromise.then(function(response) {\n    var error = !response.ok;\n    var status = response.status;\n    return readData(response)\n      .then(data => {\n        return formatResult(status, data, response);\n      })\n      .then(result => {\n        if (error || result.responseJSON?.error) {\n          // Throwing result object since error handling is done in http.js\n          throw result;\n        }\n        return result;\n      });\n  });\n}\n\nexport default fetchRequest;\n","/*!\n * Copyright (c) 2015-present, Okta, Inc. and/or its affiliates. All rights reserved.\n * The Okta software accompanied by this notice is provided pursuant to the Apache License, Version 2.0 (the \"License.\")\n *\n * You may obtain a copy of the License at http://www.apache.org/licenses/LICENSE-2.0.\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT\n * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * \n * See the License for the specific language governing permissions and limitations under the License.\n */\n\nimport { createStorageOptionsConstructor } from '../storage';\nimport { HttpRequestClient, OktaAuthHttpOptions, RequestOptions } from './types';\nimport fetchRequest from '../fetch/fetchRequest';\n\nexport function createHttpOptionsConstructor() {\n  const StorageOptionsConstructor = createStorageOptionsConstructor();\n  return class HttpOptionsConstructor extends StorageOptionsConstructor implements Required<OktaAuthHttpOptions> {\n    issuer: string;\n    transformErrorXHR: (xhr: object) => any;\n    headers: object;\n    httpRequestClient: HttpRequestClient;\n    httpRequestInterceptors: ((request: RequestOptions) => void)[];\n    \n    constructor(args: any) {\n      super(args);\n      this.issuer = args.issuer;\n      this.transformErrorXHR = args.transformErrorXHR;\n      this.headers = args.headers;\n      this.httpRequestClient = args.httpRequestClient || fetchRequest;\n      this.httpRequestInterceptors = args.httpRequestInterceptors;\n    }\n  };\n}\n","/* eslint-disable @typescript-eslint/no-non-null-assertion */\n/*!\n * Copyright (c) 2015-present, Okta, Inc. and/or its affiliates. All rights reserved.\n * The Okta software accompanied by this notice is provided pursuant to the Apache License, Version 2.0 (the \"License.\")\n *\n * You may obtain a copy of the License at http://www.apache.org/licenses/LICENSE-2.0.\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT\n * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n *\n * See the License for the specific language governing permissions and limitations under the License.\n *\n */\n\n/* eslint-disable complexity */\nimport { isString, clone, isAbsoluteUrl, removeNils } from '../util';\nimport { STATE_TOKEN_KEY_NAME, DEFAULT_CACHE_DURATION } from '../constants';\nimport {\n  OktaAuthHttpInterface,\n  RequestOptions,\n  FetchOptions,\n  RequestData,\n  HttpResponse\n} from './types';\nimport { AuthApiError, OAuthError, APIError, WWWAuthError } from '../errors';\n\n\nconst formatError = (sdk: OktaAuthHttpInterface, error: HttpResponse | Error): AuthApiError | OAuthError => {\n  if (error instanceof Error) {\n    // fetch() can throw exceptions\n    // see https://developer.mozilla.org/en-US/docs/Web/API/fetch#exceptions\n    return new AuthApiError({\n      errorSummary: error.message,\n    });\n  }\n\n  let resp: HttpResponse = error;\n  let err: AuthApiError | OAuthError | WWWAuthError;\n  let serverErr: Record<string, any> = {};\n  if (resp.responseText && isString(resp.responseText)) {\n    try {\n      serverErr = JSON.parse(resp.responseText);\n    } catch (e) {\n      serverErr = {\n        errorSummary: 'Unknown error'\n      };\n    }\n  }\n\n  if (resp.status >= 500) {\n    serverErr.errorSummary = 'Unknown error';\n  }\n\n  if (sdk.options.transformErrorXHR) {\n    resp = sdk.options.transformErrorXHR(clone(resp));\n  }\n\n  // \n  const wwwAuthHeader = WWWAuthError.getWWWAuthenticateHeader(resp?.headers) ?? '';\n\n  if (serverErr.error && serverErr.error_description) {\n    err = new OAuthError(serverErr.error, serverErr.error_description, resp);\n  } else {\n    err = new AuthApiError(serverErr as APIError, resp, { wwwAuthHeader });\n  }\n\n  if (wwwAuthHeader && resp?.status >= 400 && resp?.status < 500) {\n    const wwwAuthErr = WWWAuthError.parseHeader(wwwAuthHeader);\n    // check for 403 to avoid breaking change\n    if (resp.status === 403 && wwwAuthErr?.error === 'insufficient_authentication_context') {\n      // eslint-disable-next-line camelcase\n      const { max_age, acr_values } = wwwAuthErr.parameters;\n      err = new AuthApiError(\n        {\n          errorSummary: wwwAuthErr.error,\n          errorCauses: [{ errorSummary: wwwAuthErr.errorDescription }]\n        },\n        resp,\n        {\n          // eslint-disable-next-line camelcase\n          max_age: +max_age,\n          // eslint-disable-next-line camelcase\n          ...(acr_values && { acr_values })\n        }\n      );\n    }\n    else if (wwwAuthErr?.scheme === 'DPoP') {\n      err = wwwAuthErr;\n    }\n    // else {\n    //   // WWWAuthError.parseHeader may return null, only overwrite if !null\n    //   err = wwwAuthErr ?? err;\n    // }\n  }\n\n  return err;\n};\n\nexport function httpRequest(sdk: OktaAuthHttpInterface, options: RequestOptions): Promise<any> {\n  options = options || {};\n\n  if (sdk.options.httpRequestInterceptors) {\n    for (const interceptor of sdk.options.httpRequestInterceptors) {\n      interceptor(options);\n    }\n  }\n\n  var url = options.url,\n      method = options.method,\n      args = options.args,\n      saveAuthnState = options.saveAuthnState,\n      accessToken = options.accessToken,\n      withCredentials = options.withCredentials === true, // default value is false\n      storageUtil = sdk.options.storageUtil,\n      storage = storageUtil!.storage,\n      httpCache = sdk.storageManager.getHttpCache(sdk.options.cookies);\n\n  if (options.cacheResponse) {\n    var cacheContents = httpCache.getStorage();\n    var cachedResponse = cacheContents[url as string];\n    if (cachedResponse && Date.now()/1000 < cachedResponse.expiresAt) {\n      return Promise.resolve(cachedResponse.response);\n    }\n  }\n\n  var oktaUserAgentHeader = sdk._oktaUserAgent.getHttpHeader();\n  var headers: HeadersInit = {\n    'Accept': 'application/json',\n    'Content-Type': 'application/json',\n    ...oktaUserAgentHeader\n  };\n  Object.assign(headers, sdk.options.headers, options.headers);\n  headers = removeNils(headers) as HeadersInit;\n\n  if (accessToken && isString(accessToken)) {\n    headers['Authorization'] = 'Bearer ' + accessToken;\n  }\n\n  var ajaxOptions: FetchOptions = {\n    headers,\n    data: args || undefined,\n    withCredentials\n  };\n\n  var err, res;\n  return sdk.options.httpRequestClient!(method!, url!, ajaxOptions)\n    .then(function(resp) {\n      res = resp.responseText;\n      if (res && isString(res)) {\n        res = JSON.parse(res);\n        if (res && typeof res === 'object' && !res.headers) {\n          if (Array.isArray(res)) {\n            res.forEach(item => {\n              item.headers = resp.headers;\n            });\n          } else {\n            res.headers = resp.headers;\n          }\n        }\n      }\n\n      if (saveAuthnState) {\n        if (!res.stateToken) {\n          storage.delete(STATE_TOKEN_KEY_NAME);\n        }\n      }\n\n      if (res && res.stateToken && res.expiresAt) {\n        storage.set(STATE_TOKEN_KEY_NAME, res.stateToken, res.expiresAt, sdk.options.cookies!);\n      }\n\n      if (res && options.cacheResponse) {\n        httpCache.updateStorage(url!, {\n          expiresAt: Math.floor(Date.now()/1000) + DEFAULT_CACHE_DURATION,\n          response: res\n        });\n      }\n      \n      return res;\n    })\n    .catch(function(resp) {\n      err = formatError(sdk, resp);\n\n      if (err.errorCode === 'E0000011') {\n        storage.delete(STATE_TOKEN_KEY_NAME);\n      }\n\n      throw err;\n    });\n}\n\nexport function get(sdk: OktaAuthHttpInterface, url: string, options?: RequestOptions) {\n  url = isAbsoluteUrl(url) ? url : sdk.getIssuerOrigin() + url;\n  var getOptions = {\n    url: url,\n    method: 'GET'\n  };\n  Object.assign(getOptions, options);\n  return httpRequest(sdk, getOptions);\n}\n\nexport function post(sdk: OktaAuthHttpInterface, url: string, args?: RequestData, options?: RequestOptions) {\n  url = isAbsoluteUrl(url) ? url : sdk.getIssuerOrigin() + url;\n  var postOptions = {\n    url: url,\n    method: 'POST',\n    args: args,\n    saveAuthnState: true\n  };\n  Object.assign(postOptions, options);\n  return httpRequest(sdk, postOptions);\n}\n","import { ClearTransactionMetaOptions, TransactionManagerOptions } from '../oidc/types';\nimport { createTransactionManager } from '../oidc/TransactionManager';\nimport { IdxTransactionMeta, IntrospectOptions } from './types';\nimport { isRawIdxResponse } from './types/idx-js';\nimport { IdxStorageManagerInterface, SavedIdxResponse } from './types/storage';\n\nexport function createIdxTransactionManager\n<\n  M extends IdxTransactionMeta = IdxTransactionMeta,\n  S extends IdxStorageManagerInterface<M> = IdxStorageManagerInterface<M>\n>\n()\n{\n  const TransactionManager = createTransactionManager<M, S>();\n  return class IdxTransactionManager extends TransactionManager\n  {\n    constructor(options: TransactionManagerOptions) {\n      super(options);\n    }\n\n    clear(options: ClearTransactionMetaOptions = {}) {\n      super.clear(options);\n\n      if (options.clearIdxResponse !== false) {\n        this.clearIdxResponse();\n      }\n    }\n    \n    saveIdxResponse(data: SavedIdxResponse): void {\n      if (!this.saveLastResponse) {\n        return;\n      }\n      const storage = this.storageManager.getIdxResponseStorage();\n      if (!storage) {\n        return;\n      }\n      storage.setStorage(data);\n    }\n\n    // eslint-disable-next-line complexity\n    loadIdxResponse(options?: IntrospectOptions): SavedIdxResponse | null {\n      if (!this.saveLastResponse) {\n        return null;\n      }\n      const storage = this.storageManager.getIdxResponseStorage();\n      if (!storage) {\n        return null;\n      }\n      const storedValue = storage.getStorage();\n      if (!storedValue || !isRawIdxResponse(storedValue.rawIdxResponse)) {\n        return null;\n      }\n\n      if (options) {\n        const { stateHandle, interactionHandle } = options;\n        // only perform this check if NOT using generic remediator\n        if (!options.useGenericRemediator && stateHandle && storedValue.stateHandle !== stateHandle) {\n          return null;\n        }\n        if (interactionHandle && storedValue.interactionHandle !== interactionHandle) {\n          return null;\n        }\n      }\n\n      return storedValue;\n    }\n\n    clearIdxResponse(): void {\n      if (!this.saveLastResponse) {\n        return;\n      }\n      const storage = this.storageManager.getIdxResponseStorage();\n      storage?.clearStorage();\n    }\n  };\n}\n","/*!\n * Copyright (c) 2015-present, Okta, Inc. and/or its affiliates. All rights reserved.\n * The Okta software accompanied by this notice is provided pursuant to the Apache License, Version 2.0 (the \"License.\")\n *\n * You may obtain a copy of the License at http://www.apache.org/licenses/LICENSE-2.0.\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT\n * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * \n * See the License for the specific language governing permissions and limitations under the License.\n */\n\n\nimport { \n  OktaAuthIdxInterface,\n  IdxTransaction,\n  AuthenticatorKey,\n  AuthenticationOptions\n} from './types';\nimport { run } from './run';\n\nexport async function authenticate(\n  authClient: OktaAuthIdxInterface, options: AuthenticationOptions = {}\n): Promise<IdxTransaction> {\n  if (options.password && !options.authenticator) {\n    options.authenticator = AuthenticatorKey.OKTA_PASSWORD;\n  }\n  return run(authClient, { \n    ...options, \n    flow: 'authenticate'\n  });\n}\n","import { IdxAuthenticator, IdxRemediationValue } from '../types/idx-js';\n\n\nexport interface Credentials {\n  [key: string]: string | boolean | number | undefined;\n}\n\nexport abstract class Authenticator<Values> {\n  meta: IdxAuthenticator;\n\n  constructor(authenticator: IdxAuthenticator) {\n    this.meta = authenticator;\n  }\n\n  abstract canVerify(values: Values): boolean;\n\n  abstract mapCredentials(values: Values): Credentials | undefined;\n\n  abstract getInputs(idxRemediationValue: IdxRemediationValue): any; // TODO: add type\n}\n","import { Authenticator, Credentials } from './Authenticator';\n\nexport interface OktaPasswordInputValues {\n  password?: string;\n  passcode?: string;\n  credentials?: Credentials;\n  // for ResetAuthenticator\n  revokeSessions?: boolean;\n}\n\nexport class OktaPassword extends Authenticator<OktaPasswordInputValues> {\n  canVerify(values: OktaPasswordInputValues) {\n    return !!(values.credentials || values.password || values.passcode);\n  }\n\n  mapCredentials(values: OktaPasswordInputValues): Credentials | undefined {\n    const { credentials, password, passcode, revokeSessions } = values;\n    if (!credentials && !password && !passcode) {\n      return;\n    }\n    return credentials || {\n      passcode: passcode || password,\n      revokeSessions,\n    };\n  }\n\n  getInputs(idxRemediationValue) {\n    const inputs = [{\n      ...idxRemediationValue.form?.value[0],\n      name: 'password',\n      type: 'string',\n      required: idxRemediationValue.required,\n    }];\n    const revokeSessions = idxRemediationValue.form?.value.find(\n      input => input.name === 'revokeSessions'\n    );\n    if (revokeSessions) {\n      inputs.push({\n        name: 'revokeSessions',\n        type: 'boolean',\n        label: 'Sign me out of all other devices',\n        required: false,\n      });\n    }\n    return inputs;\n  }\n}\n","import { Authenticator, isAuthenticator } from '../types';\n\nexport function formatAuthenticator(incoming: unknown): Authenticator {\n  let authenticator: Authenticator;\n  if  (isAuthenticator(incoming)) {\n    authenticator = incoming;\n  } else if (typeof incoming === 'string') {\n    authenticator = {\n      key: incoming\n    };\n  } else {\n    throw new Error('Invalid format for authenticator');\n  }\n  return authenticator;\n}\n\n// Returns true if the authenticators are equivalent\nexport function compareAuthenticators(auth1, auth2) {\n  if (!auth1 || !auth2) {\n    return false;\n  }\n  // by id\n  if (auth1.id && auth2.id) {\n    return (auth1.id === auth2.id);\n  }\n  // by key\n  if (auth1.key && auth2.key) {\n    return (auth1.key === auth2.key);\n  }\n  return false;\n}\n\n// Find matched authenticator in provided order\nexport function findMatchedOption(authenticators, options) {\n  let option;\n  for (let authenticator of authenticators) {\n    option = options\n      .find(({ relatesTo }) => relatesTo.key && relatesTo.key === authenticator.key);\n    if (option) {\n      break;\n    }\n  }\n  return option;\n}","/*!\n * Copyright (c) 2021, Okta, Inc. and/or its affiliates. All rights reserved.\n * The Okta software accompanied by this notice is provided pursuant to the Apache License, Version 2.0 (the \"License.\")\n *\n * You may obtain a copy of the License at http://www.apache.org/licenses/LICENSE-2.0.\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT\n * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n *\n * See the License for the specific language governing permissions and limitations under the License.\n */\n\nimport { OktaAuthIdxInterface, CancelOptions, IdxTransactionMeta } from './types';\nimport { run } from './run';\nimport { getFlowSpecification } from './flow';\n\nexport async function cancel (authClient: OktaAuthIdxInterface, options?: CancelOptions) {\n  const meta = authClient.transactionManager.load() as IdxTransactionMeta;\n  const flowSpec = getFlowSpecification(authClient, meta.flow);\n  return run(authClient, {\n    ...options,\n    ...flowSpec,\n    actions: ['cancel']\n  });\n}\n","\n/*!\n * Copyright (c) 2015-present, Okta, Inc. and/or its affiliates. All rights reserved.\n * The Okta software accompanied by this notice is provided pursuant to the Apache License, Version 2.0 (the \"License.\")\n *\n * You may obtain a copy of the License at http://www.apache.org/licenses/LICENSE-2.0.\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT\n * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n *\n * See the License for the specific language governing permissions and limitations under the License.\n */\n\nimport { OktaAuthIdxInterface } from './types';\n\nimport CustomError from '../errors/CustomError';\nimport { urlParamsToObject  } from '../oidc/util/urlParams';\nimport { EmailVerifyCallbackResponse } from './types/api';\n\nexport class EmailVerifyCallbackError extends CustomError {\n  state: string;\n  otp: string;\n\n  constructor(state: string, otp: string) {\n    super(`Enter the OTP code in the originating client: ${otp}`);\n    this.name = 'EmailVerifyCallbackError';\n    this.state = state;\n    this.otp = otp;\n  }\n}\n\nexport function isEmailVerifyCallbackError(error: Error) {\n  return (error.name === 'EmailVerifyCallbackError');\n}\n\n// Check if state && otp have been passed back in the url\nexport function isEmailVerifyCallback (urlPath: string): boolean {\n  return /(otp=)/i.test(urlPath) && /(state=)/i.test(urlPath);\n}\n\n// Parse state and otp from a urlPath (should be either a search or fragment from the URL)\nexport function parseEmailVerifyCallback(urlPath: string): EmailVerifyCallbackResponse {\n  return urlParamsToObject(urlPath) as EmailVerifyCallbackResponse;\n}\n\nexport async function handleEmailVerifyCallback(authClient: OktaAuthIdxInterface, search: string) {\n  if (isEmailVerifyCallback(search)) {\n    const { state, otp } = parseEmailVerifyCallback(search);\n    if (authClient.idx.canProceed({ state })) {\n      // same browser / device\n      return await authClient.idx.proceed({ state, otp });\n    } else {\n      // different browser or device\n      throw new EmailVerifyCallbackError(state, otp);\n    }\n  }\n}\n","import { createOktaAuthCore } from '../../core/factory';\nimport { OktaAuthOptionsConstructor } from '../../base/types';\nimport { StorageManagerConstructor } from '../../storage/types';\nimport { IdxTransactionManagerInterface, OktaAuthIdxInterface, OktaAuthIdxConstructor } from '../types/api';\nimport { IdxTransactionMeta } from '../types/meta';\nimport { IdxStorageManagerInterface } from '../types/storage';\nimport { OktaAuthIdxOptions } from '../types/options';\nimport { mixinIdx } from '../mixin';\nimport { TransactionManagerConstructor } from '../../oidc/types';\nimport { OktaAuthCoreInterface } from '../../core/types';\n\nexport function createOktaAuthIdx<\n  M extends IdxTransactionMeta = IdxTransactionMeta,\n  S extends IdxStorageManagerInterface<M> = IdxStorageManagerInterface<M>,\n  O extends OktaAuthIdxOptions = OktaAuthIdxOptions,\n  TM extends IdxTransactionManagerInterface = IdxTransactionManagerInterface\n>(\n  StorageManagerConstructor: StorageManagerConstructor<S>,\n  OptionsConstructor: OktaAuthOptionsConstructor<O>,\n  TransactionManagerConstructor: TransactionManagerConstructor<TM>\n)\n: OktaAuthIdxConstructor<OktaAuthIdxInterface<M, S, O, TM> & OktaAuthCoreInterface<M, S, O, TM>>\n{\n  const Core = createOktaAuthCore<M, S, O, TM>(\n    StorageManagerConstructor,\n    OptionsConstructor,\n    TransactionManagerConstructor\n  );\n  const WithIdx = mixinIdx(Core);\n  return WithIdx;\n}\n","/*!\n * Copyright (c) 2015-present, Okta, Inc. and/or its affiliates. All rights reserved.\n * The Okta software accompanied by this notice is provided pursuant to the Apache License, Version 2.0 (the \"License.\")\n *\n * You may obtain a copy of the License at http://www.apache.org/licenses/LICENSE-2.0.\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT\n * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n *\n * See the License for the specific language governing permissions and limitations under the License.\n *\n */\n\nimport { isInteractionRequired, isInteractionRequiredError } from '../../oidc';\nimport { authenticate } from '../authenticate';\nimport { cancel } from '../cancel';\nimport {\n  handleEmailVerifyCallback,\n  isEmailVerifyCallback,\n  isEmailVerifyCallbackError,\n  parseEmailVerifyCallback\n} from '../emailVerify';\nimport { handleInteractionCodeRedirect } from '../handleInteractionCodeRedirect';\nimport { makeIdxState } from '../idxState';\nimport { interact } from '../interact';\nimport { introspect } from '../introspect';\nimport { poll } from '../poll';\nimport { canProceed, proceed } from '../proceed';\nimport { recoverPassword } from '../recoverPassword';\nimport { register } from '../register';\nimport { startTransaction } from '../startTransaction';\nimport {\n  clearTransactionMeta,\n  createTransactionMeta,\n  getSavedTransactionMeta,\n  getTransactionMeta,\n  isTransactionMetaValid,\n  saveTransactionMeta\n} from '../transactionMeta';\nimport { FlowIdentifier, IdxAPI, OktaAuthIdxInterface } from '../types';\nimport { unlockAccount } from '../unlockAccount';\nimport * as remediators from '../remediators';\nimport { getFlowSpecification } from '../flow/FlowSpecification';\nimport { setRemediatorsCtx } from '../util';\n\n// Factory\nexport function createIdxAPI(sdk: OktaAuthIdxInterface): IdxAPI {\n  setRemediatorsCtx({\n    remediators,\n    getFlowSpecification,\n  });\n  const boundStartTransaction = startTransaction.bind(null, sdk);\n  const idx = {\n    interact: interact.bind(null, sdk),\n    introspect: introspect.bind(null, sdk),\n    makeIdxResponse: makeIdxState.bind(null, sdk),\n    \n    authenticate: authenticate.bind(null, sdk),\n    register: register.bind(null, sdk),\n    start: boundStartTransaction,\n    startTransaction: boundStartTransaction, // Use `start` instead. `startTransaction` will be removed in 7.0\n    poll: poll.bind(null, sdk),\n    proceed: proceed.bind(null, sdk),\n    cancel: cancel.bind(null, sdk),\n    recoverPassword: recoverPassword.bind(null, sdk),\n\n    // oauth redirect callback\n    handleInteractionCodeRedirect: handleInteractionCodeRedirect.bind(null, sdk),\n\n    // interaction required callback\n    isInteractionRequired: isInteractionRequired.bind(null, sdk),\n    isInteractionRequiredError,\n\n    // email verify callback\n    handleEmailVerifyCallback: handleEmailVerifyCallback.bind(null, sdk),\n    isEmailVerifyCallback,\n    parseEmailVerifyCallback,\n    isEmailVerifyCallbackError,\n    \n    getSavedTransactionMeta: getSavedTransactionMeta.bind(null, sdk),\n    createTransactionMeta: createTransactionMeta.bind(null, sdk),\n    getTransactionMeta: getTransactionMeta.bind(null, sdk),\n    saveTransactionMeta: saveTransactionMeta.bind(null, sdk),\n    clearTransactionMeta: clearTransactionMeta.bind(null, sdk),\n    isTransactionMetaValid,\n    setFlow: (flow: FlowIdentifier) => {\n      sdk.options.flow = flow;\n    },\n    getFlow: (): FlowIdentifier | undefined => {\n      return sdk.options.flow;\n    },\n    canProceed: canProceed.bind(null, sdk),\n    unlockAccount: unlockAccount.bind(null, sdk),\n  };\n  return idx;\n}\n\n","/*!\n * Copyright (c) 2015-present, Okta, Inc. and/or its affiliates. All rights reserved.\n * The Okta software accompanied by this notice is provided pursuant to the Apache License, Version 2.0 (the \"License.\")\n *\n * You may obtain a copy of the License at http://www.apache.org/licenses/LICENSE-2.0.\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT\n * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * \n * See the License for the specific language governing permissions and limitations under the License.\n */\n\n\nimport { RemediationFlow } from './RemediationFlow';\nimport { \n  Identify,\n  SelectAuthenticatorAuthenticate,\n  ChallengeAuthenticator,\n  ReEnrollAuthenticator,\n  ReEnrollAuthenticatorWarning,\n  RedirectIdp,\n  AuthenticatorEnrollmentData,\n  SelectAuthenticatorEnroll,\n  EnrollAuthenticator,\n  AuthenticatorVerificationData,\n  EnrollPoll,\n  ChallengePoll,\n  SelectEnrollmentChannel,\n  EnrollmentChannelData,\n  Skip\n} from '../remediators';\n\nexport const AuthenticationFlow: RemediationFlow = {\n  'identify': Identify,\n  'select-authenticator-authenticate': SelectAuthenticatorAuthenticate,\n  'select-authenticator-enroll': SelectAuthenticatorEnroll,\n  'authenticator-enrollment-data': AuthenticatorEnrollmentData,\n  'authenticator-verification-data': AuthenticatorVerificationData,\n  'enroll-authenticator': EnrollAuthenticator,\n  'challenge-authenticator': ChallengeAuthenticator,\n  'challenge-poll': ChallengePoll,\n  'reenroll-authenticator': ReEnrollAuthenticator,\n  'reenroll-authenticator-warning': ReEnrollAuthenticatorWarning,\n  'enroll-poll': EnrollPoll,\n  'select-enrollment-channel': SelectEnrollmentChannel,\n  'enrollment-channel-data': EnrollmentChannelData,\n  'redirect-idp': RedirectIdp,\n  'skip': Skip,\n};\n","/*!\n * Copyright (c) 2015-present, Okta, Inc. and/or its affiliates. All rights reserved.\n * The Okta software accompanied by this notice is provided pursuant to the Apache License, Version 2.0 (the \"License.\")\n *\n * You may obtain a copy of the License at http://www.apache.org/licenses/LICENSE-2.0.\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT\n * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * \n * See the License for the specific language governing permissions and limitations under the License.\n */\n\n\nimport { RemediationFlow } from './RemediationFlow';\nimport {\n  Identify,\n  SelectAuthenticatorAuthenticate,\n  ChallengeAuthenticator,\n  AuthenticatorVerificationData,\n  ResetAuthenticator,\n  ReEnrollAuthenticator,\n  ReEnrollAuthenticatorWarning,\n  SelectAuthenticatorEnroll,\n  AuthenticatorEnrollmentData,\n  EnrollPoll\n} from '../remediators';\n\nexport const PasswordRecoveryFlow: RemediationFlow = {\n  'identify': Identify,\n  'identify-recovery': Identify,\n  'select-authenticator-authenticate': SelectAuthenticatorAuthenticate,\n  'select-authenticator-enroll': SelectAuthenticatorEnroll,\n  'challenge-authenticator': ChallengeAuthenticator,\n  'authenticator-verification-data': AuthenticatorVerificationData,\n  'authenticator-enrollment-data': AuthenticatorEnrollmentData,\n  'reset-authenticator': ResetAuthenticator,\n  'reenroll-authenticator': ReEnrollAuthenticator,\n  'reenroll-authenticator-warning': ReEnrollAuthenticatorWarning,\n  'enroll-poll': EnrollPoll,\n};\n","/*!\n * Copyright (c) 2015-present, Okta, Inc. and/or its affiliates. All rights reserved.\n * The Okta software accompanied by this notice is provided pursuant to the Apache License, Version 2.0 (the \"License.\")\n *\n * You may obtain a copy of the License at http://www.apache.org/licenses/LICENSE-2.0.\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT\n * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * \n * See the License for the specific language governing permissions and limitations under the License.\n */\n\n\nimport { RemediationFlow } from './RemediationFlow';\nimport { \n  SelectEnrollProfile,\n  EnrollPoll,\n  SelectEnrollmentChannel,\n  EnrollmentChannelData,\n  EnrollProfile,\n  SelectAuthenticatorEnroll,\n  EnrollAuthenticator,\n  AuthenticatorEnrollmentData,\n  Skip,\n} from '../remediators';\n\nexport const RegistrationFlow: RemediationFlow = {\n  'select-enroll-profile': SelectEnrollProfile,\n  'enroll-profile': EnrollProfile,\n  'authenticator-enrollment-data': AuthenticatorEnrollmentData,\n  'select-authenticator-enroll': SelectAuthenticatorEnroll,\n  'enroll-poll': EnrollPoll,\n  'select-enrollment-channel': SelectEnrollmentChannel,\n  'enrollment-channel-data': EnrollmentChannelData,\n  'enroll-authenticator': EnrollAuthenticator,\n  'skip': Skip,\n};\n","/*!\n * Copyright (c) 2015-present, Okta, Inc. and/or its affiliates. All rights reserved.\n * The Okta software accompanied by this notice is provided pursuant to the Apache License, Version 2.0 (the \"License.\")\n *\n * You may obtain a copy of the License at http://www.apache.org/licenses/LICENSE-2.0.\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT\n * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * \n * See the License for the specific language governing permissions and limitations under the License.\n */\n\n\nimport { RemediationFlow } from './RemediationFlow';\nimport {\n  Identify,\n  SelectAuthenticatorUnlockAccount,\n  SelectAuthenticatorAuthenticate,\n  ChallengeAuthenticator,\n  ChallengePoll,\n  AuthenticatorVerificationData,\n  ReEnrollAuthenticatorWarning\n} from '../remediators';\n\nexport const AccountUnlockFlow: RemediationFlow = {\n  'identify': Identify,\n  // NOTE: unlock-account is purposely not included. Handled as action\n  // because it's a rememdiation which requires no input\n  // 'unlock-account': UnlockAccount,\n  'select-authenticator-unlock-account': SelectAuthenticatorUnlockAccount,\n  'select-authenticator-authenticate': SelectAuthenticatorAuthenticate,\n  'challenge-authenticator': ChallengeAuthenticator,\n  'challenge-poll': ChallengePoll,\n  'authenticator-verification-data': AuthenticatorVerificationData,\n  'reenroll-authenticator-warning': ReEnrollAuthenticatorWarning,\n};\n","import { OktaAuthIdxInterface, FlowIdentifier, FlowSpecification } from '../types';\nimport { AuthenticationFlow } from './AuthenticationFlow';\nimport { PasswordRecoveryFlow } from './PasswordRecoveryFlow';\nimport { RegistrationFlow } from './RegistrationFlow';\nimport { AccountUnlockFlow } from './AccountUnlockFlow';\n\n// eslint-disable-next-line complexity\nexport function getFlowSpecification(\n  oktaAuth: OktaAuthIdxInterface,\n  flow: FlowIdentifier = 'default'\n): FlowSpecification {\n  let remediators, actions, withCredentials = true;\n  switch (flow) {\n    case 'register':\n    case 'signup':\n    case 'enrollProfile':\n      remediators = RegistrationFlow;\n      withCredentials = false;\n      break;\n    case 'recoverPassword':\n    case 'resetPassword':\n      remediators = PasswordRecoveryFlow;\n      actions = [\n        'currentAuthenticator-recover', \n        'currentAuthenticatorEnrollment-recover'\n      ];\n      withCredentials = false;\n      break;\n    case 'unlockAccount':\n      remediators = AccountUnlockFlow;\n      withCredentials = false;\n      actions = [\n        'unlock-account'\n      ];\n      break;\n    case 'authenticate':\n    case 'login':\n    case 'signin':\n      remediators = AuthenticationFlow;\n      break;\n    default:\n      // default case has no flow monitor\n      remediators = AuthenticationFlow;\n      break;\n  }\n  return { flow, remediators, actions, withCredentials };\n}\n","/*!\n * Copyright (c) 2015-present, Okta, Inc. and/or its affiliates. All rights reserved.\n * The Okta software accompanied by this notice is provided pursuant to the Apache License, Version 2.0 (the \"License.\")\n *\n * You may obtain a copy of the License at http://www.apache.org/licenses/LICENSE-2.0.\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT\n * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * \n * See the License for the specific language governing permissions and limitations under the License.\n */\n\n\nimport { AuthSdkError, OAuthError } from '../errors';\nimport { IdxTransactionMeta } from './types/meta';\nimport { OktaAuthIdxInterface } from './types';\n\nexport async function handleInteractionCodeRedirect(\n  authClient: OktaAuthIdxInterface, \n  url: string\n): Promise<void> {\n  const meta = authClient.transactionManager.load() as IdxTransactionMeta;\n  if (!meta) {\n    throw new AuthSdkError('No transaction data was found in storage');\n  }\n\n  const { \n    codeVerifier,\n    state: savedState \n  } = meta;\n  const { \n    searchParams\n  // URL API has been added to the polyfill\n  // eslint-disable-next-line compat/compat\n  } = new URL(url); \n  const state = searchParams.get('state');\n  const interactionCode = searchParams.get('interaction_code');\n\n  // Error handling\n  const error = searchParams.get('error');\n  if (error) {\n    // eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n    throw new OAuthError(error, searchParams.get('error_description')!);\n  }\n  if (state !== savedState) {\n    throw new AuthSdkError('State in redirect uri does not match with transaction state');\n  }\n  if (!interactionCode) {\n    throw new AuthSdkError('Unable to parse interaction_code from the url');\n  }\n  \n  // Save tokens to storage\n  const { tokens } = await authClient.token.exchangeCodeForTokens({ interactionCode, codeVerifier });\n  authClient.tokenManager.setTokens(tokens);\n}","/*!\n * Copyright (c) 2021-Present, Okta, Inc. and/or its affiliates. All rights reserved.\n * The Okta software accompanied by this notice is provided pursuant to the Apache License, Version 2.0 (the \"License.\")\n *\n * You may obtain a copy of the License at http://www.apache.org/licenses/LICENSE-2.0.\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT\n * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n *\n * See the License for the specific language governing permissions and limitations under the License.\n */\n\n// eslint-disable-next-line @typescript-eslint/ban-ts-comment\n// @ts-nocheck\nconst isFieldMutable = function isFieldMutable(field) {\n  // mutable defaults to true, annoyingly\n  return ( field.mutable !== false );\n};\n\nconst divideSingleActionParamsByMutability = function divideSingleActionParamsByMutability( action ) {\n  const defaultParamsForAction = {}; // mutable and present\n  const neededParamsForAction = []; // mutable values\n  const immutableParamsForAction = {}; // immutable\n  // TODO: remove assumption that form names are unique, neededParams being an array is a temp fix\n  // not all actions have value (e.g. redirect)\n  // making sure they are not empty and instead hold the remediation object\n  if (!action.value) {\n    neededParamsForAction.push(action);\n    return { defaultParamsForAction, neededParamsForAction, immutableParamsForAction };\n  }\n\n  for ( let field of action.value ) {\n\n    if ( isFieldMutable( field ) ) {\n\n      neededParamsForAction.push(field);\n\n      if ( field.value ?? false ) {\n        defaultParamsForAction[field.name] = field.value;\n      }\n\n    } else {\n      immutableParamsForAction[field.name] = field.value ?? '';\n    }\n  }\n  return { defaultParamsForAction, neededParamsForAction, immutableParamsForAction };\n};\n\nexport const divideActionParamsByMutability = function divideActionParamsByMutability( actionList ) {\n  // TODO: when removing form name is unique assumption, this may all be redundant\n  actionList = Array.isArray(actionList) ? actionList : [ actionList ];\n  const neededParams = [];\n  const defaultParams = {};\n  const immutableParams = {};\n\n  for ( let action of actionList ) {\n    const { \n      defaultParamsForAction, \n      neededParamsForAction, \n      immutableParamsForAction \n    } = divideSingleActionParamsByMutability(action);\n    neededParams.push(neededParamsForAction);\n    defaultParams[action.name] = defaultParamsForAction;\n    immutableParams[action.name] = immutableParamsForAction;\n  }\n\n  return { defaultParams, neededParams, immutableParams };\n};\n\n","/*!\n * Copyright (c) 2021-Present, Okta, Inc. and/or its affiliates. All rights reserved.\n * The Okta software accompanied by this notice is provided pursuant to the Apache License, Version 2.0 (the \"License.\")\n *\n * You may obtain a copy of the License at http://www.apache.org/licenses/LICENSE-2.0.\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT\n * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n *\n * See the License for the specific language governing permissions and limitations under the License.\n */\n\n/* eslint-disable max-len, complexity */\nimport { httpRequest } from '../../../http';\nimport { OktaAuthIdxInterface } from '../../types';    // auth-js/types\nimport { IdxActionFunction, IdxActionParams, IdxResponse, IdxToPersist } from '../../types/idx-js';\nimport { divideActionParamsByMutability } from './actionParser';\nimport AuthApiError from '../../../errors/AuthApiError';\n\nconst generateDirectFetch = function generateDirectFetch(authClient: OktaAuthIdxInterface, { \n  actionDefinition, \n  defaultParamsForAction = {}, \n  immutableParamsForAction = {}, \n  toPersist = {} as IdxToPersist\n}): IdxActionFunction {\n  const target = actionDefinition.href;\n  return async function(params: IdxActionParams = {}): Promise<IdxResponse> {\n    const headers = {\n      'Content-Type': 'application/json',\n      'Accept': actionDefinition.accepts || 'application/ion+json',\n    };\n    const body = JSON.stringify({\n      ...defaultParamsForAction,\n      ...params,\n      ...immutableParamsForAction\n    });\n\n    try {\n      const response = await httpRequest(authClient, {\n        url: target,\n        method: actionDefinition.method,\n        headers,\n        args: body,\n        withCredentials: toPersist?.withCredentials ?? true\n      });\n\n      return authClient.idx.makeIdxResponse({ ...response }, toPersist, true);\n    }\n    catch (err) {\n      if (!(err instanceof AuthApiError) || !err?.xhr) {\n        throw err;\n      }\n\n      const response = err.xhr;\n      const payload = response.responseJSON || JSON.parse(response.responseText);\n      const wwwAuthHeader = response.headers['WWW-Authenticate'] || response.headers['www-authenticate'];\n\n      const idxResponse = authClient.idx.makeIdxResponse({ ...payload }, toPersist, false);\n      if (response.status === 401 && wwwAuthHeader === 'Oktadevicejwt realm=\"Okta Device\"') {\n        // Okta server responds 401 status code with WWW-Authenticate header and new remediation\n        // so that the iOS/MacOS credential SSO extension (Okta Verify) can intercept\n        // the response reaches here when Okta Verify is not installed\n        // set `stepUp` to true if flow should be continued without showing any errors\n        idxResponse.stepUp = true;\n      }\n\n      return idxResponse;\n    }\n  };\n};\n\n// TODO: Resolve in M2: Either build the final polling solution or remove this code\n// const generatePollingFetch = function generatePollingFetch( { actionDefinition, defaultParamsForAction = {}, immutableParamsForAction = {} } ) {\n//   // TODO: Discussions ongoing about when/how to terminate polling: OKTA-246581\n//   const target = actionDefinition.href;\n//   return async function(params) {\n//     return fetch(target, {\n//       method: actionDefinition.method,\n//       headers: {\n//         'content-type': actionDefinition.accepts,\n//       },\n//       body: JSON.stringify({ ...defaultParamsForAction, ...params, ...immutableParamsForAction })\n//     })\n//       .then( response => response.ok ? response.json() : response.json().then( err => Promise.reject(err)) )\n//       .then( idxResponse => makeIdxState(authClient, idxResponse) );\n//   };\n// };\n\nconst generateIdxAction = function generateIdxAction( authClient: OktaAuthIdxInterface, actionDefinition, toPersist ): IdxActionFunction {\n  // TODO: leaving this here to see where the polling is EXPECTED to drop into the code, but removing any accidental trigger of incomplete code\n  // const generator =  actionDefinition.refresh ? generatePollingFetch : generateDirectFetch;\n  const generator = generateDirectFetch;\n  const { defaultParams, neededParams, immutableParams } = divideActionParamsByMutability( actionDefinition );\n\n  const action = generator(authClient, {\n    actionDefinition,\n    defaultParamsForAction: defaultParams[actionDefinition.name],\n    immutableParamsForAction: immutableParams[actionDefinition.name],\n    toPersist\n  });\n  action.neededParams = neededParams;\n  return action;\n};\n\nexport default generateIdxAction;\n","/*!\n * Copyright (c) 2021-Present, Okta, Inc. and/or its affiliates. All rights reserved.\n * The Okta software accompanied by this notice is provided pursuant to the Apache License, Version 2.0 (the \"License.\")\n *\n * You may obtain a copy of the License at http://www.apache.org/licenses/LICENSE-2.0.\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT\n * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n *\n * See the License for the specific language governing permissions and limitations under the License.\n */\n\nimport { OktaAuthIdxInterface, IdxRemediation } from '../../types';    // auth-js/types\nimport generateIdxAction from './generateIdxAction';\n\nexport const generateRemediationFunctions = function generateRemediationFunctions(\n  authClient: OktaAuthIdxInterface,\n  remediationValue: IdxRemediation[],\n  toPersist = {}\n) {\n  return remediationValue.reduce((obj, remediation) => ({\n    ...obj,\n    [remediation.name]: generateIdxAction(authClient, remediation, toPersist)\n  }), {});\n};\n","const jsonpathRegex = /\\$?(?<step>\\w+)|(?:\\[(?<index>\\d+)\\])/g;\n\n/* eslint complexity:[0,8] */\nexport function jsonpath({ path, json }) {\n  const steps: string[] = [];\n  let match: RegExpExecArray | null;\n  while ((match = jsonpathRegex.exec(path)) !== null) {\n    const step = match?.groups?.step ?? match?.groups?.index;\n    if (step) {\n      steps.push(step);\n    }\n  }\n\n  if (steps.length < 1) {\n    return undefined;\n  }\n\n  // array length check above guarantees .pop() will return a value\n  // eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n  const lastStep = steps.pop()!;\n  let curr = json;\n  for (const step of steps) {\n    if (Object.prototype.hasOwnProperty.call(curr, step)) {\n      if (typeof curr[step] !== 'object') {\n        return undefined;\n      }\n\n      curr = curr[step];\n    }\n  }\n\n  return curr[lastStep];\n}\n","/*!\n * Copyright (c) 2021-Present, Okta, Inc. and/or its affiliates. All rights reserved.\n * The Okta software accompanied by this notice is provided pursuant to the Apache License, Version 2.0 (the \"License.\")\n *\n * You may obtain a copy of the License at http://www.apache.org/licenses/LICENSE-2.0.\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT\n * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n *\n * See the License for the specific language governing permissions and limitations under the License.\n */\n\n/* eslint-disable max-len */\n\nimport { OktaAuthIdxInterface, IdxResponse, IdxRemediation, IdxContext } from '../../types';    // auth-js/types\nimport { IdxActions } from '../../types/idx-js';\nimport { generateRemediationFunctions } from './remediationParser';\nimport generateIdxAction from './generateIdxAction';\nimport { jsonpath } from '../../../util/jsonpath';\nimport { AuthSdkError } from '../../../errors';\n\nconst SKIP_FIELDS = {\n  'remediation': true, // remediations are put into proceed/neededToProceed\n  'context': true, // the API response of 'context' isn't externally useful.  We ignore it and put all non-action (contextual) info into idxState.context\n};\n\nexport const parseNonRemediations = function parseNonRemediations( authClient: OktaAuthIdxInterface, idxResponse: IdxResponse, toPersist = {} ) {\n  const actions = {};\n  const context = {} as IdxContext;\n\n  Object.keys(idxResponse)\n    .filter( field => !SKIP_FIELDS[field])\n    .forEach( field => {\n      const fieldIsObject = typeof idxResponse[field] === 'object' && !!idxResponse[field];\n\n      if ( !fieldIsObject ) {\n        // simple fields are contextual info\n        context[field] = idxResponse[field];\n        return;\n      }\n\n      if ( idxResponse[field].rel ) {\n        // top level actions\n        actions[idxResponse[field].name] = generateIdxAction(authClient, idxResponse[field], toPersist);\n        return;\n      }\n\n      const { value: fieldValue, type, ...info} = idxResponse[field];\n      context[field] = { type, ...info}; // add the non-action parts as context\n\n      if ( type !== 'object' ) {\n        // only object values hold actions\n        context[field].value = fieldValue;\n        return;\n      }\n\n      // We are an object field containing an object value\n      context[field].value = {};\n      Object.entries<IdxRemediation>(fieldValue)\n        .forEach( ([subField, value]) => {\n          if (value.rel) { // is [field].value[subField] an action?\n            // add any \"action\" value subfields to actions\n            // eslint-disable-next-line @typescript-eslint/ban-ts-comment\n            // @ts-ignore\n            actions[`${field}-${subField.name || subField}`] = generateIdxAction(authClient, value, toPersist);\n          } else {\n            // add non-action value subfields to context\n            context[field].value[subField] = value;\n          }\n        });\n    });\n\n  return { context, actions };\n};\n\nconst expandRelatesTo = (idxResponse, value) => {\n  Object.keys(value).forEach(k => {\n    if (k === 'relatesTo') {\n      const query = Array.isArray(value[k]) ? value[k][0] : value[k];\n      if (typeof query === 'string') {\n        const result = jsonpath({ path: query, json: idxResponse });\n        if (result) {\n          value[k] = result;\n          return;\n        } else {\n          throw new AuthSdkError(`Cannot resolve relatesTo: ${query}`);\n        }\n      }\n    }\n    if (Array.isArray(value[k])) {\n      value[k].forEach(innerValue => expandRelatesTo(idxResponse, innerValue));\n    }\n  });\n};\n\nconst convertRemediationAction = (authClient: OktaAuthIdxInterface, remediation, toPersist) => {\n  // Only remediation that has `rel` field (indicator for form submission) can have http action\n  if (remediation.rel) {\n    const remediationActions = generateRemediationFunctions( authClient, [remediation], toPersist );\n    const actionFn = remediationActions[remediation.name];\n    return {\n      ...remediation,\n      action: actionFn,\n    };\n  }\n\n  return remediation;\n};\n\nexport const parseIdxResponse = function parseIdxResponse( authClient: OktaAuthIdxInterface, idxResponse, toPersist = {} ): {\n  remediations: IdxRemediation[];\n  context: IdxContext;\n  actions: IdxActions;\n} {\n  const remediationData = idxResponse.remediation?.value || [];\n\n  remediationData.forEach(\n    remediation => {\n      // TODO: remove once IDX is fixed - OKTA-659181\n      if (remediation.name === 'launch-authenticator' &&\n        remediation?.relatesTo?.[0] === 'authenticatorChallenge' &&\n        !idxResponse?.authenticatorChallenge\n      ) {\n        delete remediation.relatesTo;\n        return;\n      }\n\n      return expandRelatesTo(idxResponse, remediation);\n    }\n  );\n\n  const remediations = remediationData.map(remediation => convertRemediationAction( authClient, remediation, toPersist ));\n\n  const { context, actions } = parseNonRemediations( authClient, idxResponse, toPersist );\n\n  return {\n    remediations,\n    context,\n    actions,\n  };\n};\n","/*!\n * Copyright (c) 2021-Present, Okta, Inc. and/or its affiliates. All rights reserved.\n * The Okta software accompanied by this notice is provided pursuant to the Apache License, Version 2.0 (the \"License.\")\n *\n * You may obtain a copy of the License at http://www.apache.org/licenses/LICENSE-2.0.\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT\n * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n *\n * See the License for the specific language governing permissions and limitations under the License.\n */\n\nimport { makeIdxState } from './makeIdxState';\n\nexport default {\n  makeIdxState,\n};\n","/*!\n * Copyright (c) 2021-Present, Okta, Inc. and/or its affiliates. All rights reserved.\n * The Okta software accompanied by this notice is provided pursuant to the Apache License, Version 2.0 (the \"License.\")\n *\n * You may obtain a copy of the License at http://www.apache.org/licenses/LICENSE-2.0.\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT\n * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n *\n * See the License for the specific language governing permissions and limitations under the License.\n */\n\nimport { IdxResponse, IdxToPersist, IdxActionParams } from '../../types/idx-js';\nimport { OktaAuthIdxInterface, RawIdxResponse } from '../../types';    // auth-js/types\nimport { parseIdxResponse } from './idxResponseParser';\n\nexport function makeIdxState( \n  authClient: OktaAuthIdxInterface,\n  idxResponse: RawIdxResponse,\n  toPersist: IdxToPersist,\n  requestDidSucceed: boolean\n): IdxResponse {\n  const rawIdxResponse =  idxResponse;\n  const { remediations, context, actions } = parseIdxResponse( authClient, idxResponse, toPersist );\n  const neededToProceed = [...remediations];\n\n  const proceed: IdxResponse['proceed'] = async function( remediationChoice, paramsFromUser = {} ) {\n    /*\n    remediationChoice is the name attribute on each form\n    name should remain unique for items inside the remediation that are considered forms(identify, select-factor)\n    name can be duplicate for items like redirect where its not considered a form(redirect)\n    when names are not unique its a redirect to a href, so widget wont POST to idx-js layer.\n    */\n    const remediationChoiceObject = remediations.find((remediation) => remediation.name === remediationChoice);\n    if ( !remediationChoiceObject ) {\n      return Promise.reject(`Unknown remediation choice: [${remediationChoice}]`);\n    }\n\n    const actionFn = remediationChoiceObject.action;\n    if (typeof actionFn !== 'function') {\n      return Promise.reject(`Current remediation cannot make form submit action: [${remediationChoice}]`);\n    }\n\n    return remediationChoiceObject.action!(paramsFromUser as IdxActionParams);\n  };\n\n  const findCode = item => item.name === 'interaction_code';\n  const interactionCode = rawIdxResponse.successWithInteractionCode?.value?.find( findCode )?.value as string;\n\n  return {\n    proceed,\n    neededToProceed,\n    actions,\n    context,\n    rawIdxState: rawIdxResponse,\n    interactionCode,\n    toPersist,\n    requestDidSucceed,\n  };\n}\n","import { OktaAuthIdxInterface } from '../types';    // auth-js/types\nimport { IdxResponse, IdxToPersist, RawIdxResponse } from '../types/idx-js';      // idx/types\nimport { IDX_API_VERSION } from '../../constants';\nimport v1 from './v1/parsers';\n\n\nexport const parsersForVersion = function parsersForVersion( version ) {\n  switch (version) {\n    case '1.0.0':\n      return v1;\n    case undefined:\n    case null:\n      throw new Error('Api version is required');\n    default:\n      throw new Error(`Unknown api version: ${version}.  Use an exact semver version.`);\n  }\n};\n\nexport function validateVersionConfig(version) {\n  if ( !version ) {\n    throw new Error('version is required');\n  }\n\n  const cleanVersion = (version ?? '').replace(/[^0-9a-zA-Z._-]/, '');\n  if ( cleanVersion !== version || !version ) {\n    throw new Error('invalid version supplied - version is required and uses semver syntax');\n  }\n\n  parsersForVersion(version); // will throw for invalid version\n}\n\nexport function makeIdxState ( \n  authClient: OktaAuthIdxInterface,\n  rawIdxResponse: RawIdxResponse,\n  toPersist: IdxToPersist,\n  requestDidSucceed: boolean,\n): IdxResponse {\n  const version = rawIdxResponse?.version ?? IDX_API_VERSION;\n  validateVersionConfig(version);\n  \n  const { makeIdxState } = parsersForVersion(version);\n  return makeIdxState(authClient, rawIdxResponse, toPersist, requestDidSucceed);\n}\n","import { FingerprintAPI, OktaAuthConstructor } from '../base/types';\nimport { MinimalOktaOAuthInterface } from '../oidc/types';\nimport {\n  IdxTransactionManagerInterface,\n  OktaAuthIdxConstructor,\n  OktaAuthIdxOptions,\n  MinimalIdxAPI,\n  WebauthnAPI,\n  MinimalOktaAuthIdxInterface\n} from './types';\nimport { IdxTransactionMeta } from './types/meta';\nimport { IdxStorageManagerInterface } from './types/storage';\nimport { createMinimalIdxAPI } from '../idx/factory/minimalApi';\nimport fingerprint from '../browser/fingerprint';\nimport * as webauthn from './webauthn';\n\nexport function mixinMinimalIdx\n<\n  M extends IdxTransactionMeta = IdxTransactionMeta,\n  S extends IdxStorageManagerInterface<M> = IdxStorageManagerInterface<M>,\n  O extends OktaAuthIdxOptions = OktaAuthIdxOptions,\n  TM extends IdxTransactionManagerInterface = IdxTransactionManagerInterface,\n  TBase extends OktaAuthConstructor<MinimalOktaOAuthInterface<M, S, O, TM>>\n    = OktaAuthConstructor<MinimalOktaOAuthInterface<M, S, O, TM>>\n>\n(\n  Base: TBase\n): TBase & OktaAuthIdxConstructor<MinimalOktaAuthIdxInterface<M, S, O, TM>>\n{\n  return class OktaAuthIdx extends Base implements MinimalOktaAuthIdxInterface<M, S, O, TM>\n  {\n    idx: MinimalIdxAPI;\n    fingerprint: FingerprintAPI;\n    static webauthn: WebauthnAPI = webauthn;\n    \n    constructor(...args: any[]) {\n      super(...args);\n      this.idx = createMinimalIdxAPI(this);\n      this.fingerprint = fingerprint.bind(null, this);\n    }\n  };\n}\n","/*!\n * Copyright (c) 2015-present, Okta, Inc. and/or its affiliates. All rights reserved.\n * The Okta software accompanied by this notice is provided pursuant to the Apache License, Version 2.0 (the \"License.\")\n *\n * You may obtain a copy of the License at http://www.apache.org/licenses/LICENSE-2.0.\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT\n * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n *\n * See the License for the specific language governing permissions and limitations under the License.\n *\n */\n\nimport { makeIdxState } from '../idxState';\nimport { canProceed, proceed } from '../proceed';\nimport { startTransaction } from '../startTransaction';\nimport {\n  clearTransactionMeta,\n  createTransactionMeta,\n  getSavedTransactionMeta,\n  getTransactionMeta,\n  isTransactionMetaValid,\n  saveTransactionMeta\n} from '../transactionMeta';\nimport { MinimalIdxAPI, MinimalOktaAuthIdxInterface, OktaAuthIdxInterface } from '../types';\n\n// Factory\nexport function createMinimalIdxAPI(minimalSdk: MinimalOktaAuthIdxInterface): MinimalIdxAPI {\n  const sdk = minimalSdk as OktaAuthIdxInterface;\n  const boundStartTransaction = startTransaction.bind(null, sdk);\n  const idx = {\n    makeIdxResponse: makeIdxState.bind(null, sdk),\n\n    start: boundStartTransaction,\n    startTransaction: boundStartTransaction, // Use `start` instead. `startTransaction` will be removed in 7.0\n    proceed: proceed.bind(null, sdk),\n    canProceed: canProceed.bind(null, sdk),\n    \n    getSavedTransactionMeta: getSavedTransactionMeta.bind(null, sdk),\n    createTransactionMeta: createTransactionMeta.bind(null, sdk),\n    getTransactionMeta: getTransactionMeta.bind(null, sdk),\n    saveTransactionMeta: saveTransactionMeta.bind(null, sdk),\n    clearTransactionMeta: clearTransactionMeta.bind(null, sdk),\n    isTransactionMetaValid,\n  };\n  return idx;\n}\n\n","\nimport { OktaAuthConstructor } from '../../base/types';\nimport {\n  OAuthResponseType,\n  OAuthStorageManagerInterface,\n  OAuthTransactionMeta,\n  MinimalOktaOAuthInterface,\n  OktaAuthOAuthOptions,\n  PKCETransactionMeta,\n  BaseTokenAPI,\n  TransactionManagerInterface,\n  TransactionManagerConstructor,\n} from '../types';\nimport { createBaseTokenAPI } from '../factory/baseApi';\nimport { isLoginRedirect, hasResponseType } from '../util';\n\nimport { OktaAuthSessionInterface } from '../../session/types';\nexport function mixinMinimalOAuth\n<\n  M extends OAuthTransactionMeta = PKCETransactionMeta,\n  S extends OAuthStorageManagerInterface<M> = OAuthStorageManagerInterface<M>,\n  O extends OktaAuthOAuthOptions = OktaAuthOAuthOptions,\n  TM extends TransactionManagerInterface = TransactionManagerInterface,\n  TBase extends OktaAuthConstructor<OktaAuthSessionInterface<S, O>>\n    = OktaAuthConstructor<OktaAuthSessionInterface<S, O>>\n>\n(\n  Base: TBase,\n  TransactionManagerConstructor: TransactionManagerConstructor<TM>,\n): TBase & OktaAuthConstructor<MinimalOktaOAuthInterface<M, S, O, TM>>\n{\n  return class OktaAuthOAuth extends Base implements MinimalOktaOAuthInterface<M, S, O, TM>\n  {\n    token: BaseTokenAPI;\n    transactionManager: TM;\n    \n    constructor(...args: any[]) {\n      super(...args);\n\n      this.transactionManager = new TransactionManagerConstructor(Object.assign({\n        storageManager: this.storageManager,\n      }, this.options.transactionManager));\n  \n      this.token = createBaseTokenAPI(this as any);\n    }\n\n    isLoginRedirect(): boolean {\n      return isLoginRedirect(this as any);\n    }\n\n    isPKCE(): boolean {\n      return !!this.options.pkce;\n    }\n\n    hasResponseType(responseType: OAuthResponseType): boolean {\n      return hasResponseType(responseType, this.options);\n    }\n\n    isAuthorizationCodeFlow(): boolean {\n      return this.hasResponseType('code');\n    }\n\n  };\n\n}\n","/*!\n * Copyright (c) 2015-present, Okta, Inc. and/or its affiliates. All rights reserved.\n * The Okta software accompanied by this notice is provided pursuant to the Apache License, Version 2.0 (the \"License.\")\n *\n * You may obtain a copy of the License at http://www.apache.org/licenses/LICENSE-2.0.\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT\n * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n *\n * See the License for the specific language governing permissions and limitations under the License.\n *\n */\n\nimport { decodeToken } from '../decodeToken';\nimport { exchangeCodeForTokens } from '../exchangeCodeForTokens';\nimport {\n  OktaAuthOAuthInterface,\n  BaseTokenAPI,\n} from '../types';\nimport { prepareTokenParams } from '../util';\n\n// Factory\nexport function createBaseTokenAPI(sdk: OktaAuthOAuthInterface): BaseTokenAPI {\n  const token: BaseTokenAPI = {\n    prepareTokenParams: prepareTokenParams.bind(null, sdk),\n    exchangeCodeForTokens: exchangeCodeForTokens.bind(null, sdk),\n    decode: decodeToken,\n  };\n\n  return token;\n}\n","import { OktaAuthOptionsConstructor } from '../../base/types';\nimport { StorageManagerConstructor } from '../../storage/types';\nimport { IdxTransactionManagerInterface, MinimalOktaAuthIdxInterface, OktaAuthIdxConstructor } from '../types/api';\nimport { IdxTransactionMeta } from '../types/meta';\nimport { IdxStorageManagerInterface } from '../types/storage';\nimport { OktaAuthIdxOptions } from '../types/options';\nimport { TransactionManagerConstructor, MinimalOktaOAuthInterface } from '../../oidc/types';\nimport { mixinMinimalIdx } from '../mixinMinimal';\nimport { createOktaAuthBase } from '../../base/factory';\nimport { mixinStorage } from '../../storage/mixin';\nimport { mixinHttp } from '../../http/mixin';\nimport { mixinSession } from '../../session/mixin';\nimport { mixinMinimalOAuth } from '../../oidc/mixin/minimal';\n\nexport function createMinimalOktaAuthIdx<\n  M extends IdxTransactionMeta = IdxTransactionMeta,\n  S extends IdxStorageManagerInterface<M> = IdxStorageManagerInterface<M>,\n  O extends OktaAuthIdxOptions = OktaAuthIdxOptions,\n  TM extends IdxTransactionManagerInterface = IdxTransactionManagerInterface\n>(\n  StorageManagerConstructor: StorageManagerConstructor<S>,\n  OptionsConstructor: OktaAuthOptionsConstructor<O>,\n  TransactionManagerConstructor: TransactionManagerConstructor<TM>\n)\n: OktaAuthIdxConstructor<\n  MinimalOktaAuthIdxInterface<M, S, O, TM> & MinimalOktaOAuthInterface<M, S, O, TM>\n>\n{\n  const Base = createOktaAuthBase(OptionsConstructor);\n  const WithStorage = mixinStorage<S, O>(Base, StorageManagerConstructor);\n  const WithHttp = mixinHttp<S, O>(WithStorage);\n  const WithSession = mixinSession<S, O>(WithHttp);\n  const WithOAuth = mixinMinimalOAuth<M, S, O, TM>(WithSession, TransactionManagerConstructor);\n  // do not mixin core\n  const WithIdx = mixinMinimalIdx(WithOAuth);\n  return WithIdx;\n}\n","/* eslint-disable @typescript-eslint/no-non-null-assertion */\n/*!\n * Copyright (c) 2021, Okta, Inc. and/or its affiliates. All rights reserved.\n * The Okta software accompanied by this notice is provided pursuant to the Apache License, Version 2.0 (the \"License.\")\n *\n * You may obtain a copy of the License at http://www.apache.org/licenses/LICENSE-2.0.\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT\n * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n *\n * See the License for the specific language governing permissions and limitations under the License.\n */\n/* eslint complexity:[0,8] */\nimport { OktaAuthIdxInterface, IdxTransactionMeta, InteractOptions, InteractResponse } from './types';\nimport { getSavedTransactionMeta, saveTransactionMeta, createTransactionMeta } from './transactionMeta';\nimport { getOAuthBaseUrl } from '../oidc';\nimport { removeNils } from '../util';\nimport { httpRequest } from '../http';\n\n\n/* eslint-disable camelcase */\nexport interface InteractParams {\n  client_id: string;\n  scope: string;\n  redirect_uri: string;\n  code_challenge: string;\n  code_challenge_method: string;\n  state: string;\n  activation_token?: string;\n  recovery_token?: string;\n  client_secret?: string;\n  max_age?: string | number;\n  acr_values?: string;\n  nonce?: string;\n}\n/* eslint-enable camelcase */\n\nfunction getResponse(meta: IdxTransactionMeta): InteractResponse {\n  return {\n    meta,\n    interactionHandle: meta.interactionHandle!,\n    state: meta.state\n  };\n}\n\n// Begin or resume a transaction. Returns an interaction handle\nexport async function interact (\n  authClient: OktaAuthIdxInterface, \n  options: InteractOptions = {}\n): Promise<InteractResponse> {\n  options = removeNils(options);\n\n  let meta = getSavedTransactionMeta(authClient, options);\n  // If meta exists, it has been validated against all options\n\n  if (meta?.interactionHandle) {\n    return getResponse(meta); // Saved transaction, return meta\n  }\n\n  // Create new meta, respecting previous meta if it has been set and is not overridden\n  meta = await createTransactionMeta(authClient, { ...meta, ...options });\n  const baseUrl = getOAuthBaseUrl(authClient);\n  let {\n    clientId,\n    redirectUri,\n    state,\n    scopes,\n    withCredentials,\n    codeChallenge,\n    codeChallengeMethod,\n    activationToken,\n    recoveryToken,\n    maxAge,\n    acrValues,\n    nonce\n  } = meta as IdxTransactionMeta;\n  const clientSecret = options.clientSecret || authClient.options.clientSecret;\n  withCredentials = withCredentials ?? true;\n\n  /* eslint-disable camelcase */\n  const url = `${baseUrl}/v1/interact`;\n  const params = {\n    client_id: clientId,\n    scope: scopes!.join(' '),\n    redirect_uri: redirectUri,\n    code_challenge: codeChallenge,\n    code_challenge_method: codeChallengeMethod,\n    state,\n    ...(activationToken && { activation_token: activationToken }),\n    ...(recoveryToken && { recovery_token: recoveryToken }),\n    // X-Device-Token header need to pair with `client_secret`\n    // eslint-disable-next-line max-len\n    // https://oktawiki.atlassian.net/wiki/spaces/eng/pages/2445902453/Support+Device+Binding+in+interact#Scenario-1%3A-Non-User-Agent-with-Confidential-Client-(top-priority)\n    ...(clientSecret && { client_secret: clientSecret }),\n    ...(maxAge && { max_age: maxAge }),\n    ...(acrValues && { acr_values: acrValues }),\n    ...(nonce && { nonce }),\n  } as InteractParams;\n  /* eslint-enable camelcase */\n\n  const headers = {\n    'Content-Type': 'application/x-www-form-urlencoded',\n  };\n\n  const resp = await httpRequest(authClient, {\n    method: 'POST',\n    url,\n    headers,\n    withCredentials,\n    args: params\n  });\n  const interactionHandle = resp.interaction_handle;\n\n  const newMeta = {\n    ...meta,\n    interactionHandle,\n    \n    // Options which can be passed into interact() should be saved in the meta\n    withCredentials,\n    state,\n    scopes,\n    recoveryToken,\n    activationToken\n  };\n  // Save transaction meta so it can be resumed\n  saveTransactionMeta(authClient, newMeta);\n\n  return getResponse(newMeta);\n}\n","/* eslint-disable complexity */\n/*!\n * Copyright (c) 2021, Okta, Inc. and/or its affiliates. All rights reserved.\n * The Okta software accompanied by this notice is provided pursuant to the Apache License, Version 2.0 (the \"License.\")\n *\n * You may obtain a copy of the License at http://www.apache.org/licenses/LICENSE-2.0.\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT\n * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n *\n * See the License for the specific language governing permissions and limitations under the License.\n */\n\nimport { makeIdxState, validateVersionConfig } from './idxState';\nimport { IntrospectOptions, OktaAuthIdxInterface } from './types';\nimport { IdxResponse, isRawIdxResponse } from './types/idx-js';\nimport { getOAuthDomain } from '../oidc';\nimport { IDX_API_VERSION } from '../constants';\nimport { httpRequest } from '../http';\nimport { isAuthApiError } from '../errors';\n\nexport async function introspect (\n  authClient: OktaAuthIdxInterface, \n  options: IntrospectOptions = {}\n): Promise<IdxResponse> {\n  let rawIdxResponse;\n  let requestDidSucceed;\n\n  // try load from storage first\n  const savedIdxResponse = authClient.transactionManager.loadIdxResponse(options);\n  if (savedIdxResponse) {\n    rawIdxResponse = savedIdxResponse.rawIdxResponse;\n    requestDidSucceed = savedIdxResponse.requestDidSucceed;\n  }\n\n  // call idx.introspect if no existing idx response available in storage\n  if (!rawIdxResponse) {\n    const version = options.version || IDX_API_VERSION;\n    const domain = getOAuthDomain(authClient);\n    const { interactionHandle, stateHandle } = options;\n    const withCredentials = options.withCredentials ?? true;\n    try {\n      requestDidSucceed = true;\n      validateVersionConfig(version);\n      const url = `${domain}/idp/idx/introspect`;\n      const body = stateHandle ? { stateToken: stateHandle } : { interactionHandle };\n      const headers = {\n        'Content-Type': `application/ion+json; okta-version=${version}`, // Server wants this version info\n        Accept: `application/ion+json; okta-version=${version}`,\n      };\n      rawIdxResponse = await httpRequest(authClient, {\n        method: 'POST',\n        url,\n        headers,\n        withCredentials,\n        args: body\n      });\n    } catch (err) {\n      if (isAuthApiError(err) && err.xhr && isRawIdxResponse(err.xhr.responseJSON)) {\n        rawIdxResponse = err.xhr.responseJSON;\n        requestDidSucceed = false;\n      } else {\n        throw err;\n      }\n    }\n  }\n\n  const { withCredentials } = options;\n  return makeIdxState(authClient, rawIdxResponse, { withCredentials }, requestDidSucceed);\n}\n","import { FingerprintAPI, OktaAuthConstructor } from '../base/types';\nimport { OktaAuthOAuthInterface } from '../oidc/types';\nimport {\n  IdxAPI, \n  IdxTransactionManagerInterface, \n  OktaAuthIdxInterface, \n  OktaAuthIdxConstructor, \n  OktaAuthIdxOptions, \n  WebauthnAPI\n} from './types';\nimport { IdxTransactionMeta } from './types/meta';\nimport { IdxStorageManagerInterface } from './types/storage';\nimport { createIdxAPI } from './factory/api';\nimport fingerprint from '../browser/fingerprint';\nimport * as webauthn from './webauthn';\n\nexport function mixinIdx\n<\n  M extends IdxTransactionMeta = IdxTransactionMeta,\n  S extends IdxStorageManagerInterface<M> = IdxStorageManagerInterface<M>,\n  O extends OktaAuthIdxOptions = OktaAuthIdxOptions,\n  TM extends IdxTransactionManagerInterface = IdxTransactionManagerInterface,\n  TBase extends OktaAuthConstructor<OktaAuthOAuthInterface<M, S, O, TM>>\n    = OktaAuthConstructor<OktaAuthOAuthInterface<M, S, O, TM>>\n>\n(Base: TBase): TBase & OktaAuthIdxConstructor<OktaAuthIdxInterface<M, S, O, TM>>\n{\n  return class OktaAuthIdx extends Base implements OktaAuthIdxInterface<M, S, O, TM>\n  {\n    idx: IdxAPI;\n    fingerprint: FingerprintAPI;\n    static webauthn: WebauthnAPI = webauthn;\n    \n    constructor(...args: any[]) {\n      super(...args);\n      this.idx = createIdxAPI(this);\n      this.fingerprint = fingerprint.bind(null, this);\n    }\n  };\n}\n","/*!\n * Copyright (c) 2015-present, Okta, Inc. and/or its affiliates. All rights reserved.\n * The Okta software accompanied by this notice is provided pursuant to the Apache License, Version 2.0 (the \"License.\")\n *\n * You may obtain a copy of the License at http://www.apache.org/licenses/LICENSE-2.0.\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT\n * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * \n * See the License for the specific language governing permissions and limitations under the License.\n */\n\nimport { createCoreOptionsConstructor } from '../core/options';\nimport { FlowIdentifier } from './types/FlowIdentifier';\nimport { OktaAuthIdxOptions } from './types/options';\n\n\nexport function createIdxOptionsConstructor() {\n  const CoreOptionsConstructor = createCoreOptionsConstructor();\n  return class IdxOptionsConstructor\n    extends CoreOptionsConstructor \n    implements Required<OktaAuthIdxOptions>\n  {\n    flow: FlowIdentifier;\n    activationToken: string;\n    recoveryToken: string;\n  \n    // BETA WARNING: configs in this section are subject to change without a breaking change notice\n    idx: {\n      useGenericRemediator?: boolean;\n      exchangeCodeForTokens?: boolean;\n    };\n  \n    constructor(options: any) {\n      super(options);\n  \n      this.flow = options.flow;\n      this.activationToken = options.activationToken;\n      this.recoveryToken = options.recoveryToken;\n      this.idx = options.idx;\n    }\n  };\n  \n}\n","/*!\n * Copyright (c) 2021-present, Okta, Inc. and/or its affiliates. All rights reserved.\n * The Okta software accompanied by this notice is provided pursuant to the Apache License, Version 2.0 (the \"License.\")\n *\n * You may obtain a copy of the License at http://www.apache.org/licenses/LICENSE-2.0.\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT\n * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n *\n * See the License for the specific language governing permissions and limitations under the License.\n */\n\nimport { proceed } from './proceed';\n\nimport { \n  IdxPollOptions,\n  IdxTransaction,\n  OktaAuthIdxInterface,\n} from './types';\nimport { getSavedTransactionMeta } from './transactionMeta';\nimport { warn } from '../util';\n\nexport async function poll(authClient: OktaAuthIdxInterface, options: IdxPollOptions = {}): Promise<IdxTransaction> {\n  let transaction = await proceed(authClient, {\n    startPolling: true\n  });\n\n  const meta = getSavedTransactionMeta(authClient);\n  let availablePollingRemeditaions = meta?.remediations?.find(remediation => remediation.includes('poll'));\n  if (!availablePollingRemeditaions?.length) {\n    warn('No polling remediations available at the current IDX flow stage');\n  }\n\n  if (Number.isInteger(options.refresh)) {\n    return new Promise(function (resolve, reject) {\n      setTimeout(async function () {\n        try {\n          const refresh = transaction.nextStep?.poll?.refresh;\n          if (refresh) {\n            resolve(poll(authClient, {\n              refresh\n            }));\n          } else {\n            resolve(transaction);\n          }\n        } catch (err) {\n          reject(err);\n        }\n      }, options.refresh);\n    });\n  }\n\n  return transaction;\n}\n","/*!\n * Copyright (c) 2015-present, Okta, Inc. and/or its affiliates. All rights reserved.\n * The Okta software accompanied by this notice is provided pursuant to the Apache License, Version 2.0 (the \"License.\")\n *\n * You may obtain a copy of the License at http://www.apache.org/licenses/LICENSE-2.0.\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT\n * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * \n * See the License for the specific language governing permissions and limitations under the License.\n */\n\n\nimport { \n  OktaAuthIdxInterface,\n  IdxTransaction,\n  ProceedOptions,\n} from './types';\nimport { run } from './run';\nimport { getSavedTransactionMeta } from './transactionMeta';\nimport { AuthSdkError } from '../errors';\n\nexport function canProceed(authClient: OktaAuthIdxInterface, options: ProceedOptions = {}): boolean {\n  const meta = getSavedTransactionMeta(authClient, options);\n  return !!(meta || options.stateHandle);\n}\n\nexport async function proceed(\n  authClient: OktaAuthIdxInterface,\n  options: ProceedOptions = {}\n): Promise<IdxTransaction> {\n\n  if (!canProceed(authClient, options)) {\n    throw new AuthSdkError('Unable to proceed: saved transaction could not be loaded');\n  }\n\n  let { flow, state } = options;\n  if (!flow) {\n    const meta = getSavedTransactionMeta(authClient, { state });\n    flow = meta?.flow;\n  }\n\n  return run(authClient, { \n    ...options, \n    flow\n  });\n}\n","/*!\n * Copyright (c) 2015-present, Okta, Inc. and/or its affiliates. All rights reserved.\n * The Okta software accompanied by this notice is provided pursuant to the Apache License, Version 2.0 (the \"License.\")\n *\n * You may obtain a copy of the License at http://www.apache.org/licenses/LICENSE-2.0.\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT\n * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * \n * See the License for the specific language governing permissions and limitations under the License.\n */\n\n\nimport { run } from './run';\nimport { getFlowSpecification } from './flow';\nimport { \n  OktaAuthIdxInterface, \n  PasswordRecoveryOptions, \n  IdxTransaction,\n} from './types';\n\nexport async function recoverPassword(\n  authClient: OktaAuthIdxInterface, options: PasswordRecoveryOptions = {}\n): Promise<IdxTransaction> {\n  const flowSpec = getFlowSpecification(authClient, 'recoverPassword');\n  return run(\n    authClient, \n    { \n      ...options,\n      ...flowSpec,\n    }\n  );\n}\n","/*!\n * Copyright (c) 2015-present, Okta, Inc. and/or its affiliates. All rights reserved.\n * The Okta software accompanied by this notice is provided pursuant to the Apache License, Version 2.0 (the \"License.\")\n *\n * You may obtain a copy of the License at http://www.apache.org/licenses/LICENSE-2.0.\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT\n * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * \n * See the License for the specific language governing permissions and limitations under the License.\n */\n\n\nimport { run } from './run';\nimport { hasSavedInteractionHandle } from './transactionMeta';\nimport { startTransaction } from './startTransaction';\nimport { AuthSdkError } from '../errors';\nimport { \n  RegistrationOptions, \n  IdxTransaction, \n  OktaAuthIdxInterface, \n  IdxFeature,\n} from './types';\n\nexport async function register(\n  authClient: OktaAuthIdxInterface, options: RegistrationOptions = {}\n): Promise<IdxTransaction> {\n\n  // Only check at the beginning of the transaction\n  if (!hasSavedInteractionHandle(authClient)) {\n    const { enabledFeatures } = await startTransaction(authClient, {\n      ...options,\n      flow: 'register',\n      autoRemediate: false\n    });\n    if (!options.activationToken && enabledFeatures && !enabledFeatures.includes(IdxFeature.REGISTRATION)) {\n      throw new AuthSdkError('Registration is not supported based on your current org configuration.');\n    }\n  }\n\n  return run(authClient, {\n    ...options,\n    flow: 'register'\n  });\n}\n","/* eslint-disable @typescript-eslint/no-non-null-assertion */\n/*!\n * Copyright (c) 2015-present, Okta, Inc. and/or its affiliates. All rights reserved.\n * The Okta software accompanied by this notice is provided pursuant to the Apache License, Version 2.0 (the \"License.\")\n *\n * You may obtain a copy of the License at http://www.apache.org/licenses/LICENSE-2.0.\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT\n * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * \n * See the License for the specific language governing permissions and limitations under the License.\n */\n\n\nimport { AuthenticatorData, AuthenticatorDataValues } from './Base/AuthenticatorData';\nimport { getAuthenticatorFromRemediation } from './util';\n\nexport type AuthenticatorEnrollmentDataValues =  AuthenticatorDataValues & {\n  phoneNumber?: string;\n  resend?: boolean; // resend is not a remediator value - revise when IdxResponse structure is updated\n}\nexport class AuthenticatorEnrollmentData extends AuthenticatorData<AuthenticatorEnrollmentDataValues> {\n  static remediationName = 'authenticator-enrollment-data';\n\n  mapAuthenticator() {\n    const authenticatorData = this.getAuthenticatorData();\n    const authenticatorFromRemediation = getAuthenticatorFromRemediation(this.remediation)!;\n    return { \n      id: authenticatorFromRemediation.form!.value\n        .find(({ name }) => name === 'id')!.value,\n      methodType: authenticatorData!.methodType,\n      phoneNumber: authenticatorData!.phoneNumber,\n    };\n  }\n\n  getInputAuthenticator(remediation) {\n    return [\n      { name: 'methodType', type: 'string' }, \n      { name: 'phoneNumber', label: 'Phone Number', type: 'string' }\n    ].map(item => {\n      const value = remediation.form.value.find(val => val.name === item.name);\n      return { ...value, ...item };\n    });\n  }\n\n  protected mapAuthenticatorDataFromValues(data?) {\n    // get mapped authenticator from base class\n    data = super.mapAuthenticatorDataFromValues(data);\n    // add phoneNumber to authenticator if it exists in values\n    const { phoneNumber } = this.values;\n    if (!data && !phoneNumber) {\n      return;\n    }\n\n    return { \n      ...(data && data), \n      ...(phoneNumber && { phoneNumber }) \n    };\n  }\n\n}\n","/* eslint-disable @typescript-eslint/no-non-null-assertion */\n/*!\n * Copyright (c) 2015-present, Okta, Inc. and/or its affiliates. All rights reserved.\n * The Okta software accompanied by this notice is provided pursuant to the Apache License, Version 2.0 (the \"License.\")\n *\n * You may obtain a copy of the License at http://www.apache.org/licenses/LICENSE-2.0.\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT\n * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * \n * See the License for the specific language governing permissions and limitations under the License.\n */\n\nimport { AuthenticatorData, AuthenticatorDataValues } from './Base/AuthenticatorData';\n\nexport type AuthenticatorVerificationDataValues = AuthenticatorDataValues;\n\nexport class AuthenticatorVerificationData extends AuthenticatorData<AuthenticatorVerificationDataValues> {\n  static remediationName = 'authenticator-verification-data';\n\n  mapAuthenticator() {\n    return this.getAuthenticatorData();\n  }\n\n  getInputAuthenticator() {\n    const authenticator = this.getAuthenticatorFromRemediation();\n    const methodType = authenticator.form!.value.find(({ name }) => name === 'methodType');\n    // if has methodType in form, let user select the methodType\n    if (methodType && methodType.options) {\n      return { \n        name: 'methodType', \n        type: 'string', \n        required: true, \n        options: methodType.options \n      };\n    }\n    // no methodType, then return form values\n    const inputs = [...authenticator.form!.value];\n    return inputs;\n  }\n\n  getValuesAfterProceed(): AuthenticatorVerificationDataValues {\n    this.values = super.getValuesAfterProceed();\n    let trimmedValues = Object.keys(this.values).filter(valueKey => valueKey !== 'authenticator');\n    return trimmedValues.reduce((values, valueKey) => ({...values, [valueKey]: this.values[valueKey]}), {});\n  }\n}\n","/* eslint-disable @typescript-eslint/no-non-null-assertion */\n/*!\n * Copyright (c) 2015-present, Okta, Inc. and/or its affiliates. All rights reserved.\n * The Okta software accompanied by this notice is provided pursuant to the Apache License, Version 2.0 (the \"License.\")\n *\n * You may obtain a copy of the License at http://www.apache.org/licenses/LICENSE-2.0.\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT\n * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * \n * See the License for the specific language governing permissions and limitations under the License.\n */\n\nimport { Remediator, RemediationValues } from './Remediator';\nimport { IdxRemediationValue, IdxRemediation, IdxAuthenticator } from '../../types/idx-js';\nimport { isAuthenticator } from '../../types/api';\nimport { compareAuthenticators } from '../../authenticator/util';\n\nexport type AuthenticatorDataValues = RemediationValues & {\n  methodType?: string;\n};\n\n// Base class - DO NOT expose static remediationName\nexport class AuthenticatorData<T extends AuthenticatorDataValues = AuthenticatorDataValues> extends Remediator<T> {\n  authenticator: IdxAuthenticator;\n\n  constructor(remediation: IdxRemediation, values: T = {} as T) {\n    super(remediation, values);\n\n    // set before other data calculation\n    this.authenticator = this.getAuthenticator()!;\n\n    this.formatAuthenticatorData();\n  }\n\n  protected formatAuthenticatorData() {\n    const authenticatorData = this.getAuthenticatorData();\n    if (authenticatorData) {\n      this.values.authenticatorsData = this.values.authenticatorsData!.map(data => {\n        if (compareAuthenticators(this.authenticator, data)) {\n          return this.mapAuthenticatorDataFromValues(data);\n        }\n        return data;\n      });\n    } else {\n      const data = this.mapAuthenticatorDataFromValues();\n      if (data) {\n        this.values.authenticatorsData!.push(data);\n      }\n    }\n  }\n\n  protected getAuthenticatorData() {\n    return this.values.authenticatorsData!\n      .find((data) => compareAuthenticators(this.authenticator, data));\n  }\n\n  canRemediate() {\n    return this.values.authenticatorsData!\n      .some(data => compareAuthenticators(this.authenticator, data));\n  }\n\n  protected mapAuthenticatorDataFromValues(authenticatorData?) {\n    // add methodType to authenticatorData if it exists in values\n    let { methodType, authenticator } = this.values;\n    if (!methodType && isAuthenticator(authenticator)) {\n     methodType = authenticator?.methodType;\n    }\n    \n    const { id, enrollmentId } = this.authenticator;\n    const data = { \n      id,\n      enrollmentId,\n      ...(authenticatorData && authenticatorData),\n      ...(methodType && { methodType }) \n    };\n\n    return data.methodType ? data : null;\n  }\n\n  protected getAuthenticatorFromRemediation(): IdxRemediationValue {\n    const authenticator = this.remediation.value!\n      .find(({ name }) => name === 'authenticator') as IdxRemediationValue;\n    return authenticator;\n  }\n\n  getValuesAfterProceed(): T {\n    this.values = super.getValuesAfterProceed();\n    // remove used authenticatorData\n    const authenticatorsData = this.values.authenticatorsData!\n      .filter(data => compareAuthenticators(this.authenticator, data) !== true);\n    return { ...this.values, authenticatorsData };\n  }\n}\n","/* eslint-disable @typescript-eslint/no-non-null-assertion */\n/*!\n * Copyright (c) 2015-present, Okta, Inc. and/or its affiliates. All rights reserved.\n * The Okta software accompanied by this notice is provided pursuant to the Apache License, Version 2.0 (the \"License.\")\n *\n * You may obtain a copy of the License at http://www.apache.org/licenses/LICENSE-2.0.\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT\n * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * \n * See the License for the specific language governing permissions and limitations under the License.\n */\n\n\n/* eslint-disable complexity */\nimport { OktaAuthIdxInterface, NextStep, IdxMessage, Authenticator, Input, RemediateOptions } from '../../types';\nimport { IdxAuthenticator, IdxRemediation, IdxContext } from '../../types/idx-js';\nimport { getAllValues, getRequiredValues, titleCase, getAuthenticatorFromRemediation } from '../util';\nimport { formatAuthenticator, compareAuthenticators } from '../../authenticator/util';\n\n// A map from IDX data values (server spec) to RemediationValues (client spec)\nexport type IdxToRemediationValueMap = Record<string, string[]>;\n\nexport interface RemediationValues {\n  stateHandle?: string;\n  authenticators?: (Authenticator | string)[];\n  authenticator?: string | Authenticator;\n  authenticatorsData?: Authenticator[];\n  resend?: boolean;\n}\n\nexport interface RemediatorConstructor {\n  remediationName: string;\n  new<T extends RemediationValues>(\n    remediation: IdxRemediation, \n    values?: T, \n    options?: RemediateOptions\n  ): any;\n}\n\n// Base class - DO NOT expose static remediationName\nexport class Remediator<T extends RemediationValues = RemediationValues> {\n  static remediationName: string;\n\n  remediation: IdxRemediation;\n  values: T;\n  options: RemediateOptions;\n  map?: IdxToRemediationValueMap;\n\n  constructor(\n    remediation: IdxRemediation, \n    values: T = {} as T, \n    options: RemediateOptions = {}\n  ) {\n    // assign fields to the instance\n    this.values = { ...values };\n    this.options = { ...options };\n    this.formatAuthenticators();\n    this.remediation = remediation;\n  }\n\n  private formatAuthenticators() {\n    this.values.authenticators = (this.values.authenticators || []) as Authenticator[];\n\n    // ensure authenticators are in the correct format\n    this.values.authenticators = this.values.authenticators.map(authenticator => {\n      return formatAuthenticator(authenticator);\n    });\n\n    // add authenticator (if any) to \"authenticators\"\n    if (this.values.authenticator) {\n      const authenticator = formatAuthenticator(this.values.authenticator);\n      const hasAuthenticatorInList = this.values.authenticators.some(existing => {\n        return compareAuthenticators(authenticator, existing);\n      });\n      if (!hasAuthenticatorInList) {\n        this.values.authenticators.push(authenticator);\n      }\n    }\n\n    // save non-key meta to \"authenticatorsData\" field\n    // authenticators will be removed after selection to avoid select-authenticator loop\n    this.values.authenticatorsData = this.values.authenticators.reduce((acc, authenticator) => {\n      if (typeof authenticator === 'object' && Object.keys(authenticator).length > 1) {\n        // save authenticator meta into authenticator data\n        acc.push(authenticator);\n      }\n      return acc;\n    }, this.values.authenticatorsData || []);\n  }\n\n  getName(): string {\n    return this.remediation.name;\n  }\n\n  // Override this method to provide custom check\n  /* eslint-disable-next-line no-unused-vars, @typescript-eslint/no-unused-vars */\n  canRemediate(context?: IdxContext): boolean {\n    const required = getRequiredValues(this.remediation);\n    const needed = required!.find((key) => !this.hasData(key));\n    if (needed) {\n      return false; // missing data for a required field\n    }\n    return true; // all required fields have available data\n  }\n\n  // returns an object for the entire remediation form, or just a part\n  getData(key?: string) {\n    if (!key) {\n      let allValues = getAllValues(this.remediation);\n      let res = allValues!.reduce((data, key) => {\n        data[key] = this.getData(key); // recursive\n        return data;\n      }, {});\n      return res;\n    }\n\n    // Map value by \"map${Property}\" function in each subClass\n    if (typeof this[`map${titleCase(key)}`] === 'function') {\n      const val = this[`map${titleCase(key)}`](\n        this.remediation.value!.find(({name}) => name === key)\n      );\n      if (val) {\n        return val;\n      }\n    }\n\n    // If a map is defined for this key, return the first aliased property that returns a truthy value\n    if (this.map && this.map[key]) {\n      const entry = this.map[key];\n      for (let i = 0; i < entry.length; i++) {\n        let val = this.values[entry[i]];\n        if (val) {\n          return val;\n        }\n      }\n    }\n\n    // fallback: return the value by key\n    return this.values[key];\n  }\n\n  hasData(\n    key: string // idx name\n  ): boolean \n  {\n    // no attempt to format, we want simple true/false\n    return !!this.getData(key);\n  }\n\n  getNextStep(_authClient: OktaAuthIdxInterface, _context?: IdxContext): NextStep {\n    const name = this.getName();\n    const inputs = this.getInputs();\n    const authenticator = this.getAuthenticator();\n    // TODO: remove type field in the next major version change\n    // https://oktainc.atlassian.net/browse/OKTA-431749\n    const type = authenticator?.type;\n    return { \n      name, \n      inputs, \n      ...(type && { type }),\n      ...(authenticator && { authenticator }),\n    };\n  }\n\n  // Get inputs for the next step\n  getInputs(): Input[] {\n    const inputs: Input[] = [];\n    const inputsFromRemediation = this.remediation.value || [];\n    inputsFromRemediation.forEach(inputFromRemediation => {\n      let input;\n      let { name, type, visible, messages } = inputFromRemediation;\n      if (visible === false) {\n        return; // Filter out invisible inputs, like stateHandle\n      }\n      if (typeof this[`getInput${titleCase(name)}`] === 'function') {\n        input = this[`getInput${titleCase(name)}`](inputFromRemediation);\n      } else if (type !== 'object') {\n        // handle general primitive types\n        let alias;\n        const aliases = (this.map ? this.map[name] : null) || [];\n        if (aliases.length === 1) {\n          alias = aliases[0];\n        } else {\n          // try find key from values\n          alias = aliases.find(name => Object.keys(this.values).includes(name));\n        }\n        if (alias) {\n          input = { ...inputFromRemediation, name: alias };\n        }\n      }\n      if (!input) {\n        input = inputFromRemediation;\n      }\n      if (Array.isArray(input)) {\n        input.forEach(i => inputs.push(i));\n      } else {\n        // guarantees field-level messages are passed back\n        if (messages) {\n          input.messages = messages;\n        }\n        inputs.push(input);\n      }\n    });\n    return inputs;\n  }\n\n  static getMessages(remediation: IdxRemediation): IdxMessage[] | undefined {\n    if (!remediation.value) {\n      return;\n    }\n    return remediation.value[0]?.form?.value.reduce((messages: IdxMessage[], field) => {\n      if (field.messages) {\n        messages = [...messages, ...field.messages.value];\n      }\n      return messages;\n    }, []);\n  }\n\n  // Prepare values for the next remediation\n  // In general, remove used values from inputs for the current remediation\n  // Override this method if special cases need be handled\n  getValuesAfterProceed(): T {\n    const inputsFromRemediation = this.remediation.value || []; // \"raw\" inputs from server response\n    const inputsFromRemediator = this.getInputs(); // \"aliased\" inputs from SDK remediator\n    const inputs = [\n      ...inputsFromRemediation,\n      ...inputsFromRemediator\n    ];\n    // scrub all values related to this remediation\n    for (const input of inputs) {\n      delete this.values[input.name];\n    }\n    return this.values;\n  }\n\n  protected getAuthenticator(): IdxAuthenticator | undefined {\n    // relatesTo value may be an authenticator or an authenticatorEnrollment\n    const relatesTo = this.remediation.relatesTo?.value;\n    if (!relatesTo) {\n      return;\n    }\n\n    const authenticatorFromRemediation = getAuthenticatorFromRemediation(this.remediation);\n    if (!authenticatorFromRemediation) {\n      // Hopefully value is an authenticator\n      return relatesTo;\n    }\n\n    // If relatesTo is an authenticatorEnrollment, the id is actually the enrollmentId\n    // Let's get the correct authenticator id from the form value\n    const id = authenticatorFromRemediation.form!.value\n      .find(({ name }) => name === 'id')!.value as string;\n    const enrollmentId = authenticatorFromRemediation.form!.value\n      .find(({ name }) => name === 'enrollmentId')?.value as string;\n\n    return {\n      ...relatesTo,\n      id,\n      enrollmentId\n    };\n  }\n}\n","/* eslint-disable @typescript-eslint/no-non-null-assertion */\n/*!\n * Copyright (c) 2015-present, Okta, Inc. and/or its affiliates. All rights reserved.\n * The Okta software accompanied by this notice is provided pursuant to the Apache License, Version 2.0 (the \"License.\")\n *\n * You may obtain a copy of the License at http://www.apache.org/licenses/LICENSE-2.0.\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT\n * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * \n * See the License for the specific language governing permissions and limitations under the License.\n */\n\n\nimport { Remediator, RemediationValues } from './Remediator';\nimport { getAuthenticatorFromRemediation } from '../util';\nimport { IdxRemediationValue, IdxContext, IdxOption } from '../../types/idx-js';\nimport { Authenticator, isAuthenticator } from '../../types/api';\nimport { compareAuthenticators, findMatchedOption} from '../../authenticator/util';\n\nexport type SelectAuthenticatorValues = RemediationValues & {\n  authenticator?: string | Authenticator;\n};\n\n// Base class - DO NOT expose static remediationName\nexport class SelectAuthenticator<T extends SelectAuthenticatorValues = SelectAuthenticatorValues>\n  extends Remediator<T> {\n  selectedAuthenticator?: Authenticator;\n  selectedOption?: any;\n\n  // Find matched authenticator in provided order\n  findMatchedOption(authenticators, options) {\n    let option: IdxOption | undefined;\n    for (let authenticator of authenticators) {\n      option = options\n        .find(({ relatesTo }) => relatesTo.key && relatesTo.key === authenticator.key);\n      if (option) {\n        break;\n      }\n    }\n    return option;\n  }\n\n  /* eslint complexity:[0,9] */\n  canRemediate(context?: IdxContext) {\n    const { authenticators, authenticator } = this.values;\n    const authenticatorFromRemediation = getAuthenticatorFromRemediation(this.remediation);\n    const { options } = authenticatorFromRemediation;\n    // Let users select authenticator if no input is provided\n    if (!authenticators || !authenticators.length) {\n      return false;\n    }\n\n    // Authenticator is explicitly specified by id\n    if (isAuthenticator(authenticator) && authenticator.id) {\n      return true;\n    }\n\n    // Proceed with provided authenticators\n    const matchedOption = this.findMatchedOption(authenticators, options!);\n    if (matchedOption) {\n      // Don't select current authenticator (OKTA-612939)\n      const isCurrentAuthenticator = context?.currentAuthenticator\n        && context?.currentAuthenticator.value.id === matchedOption.relatesTo?.id;\n      const isCurrentAuthenticatorEnrollment = context?.currentAuthenticatorEnrollment\n        && context?.currentAuthenticatorEnrollment.value.id === matchedOption.relatesTo?.id;\n      return !isCurrentAuthenticator && !isCurrentAuthenticatorEnrollment;\n    }\n    \n    return false;\n  }\n\n  mapAuthenticator(remediationValue: IdxRemediationValue) {\n    const { authenticators, authenticator } = this.values;\n\n    // Authenticator is explicitly specified by id\n    if (isAuthenticator(authenticator) && authenticator.id) {\n      this.selectedAuthenticator = authenticator; // track the selected authenticator\n      return authenticator;\n    }\n\n    const { options } = remediationValue;\n    const selectedOption = findMatchedOption(authenticators, options);\n    this.selectedAuthenticator = selectedOption.relatesTo; // track the selected authenticator\n    this.selectedOption = selectedOption;\n    return {\n      id: selectedOption?.value.form.value.find(({ name }) => name === 'id').value\n    };\n  }\n\n  getInputAuthenticator(remediation) {\n    const options = remediation.options.map(({ label, relatesTo }) => {\n      return {\n        label,\n        value: relatesTo.key\n      };\n    });\n    return { name: 'authenticator', type: 'string', options };\n  }\n\n  getValuesAfterProceed(): T {\n    this.values = super.getValuesAfterProceed();\n    // remove used authenticators\n    const authenticators = (this.values.authenticators as Authenticator[])\n      .filter(authenticator => {\n        return compareAuthenticators(authenticator, this.selectedAuthenticator) !== true;\n      });\n    return { ...this.values, authenticators };\n  }\n\n}\n","import { Authenticator, Credentials } from './Authenticator';\n\nexport interface VerificationCodeValues {\n  verificationCode?: string;\n  otp?: string;\n  credentials?: Credentials;\n}\n\ninterface VerificationCodeCredentials extends Credentials {\n  passcode: string;\n}\n\n// general authenticator to handle \"verificationCode\" input\n// it can be used for \"email\", \"phone\", \"google authenticator\"\n// a new authenticator class should be created if special cases need to be handled\nexport class VerificationCodeAuthenticator extends Authenticator<VerificationCodeValues> {\n  canVerify(values: VerificationCodeValues) {\n    return !!(values.credentials ||values.verificationCode || values.otp);\n  }\n\n  mapCredentials(values): VerificationCodeCredentials | Credentials | undefined {\n    const { credentials, verificationCode, otp } = values;\n    if (!credentials && !verificationCode && !otp) {\n      return;\n    }\n    return credentials || { passcode: verificationCode || otp };\n  }\n\n  getInputs(idxRemediationValue) {\n    return {\n      ...idxRemediationValue.form?.value[0],\n      name: 'verificationCode',\n      type: 'string',\n      required: idxRemediationValue.required\n    };\n  }\n}\n","import { Credentials } from './Authenticator';\nimport { VerificationCodeAuthenticator } from './VerificationCodeAuthenticator';\n\ninterface TotpCredentials extends Credentials {\n  totp: string;\n}\n\nexport class OktaVerifyTotp extends VerificationCodeAuthenticator {\n  mapCredentials(values): TotpCredentials | undefined {\n    const { verificationCode } = values;\n    if (!verificationCode) {\n      return;\n    }\n    return { totp: verificationCode };\n  }\n}\n","import { Authenticator, Credentials } from './Authenticator';\n\nexport interface SecurityQuestionEnrollValues {\n  questionKey?: string;\n  question?: string;\n  answer?: string;\n  credentials?: Credentials;\n}\n\nexport class SecurityQuestionEnrollment extends Authenticator<SecurityQuestionEnrollValues> {\n  canVerify(values: SecurityQuestionEnrollValues) {\n    const { credentials } = values;\n    if (credentials && credentials.questionKey && credentials.answer) {\n      return true;\n    }\n    const { questionKey, question, answer } = values;\n    return !!(questionKey && answer) || !!(question && answer);\n  }\n\n  mapCredentials(values: SecurityQuestionEnrollValues): Credentials | undefined {\n    const { questionKey, question, answer } = values;\n    if (!answer || (!questionKey && !question)) {\n      return;\n    }\n    return {\n      questionKey: question ? 'custom' : questionKey,\n      question,\n      answer\n    };\n  }\n\n  getInputs() {\n    return [\n      { name: 'questionKey', type: 'string', required: true },\n      { name: 'question', type: 'string', label: 'Create a security question' },\n      { name: 'answer', type: 'string', label: 'Answer', required: true },\n    ];\n  }\n}\n","/* eslint-disable @typescript-eslint/no-non-null-assertion */\nimport { Authenticator, Credentials } from './Authenticator';\n\nexport interface SecurityQuestionVerificationValues {\n  answer?: string;\n  credentials?: Credentials;\n}\n\nexport class SecurityQuestionVerification extends Authenticator<SecurityQuestionVerificationValues> {\n  canVerify(values: SecurityQuestionVerificationValues) {\n    const { credentials } = values;\n    if (credentials && credentials.answer) {\n      return true;\n    }\n    const { answer } = values;\n    return !!answer;\n  }\n\n  mapCredentials(values: SecurityQuestionVerificationValues): Credentials | undefined {\n    const { answer } = values;\n    if (!answer) {\n      return;\n    }\n    return {\n      questionKey: this.meta.contextualData!.enrolledQuestion!.questionKey,\n      answer\n    };\n  }\n\n  getInputs() {\n    return [\n      { name: 'answer', type: 'string', label: 'Answer', required: true }\n    ];\n  }\n}\n","import { Authenticator, Credentials } from './Authenticator';\n\nexport interface WebauthnEnrollValues {\n  clientData?: string;\n  attestation?: string;\n  credentials?: Credentials;\n}\n\nexport class WebauthnEnrollment extends Authenticator<WebauthnEnrollValues> {\n  canVerify(values: WebauthnEnrollValues) {\n    const { credentials } = values;\n    const obj = credentials || values;\n    const { clientData, attestation } = obj;\n    return !!(clientData && attestation);\n  }\n\n  mapCredentials(values: WebauthnEnrollValues): Credentials | undefined {\n    const { credentials, clientData, attestation } = values;\n    if (!credentials && !clientData && !attestation) {\n      return;\n    }\n    return credentials || ({\n      clientData,\n      attestation\n    });\n  }\n\n  getInputs() {\n    return [\n      { name: 'clientData', type: 'string', required: true, visible: false, label: 'Client Data' },\n      { name: 'attestation', type: 'string', required: true, visible: false, label: 'Attestation' },\n    ];\n  }\n}\n","import { Authenticator, Credentials } from './Authenticator';\n\nexport interface WebauthnVerificationValues {\n  clientData?: string;\n  authenticatorData?: string;\n  signatureData?: string;\n  credentials?: Credentials;\n}\n\nexport class WebauthnVerification extends Authenticator<WebauthnVerificationValues> {\n  canVerify(values: WebauthnVerificationValues) {\n    const { credentials } = values;\n    const obj = credentials || values;\n    const { clientData, authenticatorData, signatureData } = obj;\n    return !!(clientData && authenticatorData && signatureData);\n  }\n\n  mapCredentials(values: WebauthnVerificationValues): Credentials | undefined {\n    const { credentials, authenticatorData, clientData, signatureData } = values;\n    if (!credentials && !authenticatorData && !clientData && !signatureData) {\n      return;\n    }\n    return credentials || ({\n      authenticatorData,\n      clientData,\n      signatureData\n    });\n  }\n\n  getInputs() {\n    return [\n      { name: 'authenticatorData', type: 'string', label: 'Authenticator Data', required: true, visible: false },\n      { name: 'clientData', type: 'string', label: 'Client Data', required: true, visible: false },\n      { name: 'signatureData', type: 'string', label: 'Signature Data', required: true, visible: false },\n    ];\n  }\n}\n","/*!\n * Copyright (c) 2015-present, Okta, Inc. and/or its affiliates. All rights reserved.\n * The Okta software accompanied by this notice is provided pursuant to the Apache License, Version 2.0 (the \"License.\")\n *\n * You may obtain a copy of the License at http://www.apache.org/licenses/LICENSE-2.0.\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT\n * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * \n * See the License for the specific language governing permissions and limitations under the License.\n */\n\n\nimport { Remediator, RemediationValues } from './Remediator';\nimport { getAuthenticator, Authenticator, AuthenticatorValues } from '../../authenticator';\nimport { IdxRemediation, IdxContext } from '../../types/idx-js';\nimport { OktaAuthIdxInterface, NextStep } from '../../types';\n\nexport type VerifyAuthenticatorValues = AuthenticatorValues & RemediationValues;\n\n// Base class - DO NOT expose static remediationName\nexport class VerifyAuthenticator<T extends VerifyAuthenticatorValues = VerifyAuthenticatorValues>\n  extends Remediator<T> {\n\n  authenticator: Authenticator<VerifyAuthenticatorValues>;\n\n  constructor(remediation: IdxRemediation, values: T = {} as T) {\n    super(remediation, values);\n    this.authenticator = getAuthenticator(remediation);\n  }\n\n  getNextStep(authClient: OktaAuthIdxInterface, context?: IdxContext): NextStep {\n    const nextStep = super.getNextStep(authClient, context);\n    const authenticatorEnrollments = context?.authenticatorEnrollments?.value;\n\n    return {\n      ...nextStep,\n      authenticatorEnrollments\n    };\n  }\n\n  canRemediate() {\n    return this.authenticator.canVerify(this.values);\n  }\n\n  mapCredentials() {\n    return this.authenticator.mapCredentials(this.values);\n  }\n\n  getInputCredentials(input) {\n    return this.authenticator.getInputs(input);\n  }\n\n  getValuesAfterProceed(): T {\n    this.values = super.getValuesAfterProceed();\n    let trimmedValues = Object.keys(this.values).filter(valueKey => valueKey !== 'credentials');\n    return trimmedValues.reduce((values, valueKey) => ({...values, [valueKey]: this.values[valueKey]}), {} as T);\n  }\n}\n","import { OktaVerifyTotp } from './OktaVerifyTotp';\nimport { Authenticator } from './Authenticator';\nimport { VerificationCodeAuthenticator } from './VerificationCodeAuthenticator';\nimport { OktaPassword } from './OktaPassword';\nimport { SecurityQuestionEnrollment } from './SecurityQuestionEnrollment';\nimport { SecurityQuestionVerification } from './SecurityQuestionVerification';\nimport { WebauthnEnrollment } from './WebauthnEnrollment';\nimport { WebauthnVerification } from './WebauthnVerification';\nimport { IdxAuthenticator, IdxRemediation } from '../types/idx-js';\nimport { AuthenticatorKey } from '../types';\n\n/* eslint complexity:[0,8] */\nexport function getAuthenticator(remediation: IdxRemediation): Authenticator<any> {\n  const relatesTo = remediation.relatesTo;\n  const value = relatesTo?.value || {} as IdxAuthenticator;\n  switch (value.key) {\n    case AuthenticatorKey.OKTA_PASSWORD:\n      return new OktaPassword(value);\n    case AuthenticatorKey.SECURITY_QUESTION:\n      if (value.contextualData?.enrolledQuestion) {\n        return new SecurityQuestionVerification(value);\n      } else {\n        return new SecurityQuestionEnrollment(value);\n      }\n    case AuthenticatorKey.OKTA_VERIFY:\n      return new OktaVerifyTotp(value);\n    case AuthenticatorKey.WEBAUTHN:\n      if (value.contextualData?.challengeData) {\n        return new WebauthnVerification(value);\n      } else {\n        return new WebauthnEnrollment(value);\n      }\n    default:\n      return new VerificationCodeAuthenticator(value);\n  }\n}\n","/*!\n * Copyright (c) 2015-present, Okta, Inc. and/or its affiliates. All rights reserved.\n * The Okta software accompanied by this notice is provided pursuant to the Apache License, Version 2.0 (the \"License.\")\n *\n * You may obtain a copy of the License at http://www.apache.org/licenses/LICENSE-2.0.\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT\n * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * \n * See the License for the specific language governing permissions and limitations under the License.\n */\n\nimport { VerifyAuthenticator, VerifyAuthenticatorValues } from './Base/VerifyAuthenticator';\n\nexport type ChallengeAuthenticatorValues = VerifyAuthenticatorValues;\n\nexport class ChallengeAuthenticator extends VerifyAuthenticator<ChallengeAuthenticatorValues> {\n  static remediationName = 'challenge-authenticator';\n}\n","/*!\n * Copyright (c) 2015-present, Okta, Inc. and/or its affiliates. All rights reserved.\n * The Okta software accompanied by this notice is provided pursuant to the Apache License, Version 2.0 (the \"License.\")\n *\n * You may obtain a copy of the License at http://www.apache.org/licenses/LICENSE-2.0.\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT\n * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * \n * See the License for the specific language governing permissions and limitations under the License.\n */\n\nimport { EnrollPoll } from './EnrollPoll';\n\nexport class ChallengePoll extends EnrollPoll{\n  static remediationName = 'challenge-poll';\n\n  canRemediate() {\n    return !!this.values.startPolling || this.options.step === 'challenge-poll';\n  }\n}\n","/*!\n * Copyright (c) 2015-present, Okta, Inc. and/or its affiliates. All rights reserved.\n * The Okta software accompanied by this notice is provided pursuant to the Apache License, Version 2.0 (the \"License.\")\n *\n * You may obtain a copy of the License at http://www.apache.org/licenses/LICENSE-2.0.\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT\n * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * \n * See the License for the specific language governing permissions and limitations under the License.\n */\n\n\nimport { VerifyAuthenticator, VerifyAuthenticatorValues } from './Base/VerifyAuthenticator';\n\nexport type EnrollAuthenticatorValues = VerifyAuthenticatorValues;\n\nexport class EnrollAuthenticator extends VerifyAuthenticator<EnrollAuthenticatorValues> {\n  static remediationName = 'enroll-authenticator';\n}\n","/*!\n * Copyright (c) 2015-present, Okta, Inc. and/or its affiliates. All rights reserved.\n * The Okta software accompanied by this notice is provided pursuant to the Apache License, Version 2.0 (the \"License.\")\n *\n * You may obtain a copy of the License at http://www.apache.org/licenses/LICENSE-2.0.\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT\n * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * \n * See the License for the specific language governing permissions and limitations under the License.\n */\n\n\nimport { Remediator, RemediationValues } from './Base/Remediator';\nimport { NextStep, OktaAuthIdxInterface } from '../types';\nimport { IdxContext } from '../types/idx-js';\n\nexport interface EnrollPollValues extends RemediationValues {\n  startPolling?: boolean;\n}\n\nexport class EnrollPoll extends Remediator<EnrollPollValues> {\n  static remediationName = 'enroll-poll';\n\n  canRemediate() {\n    return !!this.values.startPolling || this.options.step === 'enroll-poll';\n  }\n\n  getNextStep(authClient: OktaAuthIdxInterface, context?: IdxContext): NextStep {\n    const common = super.getNextStep(authClient, context);\n    let authenticator = this.getAuthenticator();\n    if (!authenticator && context?.currentAuthenticator) {\n      authenticator = context.currentAuthenticator.value;\n    }\n    return {\n      ...common,\n      authenticator,\n      poll: {\n        required: true,\n        refresh: this.remediation.refresh\n      },\n    };\n  }\n\n  getValuesAfterProceed(): EnrollPollValues {\n    let trimmedValues = Object.keys(this.values).filter(valueKey => valueKey !== 'startPolling');\n    return trimmedValues.reduce((values, valueKey) => ({...values, [valueKey]: this.values[valueKey]}), {});\n  }\n}\n","/* eslint-disable @typescript-eslint/no-non-null-assertion */\n/*!\n * Copyright (c) 2015-present, Okta, Inc. and/or its affiliates. All rights reserved.\n * The Okta software accompanied by this notice is provided pursuant to the Apache License, Version 2.0 (the \"License.\")\n *\n * You may obtain a copy of the License at http://www.apache.org/licenses/LICENSE-2.0.\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT\n * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * \n * See the License for the specific language governing permissions and limitations under the License.\n */\n\n\nimport { IdxRemediation, IdxRemediationValue, IdxAuthenticator } from '../types/idx-js';\nimport { RemediateOptions } from '../types';\nimport { Remediator, RemediationValues } from './Base/Remediator';\nimport { Authenticator, Credentials, OktaPassword } from '../authenticator';\n\nexport interface EnrollProfileValues extends RemediationValues {\n  firstName?: string;\n  lastName?: string;\n  email?: string;\n  credentials?: Credentials;\n  password?: string;\n  passcode?: string;\n}\n\nexport class EnrollProfile extends Remediator<EnrollProfileValues> {\n  static remediationName = 'enroll-profile';\n\n  authenticator: Authenticator<any> | null = null;\n\n  constructor(\n    remediation: IdxRemediation,\n    values: EnrollProfileValues = {},\n    options: RemediateOptions = {}\n  ) {\n    super(remediation, values, options);\n\n    // credentials are only required when Profile Enrollment policy requires them\n    // if credentials are included in the remediation, they are considered required\n    // otherwise it will be omitted\n    const credentials = this.getCredentialsFromRemediation();\n    if (credentials) {\n      this.authenticator = this.authenticator = new OktaPassword({} as IdxAuthenticator);\n    }\n  }\n\n  canRemediate() {\n    // ensure credentials can be verified, if required\n    if (this.authenticator && !this.authenticator.canVerify(this.values)) {\n      return false;\n    }\n\n    const userProfileFromValues = this.getData().userProfile;\n    if (!userProfileFromValues) {\n      return false;\n    }\n    // eslint-disable-next-line max-len\n    const userProfileFromRemediation = this.remediation.value!.find(({ name }) => name === 'userProfile') as IdxRemediationValue;\n    return userProfileFromRemediation.form!.value.reduce((canRemediate, curr) => {\n      if (curr.required) {\n        canRemediate = canRemediate && !!userProfileFromValues[curr.name];\n      }\n      return canRemediate;\n    }, true);\n  }\n\n  getCredentialsFromRemediation () {\n    return this.remediation.value!.find(({ name }) => name === 'credentials');\n  }\n\n  mapUserProfile({form: { value: profileAttributes }}) {\n    const attributeNames = profileAttributes.map(({name}) => name);\n    const data = attributeNames.reduce((attributeValues, attributeName) => (\n      this.values[attributeName] ? {\n      ...attributeValues,\n      [attributeName]: this.values[attributeName]\n    } : attributeValues), {});\n    if (Object.keys(data).length === 0) {\n      return;\n    }\n    return data;\n  }\n\n  mapCredentials() {\n    const val = this.authenticator && this.authenticator.mapCredentials(this.values);\n    if (!val) {\n      return;\n    }\n    return val;\n  }\n\n  getInputUserProfile(input) {\n    return [...input.form.value];\n  }\n\n  getInputCredentials(input) {\n    return [...input.form.value];\n  }\n\n  getErrorMessages(errorRemediation) {\n    return errorRemediation.value[0].form.value.reduce((errors, field) => {\n      if (field.messages) {\n        errors.push(field.messages.value[0].message);\n      }\n      return errors;\n    }, []);\n  }\n}","/*!\n * Copyright (c) 2021-present, Okta, Inc. and/or its affiliates. All rights reserved.\n * The Okta software accompanied by this notice is provided pursuant to the Apache License, Version 2.0 (the \"License.\")\n *\n * You may obtain a copy of the License at http://www.apache.org/licenses/LICENSE-2.0.\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT\n * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * \n * See the License for the specific language governing permissions and limitations under the License.\n */\n\n\nimport { Remediator, RemediationValues } from './Base/Remediator';\nimport { IdxContext } from '../types/idx-js';\nimport { OktaAuthIdxInterface } from '../types';\n\n\nexport type EnrollmentChannelDataValues = RemediationValues & {\n  email?: string;\n  phoneNumber?: string;\n};\n\nexport class EnrollmentChannelData extends Remediator<EnrollmentChannelDataValues> {\n  static remediationName = 'enrollment-channel-data';\n\n  getInputEmail() {\n    return [\n      { name: 'email', type: 'string', required: true, label: 'Email' },\n    ];\n  }\n\n  getInputPhoneNumber() {\n    return [\n      { name: 'phoneNumber', type: 'string', required: true, label: 'Phone Number' },\n    ];\n  }\n\n  canRemediate() {\n    return Boolean(this.values.email || this.values.phoneNumber);\n  }\n\n  getNextStep(authClient: OktaAuthIdxInterface, context: IdxContext) {\n    const common = super.getNextStep(authClient, context);\n    const authenticator = context.currentAuthenticator.value;\n    return {\n      ...common,\n      authenticator,\n    };\n  }\n\n  getData() {\n    return {\n      stateHandle: this.values.stateHandle,\n      email: this.values.email,\n      phoneNumber: this.values.phoneNumber\n    };\n  }\n\n  getValuesAfterProceed(): EnrollmentChannelDataValues {\n    let trimmedValues = Object.keys(this.values).filter(valueKey => !['email', 'phoneNumber'].includes(valueKey));\n    return trimmedValues.reduce((values, valueKey) => ({...values, [valueKey]: this.values[valueKey]}), {});\n  }\n}\n","/* eslint-disable complexity */\nimport { AuthSdkError } from '../../../errors';\nimport { Input } from '../../types';\n\nexport function unwrapFormValue(remediation): Input { \n  if (Array.isArray(remediation)) {\n    return remediation\n      .map(item => {\n        if (typeof item === 'string' || typeof item === 'number' || typeof item === 'boolean') {\n          return item;\n        }\n        return unwrapFormValue(item);\n      }) as any;\n  }\n\n  const res = {};\n  for (const [key, value] of Object.entries(remediation)) {\n    if (value === null || typeof value === 'undefined') {\n      continue;\n    }\n\n    if (typeof value === 'object') {\n      const formKeys = Object.keys(value as object);\n      // detect patterns like:\n      // value -> form -> value | form -> value\n      if (['value', 'form'].includes(key) \n        && formKeys.length === 1 \n        && ['value', 'form'].includes(formKeys[0])\n      ) {\n        // unwrap nested form\n        const unwrappedForm = unwrapFormValue(value);\n        Object.entries(unwrappedForm).forEach(([key, value]) => {\n          res[key] = value;\n        });\n      } else {\n        // dfs\n        res[key] = unwrapFormValue(value);\n      }\n    } else {\n      // handle primitive value\n      res[key] = value;\n    }\n  }\n\n  return res as Input;\n}\n\n// only check if value is required for now\n// TODO: support SDK layer type based input validation\nexport function hasValidInputValue(input, values) {\n  const fn = (input, values, requiredTracker) => {\n    const { name, value, type, options, required } = input;\n    const isRequired = required || requiredTracker;\n\n    // handle nested value - all required fields should be avaiable in values \n    if (Array.isArray(value)) {\n      return value.reduce((acc, item) => {\n        return acc && fn(item, values[name], isRequired); // recursive call\n      }, true);\n    }\n\n    // handle options field\n    // 1. object type options - check if each object field is required and value can be found from the selectedOption\n    // 2. primitive options - required field is avaiable from top level\n    // 3. unknown format - pass to backend for validation\n    if (options) {\n      // object type options\n      if (type === 'object') {\n        const selectedOption = values[name];\n        if (!selectedOption) {\n          return false;\n        }\n        if (!selectedOption.id) {\n          // unknown option format, pass to backend for validation\n          return true;\n        }\n        const optionSchema = options.find((option) => {\n          const idSchema = option.value.find(({ name }) => name === 'id' );\n          return idSchema.value === selectedOption.id;\n        });\n        if (!optionSchema) {\n          return false;\n        }\n        return optionSchema.value\n          .filter(({ required }) => !!required)\n          .reduce((acc, { name }) => {\n            return acc && !!selectedOption[name];\n          }, true);\n      }\n\n      // primitive options, not required - always valid\n      if (required === false) {\n        return true;\n      }\n\n      // primitive options, required - check if value is available\n      if (required === true) {\n        return !!values[name];\n      }\n\n      // unknown options, throw\n      throw new AuthSdkError(`Unknown options type, ${JSON.stringify(input)}`);\n    }\n\n    // base case\n    if (!isRequired) {\n      return true;\n    }\n      \n    return !!(values && values[name]);\n  };\n\n  return fn(input, values, false);\n}\n","import { OktaAuthIdxInterface, IdxContext, NextStep, Input } from '../../types';\nimport { Remediator } from '../Base/Remediator';\nimport { unwrapFormValue } from './util';\n\nexport class GenericRemediator extends Remediator {\n  canRemediate(): boolean {\n    // only handle remediations that are able to submit form (xhr)\n    if (typeof this.remediation.action !== 'function') {\n      return false;\n    }\n\n    // DO NOT REMOVE - bring it back when enable client side validation for GenericRemediator - OKTA-512003\n    // const inputs = this.getInputs();\n    // const res = inputs.reduce((acc, input) => {\n    //   return acc && hasValidInputValue(input, this.values);\n    // }, true);\n    // return res;\n\n    if (this.remediation.name === 'poll' || this.remediation.name.endsWith('-poll')) {\n      return true;\n    }\n\n    if (this.options.step) {\n      return true;\n    }\n    \n    // disable auto proceed for unknown remediations\n    return false;\n  }\n\n  getData() {\n    const data = this.getInputs().reduce((acc, { name }) => {\n      acc[name] = this.values[name];\n      return acc;\n    }, {});\n    return data;\n  }\n\n  getNextStep(authClient: OktaAuthIdxInterface, _context?: IdxContext): NextStep {\n    const name = this.getName();\n    const inputs = this.getInputs();\n    \n    /* eslint-disable no-unused-vars, @typescript-eslint/no-unused-vars */\n    // excludes transformed fields\n    const { \n      // http metas have been transformed to action\n      href, \n      method, \n      rel, \n      accepts, \n      produces, \n      // value has been transform to inputs\n      value,\n      // will be transformed to a function that resolves IdxTransaction\n      action,\n      ...rest \n    } = this.remediation;\n    /* eslint-enable no-unused-vars, @typescript-eslint/no-unused-vars */\n\n    // step to handle form submission\n    if (action) {\n      return { \n        ...rest,\n        ...(!!inputs.length && { inputs }),\n        action: async (params?) => {\n          return authClient.idx.proceed({\n            step: name,\n            ...params\n          });\n        }\n      };\n    }\n\n    // return whole remediation data for other steps, eg \"redirect-idp\"\n    return { ...this.remediation } as NextStep;\n    \n  }\n\n  getInputs(): Input[] {\n    return (this.remediation.value || [])\n      .filter(({ name }) => name !== 'stateHandle')\n      .map(unwrapFormValue)\n      .map(input => {\n        // use string as default input type\n        input.type = input.type || 'string';\n        return input;\n      });\n  }\n\n}\n","/*!\n * Copyright (c) 2015-present, Okta, Inc. and/or its affiliates. All rights reserved.\n * The Okta software accompanied by this notice is provided pursuant to the Apache License, Version 2.0 (the \"License.\")\n *\n * You may obtain a copy of the License at http://www.apache.org/licenses/LICENSE-2.0.\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT\n * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * \n * See the License for the specific language governing permissions and limitations under the License.\n */\n\n\nimport { Credentials } from '../authenticator';\nimport { Remediator, RemediationValues } from './Base/Remediator';\n\nexport interface IdentifyValues extends RemediationValues {\n  username?: string;\n  password?: string;\n  credentials?: Credentials;\n  rememberMe?: boolean;\n}\n\nexport class Identify extends Remediator<IdentifyValues> {\n  static remediationName = 'identify';\n\n  map = {\n    'identifier': ['username']\n  };\n\n  canRemediate(): boolean {\n    const { identifier } = this.getData();\n    return !!identifier;\n  }\n\n  mapCredentials() {\n    const { credentials, password } = this.values;\n    if (!credentials && !password) {\n      return;\n    }\n    return credentials || { passcode: password };\n  }\n\n  getInputCredentials(input) {\n    return {\n      ...input.form.value[0],\n      name: 'password',\n      required: input.required\n    };\n  }\n\n}\n","/*!\n * Copyright (c) 2015-present, Okta, Inc. and/or its affiliates. All rights reserved.\n * The Okta software accompanied by this notice is provided pursuant to the Apache License, Version 2.0 (the \"License.\")\n *\n * You may obtain a copy of the License at http://www.apache.org/licenses/LICENSE-2.0.\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT\n * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * \n * See the License for the specific language governing permissions and limitations under the License.\n */\n\n\nimport { Remediator, RemediationValues } from './Base/Remediator';\n\nexport interface ReEnrollAuthenticatorValues extends RemediationValues {\n  newPassword?: string;\n}\n\nexport class ReEnrollAuthenticator extends Remediator<ReEnrollAuthenticatorValues> {\n  static remediationName = 'reenroll-authenticator';\n\n  mapCredentials() {\n    const { newPassword } = this.values;\n    if (!newPassword) {\n      return;\n    }\n    return { \n      passcode: newPassword,\n    };\n  }\n\n  getInputCredentials(input) {\n    // eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n    const challengeType = this.getAuthenticator()!.type;\n    const name = challengeType === 'password' ? 'newPassword' : 'verificationCode';\n    return {\n      ...input.form.value[0],\n      name\n    };\n  }\n\n}\n","/*!\n * Copyright (c) 2015-present, Okta, Inc. and/or its affiliates. All rights reserved.\n * The Okta software accompanied by this notice is provided pursuant to the Apache License, Version 2.0 (the \"License.\")\n *\n * You may obtain a copy of the License at http://www.apache.org/licenses/LICENSE-2.0.\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT\n * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * \n * See the License for the specific language governing permissions and limitations under the License.\n */\n\n\nimport { ReEnrollAuthenticator } from './ReEnrollAuthenticator';\n\nexport class ReEnrollAuthenticatorWarning extends ReEnrollAuthenticator {\n  static remediationName = 'reenroll-authenticator-warning';\n}\n","/*!\n * Copyright (c) 2015-present, Okta, Inc. and/or its affiliates. All rights reserved.\n * The Okta software accompanied by this notice is provided pursuant to the Apache License, Version 2.0 (the \"License.\")\n *\n * You may obtain a copy of the License at http://www.apache.org/licenses/LICENSE-2.0.\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT\n * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * \n * See the License for the specific language governing permissions and limitations under the License.\n */\n\n\nimport { Remediator } from './Base/Remediator';\n\nexport class RedirectIdp extends Remediator {\n  static remediationName = 'redirect-idp';\n\n  canRemediate() {\n    return false;\n  }\n\n  getNextStep() {\n    const { name, type, idp, href } = this.remediation;\n    return {\n      name,\n      type,\n      idp,\n      href\n    };\n  }\n\n}\n","/*!\n * Copyright (c) 2015-present, Okta, Inc. and/or its affiliates. All rights reserved.\n * The Okta software accompanied by this notice is provided pursuant to the Apache License, Version 2.0 (the \"License.\")\n *\n * You may obtain a copy of the License at http://www.apache.org/licenses/LICENSE-2.0.\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT\n * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * \n * See the License for the specific language governing permissions and limitations under the License.\n */\n\n\nimport { VerifyAuthenticator, VerifyAuthenticatorValues } from './Base/VerifyAuthenticator';\n\nexport type ResetAuthenticatorValues = VerifyAuthenticatorValues;\n\nexport class ResetAuthenticator extends VerifyAuthenticator<ResetAuthenticatorValues> {\n  static remediationName = 'reset-authenticator';\n}\n","/*!\n * Copyright (c) 2015-present, Okta, Inc. and/or its affiliates. All rights reserved.\n * The Okta software accompanied by this notice is provided pursuant to the Apache License, Version 2.0 (the \"License.\")\n *\n * You may obtain a copy of the License at http://www.apache.org/licenses/LICENSE-2.0.\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT\n * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * \n * See the License for the specific language governing permissions and limitations under the License.\n */\n\n\nimport { SelectAuthenticator, SelectAuthenticatorValues } from './Base/SelectAuthenticator';\nimport { getAuthenticatorFromRemediation } from './util';\nimport { IdxRemediation } from '../types/idx-js';\nimport { AuthenticatorKey, Authenticator, RemediateOptions } from '../types';\n\nexport type SelectAuthenticatorAuthenticateValues = SelectAuthenticatorValues & {\n  password?: string;\n};\n\nexport class SelectAuthenticatorAuthenticate extends SelectAuthenticator<SelectAuthenticatorAuthenticateValues> {\n  static remediationName = 'select-authenticator-authenticate';\n\n  constructor(\n    remediation: IdxRemediation, \n    values: SelectAuthenticatorValues = {}, \n    options: RemediateOptions = {}\n  ) {\n    super(remediation, values, options);\n\n    // Preset password authenticator to trigger recover action\n    const isRecoveryFlow = this.options.flow === 'recoverPassword';\n    const hasPasswordInOptions = getAuthenticatorFromRemediation(remediation)\n      .options?.some(({ relatesTo }) => relatesTo?.key === AuthenticatorKey.OKTA_PASSWORD);\n    if (hasPasswordInOptions && (isRecoveryFlow || this.values.password)) {\n      this.values.authenticators = [\n        ...this.values.authenticators || [],\n        { key: AuthenticatorKey.OKTA_PASSWORD }\n      ] as Authenticator[];\n    }\n  }\n}\n","/*!\n * Copyright (c) 2015-present, Okta, Inc. and/or its affiliates. All rights reserved.\n * The Okta software accompanied by this notice is provided pursuant to the Apache License, Version 2.0 (the \"License.\")\n *\n * You may obtain a copy of the License at http://www.apache.org/licenses/LICENSE-2.0.\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT\n * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * \n * See the License for the specific language governing permissions and limitations under the License.\n */\n\n\nimport { SelectAuthenticator, SelectAuthenticatorValues } from './Base/SelectAuthenticator';\n\nexport type SelectAuthenticatorEnrollValues = SelectAuthenticatorValues;\n\nexport class SelectAuthenticatorEnroll extends SelectAuthenticator<SelectAuthenticatorEnrollValues> {\n  static remediationName = 'select-authenticator-enroll';\n}\n","/*!\n * Copyright (c) 2015-present, Okta, Inc. and/or its affiliates. All rights reserved.\n * The Okta software accompanied by this notice is provided pursuant to the Apache License, Version 2.0 (the \"License.\")\n *\n * You may obtain a copy of the License at http://www.apache.org/licenses/LICENSE-2.0.\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT\n * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * \n * See the License for the specific language governing permissions and limitations under the License.\n */\n\n\nimport { SelectAuthenticator, SelectAuthenticatorValues } from './Base/SelectAuthenticator';\nimport { Authenticator } from '../types';\nimport { IdxRemediationValue } from '../types/idx-js';\n\n\nexport type SelectAuthenticatorUnlockAccountValues = SelectAuthenticatorValues & {\n  identifier?: string;\n  methodType?: string;\n};\n\nexport class SelectAuthenticatorUnlockAccount extends SelectAuthenticator<SelectAuthenticatorUnlockAccountValues> {\n  static remediationName = 'select-authenticator-unlock-account';\n  authenticator?: Authenticator;\n\n  map = {\n    identifier: ['username']\n  };\n\n  canRemediate() {\n    const identifier = this.getData('identifier');\n    return !!identifier && super.canRemediate();\n  }\n\n  mapAuthenticator(remediationValue: IdxRemediationValue) {\n    const authenticatorMap = super.mapAuthenticator(remediationValue);\n    const methodTypeOption = this.selectedOption?.value.form.value.find(({ name }) => name === 'methodType');\n\n    // defaults to 'manually defined' value\n    // 2nd: option may have pre-defined value, like stateHandle\n    // 3rd: if only a single OV option is available, default to that option\n    const methodTypeValue = this.values.methodType ||\n      methodTypeOption?.value as string || methodTypeOption?.options?.[0]?.value as string;\n\n    if (methodTypeValue) {\n      return {\n        ...authenticatorMap,\n        methodType: methodTypeValue\n      };\n    }\n\n    return authenticatorMap;\n  }\n\n  getInputUsername () {\n    return { name: 'username', type: 'string' };\n  }\n\n}\n","/*!\n * Copyright (c) 2015-present, Okta, Inc. and/or its affiliates. All rights reserved.\n * The Okta software accompanied by this notice is provided pursuant to the Apache License, Version 2.0 (the \"License.\")\n *\n * You may obtain a copy of the License at http://www.apache.org/licenses/LICENSE-2.0.\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT\n * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * \n * See the License for the specific language governing permissions and limitations under the License.\n */\n\n\nimport { Remediator, RemediationValues } from './Base/Remediator';\n\n// eslint-disable-next-line @typescript-eslint/no-empty-interface\nexport interface SelectEnrollProfileValues extends RemediationValues {}\n\nexport class SelectEnrollProfile extends Remediator<SelectEnrollProfileValues> {\n  static remediationName = 'select-enroll-profile';\n\n  canRemediate() {\n    return true;\n  }\n}\n","/*!\n * Copyright (c) 2021-present, Okta, Inc. and/or its affiliates. All rights reserved.\n * The Okta software accompanied by this notice is provided pursuant to the Apache License, Version 2.0 (the \"License.\")\n *\n * You may obtain a copy of the License at http://www.apache.org/licenses/LICENSE-2.0.\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT\n * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * \n * See the License for the specific language governing permissions and limitations under the License.\n */\n\n\nimport { Remediator, RemediationValues } from './Base/Remediator';\nimport { IdxRemediationValueForm, IdxContext } from '../types/idx-js';\nimport { Authenticator, OktaAuthIdxInterface } from '../types/api';\n\n\nexport type SelectEnrollmentChannelValues = RemediationValues & {\n  channel?: string;\n};\n\nexport class SelectEnrollmentChannel extends Remediator<SelectEnrollmentChannelValues> {\n  static remediationName = 'select-enrollment-channel';\n\n  canRemediate() {\n    if (this.values.channel) {\n      return true;\n    }\n\n    if (this.values.authenticator) {\n      const { id, channel } = this.values.authenticator as Authenticator;\n      if (!!id && !!channel) {\n        return true;\n      }\n    }\n\n    return false;\n  }\n\n  getNextStep(authClient: OktaAuthIdxInterface, context: IdxContext) {\n    const common = super.getNextStep(authClient, context);\n    const authenticator = context.currentAuthenticator.value;\n    return {\n      ...common,\n      authenticator,\n    };\n  }\n\n  getData() {\n    // eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n    const remediationValue = this.remediation!.value![0].value as IdxRemediationValueForm;\n    return {\n      authenticator: {\n        id: remediationValue.form.value[0].value,\n        channel: (this.values.authenticator as Authenticator)?.channel || this.values.channel,\n      },\n      stateHandle: this.values.stateHandle,\n\n    };\n  }\n\n  getValuesAfterProceed(): SelectEnrollmentChannelValues {\n    this.values = super.getValuesAfterProceed();\n    delete this.values.authenticators;    // required to prevent infinite loops from auto-remediating via values\n    const filterKey = this.values.channel ? 'channel' : 'authenticator';\n    let trimmedValues = Object.keys(this.values).filter(valueKey => valueKey !== filterKey);\n    return trimmedValues.reduce((values, valueKey) => ({...values, [valueKey]: this.values[valueKey]}), {});\n  }\n}\n","/*!\n * Copyright (c) 2015-present, Okta, Inc. and/or its affiliates. All rights reserved.\n * The Okta software accompanied by this notice is provided pursuant to the Apache License, Version 2.0 (the \"License.\")\n *\n * You may obtain a copy of the License at http://www.apache.org/licenses/LICENSE-2.0.\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT\n * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * \n * See the License for the specific language governing permissions and limitations under the License.\n */\n\n\nimport { Remediator, RemediationValues } from './Base/Remediator';\n\nexport interface SkipValues extends RemediationValues {\n  skip?: boolean;\n}\n\nexport class Skip extends Remediator<SkipValues> {\n  static remediationName = 'skip';\n\n  canRemediate() {\n    return !!this.values.skip || this.options.step === 'skip';\n  }\n\n}\n","/*!\n * Copyright (c) 2015-present, Okta, Inc. and/or its affiliates. All rights reserved.\n * The Okta software accompanied by this notice is provided pursuant to the Apache License, Version 2.0 (the \"License.\")\n *\n * You may obtain a copy of the License at http://www.apache.org/licenses/LICENSE-2.0.\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT\n * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * \n * See the License for the specific language governing permissions and limitations under the License.\n */\n\nimport { IdxRemediation, IdxRemediationValue } from '../types/idx-js';\n\nexport function getAllValues(idxRemediation: IdxRemediation) {\n  return idxRemediation.value?.map(r => r.name);\n}\n\nexport function getRequiredValues(idxRemediation: IdxRemediation) {\n  return idxRemediation.value?.reduce((required, cur) => {\n    if (cur.required) {\n      required.push(cur.name as never);\n    }\n    return required;\n  }, []);\n}\n\nexport function titleCase(str: string) {\n  return str.charAt(0).toUpperCase() + str.substring(1);\n}\n\nexport function getAuthenticatorFromRemediation(\n  remediation: IdxRemediation\n): IdxRemediationValue {\n  // eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n  return remediation.value!.find(({ name }) => name === 'authenticator') as IdxRemediationValue;\n}\n","/*!\n * Copyright (c) 2015-present, Okta, Inc. and/or its affiliates. All rights reserved.\n * The Okta software accompanied by this notice is provided pursuant to the Apache License, Version 2.0 (the \"License.\")\n *\n * You may obtain a copy of the License at http://www.apache.org/licenses/LICENSE-2.0.\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT\n * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * \n * See the License for the specific language governing permissions and limitations under the License.\n */\n\n\n/* eslint-disable max-statements, max-depth, complexity */\nimport { AuthSdkError } from '../errors';\nimport { RemediationValues } from './remediators';\nimport { OktaAuthIdxInterface, RemediateOptions, RemediationResponse } from './types';\nimport { \n  IdxResponse,\n  IdxActionParams, \n} from './types/idx-js';\nimport {\n  isTerminalResponse,\n  filterValuesForRemediation,\n  getRemediator,\n  getNextStep,\n  handleFailedResponse\n} from './util';\n\nexport interface RemediateActionWithOptionalParams {\n  name: string;\n  params?: IdxActionParams;\n}\n\nexport type RemediateAction = string | RemediateActionWithOptionalParams;\n\n\nfunction getActionFromValues(values: RemediationValues, idxResponse: IdxResponse): string | undefined {\n  // Currently support resend actions only\n  return Object.keys(idxResponse.actions).find(action => !!values.resend && action.includes('-resend'));\n}\n\nfunction removeActionFromValues(values: RemediationValues): RemediationValues {\n  // Currently support resend actions only\n  return {\n    ...values,\n    resend: undefined\n  };\n}\n\nfunction removeActionFromOptions(options: RemediateOptions, actionName: string): RemediateOptions {\n  let actions = options.actions || [];\n  actions = actions.filter(entry => {\n    if (typeof entry === 'string') {\n      return entry !== actionName;\n    }\n    return entry.name !== actionName;\n  });\n\n  return { ...options, actions };\n}\n\n// This function is called recursively until it reaches success or cannot be remediated\nexport async function remediate(\n  authClient: OktaAuthIdxInterface,\n  idxResponse: IdxResponse,\n  values: RemediationValues,\n  options: RemediateOptions\n): Promise<RemediationResponse> {\n  let { neededToProceed, interactionCode } = idxResponse;\n  const { flow } = options;\n\n  // If the response contains an interaction code, there is no need to remediate\n  if (interactionCode) {\n    return { idxResponse };\n  }\n\n  const remediator = getRemediator(idxResponse, values, options);\n\n  // Try actions in idxResponse first\n  const actionFromValues = getActionFromValues(values, idxResponse);\n  const actionFromOptions = options.actions || [];\n  const actions = [\n    ...actionFromOptions,\n    ...(actionFromValues && [actionFromValues] || []),\n  ];\n  if (actions) {\n    for (let action of actions) {\n      // Action can either be specified as a string, or as an object with name and optional params\n      let params: IdxActionParams = {};\n      if (typeof action !== 'string') {\n        params = action.params || {};\n        action = action.name;\n      }\n      let valuesWithoutExecutedAction = removeActionFromValues(values);\n      let optionsWithoutExecutedAction = removeActionFromOptions(options, action);\n\n      if (typeof idxResponse.actions[action] === 'function') {\n        idxResponse = await idxResponse.actions[action](params);\n        if (idxResponse.requestDidSucceed === false) {\n          return handleFailedResponse(authClient, idxResponse, options);\n        }\n        if (action === 'cancel') {\n          return { idxResponse, canceled: true };\n        }\n        return remediate(\n          authClient, \n          idxResponse, \n          valuesWithoutExecutedAction, \n          optionsWithoutExecutedAction\n        ); // recursive call\n      }\n\n      // search for action in remediation list\n      const remediationAction = neededToProceed.find(({ name }) => name === action);\n      if (remediationAction) {\n        idxResponse = await idxResponse.proceed(action, params);\n        if (idxResponse.requestDidSucceed === false) {\n          return handleFailedResponse(authClient, idxResponse, options);\n        }\n        return remediate(authClient, idxResponse, values, optionsWithoutExecutedAction); // recursive call\n      }\n    }\n  }\n\n  // Do not attempt to remediate if response is in terminal state\n  const terminal = isTerminalResponse(idxResponse);\n  if (terminal) {\n    return { idxResponse, terminal };\n  }\n\n  if (!remediator) {\n    // With options.step, remediator is not required\n    if (options.step) {\n      values = filterValuesForRemediation(idxResponse, options.step, values); // include only requested values\n      idxResponse = await idxResponse.proceed(options.step, values);\n      if (idxResponse.requestDidSucceed === false) {\n        return handleFailedResponse(authClient, idxResponse, options);\n      }\n      return { idxResponse };\n    }\n\n    // With default flow, remediator is not required\n    if (flow === 'default') {\n      return { idxResponse };\n    }\n    throw new AuthSdkError(`\n      No remediation can match current flow, check policy settings in your org.\n      Remediations: [${neededToProceed.reduce((acc, curr) => acc ? acc + ' ,' + curr.name : curr.name, '')}]\n    `);\n  }\n\n  // Return next step to the caller\n  if (!remediator.canRemediate()) {\n    const nextStep = getNextStep(authClient, remediator, idxResponse);\n    return {\n      idxResponse,\n      nextStep,\n    };\n  }\n\n  const name = remediator.getName();\n  const data = remediator.getData();\n\n  idxResponse = await idxResponse.proceed(name, data);\n  if (idxResponse.requestDidSucceed === false) {\n    return handleFailedResponse(authClient, idxResponse, options);\n  }\n  // We may want to trim the values bag for the next remediation\n  // Let the remediator decide what the values should be (default to current values)\n  values = remediator.getValuesAfterProceed();\n  options = { ...options, step: undefined }; // do not re-use the step\n\n  // generic remediator should not auto proceed in pending status\n  // return nextStep directly\n  if (options.useGenericRemediator && !idxResponse.interactionCode && !isTerminalResponse(idxResponse)) {\n    // eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n    const gr = getRemediator(idxResponse, values, options)!;\n    const nextStep = getNextStep(authClient, gr, idxResponse);\n    return {\n      idxResponse,\n      nextStep,\n    };\n  }\n  \n  return remediate(authClient, idxResponse, values, options); // recursive call\n\n}\n","/* eslint-disable @typescript-eslint/no-non-null-assertion */\n/*!\n * Copyright (c) 2015-present, Okta, Inc. and/or its affiliates. All rights reserved.\n * The Okta software accompanied by this notice is provided pursuant to the Apache License, Version 2.0 (the \"License.\")\n *\n * You may obtain a copy of the License at http://www.apache.org/licenses/LICENSE-2.0.\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT\n * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * \n * See the License for the specific language governing permissions and limitations under the License.\n */\n\n\n/* eslint-disable max-statements, complexity, max-depth */\nimport { interact } from './interact';\nimport { introspect } from './introspect';\nimport { remediate } from './remediate';\nimport { RemediationValues } from './remediators/Base/Remediator';\nimport { \n  OktaAuthIdxInterface,\n  IdxStatus,\n  IdxTransaction,\n  IdxFeature,\n  NextStep,\n  RunOptions,\n  IdxTransactionMeta,\n} from './types';\nimport { IdxMessage, IdxResponse } from './types/idx-js';\nimport { getSavedTransactionMeta, saveTransactionMeta } from './transactionMeta';\nimport {\n  getAvailableSteps,\n  getEnabledFeatures,\n  getMessagesFromResponse,\n  isTerminalResponse,\n  getFlowSpecification\n} from './util';\nimport { Tokens } from '../oidc/types';\nimport { APIError } from '../errors/types';\ndeclare interface RunData {\n  options: RunOptions;\n  values: RemediationValues;\n  status?: IdxStatus;\n  tokens?: Tokens;\n  nextStep?: NextStep;\n  messages?: IdxMessage[];\n  error?: APIError | IdxResponse;\n  meta?: IdxTransactionMeta;\n  enabledFeatures?: IdxFeature[];\n  availableSteps?: NextStep[];\n  idxResponse?: IdxResponse;\n  canceled?: boolean;\n  interactionCode?: string;\n  shouldSaveResponse?: boolean;\n  shouldClearTransaction?: boolean;\n  clearSharedStorage?: boolean;\n  terminal?: boolean;\n}\n\nfunction initializeValues(options: RunOptions) {\n  // remove known options, everything else is assumed to be a value\n  const knownOptions = [\n    'flow', \n    'remediators', \n    'actions', \n    'withCredentials', \n    'step',\n    'useGenericRemediator',\n    'exchangeCodeForTokens',\n  ];\n  const values = { ...options };\n  knownOptions.forEach(option => {\n    delete values[option];\n  });\n  return values;\n}\n\nfunction initializeData(authClient: OktaAuthIdxInterface, data: RunData): RunData {\n  let { options } = data;\n  options = {\n    ...authClient.options.idx,\n    ...options\n  };\n  let {\n    flow,\n    withCredentials,\n    remediators,\n    actions,\n  } = options;\n\n  const status = IdxStatus.PENDING;\n\n  // certain options can be set by the flow specification\n  flow = flow || authClient.idx.getFlow?.() || 'default';\n  if (flow) {\n    authClient.idx.setFlow?.(flow);\n    const flowSpec = getFlowSpecification(authClient, flow);\n    // Favor option values over flow spec\n    withCredentials = (typeof withCredentials !== 'undefined') ? withCredentials : flowSpec.withCredentials;\n    remediators = remediators || flowSpec.remediators;\n    actions = actions || flowSpec.actions;\n  }\n\n  return { \n    ...data,\n    options: { \n      ...options, \n      flow, \n      withCredentials, \n      remediators, \n      actions,\n    },\n    status\n  };\n}\n\nasync function getDataFromIntrospect(authClient: OktaAuthIdxInterface, data: RunData): Promise<RunData> {\n  const { options } = data;\n  const {\n    stateHandle,\n    withCredentials,\n    version,\n    state,\n    scopes,\n    recoveryToken,\n    activationToken,\n    maxAge,\n    acrValues,\n    nonce,\n    useGenericRemediator,\n  } = options;\n\n  let idxResponse;\n  let meta = getSavedTransactionMeta(authClient, { state, recoveryToken, activationToken }); // may be undefined\n\n  if (stateHandle) {\n    idxResponse = await introspect(authClient, { withCredentials, version, stateHandle, useGenericRemediator });\n  } else {\n    let interactionHandle = meta?.interactionHandle; // may be undefined\n    if (!interactionHandle) {\n      // start a new transaction\n      authClient.transactionManager.clear();\n      const interactResponse = await interact(authClient, {\n        withCredentials,\n        state,\n        scopes,\n        activationToken,\n        recoveryToken,\n        maxAge,\n        acrValues,\n        nonce,\n      }); \n      interactionHandle = interactResponse.interactionHandle;\n      meta = interactResponse.meta;\n    }\n  \n    // Introspect to get idx response\n    idxResponse = await introspect(authClient, { withCredentials, version, interactionHandle, useGenericRemediator });\n  }\n  return { ...data, idxResponse, meta };\n}\n\nasync function getDataFromRemediate(authClient: OktaAuthIdxInterface, data: RunData): Promise<RunData> {\n  let {\n    idxResponse,\n    options,\n    values\n  } = data;\n\n  const {\n    autoRemediate,\n    remediators,\n    actions,\n    flow,\n    step,\n    useGenericRemediator,\n  } = options;\n  \n  const shouldRemediate = (autoRemediate !== false && (remediators || actions || step));\n  if (!shouldRemediate) {\n    return data;\n  }\n\n  values = { \n    ...values, \n    stateHandle: idxResponse!.rawIdxState.stateHandle \n  };\n\n  // Can we handle the remediations?\n  const { \n    idxResponse: idxResponseFromRemediation, \n    nextStep,\n    canceled,\n  } = await remediate(\n    authClient,\n    idxResponse!, \n    values, \n    {\n      remediators,\n      actions,\n      flow,\n      step,\n      useGenericRemediator,\n    }\n  );\n  idxResponse = idxResponseFromRemediation;\n\n  return { ...data, idxResponse, nextStep, canceled };\n}\n\nasync function getTokens(authClient: OktaAuthIdxInterface, data: RunData): Promise<Tokens> {\n  let { meta, idxResponse } = data;\n  const { interactionCode } = idxResponse as IdxResponse;\n  const {\n    clientId,\n    codeVerifier,\n    ignoreSignature,\n    redirectUri,\n    urls,\n    scopes,\n  } = meta as IdxTransactionMeta;\n  const tokenResponse = await authClient.token.exchangeCodeForTokens({\n    interactionCode,\n    clientId,\n    codeVerifier,\n    ignoreSignature,\n    redirectUri,\n    scopes\n  }, urls);\n  return tokenResponse.tokens;\n}\n\nasync function finalizeData(authClient: OktaAuthIdxInterface, data: RunData): Promise<RunData> {\n  let {\n    options,\n    idxResponse,\n    canceled,\n    status,\n  } = data;\n  const { exchangeCodeForTokens } = options;\n  let shouldSaveResponse = false;\n  let shouldClearTransaction = false;\n  let clearSharedStorage = true;\n  let interactionCode;\n  let tokens;\n  let enabledFeatures;\n  let availableSteps;\n  let messages;\n  let terminal;\n\n  if (idxResponse) {\n    shouldSaveResponse = !!(idxResponse.requestDidSucceed || idxResponse.stepUp);\n    enabledFeatures = getEnabledFeatures(idxResponse);\n    availableSteps = getAvailableSteps(authClient, idxResponse, options.useGenericRemediator);\n    messages = getMessagesFromResponse(idxResponse, options);\n    terminal = isTerminalResponse(idxResponse);\n  }\n\n  if (terminal) {\n    status = IdxStatus.TERMINAL;\n\n    // In most cases a terminal response should not clear transaction data. The user should cancel or skip to continue.\n    // A terminal \"success\" is a non-error response with no further actions available.\n    // In these narrow cases, saved transaction data should be cleared.\n    // One example of a terminal success is when the email verify flow is continued in another tab\n    const hasActions = Object.keys(idxResponse!.actions).length > 0;\n    const hasErrors = !!messages.find(msg => msg.class === 'ERROR');\n    const isTerminalSuccess = !hasActions && !hasErrors && idxResponse!.requestDidSucceed === true;\n    if (isTerminalSuccess) {\n      shouldClearTransaction = true;\n    } else {\n      // save response if there are actions available (ignore messages)\n      shouldSaveResponse = !!hasActions;\n    }\n    // leave shared storage intact so the transaction can be continued in another tab\n    clearSharedStorage = false;\n  } else if (canceled) {\n    status = IdxStatus.CANCELED;\n    shouldClearTransaction = true;\n  } else if (idxResponse?.interactionCode) { \n    interactionCode = idxResponse.interactionCode;\n    if (exchangeCodeForTokens === false) {\n      status = IdxStatus.SUCCESS;\n      shouldClearTransaction = false;\n    } else {\n      tokens = await getTokens(authClient, data);\n      status = IdxStatus.SUCCESS;\n      shouldClearTransaction = true;\n    }\n  }\n  return {\n    ...data,\n    status,\n    interactionCode,\n    tokens,\n    shouldSaveResponse,\n    shouldClearTransaction,\n    clearSharedStorage,\n    enabledFeatures,\n    availableSteps,\n    messages,\n    terminal\n  };\n}\n\nexport async function run(\n  authClient: OktaAuthIdxInterface, \n  options: RunOptions = {},\n): Promise<IdxTransaction> {\n  let data: RunData = {\n    options,\n    values: initializeValues(options)\n  };\n\n  data = initializeData(authClient, data);\n  data = await getDataFromIntrospect(authClient, data);\n  data = await getDataFromRemediate(authClient, data);\n  data = await finalizeData(authClient, data);\n\n  const {\n    idxResponse,\n    meta,\n    shouldSaveResponse,\n    shouldClearTransaction,\n    clearSharedStorage,\n    status,\n    enabledFeatures,\n    availableSteps,\n    tokens,\n    nextStep,\n    messages,\n    error,\n    interactionCode\n  } = data;\n\n  if (shouldClearTransaction) {\n    authClient.transactionManager.clear({ clearSharedStorage });\n  }\n  else {\n    // ensures state is saved to sessionStorage\n    saveTransactionMeta(authClient, { ...meta });\n\n    if (shouldSaveResponse) {\n      // Save intermediate idx response in storage to reduce introspect call\n      const { rawIdxState: rawIdxResponse, requestDidSucceed } = idxResponse!;\n      authClient.transactionManager.saveIdxResponse({\n        rawIdxResponse,\n        requestDidSucceed,\n        stateHandle: idxResponse!.context?.stateHandle,\n        interactionHandle: meta?.interactionHandle\n      });\n    }\n  }\n  \n  // copy all fields from idxResponse which are needed by the widget\n  const { actions, context, neededToProceed, proceed, rawIdxState, requestDidSucceed, stepUp } = idxResponse || {};\n  return {\n    status: status!,\n    ...(meta && { meta }),\n    ...(enabledFeatures && { enabledFeatures }),\n    ...(availableSteps && { availableSteps }),\n    ...(tokens && { tokens }),\n    ...(nextStep && { nextStep }),\n    ...(messages && messages.length && { messages }),\n    ...(error && { error }),\n    ...(stepUp && { stepUp }),\n    interactionCode, // if options.exchangeCodeForTokens is false\n\n    // from idx-js\n    actions: actions!,\n    context: context!,\n    neededToProceed: neededToProceed!,\n    proceed: proceed!,\n    rawIdxState: rawIdxState!,\n    requestDidSucceed\n  };\n}\n","/*!\n * Copyright (c) 2015-present, Okta, Inc. and/or its affiliates. All rights reserved.\n * The Okta software accompanied by this notice is provided pursuant to the Apache License, Version 2.0 (the \"License.\")\n *\n * You may obtain a copy of the License at http://www.apache.org/licenses/LICENSE-2.0.\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT\n * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * \n * See the License for the specific language governing permissions and limitations under the License.\n */\n\n\nimport { run } from './run';\nimport { OktaAuthIdxInterface, IdxTransaction, StartOptions } from './types';\n\nexport async function startTransaction(\n  authClient: OktaAuthIdxInterface, \n  options: StartOptions = {}\n): Promise<IdxTransaction> {\n  // Clear IDX response cache and saved transaction meta (if any)\n  authClient.transactionManager.clear();\n\n  return run(authClient, {\n    exchangeCodeForTokens: false,\n    ...options\n  });\n}\n","import { CookieOptions, StorageManagerOptions, StorageOptions, StorageUtil } from '../storage/types';\nimport {  IdxTransactionMeta } from './types';\nimport { SavedObject } from '../storage';\nimport { IDX_RESPONSE_STORAGE_NAME } from '../constants';\nimport { createCoreStorageManager } from '../core/storage';\nimport { IdxResponseStorage } from './types/storage';\nimport { isBrowser } from '../features';\nimport { warn } from '../util';\nimport AuthSdkError from '../errors/AuthSdkError';\n\nexport function createIdxStorageManager<M extends IdxTransactionMeta>()\n{\n  const CoreStorageManager = createCoreStorageManager<M>();\n  return class IdxStorageManager extends CoreStorageManager\n  {\n    constructor(storageManagerOptions: StorageManagerOptions, cookieOptions: CookieOptions, storageUtil: StorageUtil) {\n      super(storageManagerOptions, cookieOptions, storageUtil);\n    }\n\n    // intermediate idxResponse\n    // store for network traffic optimazation purpose\n    // TODO: revisit in auth-js 6.0 epic JIRA: OKTA-399791\n    getIdxResponseStorage(options?: StorageOptions): IdxResponseStorage | null {\n      let storage;\n      if (isBrowser()) {\n        // on browser side only use memory storage \n        try {\n          storage = this.storageUtil.getStorageByType('memory', options);\n        } catch (e) {\n          // it's ok to miss response storage\n          // eslint-disable-next-line max-len\n          warn('No response storage found, you may want to provide custom implementation for intermediate idx responses to optimize the network traffic');\n        }\n      } else {\n        // on server side re-use transaction custom storage\n        const transactionStorage = this.getTransactionStorage(options);\n        if (transactionStorage) {\n          storage = {\n            getItem: (key) => {\n              const transaction = transactionStorage.getStorage();\n              if (transaction && transaction[key]) {\n                return transaction[key];\n              }\n              return null;\n            },\n            setItem: (key, val) => {\n              const transaction = transactionStorage.getStorage();\n              if (!transaction) {\n                throw new AuthSdkError('Transaction has been cleared, failed to save idxState');\n              }\n              transaction[key] = val;\n              transactionStorage.setStorage(transaction);\n            },\n            removeItem: (key) => {\n              const transaction = transactionStorage.getStorage();\n              if (!transaction) {\n                return;\n              }\n              delete transaction[key];\n              transactionStorage.setStorage(transaction);\n            }\n          };\n        }\n      }\n\n      if (!storage) {\n        return null;\n      }\n\n      return new SavedObject(storage, IDX_RESPONSE_STORAGE_NAME);\n    }\n  };\n}\n","/* eslint-disable @typescript-eslint/no-non-null-assertion */\n/*!\n * Copyright (c) 2021, Okta, Inc. and/or its affiliates. All rights reserved.\n * The Okta software accompanied by this notice is provided pursuant to the Apache License, Version 2.0 (the \"License.\")\n *\n * You may obtain a copy of the License at http://www.apache.org/licenses/LICENSE-2.0.\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT\n * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n *\n * See the License for the specific language governing permissions and limitations under the License.\n */\n\nimport { OktaAuthIdxInterface, IdxTransactionMeta, IdxTransactionMetaOptions } from './types';\nimport { removeNils, warn } from '../util';\nimport { createOAuthMeta, PKCETransactionMeta } from '../oidc';\n\n// Calculate new values\nexport async function createTransactionMeta(\n  authClient: OktaAuthIdxInterface,\n  options: IdxTransactionMetaOptions = {}\n): Promise<IdxTransactionMeta> {\n  const tokenParams = await authClient.token.prepareTokenParams(options);\n  const pkceMeta = createOAuthMeta(authClient, tokenParams) as PKCETransactionMeta;\n  let {\n    flow = 'default',\n    withCredentials = true,\n    activationToken = undefined,\n    recoveryToken = undefined,\n    maxAge = undefined,\n    acrValues = undefined,\n  } = { ...authClient.options, ...options }; // local options override SDK options\n\n  const meta: IdxTransactionMeta = {\n    ...pkceMeta,\n    flow,\n    withCredentials,\n    activationToken,\n    recoveryToken,\n    maxAge,\n    acrValues\n  };\n  return meta;\n}\n\nexport function hasSavedInteractionHandle(\n  authClient: OktaAuthIdxInterface,\n  options?: IdxTransactionMetaOptions\n): boolean {\n  const savedMeta = getSavedTransactionMeta(authClient, options);\n  if (savedMeta?.interactionHandle) {\n    return true;\n  }\n  return false;\n}\n\n// Returns the saved transaction meta, if it exists and is valid\nexport function getSavedTransactionMeta(\n  authClient: OktaAuthIdxInterface,\n  options?: IdxTransactionMetaOptions\n): IdxTransactionMeta | undefined {\n  options = removeNils(options);\n  options = { ...authClient.options, ...options }; // local options override SDK options\n  let savedMeta;\n  try {\n    savedMeta = authClient.transactionManager.load(options) as IdxTransactionMeta;\n  } catch (e) {\n    // ignore errors here\n  }\n\n  if (!savedMeta) {\n    return;\n  }\n\n  if (isTransactionMetaValid(savedMeta, options)) {\n    return savedMeta;\n  }\n\n  // existing meta is not valid for this configuration\n  // this is common when changing configuration in local development environment\n  // in a production environment, this may indicate that two apps are sharing a storage key\n  warn('Saved transaction meta does not match the current configuration. ' + \n    'This may indicate that two apps are sharing a storage key.');\n\n}\n\nexport async function getTransactionMeta(\n  authClient: OktaAuthIdxInterface,\n  options?: IdxTransactionMetaOptions\n): Promise<IdxTransactionMeta> {\n  options = removeNils(options);\n  options = { ...authClient.options, ...options }; // local options override SDK options\n  // Load existing transaction meta from storage\n  const validExistingMeta = getSavedTransactionMeta(authClient, options);\n  if (validExistingMeta) {\n    return validExistingMeta;\n  }\n  // No existing? Create new transaction meta.\n  return createTransactionMeta(authClient, options);\n}\n\nexport function saveTransactionMeta (authClient: OktaAuthIdxInterface, meta): void {\n  authClient.transactionManager.save(meta, { muteWarning: true });\n}\n\nexport function clearTransactionMeta (authClient: OktaAuthIdxInterface): void {\n  authClient.transactionManager.clear();\n}\n\nexport function isTransactionMetaValid (meta, options: IdxTransactionMetaOptions  = {}): boolean {\n  // Validate against certain options. If these exist in options, they must match in meta\n  const keys = [\n    'issuer',\n    'clientId',\n    'redirectUri',\n    'state',\n    'codeChallenge',\n    'codeChallengeMethod',\n    'activationToken',\n    'recoveryToken'\n  ];\n  if (isTransactionMetaValidForOptions(meta, options, keys) === false) {\n    return false;\n  }\n\n  // Validate configured flow\n  const { flow } = options;\n  if (isTransactionMetaValidForFlow(meta, flow) === false) {\n    return false;\n  }\n\n  return true;\n}\n\nexport function isTransactionMetaValidForFlow(meta, flow) {\n  // Specific flows should not share transaction data\n  const shouldValidateFlow = flow && flow !== 'default' && flow !== 'proceed';\n  if (shouldValidateFlow) {\n    if (flow !== meta.flow) {\n      // The flow has changed; abandon the old transaction\n      return false;\n    }\n  }\n  return true;\n}\n\nexport function isTransactionMetaValidForOptions(meta, options, keys) {\n  // returns false if values in meta do not match options\n  // if the option does not have a value for a specific key, it is ignored\n  const mismatch = keys.some(key => {\n    const value = options[key];\n    if (value && value !== meta[key]) {\n      return true;\n    }\n  });\n  return !mismatch;\n}\n","/*!\n * Copyright (c) 2021-present, Okta, Inc. and/or its affiliates. All rights reserved.\n * The Okta software accompanied by this notice is provided pursuant to the Apache License, Version 2.0 (the \"License.\")\n *\n * You may obtain a copy of the License at http://www.apache.org/licenses/LICENSE-2.0.\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT\n * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n *\n * See the License for the specific language governing permissions and limitations under the License.\n */\n\nimport { APIError } from '../../errors/types';\nimport {\n  OktaAuthOAuthInterface,\n  MinimalOktaOAuthInterface,\n  Tokens,\n  TransactionManagerConstructor,\n  TransactionManagerInterface\n} from '../../oidc/types';\nimport { FlowIdentifier } from './FlowIdentifier';\nimport {\n  IdxActions,\n  IdxAuthenticator,\n  IdxContext,\n  IdxForm,\n  IdxMessage,\n  IdxOption,\n  IdxRemediation,\n  IdxResponse,\n  RawIdxResponse,\n  IdxActionParams,\n  IdpConfig,\n  IdxToPersist,\n  ChallengeData,\n  ActivationData,\n} from './idx-js';\nimport {\n  AccountUnlockOptions,\n  AuthenticationOptions,\n  CancelOptions,\n  InteractOptions,\n  IntrospectOptions,\n  OktaAuthIdxOptions,\n  PasswordRecoveryOptions,\n  ProceedOptions,\n  RegistrationOptions,\n  StartOptions,\n  IdxTransactionMetaOptions\n} from './options';\nimport { IdxTransactionMeta } from './meta';\nimport { IdxStorageManagerInterface, SavedIdxResponse } from './storage';\nimport type {\n  WebauthnEnrollValues,\n  WebauthnVerificationValues\n} from '../authenticator';\nimport { OktaAuthConstructor, FingerprintAPI } from '../../base/types';\n\nexport enum IdxStatus {\n  SUCCESS = 'SUCCESS',\n  PENDING = 'PENDING',\n  FAILURE = 'FAILURE',\n  TERMINAL = 'TERMINAL',\n  CANCELED = 'CANCELED',\n}\n\nexport enum AuthenticatorKey {\n  OKTA_PASSWORD = 'okta_password',\n  OKTA_EMAIL = 'okta_email',\n  PHONE_NUMBER = 'phone_number',\n  GOOGLE_AUTHENTICATOR = 'google_otp',\n  SECURITY_QUESTION = 'security_question',\n  OKTA_VERIFY = 'okta_verify',\n  WEBAUTHN = 'webauthn',\n}\n\nexport type Input = {\n  name: string;\n  key?: string;\n  type?: string;\n  label?: string;\n  value?: string | {form: IdxForm} | Input[];\n  minLength?: number;\n  maxLength?: number;\n  secret?: boolean;\n  required?: boolean;\n  options?: IdxOption[];\n  mutable?: boolean;\n  visible?: boolean;\n  customLabel?: boolean\n}\n\n\nexport interface IdxPollOptions {\n  required?: boolean;\n  refresh?: number;\n}\n\nexport type NextStep = {\n  name: string;\n  authenticator?: IdxAuthenticator;\n  canSkip?: boolean;\n  canResend?: boolean;\n  inputs?: Input[];\n  poll?: IdxPollOptions;\n  authenticatorEnrollments?: IdxAuthenticator[];\n  // eslint-disable-next-line no-use-before-define\n  action?: (params?: IdxActionParams) => Promise<IdxTransaction>;\n  idp?: IdpConfig;\n  href?: string;\n  relatesTo?: {\n    type?: string;\n    value: IdxAuthenticator;\n  };\n  refresh?: number;\n}\n\nexport enum IdxFeature {\n  PASSWORD_RECOVERY = 'recover-password',\n  REGISTRATION = 'enroll-profile',\n  SOCIAL_IDP = 'redirect-idp',\n  ACCOUNT_UNLOCK = 'unlock-account',\n}\n\n\nexport interface IdxTransaction {\n  status: IdxStatus;\n  tokens?: Tokens;\n  nextStep?: NextStep;\n  messages?: IdxMessage[];\n  error?: APIError | IdxResponse;\n  meta?: IdxTransactionMeta;\n  enabledFeatures?: IdxFeature[];\n  availableSteps?: NextStep[];\n  requestDidSucceed?: boolean;\n  stepUp?: boolean;\n  \n  // from idx-js, used by signin widget\n  proceed: (remediationName: string, params: unknown) => Promise<IdxResponse>;\n  neededToProceed: IdxRemediation[];\n  rawIdxState: RawIdxResponse;\n  interactionCode?: string;\n  actions: IdxActions;\n  context: IdxContext;\n}\n\n\nexport type Authenticator = {\n  id?: string;\n  key?: string;\n  methodType?: string;\n  phoneNumber?: string;\n  channel?: string;\n};\n\nexport function isAuthenticator(obj: any): obj is Authenticator {\n  return obj && (obj.key || obj.id);\n}\n\nexport interface RemediationResponse {\n  idxResponse: IdxResponse;\n  nextStep?: NextStep;\n  messages?: IdxMessage[];\n  terminal?: boolean;\n  canceled?: boolean;\n}\n\nexport interface InteractResponse {\n  state?: string;\n  interactionHandle: string;\n  meta: IdxTransactionMeta;\n}\n\nexport interface EmailVerifyCallbackResponse {\n  state: string;\n  otp: string;\n}\n\nexport interface MinimalIdxAPI {\n  // lowest level api\n  makeIdxResponse: (rawIdxResponse: RawIdxResponse, toPersist: IdxToPersist, requestDidSucceed: boolean) => IdxResponse;\n\n  // flow control\n  start: (options?: StartOptions) => Promise<IdxTransaction>;\n  canProceed(options?: ProceedOptions): boolean;\n  proceed: (options?: ProceedOptions) => Promise<IdxTransaction>;\n\n  // call `start` instead of `startTransaction`. `startTransaction` will be removed in next major version (7.0)\n  startTransaction: (options?: StartOptions) => Promise<IdxTransaction>;\n\n  // transaction meta\n  getSavedTransactionMeta: (options?: IdxTransactionMetaOptions) => IdxTransactionMeta | undefined;\n  createTransactionMeta: (options?: IdxTransactionMetaOptions) => Promise<IdxTransactionMeta>;\n  getTransactionMeta: (options?: IdxTransactionMetaOptions) => Promise<IdxTransactionMeta>;\n  saveTransactionMeta: (meta: unknown) => void;\n  clearTransactionMeta: () => void;\n  isTransactionMetaValid: (meta: unknown) => boolean;\n}\n\nexport interface IdxAPI {\n  // lowest level api\n  interact: (options?: InteractOptions) => Promise<InteractResponse>;\n  introspect: (options?: IntrospectOptions) => Promise<IdxResponse>;\n  makeIdxResponse: (rawIdxResponse: RawIdxResponse, toPersist: IdxToPersist, requestDidSucceed: boolean) => IdxResponse;\n\n  // flow entrypoints\n  authenticate: (options?: AuthenticationOptions) => Promise<IdxTransaction>;\n  register: (options?: RegistrationOptions) => Promise<IdxTransaction>;\n  recoverPassword: (options?: PasswordRecoveryOptions) => Promise<IdxTransaction>;\n  unlockAccount: (options?: AccountUnlockOptions) => Promise<IdxTransaction>;\n  poll: (options?: IdxPollOptions) => Promise<IdxTransaction>;\n\n  // flow control\n  start: (options?: StartOptions) => Promise<IdxTransaction>;\n  canProceed(options?: ProceedOptions): boolean;\n  proceed: (options?: ProceedOptions) => Promise<IdxTransaction>;\n  cancel: (options?: CancelOptions) => Promise<IdxTransaction>;\n  getFlow(): FlowIdentifier | undefined;\n  setFlow(flow: FlowIdentifier): void;\n\n  // call `start` instead of `startTransaction`. `startTransaction` will be removed in next major version (7.0)\n  startTransaction: (options?: StartOptions) => Promise<IdxTransaction>;\n\n  // redirect callbacks\n  isInteractionRequired: (hashOrSearch?: string) => boolean;\n  isInteractionRequiredError: (error: Error) => boolean; \n  handleInteractionCodeRedirect: (url: string) => Promise<void>;\n  isEmailVerifyCallback: (search: string) => boolean;\n  parseEmailVerifyCallback: (search: string) => EmailVerifyCallbackResponse;\n  handleEmailVerifyCallback: (search: string) => Promise<IdxTransaction | undefined>;\n  isEmailVerifyCallbackError: (error: Error) => boolean;\n\n  // transaction meta\n  getSavedTransactionMeta: (options?: IdxTransactionMetaOptions) => IdxTransactionMeta | undefined;\n  createTransactionMeta: (options?: IdxTransactionMetaOptions) => Promise<IdxTransactionMeta>;\n  getTransactionMeta: (options?: IdxTransactionMetaOptions) => Promise<IdxTransactionMeta>;\n  saveTransactionMeta: (meta: unknown) => void;\n  clearTransactionMeta: () => void;\n  isTransactionMetaValid: (meta: unknown) => boolean;\n}\n\nexport interface IdxTransactionManagerInterface extends TransactionManagerInterface {\n  saveIdxResponse(data: SavedIdxResponse): void;\n  loadIdxResponse(options?: IntrospectOptions): SavedIdxResponse | null;\n  clearIdxResponse(): void;\n}\n\nexport type IdxTransactionManagerConstructor = TransactionManagerConstructor<IdxTransactionManagerInterface>;\n\nexport interface WebauthnAPI {\n  getAssertion(credential: PublicKeyCredential): WebauthnVerificationValues;\n  getAttestation(credential: PublicKeyCredential): WebauthnEnrollValues;\n  buildCredentialRequestOptions(\n    challengeData: ChallengeData, authenticatorEnrollments: IdxAuthenticator[]\n  ): CredentialRequestOptions;\n  buildCredentialCreationOptions(\n    activationData: ActivationData, authenticatorEnrollments: IdxAuthenticator[]\n  ): CredentialCreationOptions;\n}\n\n\nexport interface OktaAuthIdxInterface\n<\n  M extends IdxTransactionMeta = IdxTransactionMeta,\n  S extends IdxStorageManagerInterface<M> = IdxStorageManagerInterface<M>,\n  O extends OktaAuthIdxOptions = OktaAuthIdxOptions,\n  TM extends IdxTransactionManagerInterface = IdxTransactionManagerInterface\n>\n  extends OktaAuthOAuthInterface<M, S, O, TM>\n{\n  idx: IdxAPI;\n  fingerprint: FingerprintAPI;\n}\n\nexport interface MinimalOktaAuthIdxInterface\n<\n  M extends IdxTransactionMeta = IdxTransactionMeta,\n  S extends IdxStorageManagerInterface<M> = IdxStorageManagerInterface<M>,\n  O extends OktaAuthIdxOptions = OktaAuthIdxOptions,\n  TM extends IdxTransactionManagerInterface = IdxTransactionManagerInterface\n>\n  extends MinimalOktaOAuthInterface<M, S, O, TM>\n{\n  idx: MinimalIdxAPI;\n  fingerprint: FingerprintAPI;\n}\n\nexport interface OktaAuthIdxConstructor\n<\n  I extends MinimalOktaAuthIdxInterface = OktaAuthIdxInterface\n>\n extends OktaAuthConstructor<I>\n{\n  new(...args: any[]): I;\n  webauthn: WebauthnAPI;\n}\n","/* eslint-disable no-use-before-define */\n/*!\n * Copyright (c) 2015-present, Okta, Inc. and/or its affiliates. All rights reserved.\n * The Okta software accompanied by this notice is provided pursuant to the Apache License, Version 2.0 (the \"License.\")\n *\n * You may obtain a copy of the License at http://www.apache.org/licenses/LICENSE-2.0.\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT\n * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * \n * See the License for the specific language governing permissions and limitations under the License.\n */\n\nimport { Input } from './api';\n\n\n// TODO: remove when idx-js provides type information\n\nexport interface ChallengeData {\n  challenge: string; \n  userVerification: string; \n  extensions?: {\n    appid: string;\n  };\n}\nexport interface ActivationData {\n  challenge: string;\n  rp: {\n    name: string;\n  };\n  user: {\n    id: string;\n    name: string;\n    displayName: string;\n  };\n  pubKeyCredParams: {\n    type: string;\n    alg: number;\n  }[];\n  attestation?: string;\n  authenticatorSelection?: {\n    userVerification?: string;\n    authenticatorAttachment?: string;\n    requireResidentKey?: boolean;\n    residentKey?: string;\n  };\n  excludeCredentials?: {\n    id: string;\n    type: string;\n  }[];\n}\nexport interface IdxAuthenticatorMethod {\n  type: string;\n}\nexport interface IdxAuthenticator {\n  displayName: string;\n  id: string;\n  key: string;\n  methods: IdxAuthenticatorMethod[];\n  type: string;\n  settings?: {\n    complexity?: unknown;\n    age?: unknown;\n  };\n  contextualData?: {\n    enrolledQuestion?: {\n      question: string;\n      questionKey: string;\n    };\n    qrcode?: { \n      href: string; \n      method: string; \n      type: string; \n    };\n    sharedSecret?: string;\n    questions?: {\n      questionKey: string;\n      question: string;\n    }[];\n    questionKeys?: string[];\n    selectedChannel?: string;\n    activationData?: ActivationData;\n    challengeData?: ChallengeData;\n  };\n  credentialId?: string;\n  enrollmentId?: string;\n  profile?: Record<string, unknown>;\n  resend?: Record<string, unknown>;\n  poll?: Record<string, unknown>;\n  recover?: Record<string, unknown>;\n  deviceKnown?: boolean;\n  nickname?: string;\n}\n\nexport interface IdxForm {\n  value: IdxRemediationValue[];\n}\n\nexport interface IdxOption {\n  value: string | {form: IdxForm} | Input[];\n  label: string;\n  relatesTo?: IdxAuthenticator;\n}\n\nexport interface IdpConfig {\n  id: string;\n  name: string;\n}\n\nexport interface IdxRemediationValueForm {\n  form: IdxForm;\n}\n\nexport interface IdxRemediationValue {\n  name: string;\n  type?: string;\n  required?: boolean;\n  secret?: boolean;\n  visible?: boolean;\n  mutable?: boolean;\n  value?: string | IdxRemediationValueForm;\n  label?: string;\n  form?: IdxForm;\n  options?: IdxOption[];\n  messages?: IdxMessages;\n  minLength?: number;\n  maxLength?: number;\n  relatesTo?: {\n    type?: string;\n    value: IdxAuthenticator;\n  };\n}\n\nexport interface IdxRemediation {\n  name: string;\n  label?: string;\n  value?: IdxRemediationValue[];\n  relatesTo?: {\n    type?: string;\n    value: IdxAuthenticator;\n  };\n  idp?: IdpConfig;\n  href?: string;\n  method?: string;\n  type?: string;\n  accepts?: string;\n  produces?: string;\n  refresh?: number;\n  rel?: string[];\n  action?: (payload?: IdxActionParams) => Promise<IdxResponse>;\n}\n\nexport interface IdxContext {\n  version: string;\n  stateHandle: string;\n  expiresAt: string;\n  intent: string;\n  currentAuthenticator: {\n    type: string;\n    value: IdxAuthenticator;\n  };\n  currentAuthenticatorEnrollment: {\n    type: string;\n    value: IdxAuthenticator;\n  };\n  authenticators: {\n    type: string;\n    value: IdxAuthenticator[];\n  };\n  authenticatorEnrollments: {\n    type: string;\n    value: IdxAuthenticator[];\n  };\n  enrollmentAuthenticator: {\n    type: string;\n    value: IdxAuthenticator;\n  };\n  user?: {\n    type: string;\n    value: Record<string, unknown>;\n  };\n  uiDisplay?: IdxContextUIDisplay\n  app: {\n    type: string;\n    value: Record<string, unknown>;\n  };\n  messages?: IdxMessages;\n  success?: IdxRemediation;\n  failure?: IdxRemediation;\n}\n\nexport interface IdxContextUIDisplay {\n  type: string;\n  value: {\n    label?: string;\n    buttonLabel?: string;\n  }\n}\n\nexport interface IdxMessage {\n  message: string;\n  class: string;\n  i18n: {\n    key: string;\n    params?: unknown[];\n  };\n}\n\nexport interface IdxMessages {\n  type: 'array';\n  value: IdxMessage[];\n}\n\n// JSON response from the server\nexport interface RawIdxResponse {\n  version: string;\n  stateHandle: string;\n  intent?: string;\n  expiresAt?: string;\n  remediation?: {\n    type: 'array';\n    value: IdxRemediation[];\n  };\n  messages?: IdxMessages;\n  success?: boolean;\n  successWithInteractionCode?: IdxRemediation;\n  currentAuthenticator?: {\n    type: string;\n    value: IdxAuthenticator;\n  };\n  currentAuthenticatorEnrollment?: {\n    type: string;\n    value: IdxAuthenticator;\n  };\n}\n\nexport function isRawIdxResponse(obj: any): obj is RawIdxResponse {\n  return obj && obj.version;\n}\n\nexport interface IdxActionParams {\n  [key: string]: string | boolean | number | object;\n}\n\nexport interface IdxActions {\n  [key: string]: (params?: IdxActionParams) => Promise<IdxResponse>;\n}\n\nexport interface IdxToPersist {\n  interactionHandle?: string;\n  withCredentials?: boolean;\n}\n\nexport interface IdxActionFunction {\n  (params: IdxActionParams): Promise<IdxResponse>;\n  neededParams?: Array<Array<IdxRemediationValue>>;\n}\n\nexport interface IdxResponse {\n  proceed: (remediationName: string, params: unknown) => Promise<IdxResponse>;\n  neededToProceed: IdxRemediation[];\n  rawIdxState: RawIdxResponse;\n  interactionCode?: string;\n  actions: IdxActions;\n  toPersist: IdxToPersist;\n  context?: IdxContext;\n  requestDidSucceed?: boolean;\n  stepUp?: boolean;\n}\n\nexport function isIdxResponse(obj: any): obj is IdxResponse {\n  return obj && isRawIdxResponse(obj.rawIdxState);\n}\n","/*!\n * Copyright (c) 2015-present, Okta, Inc. and/or its affiliates. All rights reserved.\n * The Okta software accompanied by this notice is provided pursuant to the Apache License, Version 2.0 (the \"License.\")\n *\n * You may obtain a copy of the License at http://www.apache.org/licenses/LICENSE-2.0.\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT\n * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * \n * See the License for the specific language governing permissions and limitations under the License.\n */\n\n\nimport { run } from './run';\nimport { hasSavedInteractionHandle } from './transactionMeta';\nimport { startTransaction } from './startTransaction';\nimport { AuthSdkError } from '../errors';\nimport { \n  OktaAuthIdxInterface, \n  AccountUnlockOptions, \n  IdxTransaction,\n  IdxFeature,\n} from './types';\n\nexport async function unlockAccount(\n  authClient: OktaAuthIdxInterface, options: AccountUnlockOptions = {}\n): Promise<IdxTransaction> {\n  options.flow = 'unlockAccount';\n\n  // Only check at the beginning of the transaction\n  if (!hasSavedInteractionHandle(authClient)) {\n    const { enabledFeatures } = await startTransaction(authClient, { ...options, autoRemediate: false });\n    if (enabledFeatures && !enabledFeatures.includes(IdxFeature.ACCOUNT_UNLOCK)) {\n      throw new AuthSdkError(\n        'Self Service Account Unlock is not supported based on your current org configuration.'\n      );\n    }\n  }\n\n  return run(authClient, { ...options });\n}\n","import { warn, split2 } from '../util';\nimport { RemediationValues, Remediator, RemediatorConstructor } from './remediators';\nimport { GenericRemediator } from './remediators/GenericRemediator';\nimport {\n  OktaAuthIdxInterface,\n  IdxFeature,\n  NextStep,\n  RemediateOptions,\n  RemediationResponse,\n  RunOptions,\n  FlowIdentifier,\n  FlowSpecification\n} from './types';\nimport { IdxMessage, IdxRemediation, IdxRemediationValue, IdxResponse } from './types/idx-js';\n\ntype GetFlowSpecification = (\n  oktaAuth: OktaAuthIdxInterface,\n  flow: FlowIdentifier\n) => FlowSpecification;\n\nconst ctx: {\n  remediators: Record<string, RemediatorConstructor>,\n  getFlowSpecification: GetFlowSpecification,\n} = {\n  // default values to be used by minimal IDX API\n  remediators: {},\n  getFlowSpecification: function(_oktaAuth: OktaAuthIdxInterface, _flow: FlowIdentifier = 'default') {\n    return {\n      remediators: {}\n    } as FlowSpecification;\n  }\n};\n\n// should be set in createIdxAPI() factory\nexport function setRemediatorsCtx(newCtx: Partial<typeof ctx>) {\n  Object.assign(ctx, newCtx);\n}\n\nexport function getFlowSpecification(oktaAuth: OktaAuthIdxInterface, flow: FlowIdentifier = 'default') {\n  return ctx.getFlowSpecification(oktaAuth, flow);\n}\n\nexport function isTerminalResponse(idxResponse: IdxResponse) {\n  const { neededToProceed, interactionCode } = idxResponse;\n  return !neededToProceed.length && !interactionCode;\n}\n\nexport function canSkipFn(idxResponse: IdxResponse) {\n  return idxResponse.neededToProceed.some(({ name }) => name === 'skip');\n}\n\nexport function canResendFn(idxResponse: IdxResponse) {\n  return Object.keys(idxResponse.actions).some(actionName => actionName.includes('resend'));\n}\n\nexport function getMessagesFromIdxRemediationValue(\n  value?: IdxRemediationValue[]\n): IdxMessage[] | undefined {\n  if (!value || !Array.isArray(value)) {\n    return;\n  }\n  return value.reduce((messages, value) => {\n    if (value.messages) {\n      messages = [...messages, ...value.messages.value] as never;\n    }\n    if (value.form) {\n      const messagesFromForm = getMessagesFromIdxRemediationValue(value.form.value) || [];\n      messages = [...messages, ...messagesFromForm] as never;\n    } \n    if (value.options) {\n      let optionValues = [];\n      value.options.forEach(option => {\n        if (!option.value || typeof option.value === 'string') {\n          return;\n        }\n        optionValues = [...optionValues, option.value] as never;\n      });\n      const messagesFromOptions = getMessagesFromIdxRemediationValue(optionValues) || [];\n      messages = [...messages, ...messagesFromOptions] as never;\n    }\n    return messages;\n  }, []);\n}\n\nexport function getMessagesFromResponse(idxResponse: IdxResponse, options: RunOptions): IdxMessage[] {\n  let messages: IdxMessage[] = [];\n  const { rawIdxState, neededToProceed } = idxResponse;\n\n  // Handle global messages\n  const globalMessages = rawIdxState.messages?.value.map(message => message);\n  if (globalMessages) {\n    messages = [...messages, ...globalMessages] as never;\n  }\n\n  // Handle field messages for current flow\n  // Preserve existing logic for general cases, remove in the next major version\n  // Follow ion response format for top level messages when useGenericRemediator is true\n  if (!options.useGenericRemediator) {\n    for (let remediation of neededToProceed) {\n      const fieldMessages = getMessagesFromIdxRemediationValue(remediation.value);\n      if (fieldMessages) {\n        messages = [...messages, ...fieldMessages] as never;\n      }\n    }\n  }\n\n  // API may return identical error on same field, filter by i18n key\n  const seen = {};\n  messages = messages.reduce((filtered, message) => {\n    const key = message.i18n?.key;\n    if (key && seen[key] && message.message === seen[key].message) {\n      return filtered;\n    }\n    seen[key] = message;\n    filtered = [...filtered, message] as never;\n    return filtered;\n  }, []);\n\n  return messages;\n}\n\n\nexport function getEnabledFeatures(idxResponse: IdxResponse): IdxFeature[] {\n  const res = [];\n  const { actions, neededToProceed } = idxResponse;\n\n  if (actions['currentAuthenticator-recover']) {\n    res.push(IdxFeature.PASSWORD_RECOVERY as never);\n  }\n\n  if (neededToProceed.some(({ name }) => name === 'select-enroll-profile')) {\n    res.push(IdxFeature.REGISTRATION as never);\n  }\n\n  if (neededToProceed.some(({ name }) => name === 'redirect-idp')) {\n    res.push(IdxFeature.SOCIAL_IDP as never);\n  }\n\n  if (neededToProceed.some(({ name }) => name === 'unlock-account')) {\n    res.push(IdxFeature.ACCOUNT_UNLOCK as never);\n  }\n\n  return res;\n}\n\nexport function getAvailableSteps(\n  authClient: OktaAuthIdxInterface, \n  idxResponse: IdxResponse, \n  useGenericRemediator?: boolean\n): NextStep[] {\n  const res: NextStep[] = [];\n\n  const remediatorMap: Record<string, RemediatorConstructor> = Object.values(ctx.remediators)\n    .reduce((map, remediatorClass) => {\n      // Only add concrete subclasses to the map\n      if (remediatorClass.remediationName) {\n        map[remediatorClass.remediationName] = remediatorClass;\n      }\n      return map;\n    }, {});\n\n  for (let remediation of idxResponse.neededToProceed) {\n    const T = getRemediatorClass(remediation, { useGenericRemediator, remediators: remediatorMap });\n    if (T) {\n      const remediator: Remediator = new T(remediation);\n      res.push (remediator.getNextStep(authClient, idxResponse.context) as never);\n    }\n  }\n\n  for (const [name] of Object.entries((idxResponse.actions || {}))) {\n    let stepObj = {\n      name, \n      action: async (params?) => {\n        return authClient.idx.proceed({ \n          actions: [{ name, params }] \n        });\n      }\n    };\n    if (name.startsWith('currentAuthenticator')) {\n      const [part1, part2] = split2(name, '-');\n      const actionObj = idxResponse.rawIdxState[part1].value[part2];\n      /* eslint-disable no-unused-vars, @typescript-eslint/no-unused-vars */\n      const {\n        href, \n        method, \n        rel, \n        accepts, \n        produces, \n        ...rest\n      } = actionObj;\n      /* eslint-enable no-unused-vars, @typescript-eslint/no-unused-vars */\n      const value = actionObj.value?.filter(item => item.name !== 'stateHandle');\n      stepObj = { \n        ...rest,  \n        ...(value && { value }),\n        ...stepObj,\n      };\n    }\n    res.push(stepObj);\n  }\n\n  return res;\n}\n\nexport function filterValuesForRemediation(\n  idxResponse: IdxResponse,\n  remediationName: string,\n  values: RemediationValues\n): RemediationValues {\n  const remediations = idxResponse.neededToProceed || [];\n  const remediation = remediations.find(r => r.name === remediationName);\n  if (!remediation) {\n    // step was specified, but remediation was not found. This is unexpected!\n    warn(`filterValuesForRemediation: \"${remediationName}\" did not match any remediations`);\n    return values;\n  }\n\n  // eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n  const valuesForRemediation = remediation.value!.reduce((res, entry) => {\n    const { name, value } = entry;\n    if (name === 'stateHandle') {\n      res[name] = value; // use the stateHandle value in the remediation\n    } else {\n      res[name] = values[name]; // use the value provided by the caller\n    }\n    return res;\n  }, {});\n  return valuesForRemediation;\n}\n\nfunction getRemediatorClass(remediation: IdxRemediation, options: RemediateOptions) {\n  const { useGenericRemediator, remediators } = options;\n  \n  if (!remediation) {\n    return undefined;\n  }\n\n  if (useGenericRemediator) {\n    return GenericRemediator;\n  }\n\n  // eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n  return remediators![remediation.name];\n}\n\n// Return first match idxRemediation in allowed remediators\n// eslint-disable-next-line complexity\nexport function getRemediator(\n  idxResponse: IdxResponse,\n  values: RemediationValues,\n  options: RemediateOptions,\n): Remediator | undefined {\n  // eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n  const remediators = options.remediators!;\n  const useGenericRemediator = options.useGenericRemediator;\n  const {neededToProceed: idxRemediations, context} = idxResponse;\n\n  let remediator: Remediator;\n  // remediation name specified by caller - fast-track remediator lookup \n  if (options.step) {\n    // eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n    const remediation = idxRemediations.find(({ name }) => name === options.step)!;\n    if (remediation) {\n      const T = getRemediatorClass(remediation, options);\n      return T ? new T(remediation, values, options) : undefined;\n    } else {\n      // step was specified, but remediation was not found. This is unexpected!\n      warn(`step \"${options.step}\" did not match any remediations`);\n      return;\n    }\n  }\n\n  const remediatorCandidates: Remediator[] = [];\n  if (useGenericRemediator) {\n    // always pick the first remediation for when use GenericRemediator\n    remediatorCandidates.push(new GenericRemediator(idxRemediations[0], values, options));\n  } else {\n    for (let remediation of idxRemediations) {\n      const isRemeditionInFlow = Object.keys(remediators as object).includes(remediation.name);\n      if (!isRemeditionInFlow) {\n        continue;\n      }\n\n      // eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n      const T = getRemediatorClass(remediation, options)!;\n      remediator = new T(remediation, values, options);\n      if (remediator.canRemediate(context)) {\n        // found the remediator\n        return remediator;\n      }\n      // remediator cannot handle the current values\n      // maybe return for next step\n      remediatorCandidates.push(remediator);  \n    }\n  }\n  \n  return remediatorCandidates[0];\n}\n\n\nexport function getNextStep(\n  authClient: OktaAuthIdxInterface, remediator: Remediator, idxResponse: IdxResponse\n): NextStep {\n  const nextStep = remediator.getNextStep(authClient, idxResponse.context);\n  const canSkip = canSkipFn(idxResponse);\n  const canResend = canResendFn(idxResponse);\n  return {\n    ...nextStep,\n    ...(canSkip && {canSkip}),\n    ...(canResend && {canResend}),\n  };\n}\n\nexport function handleFailedResponse(\n  authClient: OktaAuthIdxInterface,\n  idxResponse: IdxResponse,\n  options = {}\n): RemediationResponse {\n  const terminal = isTerminalResponse(idxResponse);\n  const messages = getMessagesFromResponse(idxResponse, options);\n  if (terminal) {\n    return { idxResponse, terminal, messages };\n  } else {\n    const remediator = getRemediator(idxResponse, {}, options);\n    const nextStep = remediator && getNextStep(authClient, remediator, idxResponse);\n    return {\n      idxResponse,\n      messages,\n      ...(nextStep && { nextStep }),\n    };\n  }\n  \n}\n","/*!\n * Copyright (c) 2015-present, Okta, Inc. and/or its affiliates. All rights reserved.\n * The Okta software accompanied by this notice is provided pursuant to the Apache License, Version 2.0 (the \"License.\")\n *\n * You may obtain a copy of the License at http://www.apache.org/licenses/LICENSE-2.0.\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT\n * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n *\n * See the License for the specific language governing permissions and limitations under the License.\n */\n\nimport { base64UrlToBuffer, bufferToBase64Url } from '../crypto/base64';\nimport {\n  ActivationData,\n  ChallengeData,\n  IdxAuthenticator,\n} from './types';\n\n\n// Get known credentials from list of enrolled authenticators\nconst getEnrolledCredentials = (authenticatorEnrollments: IdxAuthenticator[] = []) => {\n  const credentials: PublicKeyCredentialDescriptor[] = [];\n  authenticatorEnrollments.forEach((enrollement) => {\n    if (enrollement.key === 'webauthn') {\n      credentials.push({\n        type: 'public-key',\n        id: base64UrlToBuffer(enrollement.credentialId),\n      });\n    }\n  });\n  return credentials;\n};\n\n// Build options for navigator.credentials.create\n// https://developer.mozilla.org/en-US/docs/Web/API/CredentialsContainer/create\nexport const buildCredentialCreationOptions = (\n  activationData: ActivationData, authenticatorEnrollments: IdxAuthenticator[]\n) => {\n  return {\n    publicKey: {\n      rp: activationData.rp,\n      user: {\n        id: base64UrlToBuffer(activationData.user.id),\n        name: activationData.user.name,\n        displayName: activationData.user.displayName\n      },\n      challenge: base64UrlToBuffer(activationData.challenge),\n      pubKeyCredParams: activationData.pubKeyCredParams,\n      attestation: activationData.attestation,\n      authenticatorSelection: activationData.authenticatorSelection,\n      excludeCredentials: getEnrolledCredentials(authenticatorEnrollments),\n    }\n  } as CredentialCreationOptions;\n};\n\n\n// Build options for navigator.credentials.get\n// https://developer.mozilla.org/en-US/docs/Web/API/CredentialsContainer/get\nexport const buildCredentialRequestOptions = (\n  challengeData: ChallengeData, authenticatorEnrollments: IdxAuthenticator[]\n) => {\n  return {\n    publicKey: {\n      challenge: base64UrlToBuffer(challengeData.challenge),\n      userVerification: challengeData.userVerification,\n      allowCredentials: getEnrolledCredentials(authenticatorEnrollments),\n    }\n  } as CredentialRequestOptions;\n};\n\n// Build attestation for webauthn enroll\n// https://developer.mozilla.org/en-US/docs/Web/API/AuthenticatorAttestationResponse\nexport const getAttestation = (credential: PublicKeyCredential) => {\n  const response = credential.response as AuthenticatorAttestationResponse;\n  const id = credential.id;\n  const clientData = bufferToBase64Url(response.clientDataJSON);\n  const attestation = bufferToBase64Url(response.attestationObject);\n  return {\n    id,\n    clientData,\n    attestation\n  };\n};\n\n// Build assertion for webauthn verification\n// https://developer.mozilla.org/en-US/docs/Web/API/AuthenticatorAssertionResponse\nexport const getAssertion = (credential: PublicKeyCredential) => {\n  const response = credential.response as AuthenticatorAssertionResponse;\n  const id = credential.id;\n  const clientData = bufferToBase64Url(response.clientDataJSON);\n  const authenticatorData = bufferToBase64Url(response.authenticatorData);\n  const signatureData = bufferToBase64Url(response.signature);\n  return {\n    id,\n    clientData,\n    authenticatorData,\n    signatureData\n  };\n};\n","import { OktaAuthHttpInterface } from '../../http/types';\n\nexport type TransactionLink = {\n  href: string;\n  hints?: {\n    allow?: string[];\n  };\n}\n\nexport type TransactionLinks = {\n  self: TransactionLink;\n  [property: string]: TransactionLink;\n}\n\ntype TransactionOptions = {\n  // TODO: move res type to http module\n  res: {\n    headers: Record<string, string>;\n    _links?: Record<string, TransactionLink>;\n    [property: string]: unknown;\n  };\n  accessToken: string;\n};\n\nexport default class BaseTransaction {\n  // Deprecated\n  headers?: Record<string, string>;\n\n  constructor(oktaAuth: OktaAuthHttpInterface, options: TransactionOptions) {\n    const { res } = options;\n    const { headers, ...rest } = res;\n    \n    // assign required fields from res\n    if (headers) {\n      this.headers = headers;\n    }\n\n    // add all rest fields from res\n    Object.keys(rest).forEach(key => {\n      if (key === '_links') {\n        return;\n      }\n      this[key] = rest[key];\n    });\n  }\n}\n\nexport interface TransactionType<T extends BaseTransaction = BaseTransaction> extends Function {\n  new (oktaAuth: OktaAuthHttpInterface, options: TransactionOptions): T;\n  prototype: T;\n}\n","import { \n  default as BaseTransaction,\n  TransactionType,\n  TransactionLinks\n} from './transactions/Base';\nimport { httpRequest } from '../http';\nimport { AuthSdkError } from '../errors';\nimport { MyAccountRequestOptions as RequestOptions } from './types';\nimport { OktaAuthOAuthInterface } from '../oidc/types';\n\ntype SendRequestOptions = RequestOptions & {\n  url: string;\n  method: string;\n}\n\n/* eslint-disable complexity */\nexport async function sendRequest<\n  T extends BaseTransaction = BaseTransaction,\n  N extends 'plural' | 'single' = 'single',\n  NT = N extends 'plural' ? T[] : T\n> (\n  oktaAuth: OktaAuthOAuthInterface, \n  options: SendRequestOptions,\n  TransactionClass: TransactionType<T> = BaseTransaction as TransactionType<T>,\n): Promise<NT> {\n  const {\n    accessToken: accessTokenObj\n  } = oktaAuth.tokenManager.getTokensSync();\n  \n  const accessToken = options.accessToken || accessTokenObj?.accessToken;\n  const issuer = oktaAuth.getIssuerOrigin();\n  const { url, method, payload } = options;\n  const requestUrl = url.startsWith(issuer!) ? url : `${issuer}${url}`;\n\n  if (!accessToken) {\n    throw new AuthSdkError('AccessToken is required to request MyAccount API endpoints.');\n  }\n  \n  const res = await httpRequest(oktaAuth, {\n    headers: { 'Accept': '*/*;okta-version=1.0.0' },\n    accessToken,\n    url: requestUrl,\n    method,\n    ...(payload && { args: payload })\n  });\n\n  let ret: T | T[];\n  if (Array.isArray(res)) {\n    ret = res.map(item => new TransactionClass(oktaAuth, { \n      res: item, \n      accessToken\n    }));\n  } else {\n    ret = new TransactionClass(oktaAuth, { \n      res, \n      accessToken\n    });\n  }\n  return ret as NT;\n}\n/* eslint-enable complexity */\n\nexport type GenerateRequestFnFromLinksOptions = {\n  oktaAuth: OktaAuthOAuthInterface;\n  accessToken: string;\n  methodName: string;\n  links: TransactionLinks;\n}\n\ntype IRequestFnFromLinks<T extends BaseTransaction> = (payload?) => Promise<T>;\n\nexport function generateRequestFnFromLinks<T extends BaseTransaction>(\n  {\n    oktaAuth, \n    accessToken,\n    methodName,\n    links,\n  }: GenerateRequestFnFromLinksOptions,\n  TransactionClass: TransactionType<T> = BaseTransaction as TransactionType<T>,\n): IRequestFnFromLinks<T> {\n  for (const method of ['GET', 'POST', 'PUT', 'DELETE']) {\n    if (method.toLowerCase() === methodName) {\n      const link = links.self;\n      return (async (payload?) => sendRequest<T, 'single'>(oktaAuth, {\n        accessToken,\n        url: link.href,\n        method,\n        payload,\n      }, TransactionClass));\n    }\n  }\n  \n  const link = links[methodName];\n  if (!link) {\n    throw new AuthSdkError(`No link is found with methodName: ${methodName}`);\n  }\n\n  return (async (payload?) => sendRequest<T, 'single'>(oktaAuth, {\n    accessToken,\n    url: link.href,\n    method: link.hints!.allow![0],\n    payload,\n  }, TransactionClass));\n}\n","import BaseTransaction from './Base';\n\nexport default class ProfileTransaction extends BaseTransaction {\n  createdAt: string;\n  modifiedAt: string;\n  profile: Record<string, string>;\n\n  constructor(oktaAuth, options) {\n    super(oktaAuth, options);\n\n    const { createdAt, modifiedAt, profile } = options.res;\n    this.createdAt = createdAt;\n    this.modifiedAt = modifiedAt;\n    this.profile = profile;\n  }\n}\n","import BaseTransaction from './Base';\n\nexport default class ProfileSchemaTransaction extends BaseTransaction {\n  properties: Record<string, object>;\n\n  constructor(oktaAuth, options) {\n    super(oktaAuth, options);\n\n    this.properties = options.res.properties;\n  }\n}\n","import { sendRequest } from './request';\nimport { IAPIFunction } from './types';\nimport {\n  ProfileTransaction,\n  ProfileSchemaTransaction\n} from './transactions';\n\n/**\n * @scope: okta.myAccount.profile.read\n */\nexport const getProfile: IAPIFunction<ProfileTransaction> = async (oktaAuth, options?) => {\n  const transaction = await sendRequest(oktaAuth, {\n    url: '/idp/myaccount/profile',\n    method: 'GET',\n    accessToken: options?.accessToken,\n  }, ProfileTransaction);\n  return transaction;\n};\n\n/**\n * @scope: okta.myAccount.profile.manage\n */\nexport const updateProfile: IAPIFunction<ProfileTransaction> = async (\n  oktaAuth, \n  options\n) => {\n  const { payload, accessToken } = options!;\n  const transaction = await sendRequest(oktaAuth, {\n    url: '/idp/myaccount/profile',\n    method: 'PUT',\n    payload,\n    accessToken,\n  }, ProfileTransaction);\n  return transaction;\n};\n\n/**\n * @scope: okta.myAccount.profile.read\n */\nexport const getProfileSchema: IAPIFunction<ProfileSchemaTransaction> = async (\n  oktaAuth, \n  options?\n): Promise<ProfileSchemaTransaction> => {\n  const transaction = await sendRequest(oktaAuth, {\n    url: '/idp/myaccount/profile/schema',\n    method: 'GET',\n    accessToken: options?.accessToken,\n  }, ProfileSchemaTransaction);\n  return transaction;\n};\n","import { EmailProfile, Status } from '../types';\nimport BaseTransaction from './Base';\n\nexport default class EmailStatusTransaction extends BaseTransaction {\n  id: string;\n  expiresAt: string;\n  profile: EmailProfile;\n  status: Status;\n\n  constructor(oktaAuth, options) {\n    super(oktaAuth, options);\n\n    const { res } = options;\n    // assign required fields from res\n    const { id, profile, expiresAt, status } = res;\n    this.id = id;\n    this.expiresAt = expiresAt;\n    this.profile = profile;\n    this.status = status;\n  }\n}\n","import EmailStatusTransaction from './EmailStatusTransaction';\nimport { \n  EmailProfile, \n  Status,\n  VerificationPayload, \n} from '../types';\nimport BaseTransaction from './Base';\nimport { generateRequestFnFromLinks } from '../request';\n\nexport default class EmailChallengeTransaction extends BaseTransaction {\n  id: string;\n  expiresAt: string;\n  profile: EmailProfile;\n  status: Status;\n\n  poll: () => Promise<EmailStatusTransaction>;\n  // eslint-disable-next-line no-use-before-define\n  verify: (payload: VerificationPayload) => Promise<EmailChallengeTransaction>;\n\n  constructor(oktaAuth, options) {\n    super(oktaAuth, options);\n\n    const { accessToken, res } = options;\n    // assign required fields from res\n    const { id, expiresAt, profile, status, _links } = res;\n    this.id = id;\n    this.expiresAt = expiresAt;\n    this.profile = profile;\n    this.status = status;\n\n    // assign transformed fns to transaction\n    this.poll = async () => {\n      const fn = generateRequestFnFromLinks({ \n        oktaAuth, \n        accessToken, \n        methodName: 'poll', \n        links: _links,\n      }, EmailStatusTransaction);\n      return await fn();\n    };\n    this.verify = async (payload) => {\n      const fn = generateRequestFnFromLinks({ \n        oktaAuth, \n        accessToken, \n        methodName: 'verify', \n        links: _links,\n      }, EmailChallengeTransaction);\n      return await fn(payload);\n    };\n  }\n}\n","import EmailChallengeTransaction from './EmailChallengeTransaction';\nimport EmailStatusTransaction from './EmailStatusTransaction';\nimport { EmailProfile, EmailRole, Status, VerificationPayload } from '../types';\nimport BaseTransaction from './Base';\nimport { generateRequestFnFromLinks } from '../request';\n\nexport default class EmailTransaction extends BaseTransaction {\n  id: string;\n  profile: EmailProfile;\n  roles: EmailRole[];\n  status: Status;\n\n  // eslint-disable-next-line no-use-before-define\n  get: () => Promise<EmailTransaction>;\n  delete: () => Promise<BaseTransaction>;\n  challenge: () => Promise<EmailChallengeTransaction>;\n  poll?: () => Promise<EmailStatusTransaction>;\n  verify?: (payload: VerificationPayload) => Promise<BaseTransaction>;\n\n  constructor(oktaAuth, options) {\n    super(oktaAuth, options);\n\n    const { accessToken, res } = options;\n    // assign required fields from res\n    const { id, profile, roles, status, _links } = res;\n    this.id = id;\n    this.profile = profile;\n    this.roles = roles;\n    this.status = status;\n\n    // assign transformed fns to transaction\n    this.get = async () => {\n      const fn = generateRequestFnFromLinks({ \n        oktaAuth, \n        accessToken, \n        methodName: 'get', \n        links: _links,\n      }, EmailTransaction);\n      return await fn();\n    };\n    this.delete = async () => {\n      const fn = generateRequestFnFromLinks({ \n        oktaAuth, \n        accessToken, \n        methodName: 'delete', \n        links: _links \n      });\n      return await fn();\n    };\n    this.challenge = async () => {\n      const fn = generateRequestFnFromLinks({ \n        oktaAuth, \n        accessToken, \n        methodName: 'challenge', \n        links: _links,\n      }, EmailChallengeTransaction);\n      return await fn();\n    };\n    if (_links.poll) {\n      this.poll = async () => {\n        const fn = generateRequestFnFromLinks({ \n          oktaAuth, \n          accessToken, \n          methodName: 'poll', \n          links: _links,\n        }, EmailStatusTransaction);\n        return await fn();\n      };\n    }\n    if (_links.verify) {\n      this.verify = async (payload: VerificationPayload) => {\n        const fn = generateRequestFnFromLinks({ \n          oktaAuth, \n          accessToken, \n          methodName: 'verify', \n          links: _links,\n        });\n        return await fn(payload);\n      };\n    }\n  }\n}\n","import { sendRequest } from './request';\nimport { IAPIFunction } from './types';\nimport {\n  BaseTransaction, \n  EmailTransaction, \n  EmailChallengeTransaction \n} from './transactions';\n\n/**\n * @scope: okta.myAccount.email.read\n */\nexport const getEmails: IAPIFunction<EmailTransaction[]> = async (\n  oktaAuth,\n  options?\n) => {\n  const transaction = await sendRequest<EmailTransaction, 'plural'>(oktaAuth, {\n    url: '/idp/myaccount/emails',\n    method: 'GET',\n    accessToken: options?.accessToken\n  }, EmailTransaction);\n  return transaction;\n};\n\n/**\n * @scope: okta.myAccount.email.read\n */\nexport const getEmail: IAPIFunction<EmailTransaction> = async (\n  oktaAuth, \n  options\n) => {\n  const { id, accessToken } = options!;\n  const transaction = await sendRequest(oktaAuth, {\n    url: `/idp/myaccount/emails/${id}`,\n    method: 'GET',\n    accessToken,\n  }, EmailTransaction);\n  return transaction;\n};\n\n/**\n * @scope: okta.myAccount.email.manage\n */\nexport const addEmail: IAPIFunction<EmailTransaction> = async (\n  oktaAuth, \n  options\n): Promise<EmailTransaction> => {\n  const { accessToken, payload } = options!;\n  const transaction = await sendRequest(oktaAuth, {\n    url: '/idp/myaccount/emails',\n    method: 'POST',\n    payload,\n    accessToken,\n  }, EmailTransaction);\n  return transaction;\n};\n\n/**\n * @scope: okta.myAccount.email.manage\n */\nexport const deleteEmail: IAPIFunction<BaseTransaction> = async (\n  oktaAuth, \n  options\n) => {\n  const { id, accessToken } = options!;\n  const transaction = await sendRequest(oktaAuth, {\n    url: `/idp/myaccount/emails/${id}`,\n    method: 'DELETE',\n    accessToken\n  });\n  return transaction;\n};\n\n/**\n * @scope: okta.myAccount.email.read\n */\nexport const sendEmailChallenge: IAPIFunction<EmailChallengeTransaction> = async (\n  oktaAuth, \n  options\n) => {\n  const { id, accessToken } = options!;\n  const transaction = await sendRequest(oktaAuth, {\n    url: `/idp/myaccount/emails/${id}/challenge`,\n    method: 'POST',\n    accessToken,\n  }, EmailChallengeTransaction);\n  return transaction;\n};\n\n/**\n * @scope: okta.myAccount.email.read\n */\nexport const getEmailChallenge: IAPIFunction<EmailChallengeTransaction> = async (\n  oktaAuth, \n  options\n) => {\n  const { emailId, challengeId, accessToken } = options!;\n  const transaction = await sendRequest(oktaAuth, {\n    url: `/idp/myaccount/emails/${emailId}/challenge/${challengeId}`,\n    method: 'POST',\n    accessToken,\n  }, EmailChallengeTransaction);\n  return transaction;\n};\n\n/**\n * @scope: okta.myAccount.email.manage\n */\nexport const verifyEmailChallenge: IAPIFunction<BaseTransaction> = async (\n  oktaAuth,\n  options\n) => {\n  const { emailId, challengeId, payload, accessToken } = options!;\n  const transaction = await sendRequest(oktaAuth, {\n    url: `/idp/myaccount/emails/${emailId}/challenge/${challengeId}/verify`,\n    method: 'POST',\n    payload,\n    accessToken\n  });\n  return transaction;\n};\n","import { ChallengePhonePayload, PhoneProfile, Status, VerificationPayload } from '../types';\nimport BaseTransaction from './Base';\nimport { generateRequestFnFromLinks } from '../request';\n\nexport default class PhoneTransaction extends BaseTransaction {\n  id: string;\n  profile: PhoneProfile;\n  status: Status;\n\n  // eslint-disable-next-line no-use-before-define\n  get: () => Promise<PhoneTransaction>;\n  delete: () => Promise<BaseTransaction>;\n  challenge: (payload: ChallengePhonePayload) => Promise<BaseTransaction>;\n  verify?: (payload: VerificationPayload) => Promise<BaseTransaction>;\n\n  constructor(oktaAuth, options) {\n    super(oktaAuth, options);\n\n    const { res, accessToken } = options;\n    // assign required fields from res\n    const { id, profile, status, _links } = res;\n    this.id = id;\n    this.profile = profile;\n    this.status = status;\n\n    // assign transformed fns to transaction\n    this.get = async () => {\n      const fn = generateRequestFnFromLinks({ \n        oktaAuth, \n        accessToken, \n        methodName: 'get', \n        links: _links,\n      }, PhoneTransaction);\n      return await fn();\n    };\n    this.delete = async () => {\n      const fn = generateRequestFnFromLinks({ \n        oktaAuth, \n        accessToken, \n        methodName: 'delete', \n        links: _links \n      });\n      return await fn();\n    };\n    this.challenge = async (payload) => {\n      const fn = generateRequestFnFromLinks({ \n        oktaAuth, \n        accessToken, \n        methodName: 'challenge', \n        links: _links \n      });\n      return await fn(payload);\n    };\n    if (_links.verify) {\n      this.verify = async (payload) => {\n        const fn = generateRequestFnFromLinks({ \n          oktaAuth, \n          accessToken, \n          methodName: 'verify', \n          links: _links \n        });\n        return await fn(payload);\n      } ;\n    }\n  }\n}\n","import { sendRequest } from './request';\nimport { IAPIFunction } from './types';\nimport {\n  BaseTransaction, \n  PhoneTransaction\n} from './transactions';\n\n/**\n * @scope: okta.myAccount.phone.read\n */\nexport const getPhones: IAPIFunction<PhoneTransaction[]> = async (\n  oktaAuth,\n  options?\n) => {\n  const transaction = await sendRequest<PhoneTransaction, 'plural'>(oktaAuth, {\n    url: '/idp/myaccount/phones',\n    method: 'GET',\n    accessToken: options?.accessToken,\n  }, PhoneTransaction);\n  return transaction;\n};\n\n/**\n * @scope: okta.myAccount.phone.read\n */\nexport const getPhone: IAPIFunction<PhoneTransaction> = async (\n  oktaAuth,\n  options\n) => {\n  const { accessToken, id } = options!;\n  const transaction = await sendRequest(oktaAuth, {\n    url: `/idp/myaccount/phones/${id}`,\n    method: 'GET',\n    accessToken,\n  }, PhoneTransaction);\n  return transaction;\n};\n\n/**\n * @scope: okta.myAccount.phone.manage\n */\nexport const addPhone: IAPIFunction<PhoneTransaction> = async (\n  oktaAuth, \n  options\n): Promise<PhoneTransaction> => {\n  const { accessToken, payload } = options!;\n  const transaction = await sendRequest(oktaAuth, {\n    url: '/idp/myaccount/phones',\n    method: 'POST',\n    payload,\n    accessToken,\n  }, PhoneTransaction);\n  return transaction;\n};\n\n/**\n * @scope: okta.myAccount.phone.manage\n */\nexport const deletePhone: IAPIFunction<BaseTransaction> = async (\n  oktaAuth, \n  options\n) => {\n  const { id, accessToken } = options!;\n  const transaction = await sendRequest(oktaAuth, {\n    url: `/idp/myaccount/phones/${id}`,\n    method: 'DELETE',\n    accessToken,\n  });\n  return transaction;\n};\n\n/**\n * @scope: okta.myAccount.phone.manage\n */\nexport const sendPhoneChallenge: IAPIFunction<BaseTransaction> = async (\n  oktaAuth, \n  options\n) => {\n  const { accessToken, id, payload } = options!;\n  const transaction = await sendRequest(oktaAuth, {\n    url: `/idp/myaccount/phones/${id}/challenge`,\n    method: 'POST',\n    payload,\n    accessToken\n  });\n  return transaction;\n};\n\n/**\n * @scope: okta.myAccount.phone.manage\n */\nexport const verifyPhoneChallenge: IAPIFunction<BaseTransaction> = async (\n  oktaAuth,\n  options\n) => {\n  const { id, payload, accessToken } = options!;\n  const transaction = await sendRequest(oktaAuth, {\n    url: `/idp/myaccount/phones/${id}/verify`,\n    method: 'POST',\n    payload,\n    accessToken\n  });\n  return transaction;\n};\n","import { EnrollPasswordPayload, UpdatePasswordPayload, PasswordStatus } from '../types';\nimport BaseTransaction from './Base';\nimport { generateRequestFnFromLinks } from '../request';\n\nexport default class PasswordTransaction extends BaseTransaction {\n  id: string;\n  created: string;\n  lastUpdated: string;\n  status: PasswordStatus;\n\n  // eslint-disable-next-line no-use-before-define\n  get?: () => Promise<PasswordTransaction>;\n  // eslint-disable-next-line no-use-before-define\n  enroll?: (payload: EnrollPasswordPayload) => Promise<PasswordTransaction>;\n  // eslint-disable-next-line no-use-before-define\n  update?: (payload: UpdatePasswordPayload) => Promise<PasswordTransaction>;\n  delete?: () => Promise<BaseTransaction>;\n\n  constructor(oktaAuth, options) {\n    super(oktaAuth, options);\n\n    const { res, accessToken } = options;\n    // assign required fields from res\n    const { id, status, created, lastUpdated, _links } = res;\n    this.id = id;\n    this.status = status;\n    this.created = created;\n    this.lastUpdated = lastUpdated;\n\n    // assign transformed fns to transaction\n    if (this.status == PasswordStatus.NOT_ENROLLED) {\n      this.enroll = async (payload) => {\n        const fn = generateRequestFnFromLinks({ \n          oktaAuth, \n          accessToken, \n          methodName: 'enroll',\n          links: _links,\n        }, PasswordTransaction);\n        return await fn(payload);\n      };\n    }\n    else {\n      this.get = async () => {\n        const fn = generateRequestFnFromLinks({ \n          oktaAuth, \n          accessToken, \n          methodName: 'get',\n          links: _links,\n        }, PasswordTransaction);\n        return await fn();\n      };\n\n      this.update = async (payload) => {\n        const fn = generateRequestFnFromLinks({ \n          oktaAuth, \n          accessToken, \n          methodName: 'put', \n          links: _links,\n        }, PasswordTransaction);\n        return await fn(payload);\n      };\n  \n      this.delete = async () => {\n        const fn = generateRequestFnFromLinks({ \n          oktaAuth, \n          accessToken, \n          methodName: 'delete', \n          links: _links \n        });\n        return await fn();\n      };\n    }\n  }\n}\n","import { sendRequest } from './request';\nimport { IAPIFunction } from './types';\nimport {\n  BaseTransaction, \n  PasswordTransaction\n} from './transactions';\n\n/**\n * @scope: okta.myAccount.password.read\n */\nexport const getPassword: IAPIFunction<PasswordTransaction> = async (\n  oktaAuth,\n  options\n) => {\n  const transaction = await sendRequest(oktaAuth, {\n    url: `/idp/myaccount/password`,\n    method: 'GET',\n    accessToken: options?.accessToken,\n  }, PasswordTransaction);\n  return transaction;\n};\n\n/**\n * @scope: okta.myAccount.password.manage\n */\nexport const enrollPassword: IAPIFunction<PasswordTransaction> = async (\n  oktaAuth, \n  options\n): Promise<PasswordTransaction> => {\n  const { accessToken, payload } = options!;\n  const transaction = await sendRequest(oktaAuth, {\n    url: '/idp/myaccount/password',\n    method: 'POST',\n    payload,\n    accessToken,\n  }, PasswordTransaction);\n  return transaction;\n};\n\n/**\n * @scope: okta.myAccount.password.manage\n */\nexport const updatePassword: IAPIFunction<PasswordTransaction> = async (\n  oktaAuth, \n  options\n): Promise<PasswordTransaction> => {\n  const { accessToken, payload } = options!;\n  const transaction = await sendRequest(oktaAuth, {\n    url: '/idp/myaccount/password',\n    method: 'PUT',\n    payload,\n    accessToken,\n  }, PasswordTransaction);\n  return transaction;\n};\n\n/**\n * @scope: okta.myAccount.password.manage\n */\nexport const deletePassword: IAPIFunction<BaseTransaction> = async (\n  oktaAuth, \n  options?\n) => {\n  const transaction = await sendRequest(oktaAuth, {\n    url: `/idp/myaccount/password`,\n    method: 'DELETE',\n    accessToken: options?.accessToken,\n  });\n  return transaction;\n};\n","import { StorageManagerConstructor } from '../storage/types';\nimport { OktaAuthConstructor, OktaAuthOptionsConstructor } from '../base/types';\nimport {\n  OAuthStorageManagerInterface,\n  PKCETransactionMeta,\n  TransactionManagerConstructor,\n  TransactionManagerInterface\n} from '../oidc/types';\nimport { createOktaAuthCore } from '../core/factory';\nimport { OktaAuthCoreOptions } from '../core/types';\nimport { mixinMyAccount } from './mixin';\nimport { OktaAuthMyAccountInterface } from './types';\n\nexport function createOktaAuthMyAccount\n<\n  M extends PKCETransactionMeta = PKCETransactionMeta,\n  S extends OAuthStorageManagerInterface<M> = OAuthStorageManagerInterface<M>,\n  O extends OktaAuthCoreOptions = OktaAuthCoreOptions,\n  TM extends TransactionManagerInterface = TransactionManagerInterface\n>\n(\n  StorageManagerConstructor: StorageManagerConstructor<S>,\n  OptionsConstructor: OktaAuthOptionsConstructor<O>,\n  TransactionManager: TransactionManagerConstructor<TM>\n)\n: OktaAuthConstructor<OktaAuthMyAccountInterface<M, S, O>>\n{\n  const Core = createOktaAuthCore<M, S, O>(StorageManagerConstructor, OptionsConstructor, TransactionManager);\n  const WithMyAccount = mixinMyAccount<M, S, O>(Core);\n  return WithMyAccount;\n}\n","import { OktaAuthConstructor } from '../base/types';\nimport {\n  OAuthStorageManagerInterface,\n  OAuthTransactionMeta,\n  OktaAuthOAuthInterface,\n  OktaAuthOAuthOptions,\n  PKCETransactionMeta,\n} from '../oidc/types';\nimport { OktaAuthMyAccountInterface } from './types';\n\nimport * as MyAccountMethods from './api';\n\nexport function mixinMyAccount\n<\n  M extends OAuthTransactionMeta = PKCETransactionMeta,\n  S extends OAuthStorageManagerInterface<M> = OAuthStorageManagerInterface<M>,\n  O extends OktaAuthOAuthOptions = OktaAuthOAuthOptions,\n  TBase extends OktaAuthConstructor<OktaAuthOAuthInterface<M, S, O>>\n    = OktaAuthConstructor<OktaAuthOAuthInterface<M, S, O>>\n>\n(Base: TBase): TBase & OktaAuthConstructor<OktaAuthMyAccountInterface<M, S, O>>\n{\n  return class OktaAuthMyAccount extends Base implements OktaAuthMyAccountInterface<M, S, O>\n  {\n    myaccount: any;\n    \n    constructor(...args: any[]) {\n      super(...args);\n\n      this.myaccount = Object.entries(MyAccountMethods)\n        .filter(([ name ]) => name !== 'default')\n        .reduce((acc, [name, fn]) => {\n          acc[name] = (fn as any).bind(null, this);\n          return acc;\n        }, {});\n    }\n  };\n}\n","import {\n  OAuthStorageManagerInterface,\n  OAuthTransactionMeta,\n  OktaAuthOAuthInterface,\n  OktaAuthOAuthOptions,\n  PKCETransactionMeta\n} from '../oidc/types';\n\nexport type { \n  EmailTransaction, \n  EmailStatusTransaction,\n  EmailChallengeTransaction,\n  PhoneTransaction,\n  ProfileTransaction,\n  ProfileSchemaTransaction,\n  PasswordTransaction,\n  BaseTransaction\n} from './transactions';\n\nexport enum EmailRole {\n  PRIMARY = 'PRIMARY',\n  SECONDARY = 'SECONDARY'\n}\n\nexport enum Status {\n  VERIFIED = 'VERIFIED',\n  UNVERIFIED = 'UNVERIFIED'\n}\n\nexport enum PasswordStatus {\n  NOT_ENROLLED = 'NOT_ENROLLED',\n  ACTIVE = 'ACTIVE'\n}\n\nexport type EmailProfile = {\n  email: string;\n}\n\nexport type AddEmailPayload = {\n  profile: {\n    email: string;\n  };\n  sendEmail: boolean;\n  role: EmailRole;\n}\n\nexport type PhoneProfile = {\n  profile: {\n    phoneNumber: string;\n  };\n}\n\nexport type AddPhonePayload = {\n  profile: {\n    phoneNumber: string;\n  };\n  sendCode: boolean;\n  method: string;\n};\n\nexport type ChallengePhonePayload = {\n  method: string;\n}\n\nexport type VerificationPayload = {\n  verificationCode: string;\n};\n\nexport type EnrollPasswordPayload = {\n  profile: {\n    password: string;\n  }\n}\n\nexport type UpdatePasswordPayload = {\n  profile: {\n    password: string;\n    currentPassword?: string;\n  }\n}\n\nexport type UpdateProfilePayload = {\n  profile: {\n    firstName?: string;\n    lastName?: string;\n    email?: string;\n    login?: string;\n    [property: string]: any;\n  };\n};\n\nexport type MyAccountRequestOptions = {\n  id?: string;\n  emailId?: string;\n  challengeId?: string;\n  payload?: AddEmailPayload \n    | AddPhonePayload \n    | ChallengePhonePayload\n    | VerificationPayload \n    | UpdateProfilePayload\n    | EnrollPasswordPayload\n    | UpdatePasswordPayload;\n  accessToken?: string;\n}\n\nexport type IAPIFunction<T> = (\n  oktaAuth: OktaAuthOAuthInterface, \n  options?: MyAccountRequestOptions\n) => Promise<T>;\n\nexport interface OktaAuthMyAccountInterface\n<\n  M extends OAuthTransactionMeta = PKCETransactionMeta,\n  S extends OAuthStorageManagerInterface<M> = OAuthStorageManagerInterface<M>,\n  O extends OktaAuthOAuthOptions = OktaAuthOAuthOptions\n> \n  extends OktaAuthOAuthInterface<M, S, O>\n{\n  myaccount;\n}\n","/*!\n * Copyright (c) 2015-present, Okta, Inc. and/or its affiliates. All rights reserved.\n * The Okta software accompanied by this notice is provided pursuant to the Apache License, Version 2.0 (the \"License.\")\n *\n * You may obtain a copy of the License at http://www.apache.org/licenses/LICENSE-2.0.\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT\n * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n *\n * See the License for the specific language governing permissions and limitations under the License.\n */\n\nexport default class SdkClock {\n  localOffset: number;\n\n  constructor(localOffset) {\n    // Calculated local clock offset from server time (in milliseconds). Can be positive or negative.\n    this.localOffset = parseInt(localOffset || 0);\n  }\n\n  // factory method. Create an instance of a clock from current context.\n  static create(/* sdk, options */): SdkClock {\n    // TODO: calculate localOffset\n    var localOffset = 0;\n    return new SdkClock(localOffset);\n  }\n\n  // Return the current time (in seconds)\n  now() {\n    var now = (Date.now() + this.localOffset) / 1000;\n    return now;\n  }\n}\n","/*!\n * Copyright (c) 2015-present, Okta, Inc. and/or its affiliates. All rights reserved.\n * The Okta software accompanied by this notice is provided pursuant to the Apache License, Version 2.0 (the \"License.\")\n *\n * You may obtain a copy of the License at http://www.apache.org/licenses/LICENSE-2.0.\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT\n * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n *\n * See the License for the specific language governing permissions and limitations under the License.\n *\n */\nimport { removeNils, clone } from '../util';\nimport { AuthSdkError } from '../errors';\nimport { validateToken  } from '../oidc/util';\nimport { isLocalhost, isIE11OrLess } from '../features';\nimport SdkClock from '../clock';\nimport {\n  Token, \n  Tokens, \n  TokenType, \n  TokenManagerOptions, \n  isIDToken, \n  isAccessToken,\n  isRefreshToken,\n  TokenManagerErrorEventHandler,\n  TokenManagerSetStorageEventHandler,\n  TokenManagerRenewEventHandler,\n  TokenManagerEventHandler,\n  TokenManagerInterface,\n  RefreshToken,\n  AccessTokenCallback,\n  IDTokenCallback,\n  RefreshTokenCallback,\n  EVENT_RENEWED,\n  EVENT_ADDED,\n  EVENT_ERROR,\n  EVENT_EXPIRED,\n  EVENT_REMOVED,\n  EVENT_SET_STORAGE,\n  TokenManagerAnyEventHandler,\n  TokenManagerAnyEvent,\n  OktaAuthOAuthInterface\n} from './types';\nimport { REFRESH_TOKEN_STORAGE_KEY, TOKEN_STORAGE_NAME } from '../constants';\nimport { EventEmitter } from '../base/types';\nimport { StorageOptions, StorageProvider, StorageType } from '../storage/types';\n\nconst DEFAULT_OPTIONS = {\n  // TODO: remove in next major version - OKTA-473815\n  autoRenew: true,\n  autoRemove: true,\n  syncStorage: true,\n  // --- //\n  clearPendingRemoveTokens: true,\n  storage: undefined, // will use value from storageManager config\n  expireEarlySeconds: 30,\n  storageKey: TOKEN_STORAGE_NAME\n};\n\ninterface TokenManagerState {\n  expireTimeouts: Record<string, unknown>;\n  renewPromise: Promise<Token | undefined> | null;\n  started?: boolean;\n}\nfunction defaultState(): TokenManagerState {\n  return {\n    expireTimeouts: {},\n    renewPromise: null\n  };\n}\nexport class TokenManager implements TokenManagerInterface {\n  private sdk: OktaAuthOAuthInterface;\n  private clock: SdkClock;\n  private emitter: EventEmitter;\n  private storage: StorageProvider;\n  private state: TokenManagerState;\n  private options: TokenManagerOptions;\n\n  on(event: typeof EVENT_RENEWED, handler: TokenManagerRenewEventHandler, context?: object): void;\n  on(event: typeof EVENT_ERROR, handler: TokenManagerErrorEventHandler, context?: object): void;\n  on(event: typeof EVENT_SET_STORAGE, handler: TokenManagerSetStorageEventHandler, context?: object): void;\n  on(event: typeof EVENT_EXPIRED | typeof EVENT_ADDED | typeof EVENT_REMOVED, \n    handler: TokenManagerEventHandler, context?: object): void;\n  on(event: TokenManagerAnyEvent, handler: TokenManagerAnyEventHandler, context?: object): void {\n    if (context) {\n      this.emitter.on(event, handler, context);\n    } else {\n      this.emitter.on(event, handler);\n    }\n  }\n\n  off(event: typeof EVENT_RENEWED, handler?: TokenManagerRenewEventHandler): void;\n  off(event: typeof EVENT_ERROR, handler?: TokenManagerErrorEventHandler): void;\n  off(event: typeof EVENT_SET_STORAGE, handler?: TokenManagerSetStorageEventHandler): void;\n  off(event: typeof EVENT_EXPIRED | typeof EVENT_ADDED | typeof EVENT_REMOVED, \n    handler?: TokenManagerEventHandler): void;\n  off(event: TokenManagerAnyEvent, handler?: TokenManagerAnyEventHandler): void {\n    if (handler) {\n      this.emitter.off(event, handler);\n    } else {\n      this.emitter.off(event);\n    }\n  }\n\n  // eslint-disable-next-line complexity\n  constructor(sdk: OktaAuthOAuthInterface, options: TokenManagerOptions = {}) {\n    this.sdk = sdk;\n    this.emitter = (sdk as any).emitter;\n    if (!this.emitter) {\n      throw new AuthSdkError('Emitter should be initialized before TokenManager');\n    }\n    \n    options = Object.assign({}, DEFAULT_OPTIONS, removeNils(options));\n    if (!isLocalhost()) {\n      options.expireEarlySeconds = DEFAULT_OPTIONS.expireEarlySeconds;\n    }\n\n    this.options = options;\n\n    const storageOptions: StorageOptions = removeNils({\n      storageKey: options.storageKey,\n      secure: options.secure,\n    });\n    if (typeof options.storage === 'object') {\n      // A custom storage provider must implement getItem(key) and setItem(key, val)\n      storageOptions.storageProvider = options.storage;\n    } else if (options.storage) {\n      storageOptions.storageType = options.storage as StorageType;\n    }\n\n    this.storage = sdk.storageManager.getTokenStorage({...storageOptions, useSeparateCookies: true});\n    this.clock = SdkClock.create(/* sdk, options */);\n    this.state = defaultState();\n  }\n\n  start() {\n    if (this.options.clearPendingRemoveTokens) {\n      this.clearPendingRemoveTokens();\n    }\n    this.setExpireEventTimeoutAll();\n    this.state.started = true;\n  }\n  \n  stop() {\n    this.clearExpireEventTimeoutAll();\n    this.state.started = false;\n  }\n\n  isStarted() {\n    return !!this.state.started;\n  }\n\n  getOptions(): TokenManagerOptions {\n    return clone(this.options);\n  }\n  \n  getExpireTime(token) {\n    const expireEarlySeconds = this.options.expireEarlySeconds || 0;\n    var expireTime = token.expiresAt - expireEarlySeconds;\n    return expireTime;\n  }\n  \n  hasExpired(token) {\n    var expireTime = this.getExpireTime(token);\n    return expireTime <= this.clock.now();\n  }\n  \n  emitExpired(key, token) {\n    this.emitter.emit(EVENT_EXPIRED, key, token);\n  }\n  \n  emitRenewed(key, freshToken, oldToken) {\n    this.emitter.emit(EVENT_RENEWED, key, freshToken, oldToken);\n  }\n  \n  emitAdded(key, token) {\n    this.emitter.emit(EVENT_ADDED, key, token);\n  }\n  \n  emitRemoved(key, token?) {\n    this.emitter.emit(EVENT_REMOVED, key, token);\n  }\n  \n  emitError(error) {\n    this.emitter.emit(EVENT_ERROR, error);\n  }\n  \n  clearExpireEventTimeout(key) {\n    clearTimeout(this.state.expireTimeouts[key] as any);\n    delete this.state.expireTimeouts[key];\n  \n    // Remove the renew promise (if it exists)\n    this.state.renewPromise = null;\n  }\n  \n  clearExpireEventTimeoutAll() {\n    var expireTimeouts = this.state.expireTimeouts;\n    for (var key in expireTimeouts) {\n      if (!Object.prototype.hasOwnProperty.call(expireTimeouts, key)) {\n        continue;\n      }\n      this.clearExpireEventTimeout(key);\n    }\n  }\n  \n  setExpireEventTimeout(key, token) {\n    if (isRefreshToken(token)) {\n      return;\n    }\n\n    var expireTime = this.getExpireTime(token);\n    var expireEventWait = Math.max(expireTime - this.clock.now(), 0) * 1000;\n  \n    // Clear any existing timeout\n    this.clearExpireEventTimeout(key);\n  \n    var expireEventTimeout = setTimeout(() => {\n      this.emitExpired(key, token);\n    }, expireEventWait);\n  \n    // Add a new timeout\n    this.state.expireTimeouts[key] = expireEventTimeout;\n  }\n  \n  setExpireEventTimeoutAll() {\n    var tokenStorage = this.storage.getStorage();\n    for(var key in tokenStorage) {\n      if (!Object.prototype.hasOwnProperty.call(tokenStorage, key)) {\n        continue;\n      }\n      var token = tokenStorage[key];\n      this.setExpireEventTimeout(key, token);\n    }\n  }\n  \n  // reset timeouts to setup autoRenew for tokens from other document context (tabs)\n  resetExpireEventTimeoutAll() {\n    this.clearExpireEventTimeoutAll();\n    this.setExpireEventTimeoutAll();\n  }\n  \n  add(key, token: Token) {\n    var tokenStorage = this.storage.getStorage();\n    validateToken(token);\n    tokenStorage[key] = token;\n    this.storage.setStorage(tokenStorage);\n    this.emitSetStorageEvent();\n    this.emitAdded(key, token);\n    this.setExpireEventTimeout(key, token);\n  }\n  \n  getSync(key): Token | undefined {\n    var tokenStorage = this.storage.getStorage();\n    return tokenStorage[key];\n  }\n  \n  async get(key): Promise<Token | undefined> {\n    return this.getSync(key);\n  }\n  \n  getTokensSync(): Tokens {\n    const tokens = {} as Tokens;\n    const tokenStorage = this.storage.getStorage();\n    Object.keys(tokenStorage).forEach(key => {\n      const token = tokenStorage[key];\n      if (isAccessToken(token)) {\n        tokens.accessToken = token;\n      } else if (isIDToken(token)) {\n        tokens.idToken = token;\n      } else if (isRefreshToken(token)) { \n        tokens.refreshToken = token;\n      }\n    });\n    return tokens;\n  }\n  \n  async getTokens(): Promise<Tokens> {\n    return this.getTokensSync();\n  }\n\n  getStorageKeyByType(type: TokenType): string {\n    const tokenStorage = this.storage.getStorage();\n    const key = Object.keys(tokenStorage).filter(key => {\n      const token = tokenStorage[key];\n      return (isAccessToken(token) && type === 'accessToken') \n        || (isIDToken(token) && type === 'idToken')\n        || (isRefreshToken(token) && type === 'refreshToken');\n    })[0];\n    return key;\n  }\n\n  private getTokenType(token: Token): TokenType {\n    if (isAccessToken(token)) {\n      return 'accessToken';\n    }\n    if (isIDToken(token)) {\n      return 'idToken';\n    }\n    if(isRefreshToken(token)) {\n      return 'refreshToken';\n    }\n    throw new AuthSdkError('Unknown token type');\n  }\n\n  // for synchronization of LocalStorage cross tabs for IE11\n  private emitSetStorageEvent() {\n    if (isIE11OrLess()) {\n      const storage = this.storage.getStorage();\n      this.emitter.emit(EVENT_SET_STORAGE, storage);\n    }\n  }\n\n  // used in `SyncStorageService` for synchronization of LocalStorage cross tabs for IE11\n  public getStorage() {\n    return this.storage;\n  }\n\n  setTokens(\n    tokens: Tokens,\n    // TODO: callbacks can be removed in the next major version OKTA-407224\n    accessTokenCb?: AccessTokenCallback, \n    idTokenCb?: IDTokenCallback,\n    refreshTokenCb?: RefreshTokenCallback\n  ): void {\n    const handleTokenCallback = (key, token) => {\n      const type = this.getTokenType(token);\n      if (type === 'accessToken') {\n        accessTokenCb && accessTokenCb(key, token);\n      } else if (type === 'idToken') {\n        idTokenCb && idTokenCb(key, token);\n      } else if (type === 'refreshToken') {\n        refreshTokenCb && refreshTokenCb(key, token);\n      }\n    };\n    const handleAdded = (key, token) => {\n      this.emitAdded(key, token);\n      this.setExpireEventTimeout(key, token);\n      handleTokenCallback(key, token);\n    };\n    const handleRenewed = (key, token, oldToken) => {\n      this.emitRenewed(key, token, oldToken);\n      this.clearExpireEventTimeout(key);\n      this.setExpireEventTimeout(key, token);\n      handleTokenCallback(key, token);\n    };\n    const handleRemoved = (key, token) => {\n      this.clearExpireEventTimeout(key);\n      this.emitRemoved(key, token);\n      handleTokenCallback(key, token);\n    };\n    \n    const types: TokenType[] = ['idToken', 'accessToken', 'refreshToken'];\n    const existingTokens = this.getTokensSync();\n\n    // valid tokens\n    types.forEach((type) => {\n      const token = tokens[type];\n      if (token) {\n        validateToken(token, type);\n      }\n    });\n  \n    // add token to storage\n    const storage = types.reduce((storage, type) => {\n      const token = tokens[type];\n      if (token) {\n        const storageKey = this.getStorageKeyByType(type) || type;\n        storage[storageKey] = token;\n      }\n      return storage;\n    }, {});\n    this.storage.setStorage(storage);\n    this.emitSetStorageEvent();\n\n    // emit event and start expiration timer\n    types.forEach(type => {\n      const newToken = tokens[type];\n      const existingToken = existingTokens[type];\n      const storageKey = this.getStorageKeyByType(type) || type;\n      if (newToken && existingToken) { // renew\n        // call handleRemoved first, since it clears timers\n        handleRemoved(storageKey, existingToken);\n        handleAdded(storageKey, newToken);\n        handleRenewed(storageKey, newToken, existingToken);\n      } else if (newToken) { // add\n        handleAdded(storageKey, newToken);\n      } else if (existingToken) { //remove\n        handleRemoved(storageKey, existingToken);\n      }\n    });\n  }\n  \n  remove(key) {\n    // Clear any listener for this token\n    this.clearExpireEventTimeout(key);\n  \n    var tokenStorage = this.storage.getStorage();\n    var removedToken = tokenStorage[key];\n    delete tokenStorage[key];\n    this.storage.setStorage(tokenStorage);\n    this.emitSetStorageEvent();\n  \n    this.emitRemoved(key, removedToken);\n  }\n  \n  // TODO: this methods is redundant and can be removed in the next major version OKTA-407224\n  async renewToken(token) {\n    return this.sdk.token?.renew(token);\n  }\n  // TODO: this methods is redundant and can be removed in the next major version OKTA-407224\n  validateToken(token: Token) {\n    return validateToken(token);\n  }\n\n  // TODO: renew method should take no param, change in the next major version OKTA-407224\n  renew(key): Promise<Token | undefined> {\n    // Multiple callers may receive the same promise. They will all resolve or reject from the same request.\n    if (this.state.renewPromise) {\n      return this.state.renewPromise;\n    }\n\n    try {\n      var token = this.getSync(key);\n      let shouldRenew = token !== undefined;\n      // explicitly check if key='accessToken' because token keys are not guaranteed (long story, features dragons)\n      if (!token && key === 'accessToken') {\n        // attempt token renewal if refresh token is present (improves consistency of autoRenew)\n        const refreshKey = this.getStorageKeyByType('refreshToken');\n        const refreshToken = this.getSync(refreshKey);\n        shouldRenew = refreshToken !== undefined;\n      }\n\n      if (!shouldRenew) {\n        throw new AuthSdkError('The tokenManager has no token for the key: ' + key);\n      }\n    }\n    catch (err) {\n      this.emitError(err);\n      return Promise.reject(err);\n    }\n\n    // Remove existing autoRenew timeout\n    this.clearExpireEventTimeout(key);\n  \n    // A refresh token means a replace instead of renewal\n    // Store the renew promise state, to avoid renewing again\n    const renewPromise = this.state.renewPromise = this.sdk.token.renewTokens()\n      .then(tokens => {\n        this.setTokens(tokens);\n\n        // return accessToken in case where access token doesn't exist\n        // but refresh token exists\n        if (!token && key === 'accessToken') {\n          const accessToken = tokens['accessToken'];\n          this.emitRenewed(key, accessToken, null);\n          return accessToken;\n        }\n\n        // resolve token based on the key\n        const tokenType = this.getTokenType(token!);\n        return tokens[tokenType];\n      })\n      .catch(err => {\n        // If renew fails, remove token from storage and emit error\n        this.remove(key);\n        err.tokenKey = key;\n        this.emitError(err);\n        throw err;\n      })\n      .finally(() => {\n        // Remove existing promise key\n        this.state.renewPromise = null;\n      });\n  \n    return renewPromise;\n  }\n  \n  clear() {\n    const tokens = this.getTokensSync();\n    this.clearExpireEventTimeoutAll();\n    this.storage.clearStorage();\n    this.emitSetStorageEvent();\n\n    Object.keys(tokens).forEach(key => {\n      this.emitRemoved(key, tokens[key]);\n    });\n  }\n\n  clearPendingRemoveTokens() {\n    const tokenStorage = this.storage.getStorage();\n    const removedTokens = {};\n    Object.keys(tokenStorage).forEach(key => {\n      if (tokenStorage[key].pendingRemove) {\n        removedTokens[key] = tokenStorage[key];\n        delete tokenStorage[key];\n      }\n    });\n    this.storage.setStorage(tokenStorage);\n    this.emitSetStorageEvent();\n    Object.keys(removedTokens).forEach(key => {\n      this.clearExpireEventTimeout(key);\n      this.emitRemoved(key, removedTokens[key]);\n    });\n  }\n\n  updateRefreshToken(token: RefreshToken) {\n    const key = this.getStorageKeyByType('refreshToken') || REFRESH_TOKEN_STORAGE_KEY;\n\n    // do not emit any event\n    var tokenStorage = this.storage.getStorage();\n    validateToken(token);\n    tokenStorage[key] = token;\n    this.storage.setStorage(tokenStorage);\n    this.emitSetStorageEvent();\n  }\n\n  removeRefreshToken () {\n    const key = this.getStorageKeyByType('refreshToken') || REFRESH_TOKEN_STORAGE_KEY;\n    this.remove(key);\n  }\n\n  addPendingRemoveFlags() {\n    const tokens = this.getTokensSync();\n    Object.keys(tokens).forEach(key => {\n      tokens[key].pendingRemove = true;\n    });\n    this.setTokens(tokens);\n  }\n  \n}\n","import { OAuthStorageManagerInterface, OAuthTransactionMeta, isTransactionMeta } from '../types';\n\nconst MAX_ENTRY_LIFETIME = 30 * 60 * 1000; // 30 minutes\n\nexport function pruneSharedStorage<M extends OAuthTransactionMeta>(storageManager: OAuthStorageManagerInterface<M>) {\n  const sharedStorage = storageManager.getSharedTansactionStorage();\n  const entries = sharedStorage.getStorage();\n  Object.keys(entries).forEach(state => {\n    const entry = entries[state];\n    const age = Date.now() - entry.dateCreated;\n    if (age > MAX_ENTRY_LIFETIME) {\n      delete entries[state];\n    }\n  });\n  sharedStorage.setStorage(entries);\n}\n\nexport function saveTransactionToSharedStorage<M extends OAuthTransactionMeta>(\n  storageManager: OAuthStorageManagerInterface<M>, state: string, meta: M\n) {\n  const sharedStorage = storageManager.getSharedTansactionStorage();\n  const entries = sharedStorage.getStorage();\n  entries[state] = {\n    dateCreated: Date.now(),\n    transaction: meta\n  };\n  sharedStorage.setStorage(entries);\n}\n\n\nexport function loadTransactionFromSharedStorage<M extends OAuthTransactionMeta>(\n  storageManager: OAuthStorageManagerInterface<M>, state: string\n) {\n  const sharedStorage = storageManager.getSharedTansactionStorage();\n  const entries = sharedStorage.getStorage();\n  const entry = entries[state];\n  if (entry && entry.transaction && isTransactionMeta(entry.transaction)) {\n    return entry.transaction;\n  }\n  return null;\n}\n\nexport function clearTransactionFromSharedStorage<M extends OAuthTransactionMeta>(\n  storageManager: OAuthStorageManagerInterface<M>, state: string\n) {\n  const sharedStorage = storageManager.getSharedTansactionStorage();\n  const entries = sharedStorage.getStorage();\n  delete entries[state];\n  sharedStorage.setStorage(entries);\n}\n","/*!\n * Copyright (c) 2015-present, Okta, Inc. and/or its affiliates. All rights reserved.\n * The Okta software accompanied by this notice is provided pursuant to the Apache License, Version 2.0 (the \"License.\")\n *\n * You may obtain a copy of the License at http://www.apache.org/licenses/LICENSE-2.0.\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT\n * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * \n * See the License for the specific language governing permissions and limitations under the License.\n */\n\nimport { StorageProvider } from '../storage/types';\nimport {\n  TransactionMeta,\n  isTransactionMeta,\n  TransactionMetaOptions,\n  TransactionManagerOptions,\n  OAuthTransactionMeta,\n  OAuthStorageManagerInterface,\n  ClearTransactionMetaOptions,\n  TransactionManagerInterface,\n  PKCETransactionMeta\n} from './types';\nimport { warn } from '../util';\nimport {\n  clearTransactionFromSharedStorage,\n  loadTransactionFromSharedStorage,\n  pruneSharedStorage,\n  saveTransactionToSharedStorage\n} from './util/sharedStorage';\n\n\nexport function createTransactionManager\n<\n  M extends OAuthTransactionMeta = PKCETransactionMeta,\n  S extends OAuthStorageManagerInterface<M> = OAuthStorageManagerInterface<M>\n>\n()\n{\n  return class TransactionManager implements TransactionManagerInterface\n  {\n    options: TransactionManagerOptions;\n    storageManager: S;\n    enableSharedStorage: boolean;\n    saveLastResponse: boolean;\n\n    constructor(options: TransactionManagerOptions) {\n      // eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n      this.storageManager = options.storageManager! as S;\n      this.enableSharedStorage = options.enableSharedStorage === false ? false : true;\n      this.saveLastResponse = options.saveLastResponse === false ? false : true;\n      this.options = options;\n    }\n\n    // eslint-disable-next-line complexity\n    clear(options: ClearTransactionMetaOptions = {}) {\n      const transactionStorage: StorageProvider = this.storageManager.getTransactionStorage();\n      const meta = transactionStorage.getStorage();\n\n      // Clear primary storage (by default, sessionStorage on browser)\n      transactionStorage.clearStorage();\n\n      // Usually we want to also clear shared storage unless another tab may need it to continue/complete a flow\n      if (this.enableSharedStorage && options.clearSharedStorage !== false) {\n        const state = options.state || meta?.state;\n        if (state) {\n          clearTransactionFromSharedStorage(this.storageManager, state);\n        }\n      }\n    }\n\n    // eslint-disable-next-line complexity\n    save(meta: M, options: TransactionMetaOptions = {}) {\n      // There must be only one transaction executing at a time.\n      // Before saving, check to see if a transaction is already stored.\n      // An existing transaction indicates a concurrency/race/overlap condition\n\n      let storage: StorageProvider = this.storageManager.getTransactionStorage();\n      const obj = storage.getStorage();\n      // oie process may need to update transaction in the middle of process for tracking purpose\n      // false alarm might be caused \n      // TODO: revisit for a better solution, https://oktainc.atlassian.net/browse/OKTA-430919\n      if (isTransactionMeta(obj) && !options.muteWarning) {\n        // eslint-disable-next-line max-len\n        warn('a saved auth transaction exists in storage. This may indicate another auth flow is already in progress.');\n      }\n\n      storage.setStorage(meta);\n\n      // Shared storage allows continuation of transaction in another tab\n      if (this.enableSharedStorage && meta.state) {\n        saveTransactionToSharedStorage(this.storageManager, meta.state, meta);\n      }\n    }\n\n    exists(options: TransactionMetaOptions = {}): boolean {\n      try {\n        const meta = this.load(options);\n        return !!meta;\n      } catch {\n        return false;\n      }\n    }\n\n    // load transaction meta from storage\n    // eslint-disable-next-line complexity,max-statements\n    load(options: TransactionMetaOptions = {}): TransactionMeta | null {\n\n      let meta: TransactionMeta;\n\n      // If state was passed, try loading transaction data from shared storage\n      if (this.enableSharedStorage && options.state) {\n        pruneSharedStorage(this.storageManager); // prune before load\n        meta = loadTransactionFromSharedStorage(this.storageManager, options.state);\n        if (isTransactionMeta(meta)) {\n          return meta;\n        }\n      }\n\n      let storage: StorageProvider = this.storageManager.getTransactionStorage();\n      meta = storage.getStorage();\n      if (isTransactionMeta(meta)) {\n        // if we have meta in the new location, there is no need to go further\n        return meta;\n      }\n\n      return null;\n    }\n\n  };\n}\n","/*!\n * Copyright (c) 2015-present, Okta, Inc. and/or its affiliates. All rights reserved.\n * The Okta software accompanied by this notice is provided pursuant to the Apache License, Version 2.0 (the \"License.\")\n *\n * You may obtain a copy of the License at http://www.apache.org/licenses/LICENSE-2.0.\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT\n * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n *\n * See the License for the specific language governing permissions and limitations under the License.\n *\n */\nimport { AuthSdkError } from '../errors';\nimport { JWTObject } from './types';\nimport { base64UrlToString } from '../crypto';\n\nexport function decodeToken(token: string): JWTObject {\n  var jwt = token.split('.');\n  var decodedToken: JWTObject;\n\n  try {\n    decodedToken = {\n      header: JSON.parse(base64UrlToString(jwt[0])),\n      payload: JSON.parse(base64UrlToString(jwt[1])),\n      signature: jwt[2]\n    };\n  } catch (e) {\n    throw new AuthSdkError('Malformed token');\n  }\n\n  return decodedToken;\n}\n","// References:\n// https://www.w3.org/TR/WebCryptoAPI/#concepts-key-storage\n// https://datatracker.ietf.org/doc/html/rfc9449\n\nimport {\n  webcrypto,\n  stringToBase64Url,\n  stringToBuffer,\n  bufferToBase64Url,\n  base64ToBase64Url,\n  btoa\n} from '../crypto';\nimport { AuthSdkError, OAuthError, WWWAuthError, isOAuthError, isWWWAuthError } from '../errors';\nimport { Tokens } from './types';\n\nexport interface DPoPClaims {\n  htm: string;\n  htu: string;\n  iat: number;\n  jti: string;\n  nonce?: string;\n  ath?: string;\n}\n\nexport interface DPoPProofParams {\n  keyPair: CryptoKeyPair;\n  url: string;\n  method: string;\n  nonce?: string;\n  accessToken?: string;\n}\n\nexport type ResourceDPoPProofParams = Omit<DPoPProofParams, 'keyPair' | 'nonce'>;\ntype DPoPProofTokenRequestParams = Omit<DPoPProofParams, 'accessToken'>;\n\nconst INDEXEDDB_NAME = 'OktaAuthJs';\nconst DB_KEY = 'DPoPKeys';\n\nexport function isDPoPNonceError(obj: any): obj is OAuthError | WWWAuthError {\n  return (\n    (isOAuthError(obj) || isWWWAuthError(obj)) &&\n    obj.errorCode === 'use_dpop_nonce'\n  );\n}\n\n/////////// crypto ///////////\n\nexport async function createJwt(header: object, claims: object, signingKey: CryptoKey): Promise<string> {\n  const head = stringToBase64Url(JSON.stringify(header));\n  const body = stringToBase64Url(JSON.stringify(claims));\n  const signature = await webcrypto.subtle.sign(\n    { name: signingKey.algorithm.name }, signingKey, stringToBuffer(`${head}.${body}`)\n  );\n  return `${head}.${body}.${base64ToBase64Url(bufferToBase64Url(signature))}`;\n}\n\nexport function cryptoRandomValue (byteLen = 32) {\n  return [...webcrypto.getRandomValues(new Uint8Array(byteLen))].map(v => v.toString(16)).join('');\n}\n\nexport async function generateKeyPair (): Promise<CryptoKeyPair> {\n  const algorithm = {\n    name: 'RSASSA-PKCS1-v1_5',\n    hash: 'SHA-256',\n    modulusLength: 2048,\n    publicExponent: new Uint8Array([0x01, 0x00, 0x01]),\n  };\n\n  // The \"false\" here makes it non-exportable\n  // https://caniuse.com/mdn-api_subtlecrypto_generatekey\n  return webcrypto.subtle.generateKey(algorithm, false, ['sign', 'verify']);\n}\n\nasync function hashAccessToken (accessToken: string): Promise<string> {\n  const buffer = new TextEncoder().encode(accessToken);\n  const hash = await webcrypto.subtle.digest('SHA-256', buffer);\n\n  return btoa(String.fromCharCode.apply(null, new Uint8Array(hash) as unknown as number[]))\n    .replace(/\\+/g, '-').replace(/\\//g, '_').replace(/=+$/, '');\n}\n\n/////////// indexeddb / keystore ///////////\n\n\n// https://developer.mozilla.org/en-US/docs/Web/API/IDBObjectStore#instance_methods\n// add additional methods as needed\nexport type StoreMethod = 'get' | 'add' | 'delete' | 'clear';\n\n// convenience abstraction for exposing IDBObjectStore instance\nfunction keyStore (): Promise<IDBObjectStore> {\n  return new Promise((resolve, reject) => {\n    try {\n      const indexedDB = window.indexedDB;\n      const req = indexedDB.open(INDEXEDDB_NAME, 1);\n\n      req.onerror = function () {\n        reject(req.error!);\n      };\n\n      req.onupgradeneeded = function () {\n        const db = req.result;\n        db.createObjectStore(DB_KEY);\n      };\n\n      req.onsuccess = function () {\n        const db = req.result;\n        const tx = db.transaction(DB_KEY, 'readwrite');\n\n        tx.onerror = function () {\n          reject(tx.error!);\n        };\n\n        const store = tx.objectStore(DB_KEY);\n\n        resolve(store);\n\n        tx.oncomplete = function () {\n          db.close();\n        };\n      };\n    }\n    catch (err) {\n      reject(err);\n    }\n  });\n}\n\n// convenience abstraction for wrapping IDBObjectStore methods in promises\nasync function invokeStoreMethod (method: StoreMethod, ...args: any[]): Promise<IDBRequest> {\n  const store = await keyStore();\n  return new Promise((resolve, reject) => {\n    // https://github.com/microsoft/TypeScript/issues/49700\n    // https://github.com/microsoft/TypeScript/issues/49802\n    // @ts-expect-error ts(2556)\n    const req = store[method](...args);\n    req.onsuccess = function () {\n      resolve(req);\n    };\n    req.onerror = function () {\n      reject(req.error);\n    };\n  });\n}\n\nasync function storeKeyPair (pairId: string, keyPair: CryptoKeyPair) {\n  await invokeStoreMethod('add', keyPair, pairId);\n  return keyPair;\n}\n\n// attempts to find keyPair stored at given key, otherwise throws\nexport async function findKeyPair (pairId?: string): Promise<CryptoKeyPair> {\n  if (pairId) {\n    const req = await invokeStoreMethod('get', pairId);\n    if (req.result) {\n      return req.result;\n    }\n  }\n\n  // defaults to throwing unless keyPair is found\n  throw new AuthSdkError(`Unable to locate dpop key pair required for refresh${pairId ? ` (${pairId})` : ''}`);\n}\n\nexport async function clearDPoPKeyPair (pairId: string): Promise<void> {\n  await invokeStoreMethod('delete', pairId);\n}\n\nexport async function clearAllDPoPKeyPairs (): Promise<void> {\n  await invokeStoreMethod('clear');\n}\n\n// generates a crypto (non-extractable) private key pair and writes it to indexeddb, returns key (id)\nexport async function createDPoPKeyPair (): Promise<{keyPair: CryptoKeyPair, keyPairId: string}> {\n  const keyPairId = cryptoRandomValue(4);\n  const keyPair = await generateKeyPair();\n  await storeKeyPair(keyPairId, keyPair);\n  return { keyPair, keyPairId };\n}\n\n// will clear PK from storage if certain token conditions are met\n/* eslint max-len: [2, 132], complexity: [2, 12] */\nexport async function clearDPoPKeyPairAfterRevoke (revokedToken: 'access' | 'refresh', tokens: Tokens): Promise<void> {\n  let shouldClear = false;\n\n  const { accessToken, refreshToken } = tokens;\n\n  // revoking access token and refresh token doesn't exist\n  if (revokedToken === 'access' && accessToken && accessToken.tokenType === 'DPoP' && !refreshToken) {\n    shouldClear = true;\n  }\n\n  // revoking refresh token and access token doesn't exist\n  if (revokedToken === 'refresh' && refreshToken && !accessToken) {\n    shouldClear = true;\n  }\n\n  const pairId = accessToken?.dpopPairId ?? refreshToken?.dpopPairId;\n  if (shouldClear && pairId) {\n    await clearDPoPKeyPair(pairId);\n  }\n}\n\n/////////// proof generation methods ///////////\n\nexport async function generateDPoPProof ({ keyPair, url, method, nonce, accessToken }: DPoPProofParams): Promise<string> {\n  const { kty, crv, e, n, x, y } = await webcrypto.subtle.exportKey('jwk', keyPair.publicKey);\n  const header = {\n    alg: 'RS256',\n    typ: 'dpop+jwt',\n    jwk: { kty, crv, e, n, x, y }\n  };\n\n  const claims: DPoPClaims = {\n    htm: method,\n    htu: url,\n    iat: Math.floor(Date.now() / 1000),\n    jti: cryptoRandomValue(),\n  };\n\n  if (nonce) {\n    claims.nonce = nonce;\n  }\n\n  // encode access token\n  if (accessToken) {\n    claims.ath = await hashAccessToken(accessToken);\n  }\n\n  return createJwt(header, claims, keyPair.privateKey);\n}\n\n/* eslint max-len: [2, 132] */\nexport async function generateDPoPForTokenRequest ({ keyPair, url, method, nonce }: DPoPProofTokenRequestParams): Promise<string> {\n  const params: DPoPProofParams = { keyPair, url, method };\n  if (nonce) {\n    params.nonce = nonce;\n  }\n\n  return generateDPoPProof(params);\n}\n","/* eslint-disable @typescript-eslint/no-non-null-assertion */\n/*!\n * Copyright (c) 2015-present, Okta, Inc. and/or its affiliates. All rights reserved.\n * The Okta software accompanied by this notice is provided pursuant to the Apache License, Version 2.0 (the \"License.\")\n *\n * You may obtain a copy of the License at http://www.apache.org/licenses/LICENSE-2.0.\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT\n * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * \n * See the License for the specific language governing permissions and limitations under the License.\n */\n\n\nimport { isString, removeNils, toQueryString } from '../../util';\nimport { AuthSdkError } from '../../errors';\nimport { OAuthParams, TokenParams } from '../types';\n\nexport function convertTokenParamsToOAuthParams(tokenParams: TokenParams) {\n  // Quick validation\n  if (!tokenParams.clientId) {\n    throw new AuthSdkError('A clientId must be specified in the OktaAuth constructor to get a token');\n  }\n\n  if (isString(tokenParams.responseType) && tokenParams.responseType.indexOf(' ') !== -1) {\n    throw new AuthSdkError('Multiple OAuth responseTypes must be defined as an array');\n  }\n\n  // Convert our params to their actual OAuth equivalents\n  var oauthParams: OAuthParams = {\n    'client_id': tokenParams.clientId,\n    'code_challenge': tokenParams.codeChallenge,\n    'code_challenge_method': tokenParams.codeChallengeMethod,\n    'display': tokenParams.display,\n    'idp': tokenParams.idp,\n    'idp_scope': tokenParams.idpScope,\n    'login_hint': tokenParams.loginHint,\n    'max_age': tokenParams.maxAge,\n    'nonce': tokenParams.nonce,\n    'prompt': tokenParams.prompt,\n    'redirect_uri': tokenParams.redirectUri,\n    'response_mode': tokenParams.responseMode,\n    'response_type': tokenParams.responseType,\n    'sessionToken': tokenParams.sessionToken,\n    'state': tokenParams.state,\n    'acr_values': tokenParams.acrValues,\n    'enroll_amr_values': tokenParams.enrollAmrValues,\n  };\n  oauthParams = removeNils(oauthParams) as OAuthParams;\n\n  ['idp_scope', 'response_type', 'enroll_amr_values'].forEach(function (mayBeArray) {\n    if (Array.isArray(oauthParams[mayBeArray])) {\n      oauthParams[mayBeArray] = oauthParams[mayBeArray].join(' ');\n    }\n  });\n\n  if (tokenParams.responseType!.indexOf('id_token') !== -1 &&\n    tokenParams.scopes!.indexOf('openid') === -1) {\n    throw new AuthSdkError('openid scope must be specified in the scopes argument when requesting an id_token');\n  } else if (tokenParams.scopes) {\n    oauthParams.scope = tokenParams.scopes!.join(' ');\n  }\n\n  return oauthParams;\n}\n\nexport function buildAuthorizeParams(tokenParams: TokenParams) {\n  var oauthQueryParams = convertTokenParamsToOAuthParams(tokenParams);\n  return toQueryString({ \n    ...oauthQueryParams, \n    ...(tokenParams.extraParams && { ...tokenParams.extraParams })\n  });\n}\n","/*!\n * Copyright (c) 2015-present, Okta, Inc. and/or its affiliates. All rights reserved.\n * The Okta software accompanied by this notice is provided pursuant to the Apache License, Version 2.0 (the \"License.\")\n *\n * You may obtain a copy of the License at http://www.apache.org/licenses/LICENSE-2.0.\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT\n * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * \n * See the License for the specific language governing permissions and limitations under the License.\n */\n\n\nimport { AuthSdkError, AuthApiError } from '../../errors';\nimport { CustomUrls, OAuthParams, OAuthResponse, RefreshToken, TokenParams } from '../types';\nimport { removeNils, toQueryString } from '../../util';\nimport { httpRequest, OktaAuthHttpInterface } from '../../http';\nimport { generateDPoPForTokenRequest, isDPoPNonceError } from '../dpop';\n\nexport interface TokenEndpointParams extends TokenParams {\n  dpopKeyPair?: CryptoKeyPair;\n}\n\ninterface TokenRequestParams {\n  url: string;\n  data: any;\n  dpopKeyPair?: CryptoKeyPair;\n  nonce?: string;\n}\n\nfunction validateOptions(options: TokenEndpointParams) {\n  // Quick validation\n  if (!options.clientId) {\n    throw new AuthSdkError('A clientId must be specified in the OktaAuth constructor to get a token');\n  }\n\n  if (!options.redirectUri) {\n    throw new AuthSdkError('The redirectUri passed to /authorize must also be passed to /token');\n  }\n\n  if (!options.authorizationCode && !options.interactionCode) {\n    throw new AuthSdkError('An authorization code (returned from /authorize) must be passed to /token');\n  }\n\n  if (!options.codeVerifier) {\n    throw new AuthSdkError('The \"codeVerifier\" (generated and saved by your app) must be passed to /token');\n  }\n}\n\nfunction getPostData(sdk, options: TokenParams): string {\n  // Convert Token params to OAuth params, sent to the /token endpoint\n  var params: OAuthParams = removeNils({\n    'client_id': options.clientId,\n    'redirect_uri': options.redirectUri,\n    'grant_type': options.interactionCode ? 'interaction_code' : 'authorization_code',\n    'code_verifier': options.codeVerifier\n  });\n\n  if (options.interactionCode) {\n    params['interaction_code'] = options.interactionCode;\n  } else if (options.authorizationCode) {\n    params.code = options.authorizationCode;\n  }\n\n  const { clientSecret } = sdk.options;\n  if (clientSecret) {\n    params['client_secret'] = clientSecret;\n  }\n\n  // Encode as URL string\n  return toQueryString(params).slice(1);\n}\n\n/* eslint complexity: [2, 10] */\nasync function makeTokenRequest (sdk, { url, data, nonce, dpopKeyPair }: TokenRequestParams): Promise<OAuthResponse> {\n  const method = 'POST';\n  const headers: any = {\n    'Content-Type': 'application/x-www-form-urlencoded',\n  };\n\n  if (sdk.options.dpop) {\n    if (!dpopKeyPair) {\n      throw new AuthSdkError('DPoP is configured but no key pair was provided');\n    }\n\n    const proof = await generateDPoPForTokenRequest({ url, method, nonce, keyPair: dpopKeyPair });\n    headers.DPoP = proof;\n  }\n\n  try {\n    const resp = await httpRequest(sdk, {\n      url,\n      method,\n      args: data,\n      headers\n    });\n    return resp;\n  }\n  catch (err) {\n    if (isDPoPNonceError(err) && !nonce) {\n      const dpopNonce = err.resp?.headers['dpop-nonce'];\n      if (!dpopNonce) {\n        // throws error is dpop-nonce header cannot be found, prevents infinite loop\n        throw new AuthApiError(\n          {errorSummary: 'No `dpop-nonce` header found when required'},\n          err.resp ?? undefined    // yay ts\n        );\n      }\n      return makeTokenRequest(sdk, { url, data, dpopKeyPair, nonce: dpopNonce });\n    }\n    throw err;\n  }\n}\n\n// exchange authorization code for an access token\nexport async function postToTokenEndpoint(sdk, options: TokenEndpointParams, urls: CustomUrls): Promise<OAuthResponse> {\n  validateOptions(options);\n  var data = getPostData(sdk, options);\n\n  const params: TokenRequestParams = {\n    url: urls.tokenUrl!,\n    data,\n    dpopKeyPair: options?.dpopKeyPair\n  };\n\n  return makeTokenRequest(sdk, params);\n}\n\nexport async function postRefreshToken(\n  sdk: OktaAuthHttpInterface,\n  options: TokenEndpointParams,\n  refreshToken: RefreshToken\n): Promise<OAuthResponse> {\n  const data = Object.entries({\n    client_id: options.clientId, // eslint-disable-line camelcase\n    grant_type: 'refresh_token', // eslint-disable-line camelcase\n    scope: refreshToken.scopes.join(' '),\n    refresh_token: refreshToken.refreshToken, // eslint-disable-line camelcase\n  }).map(function ([name, value]) {\n    // eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n    return name + '=' + encodeURIComponent(value!);\n  }).join('&');\n\n  let url = refreshToken.tokenUrl;\n  if (options.extraParams && Object.keys(options.extraParams).length >= 1) {\n    url += toQueryString(options.extraParams);\n  }\n\n  const params: TokenRequestParams = {\n    url,\n    data,\n    dpopKeyPair: options?.dpopKeyPair\n  };\n\n  return makeTokenRequest(sdk, params);\n}\n","/*!\n * Copyright (c) 2015-present, Okta, Inc. and/or its affiliates. All rights reserved.\n * The Okta software accompanied by this notice is provided pursuant to the Apache License, Version 2.0 (the \"License.\")\n *\n * You may obtain a copy of the License at http://www.apache.org/licenses/LICENSE-2.0.\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT\n * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n *\n * See the License for the specific language governing permissions and limitations under the License.\n *\n */\nimport { get } from '../../http';\nimport { find } from '../../util';\nimport { OktaAuthOAuthInterface, WellKnownResponse } from '../types';\nimport AuthSdkError from '../../errors/AuthSdkError';\n\nexport function getWellKnown(sdk: OktaAuthOAuthInterface, issuer?: string): Promise<WellKnownResponse> {\n  var authServerUri = (issuer || sdk.options.issuer);\n  return get(sdk, authServerUri + '/.well-known/openid-configuration', {\n    cacheResponse: true\n  });\n}\n\nexport function getKey(sdk: OktaAuthOAuthInterface, issuer: string, kid: string): Promise<string> {\n  var httpCache = sdk.storageManager.getHttpCache(sdk.options.cookies);\n\n  return getWellKnown(sdk, issuer)\n  .then(function(wellKnown) {\n    var jwksUri = wellKnown['jwks_uri'];\n\n    // Check our kid against the cached version (if it exists and isn't expired)\n    var cacheContents = httpCache.getStorage();\n    var cachedResponse = cacheContents[jwksUri];\n    if (cachedResponse && Date.now()/1000 < cachedResponse.expiresAt) {\n      var cachedKey = find(cachedResponse.response.keys, {\n        kid: kid\n      });\n\n      if (cachedKey) {\n        return cachedKey;\n      }\n    }\n\n    // Remove cache for the key\n    httpCache.clearStorage(jwksUri);\n\n    // Pull the latest keys if the key wasn't in the cache\n    return get(sdk, jwksUri, {\n      cacheResponse: true\n    })\n    .then(function(res) {\n      var key = find(res.keys, {\n        kid: kid\n      });\n\n      if (key) {\n        return key;\n      }\n\n      throw new AuthSdkError('The key id, ' + kid + ', was not found in the server\\'s keys');\n    });\n  });\n}\n","/* eslint-disable @typescript-eslint/no-non-null-assertion */\n/* eslint-disable max-len */\n/*!\n * Copyright (c) 2015-present, Okta, Inc. and/or its affiliates. All rights reserved.\n * The Okta software accompanied by this notice is provided pursuant to the Apache License, Version 2.0 (the \"License.\")\n *\n * You may obtain a copy of the License at http://www.apache.org/licenses/LICENSE-2.0.\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT\n * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n *\n * See the License for the specific language governing permissions and limitations under the License.\n *\n */\nimport { CustomUrls, OAuthResponse, OAuthResponseType, OktaAuthOAuthInterface, TokenParams, TokenResponse } from './types';\nimport { getOAuthUrls, getDefaultTokenParams } from './util';\nimport { clone } from '../util';\nimport { postToTokenEndpoint, TokenEndpointParams } from './endpoints/token';\nimport { handleOAuthResponse } from './handleOAuthResponse';\nimport { createDPoPKeyPair, findKeyPair } from './dpop';\n\n// codeVerifier is required. May pass either an authorizationCode or interactionCode\nexport async function exchangeCodeForTokens(sdk: OktaAuthOAuthInterface, tokenParams: TokenParams, urls?: CustomUrls): Promise<TokenResponse> {\n  urls = urls || getOAuthUrls(sdk, tokenParams);\n  // build params using defaults + options\n  tokenParams = Object.assign({}, getDefaultTokenParams(sdk), clone(tokenParams));\n\n  const {\n    authorizationCode,\n    interactionCode,\n    codeVerifier,\n    clientId,\n    redirectUri,\n    scopes,\n    ignoreSignature,\n    state,\n    acrValues,\n    dpop,\n    dpopPairId,\n    extraParams\n  } = tokenParams;\n\n  // postToTokenEndpoint() params\n  const getTokenOptions: TokenEndpointParams = {\n    clientId,\n    redirectUri,\n    authorizationCode,\n    interactionCode,\n    codeVerifier,\n    dpop,\n  };\n\n  // `handleOAuthResponse` hanadles responses from both `/authorize` and `/token` endpoints\n  // Here we modify the response from `/token` so that it more closely matches a response from `/authorize`\n  // `responseType` is used to validate that the expected tokens were returned\n  const responseType: OAuthResponseType[] = ['token']; // an accessToken will always be returned\n  if (scopes!.indexOf('openid') !== -1) {\n    responseType.push('id_token'); // an idToken will be returned if \"openid\" is in the scopes\n  }\n  // handleOAuthResponse() params\n  const handleResponseOptions: TokenParams = {\n    clientId,\n    redirectUri,\n    scopes,\n    responseType,\n    ignoreSignature,\n    acrValues,\n    extraParams\n  };\n\n  try {\n    if (dpop) {\n      // token refresh, KP should already exist\n      if (dpopPairId) {\n        const keyPair = await findKeyPair(dpopPairId);\n        getTokenOptions.dpopKeyPair = keyPair;\n        handleResponseOptions.dpop = dpop;\n        handleResponseOptions.dpopPairId = dpopPairId;\n      }\n      else {\n        const { keyPair, keyPairId } = await createDPoPKeyPair();\n        getTokenOptions.dpopKeyPair = keyPair;\n        handleResponseOptions.dpop = dpop;\n        handleResponseOptions.dpopPairId = keyPairId;\n      }\n    }\n\n    const oauthResponse: OAuthResponse = await postToTokenEndpoint(sdk, getTokenOptions, urls);\n\n    const tokenResponse: TokenResponse = await handleOAuthResponse(sdk, handleResponseOptions, oauthResponse, urls!);\n    tokenResponse.code = authorizationCode;\n    tokenResponse.state = state!;\n    return tokenResponse;\n  }\n  finally {\n    sdk.transactionManager.clear();\n  }\n}\n","/* eslint-disable @typescript-eslint/no-non-null-assertion */\n/*!\n * Copyright (c) 2015-present, Okta, Inc. and/or its affiliates. All rights reserved.\n * The Okta software accompanied by this notice is provided pursuant to the Apache License, Version 2.0 (the \"License.\")\n *\n * You may obtain a copy of the License at http://www.apache.org/licenses/LICENSE-2.0.\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT\n * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n *\n * See the License for the specific language governing permissions and limitations under the License.\n *\n */\nimport { OktaAuthOAuthInterface, EnrollAuthenticatorOptions } from './types';\nimport { clone } from '../util';\nimport { prepareEnrollAuthenticatorParams, createEnrollAuthenticatorMeta } from './util';\nimport { buildAuthorizeParams } from './endpoints/authorize';\n\nexport function enrollAuthenticator(\n  sdk: OktaAuthOAuthInterface, \n  options: EnrollAuthenticatorOptions\n): void {\n  options = clone(options) || {};\n\n  const params = prepareEnrollAuthenticatorParams(sdk, options);\n  const meta = createEnrollAuthenticatorMeta(sdk, params);\n  const requestUrl = meta.urls.authorizeUrl + buildAuthorizeParams(params);\n  sdk.transactionManager.save(meta);\n  if (sdk.options.setLocation) {\n    sdk.options.setLocation(requestUrl);\n  } else {\n    window.location.assign(requestUrl);\n  }\n}\n","/*!\n * Copyright (c) 2015-present, Okta, Inc. and/or its affiliates. All rights reserved.\n * The Okta software accompanied by this notice is provided pursuant to the Apache License, Version 2.0 (the \"License.\")\n *\n * You may obtain a copy of the License at http://www.apache.org/licenses/LICENSE-2.0.\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT\n * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n *\n * See the License for the specific language governing permissions and limitations under the License.\n *\n */\n\nimport { PromiseQueue } from '../../util';\nimport { decodeToken } from '../decodeToken';\nimport { exchangeCodeForTokens } from '../exchangeCodeForTokens';\nimport { getUserInfo } from '../getUserInfo';\nimport { getWithoutPrompt } from '../getWithoutPrompt';\nimport { getWithPopup } from '../getWithPopup';\nimport { getWithRedirect } from '../getWithRedirect';\nimport { parseFromUrl } from '../parseFromUrl';\nimport { renewToken } from '../renewToken';\nimport { renewTokens } from '../renewTokens';\nimport { renewTokensWithRefresh } from '../renewTokensWithRefresh';\nimport { revokeToken } from '../revokeToken';\nimport { oidcIntrospect } from '../introspect';\nimport {\n  AccessToken,\n  CustomUserClaims,\n  GetWithRedirectFunction,\n  IDToken,\n  OktaAuthOAuthInterface,\n  ParseFromUrlInterface,\n  TokenAPI,\n  UserClaims,\n  Endpoints,\n} from '../types';\nimport { isLoginRedirect, prepareTokenParams } from '../util';\nimport { verifyToken } from '../verifyToken';\nimport { enrollAuthenticator } from '../enrollAuthenticator';\n\n// Factory\nexport function createTokenAPI(sdk: OktaAuthOAuthInterface, queue: PromiseQueue): TokenAPI {\n  const useQueue = (method) => {\n    return PromiseQueue.prototype.push.bind(queue, method, null);\n  };\n\n  const getWithRedirectFn = useQueue(getWithRedirect.bind(null, sdk)) as GetWithRedirectFunction;\n\n  // eslint-disable-next-line max-len\n  const parseFromUrlFn = useQueue(parseFromUrl.bind(null, sdk)) as ParseFromUrlInterface;\n  const parseFromUrlApi: ParseFromUrlInterface = Object.assign(parseFromUrlFn, {\n    // This is exposed so we can mock getting window.history in our tests\n    _getHistory: function() {\n      return window.history;\n    },\n\n    // This is exposed so we can mock getting window.location in our tests\n    _getLocation: function() {\n      return window.location;\n    },\n\n    // This is exposed so we can mock getting window.document in our tests\n    _getDocument: function() {\n      return window.document;\n    }\n  });\n\n  const token: TokenAPI ={\n    prepareTokenParams: prepareTokenParams.bind(null, sdk),\n    exchangeCodeForTokens: exchangeCodeForTokens.bind(null, sdk),\n    getWithoutPrompt: getWithoutPrompt.bind(null, sdk),\n    getWithPopup: getWithPopup.bind(null, sdk),\n    getWithRedirect: getWithRedirectFn,\n    parseFromUrl: parseFromUrlApi,\n    decode: decodeToken,\n    revoke: revokeToken.bind(null, sdk),\n    renew: renewToken.bind(null, sdk),\n    renewTokensWithRefresh: renewTokensWithRefresh.bind(null, sdk),\n    renewTokens: renewTokens.bind(null, sdk),\n    getUserInfo: <C extends CustomUserClaims = CustomUserClaims>(\n      accessTokenObject: AccessToken,\n      idTokenObject: IDToken\n    ): Promise<UserClaims<C>> => {\n      return getUserInfo(sdk, accessTokenObject, idTokenObject);\n    },\n    verify: verifyToken.bind(null, sdk),\n    isLoginRedirect: isLoginRedirect.bind(null, sdk),\n    introspect: oidcIntrospect.bind(null, sdk),\n  };\n\n  // Wrap certain async token API methods using PromiseQueue to avoid issues with concurrency\n  // 'getWithRedirect' and 'parseFromUrl' are already wrapped\n  const toWrap = [\n    'getWithoutPrompt',\n    'getWithPopup',\n    'revoke',\n    'renew',\n    'renewTokensWithRefresh',\n    'renewTokens'\n  ];\n  toWrap.forEach(key => {\n    token[key] = useQueue(token[key]);\n  });\n\n  return token;\n}\n\nexport function createEndpoints(sdk: OktaAuthOAuthInterface): Endpoints {\n  return {\n    authorize: {\n      enrollAuthenticator: enrollAuthenticator.bind(null, sdk),\n    }\n  };\n}\n","import { StorageManagerConstructor } from '../../storage/types';\nimport { OktaAuthConstructor, OktaAuthOptionsConstructor } from '../../base/types';\n\nimport { createOktaAuthBase } from '../../base';\nimport { mixinStorage } from '../../storage/mixin';\nimport { mixinSession } from '../../session/mixin';\nimport { mixinHttp } from '../../http/mixin';\nimport { mixinOAuth } from '../mixin';\nimport {\n  OAuthTransactionMeta,\n  OktaAuthOAuthInterface,\n  OktaAuthOAuthOptions,\n  OAuthStorageManagerInterface,\n  PKCETransactionMeta,\n  TransactionManagerConstructor,\n  TransactionManagerInterface\n} from '../types';\n\nexport function createOktaAuthOAuth\n<\n  M extends OAuthTransactionMeta = PKCETransactionMeta,\n  S extends OAuthStorageManagerInterface<M> = OAuthStorageManagerInterface<M>,\n  O extends OktaAuthOAuthOptions = OktaAuthOAuthOptions,\n  TM extends TransactionManagerInterface = TransactionManagerInterface\n>\n(\n  StorageManagerConstructor: StorageManagerConstructor<S>,\n  OptionsConstructor: OktaAuthOptionsConstructor<O>,\n  TransactionManagerConstructor: TransactionManagerConstructor<TM>\n):  OktaAuthConstructor<OktaAuthOAuthInterface<M, S, O, TM>>\n{\n  const Base = createOktaAuthBase(OptionsConstructor);\n  const WithStorage = mixinStorage<S, O>(Base, StorageManagerConstructor);\n  const WithHttp = mixinHttp<S, O>(WithStorage);\n  const WithSession = mixinSession<S, O>(WithHttp);\n  const WithOAuth = mixinOAuth<M, S, O, TM>(WithSession, TransactionManagerConstructor);\n  return WithOAuth;\n}\n","\n/* global document */\n/* eslint-disable complexity, max-statements */\n/*!\n * Copyright (c) 2015-present, Okta, Inc. and/or its affiliates. All rights reserved.\n * The Okta software accompanied by this notice is provided pursuant to the Apache License, Version 2.0 (the \"License.\")\n *\n * You may obtain a copy of the License at http://www.apache.org/licenses/LICENSE-2.0.\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT\n * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n *\n * See the License for the specific language governing permissions and limitations under the License.\n *\n */\nimport {\n  getOAuthUrls,\n  loadFrame,\n  addPostMessageListener\n} from './util';\n\nimport AuthSdkError from '../errors/AuthSdkError';\n\nimport {\n  OktaAuthOAuthInterface,\n  TokenParams,\n  PopupParams,\n  OAuthResponse,\n} from './types';\n\nimport { prepareTokenParams } from './util/prepareTokenParams';\nimport { buildAuthorizeParams } from './endpoints/authorize';\nimport { handleOAuthResponse } from './handleOAuthResponse';\n/*\n * Retrieve an idToken from an Okta or a third party idp\n *\n * Two main flows:\n *\n *  1) Exchange a sessionToken for a token\n *\n *    Required:\n *      clientId: passed via the OktaAuth constructor or into getToken\n *      sessionToken: 'yourtoken'\n *\n *    Optional:\n *      redirectUri: defaults to window.location.href\n *      scopes: defaults to ['openid', 'email']\n *\n *    Forced:\n *      prompt: 'none'\n *      responseMode: 'okta_post_message'\n *      display: undefined\n *\n *  2) Get a token from an idp\n *\n *    Required:\n *      clientId: passed via the OktaAuth constructor or into getToken\n *\n *    Optional:\n *      redirectUri: defaults to window.location.href\n *      scopes: defaults to ['openid', 'email']\n *      idp: defaults to Okta as an idp\n *      prompt: no default. Pass 'none' to throw an error if user is not signed in\n *\n *    Forced:\n *      display: 'popup'\n *\n *  Only common optional params shown. Any OAuth parameters not explicitly forced are available to override\n *\n * @param {Object} oauthOptions\n * @param {String} [oauthOptions.clientId] ID of this client\n * @param {String} [oauthOptions.redirectUri] URI that the iframe or popup will go to once authenticated\n * @param {String[]} [oauthOptions.scopes] OAuth 2.0 scopes to request (openid must be specified)\n * @param {String} [oauthOptions.idp] ID of an external IdP to use for user authentication\n * @param {String} [oauthOptions.sessionToken] Bootstrap Session Token returned by the Okta Authentication API\n * @param {String} [oauthOptions.prompt] Determines whether the Okta login will be displayed on failure.\n *                                       Use 'none' to prevent this behavior\n *\n * @param {Object} options\n * @param {Integer} [options.timeout] Time in ms before the flow is automatically terminated. Defaults to 120000\n * @param {String} [options.popupTitle] Title dispayed in the popup.\n *                                      Defaults to 'External Identity Provider User Authentication'\n */\nexport function getToken(sdk: OktaAuthOAuthInterface, options: TokenParams & PopupParams) {\n  if (arguments.length > 2) {\n    return Promise.reject(new AuthSdkError('As of version 3.0, \"getToken\" takes only a single set of options'));\n  }\n\n  options = options || {};\n\n  // window object cannot be serialized, save for later use\n  // TODO: move popup related params into a separate options object\n  const popupWindow = options.popupWindow;\n  options.popupWindow = undefined;\n\n  return prepareTokenParams(sdk, options)\n    .then(function (tokenParams: TokenParams) {\n\n      // Start overriding any options that don't make sense\n      var sessionTokenOverrides = {\n        prompt: 'none',\n        responseMode: 'okta_post_message',\n        display: null\n      };\n\n      var idpOverrides = {\n        display: 'popup'\n      };\n\n      if (options.sessionToken) {\n        Object.assign(tokenParams, sessionTokenOverrides);\n      } else if (options.idp) {\n        Object.assign(tokenParams, idpOverrides);\n      }\n\n      // Use the query params to build the authorize url\n      var requestUrl,\n        endpoint,\n        urls;\n\n      // Get authorizeUrl and issuer\n      urls = getOAuthUrls(sdk, tokenParams);\n      endpoint = options.codeVerifier ? urls.tokenUrl : urls.authorizeUrl;\n      requestUrl = endpoint + buildAuthorizeParams(tokenParams);\n\n      // Determine the flow type\n      var flowType;\n      if (tokenParams.sessionToken || tokenParams.display === null) {\n        flowType = 'IFRAME';\n      } else if (tokenParams.display === 'popup') {\n        flowType = 'POPUP';\n      } else {\n        flowType = 'IMPLICIT';\n      }\n\n      // Execute the flow type\n      switch (flowType) {\n        case 'IFRAME':\n          var iframePromise = addPostMessageListener(sdk, options.timeout, tokenParams.state);\n          var iframeEl = loadFrame(requestUrl);\n          return iframePromise\n            .then(function (res) {\n              return handleOAuthResponse(sdk, tokenParams, res as OAuthResponse, urls);\n            })\n            .finally(function () {\n              if (document.body.contains(iframeEl)) {\n                iframeEl.parentElement?.removeChild(iframeEl);\n              }\n            });\n\n        case 'POPUP':\n          var oauthPromise; // resolves with OAuth response\n\n          // Add listener on postMessage before window creation, so\n          // postMessage isn't triggered before we're listening\n          if (tokenParams.responseMode === 'okta_post_message') {\n            if (!sdk.features.isPopupPostMessageSupported()) {\n              throw new AuthSdkError('This browser doesn\\'t have full postMessage support');\n            }\n            oauthPromise = addPostMessageListener(sdk, options.timeout, tokenParams.state);\n          }\n\n          // Redirect for authorization\n          // popupWindown can be null when popup is blocked\n          if (popupWindow) { \n            popupWindow.location.assign(requestUrl);\n          }\n\n          // The popup may be closed without receiving an OAuth response. Setup a poller to monitor the window.\n          var popupPromise = new Promise(function (resolve, reject) {\n            var closePoller = setInterval(function () {\n              if (!popupWindow || popupWindow.closed) {\n                clearInterval(closePoller);\n                reject(new AuthSdkError('Unable to parse OAuth flow response'));\n              }\n            }, 100);\n\n            // Proxy the OAuth promise results\n            oauthPromise\n              .then(function (res) {\n                clearInterval(closePoller);\n                resolve(res);\n              })\n              .catch(function (err) {\n                clearInterval(closePoller);\n                reject(err);\n              });\n          });\n\n          return popupPromise\n            .then(function (res) {\n              return handleOAuthResponse(sdk, tokenParams, res as OAuthResponse, urls);\n            })\n            .finally(function () {\n              if (popupWindow && !popupWindow.closed) {\n                popupWindow.close();\n              }\n            });\n\n        default:\n          throw new AuthSdkError('The full page redirect flow is not supported');\n      }\n    });\n}","/* eslint-disable complexity */\n/*!\n * Copyright (c) 2015-present, Okta, Inc. and/or its affiliates. All rights reserved.\n * The Okta software accompanied by this notice is provided pursuant to the Apache License, Version 2.0 (the \"License.\")\n *\n * You may obtain a copy of the License at http://www.apache.org/licenses/LICENSE-2.0.\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT\n * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n *\n * See the License for the specific language governing permissions and limitations under the License.\n *\n */\nimport { AuthSdkError, OAuthError, WWWAuthError, AuthApiError } from '../errors';\nimport { httpRequest } from '../http';\nimport { AccessToken, IDToken, UserClaims, isAccessToken, isIDToken, CustomUserClaims } from './types';\n\nexport async function getUserInfo<T extends CustomUserClaims = CustomUserClaims>(\n  sdk, accessTokenObject: AccessToken,\n  idTokenObject: IDToken\n): Promise<UserClaims<T>> {\n  // If token objects were not passed, attempt to read from the TokenManager\n  if (!accessTokenObject) {\n    accessTokenObject = (await sdk.tokenManager.getTokens()).accessToken as AccessToken;\n  }\n  if (!idTokenObject) {\n    idTokenObject = (await sdk.tokenManager.getTokens()).idToken as IDToken;\n  }\n\n  if (!accessTokenObject || !isAccessToken(accessTokenObject)) {\n    return Promise.reject(new AuthSdkError('getUserInfo requires an access token object'));\n  }\n\n  if (!idTokenObject || !isIDToken(idTokenObject)) {\n    return Promise.reject(new AuthSdkError('getUserInfo requires an ID token object'));\n  }\n\n  const options: any = {\n    url: accessTokenObject.userinfoUrl,\n    method: 'GET',\n    accessToken: accessTokenObject.accessToken\n  };\n\n  if (sdk.options.dpop) {\n    const headers = await sdk.getDPoPAuthorizationHeaders({...options, accessToken: accessTokenObject });\n    options.headers = headers;\n    delete options.accessToken;      // unset to prevent overriding Auth header with Bearer Token\n  }\n\n  return httpRequest(sdk, options)\n    .then(userInfo => {\n      // Only return the userinfo response if subjects match to mitigate token substitution attacks\n      if (userInfo.sub === idTokenObject.claims.sub) {\n        return userInfo;\n      }\n      return Promise.reject(new AuthSdkError('getUserInfo request was rejected due to token mismatch'));\n    })\n    .catch(function (err) {\n      // throw OAuthError to avoid breaking change (when dpop is not being used)\n      if (err instanceof WWWAuthError && !sdk.options.dpop) {\n        const { error, errorDescription } = err;\n        throw new OAuthError(error, errorDescription);\n      }\n\n      // throw OAuthError to avoid breaking change (when dpop is not being used)\n      if (!sdk.options.dpop) {\n        let e = err;\n        if (err instanceof AuthApiError && err?.meta?.wwwAuthHeader) {\n          e = WWWAuthError.parseHeader(err.meta.wwwAuthHeader as string);\n        }\n\n        if (e instanceof WWWAuthError) {\n          const { error, errorDescription } = e;\n          throw new OAuthError(error, errorDescription);\n        }\n      }\n\n      throw err;\n    });\n}\n","/*!\n * Copyright (c) 2015-present, Okta, Inc. and/or its affiliates. All rights reserved.\n * The Okta software accompanied by this notice is provided pursuant to the Apache License, Version 2.0 (the \"License.\")\n *\n * You may obtain a copy of the License at http://www.apache.org/licenses/LICENSE-2.0.\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT\n * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n *\n * See the License for the specific language governing permissions and limitations under the License.\n *\n */\nimport { AuthSdkError } from '../errors';\nimport { OktaAuthOAuthInterface, TokenParams, TokenResponse } from './types';\nimport { clone } from '../util';\nimport { getToken } from './getToken';\nimport { loadPopup } from './util';\n\nexport function getWithPopup(sdk: OktaAuthOAuthInterface, options: TokenParams): Promise<TokenResponse> {\n  if (arguments.length > 2) {\n    return Promise.reject(new AuthSdkError('As of version 3.0, \"getWithPopup\" takes only a single set of options'));\n  }\n\n  // some browsers (safari, firefox) block popup if it's initialed from an async process\n  // here we create the popup window immediately after user interaction\n  // then redirect to the /authorize endpoint when the requestUrl is available\n  const popupWindow = loadPopup('/', options);\n  options = clone(options) || {};\n  Object.assign(options, {\n    display: 'popup',\n    responseMode: 'okta_post_message',\n    popupWindow\n  });\n  return getToken(sdk, options);\n}\n","/* eslint-disable @typescript-eslint/no-non-null-assertion */\n/*!\n * Copyright (c) 2015-present, Okta, Inc. and/or its affiliates. All rights reserved.\n * The Okta software accompanied by this notice is provided pursuant to the Apache License, Version 2.0 (the \"License.\")\n *\n * You may obtain a copy of the License at http://www.apache.org/licenses/LICENSE-2.0.\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT\n * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n *\n * See the License for the specific language governing permissions and limitations under the License.\n *\n */\nimport { AuthSdkError } from '../errors';\nimport { OktaAuthOAuthInterface, TokenParams } from './types';\nimport { clone } from '../util';\nimport { prepareTokenParams, createOAuthMeta } from './util';\nimport { buildAuthorizeParams } from './endpoints/authorize';\n\nexport async function getWithRedirect(sdk: OktaAuthOAuthInterface, options?: TokenParams): Promise<void> {\n  if (arguments.length > 2) {\n    return Promise.reject(new AuthSdkError('As of version 3.0, \"getWithRedirect\" takes only a single set of options'));\n  }\n\n  options = clone(options) || {};\n\n  const tokenParams = await prepareTokenParams(sdk, options);\n  const meta = createOAuthMeta(sdk, tokenParams);\n  const requestUrl = meta.urls.authorizeUrl + buildAuthorizeParams(tokenParams);\n  sdk.transactionManager.save(meta);\n  if (sdk.options.setLocation) {\n    sdk.options.setLocation(requestUrl);\n  } else {\n    window.location.assign(requestUrl);\n  }\n}\n","/*!\n * Copyright (c) 2015-present, Okta, Inc. and/or its affiliates. All rights reserved.\n * The Okta software accompanied by this notice is provided pursuant to the Apache License, Version 2.0 (the \"License.\")\n *\n * You may obtain a copy of the License at http://www.apache.org/licenses/LICENSE-2.0.\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT\n * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n *\n * See the License for the specific language governing permissions and limitations under the License.\n *\n */\nimport { AuthSdkError } from '../errors';\nimport { OktaAuthOAuthInterface, TokenParams, TokenResponse } from './types';\nimport { clone } from '../util';\nimport { getToken } from './getToken';\n\nexport function getWithoutPrompt(sdk: OktaAuthOAuthInterface, options: TokenParams): Promise<TokenResponse> {\n  if (arguments.length > 2) {\n    return Promise.reject(new AuthSdkError('As of version 3.0, \"getWithoutPrompt\" takes only a single set of options'));\n  }\n  \n  options = clone(options) || {};\n  Object.assign(options, {\n    prompt: 'none',\n    responseMode: 'okta_post_message',\n    display: null\n  });\n  return getToken(sdk, options);\n}\n\n","/* eslint-disable @typescript-eslint/no-non-null-assertion */\n\n/* eslint-disable complexity, max-statements */\n/*!\n * Copyright (c) 2015-present, Okta, Inc. and/or its affiliates. All rights reserved.\n * The Okta software accompanied by this notice is provided pursuant to the Apache License, Version 2.0 (the \"License.\")\n *\n * You may obtain a copy of the License at http://www.apache.org/licenses/LICENSE-2.0.\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT\n * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n *\n * See the License for the specific language governing permissions and limitations under the License.\n *\n */\nimport { clone } from '../util';\nimport {\n  getOAuthUrls,\n} from './util/oauth';\nimport { AuthSdkError, OAuthError } from '../errors';\nimport {\n  OktaAuthOAuthInterface,\n  TokenVerifyParams,\n  IDToken,\n  OAuthResponse,\n  TokenParams,\n  TokenResponse,\n  CustomUrls,\n  Tokens,\n} from './types';\nimport { verifyToken } from './verifyToken';\nimport { getDefaultTokenParams } from './util';\n\nfunction validateResponse(res: OAuthResponse, oauthParams: TokenParams) {\n  if (res['error'] && res['error_description']) {\n    throw new OAuthError(res['error'], res['error_description']);\n  }\n\n  if (res.state !== oauthParams.state) {\n    throw new AuthSdkError('OAuth flow response state doesn\\'t match request state');\n  }\n\n  // https://datatracker.ietf.org/doc/html/rfc9449#token-response\n  // \"A token_type of DPoP MUST be included in the access token response to signal to the client\"\n  if (oauthParams.dpop && res.token_type !== 'DPoP') {\n    throw new AuthSdkError('Unable to parse OAuth flow response: DPoP was configured but \"token_type\" was not DPoP');\n  }\n}\n\nexport async function handleOAuthResponse(\n  sdk: OktaAuthOAuthInterface,\n  tokenParams: TokenParams,\n  res: OAuthResponse,\n  urls?: CustomUrls\n): Promise<TokenResponse> {\n  const pkce = sdk.options.pkce !== false;\n\n\n  // The result contains an authorization_code and PKCE is enabled \n  // `exchangeCodeForTokens` will call /token then call `handleOauthResponse` recursively with the result\n  if (pkce && (res.code || res.interaction_code)) {\n    return sdk.token.exchangeCodeForTokens(Object.assign({}, tokenParams, {\n      authorizationCode: res.code,\n      interactionCode: res.interaction_code\n    }), urls);\n  }\n\n  tokenParams = tokenParams || getDefaultTokenParams(sdk);\n  urls = urls || getOAuthUrls(sdk, tokenParams);\n\n  let responseType = tokenParams.responseType || [];\n  if (!Array.isArray(responseType) && responseType !== 'none') {\n    responseType = [responseType];\n  }\n\n  let scopes;\n  if (res.scope) {\n    scopes = res.scope.split(' ');\n  } else {\n    scopes = clone(tokenParams.scopes);\n  }\n  const clientId = tokenParams.clientId || sdk.options.clientId;\n\n  // Handling the result from implicit flow or PKCE token exchange\n  validateResponse(res, tokenParams);\n\n  const tokenDict = {} as Tokens;\n  const expiresIn = res.expires_in;\n  const tokenType = res.token_type;\n  const accessToken = res.access_token;\n  const idToken = res.id_token;\n  const refreshToken = res.refresh_token;\n  const now = Math.floor(Date.now()/1000);\n\n  if (accessToken) {\n    const accessJwt = sdk.token.decode(accessToken);\n    tokenDict.accessToken = {\n      accessToken: accessToken,\n      claims: accessJwt.payload,\n      expiresAt: Number(expiresIn) + now,\n      tokenType: tokenType!,\n      scopes: scopes,\n      authorizeUrl: urls.authorizeUrl!,\n      userinfoUrl: urls.userinfoUrl!\n    };\n\n    if (tokenParams.dpopPairId) {\n      tokenDict.accessToken.dpopPairId = tokenParams.dpopPairId;\n    }\n\n    if (tokenParams.extraParams) {\n      tokenDict.accessToken.extraParams = tokenParams.extraParams;\n    }\n  }\n\n  if (refreshToken) {\n    tokenDict.refreshToken = {\n      refreshToken: refreshToken,\n      // should not be used, this is the accessToken expire time\n      // TODO: remove \"expiresAt\" in the next major version OKTA-407224\n      expiresAt: Number(expiresIn) + now, \n      scopes: scopes,\n      tokenUrl: urls.tokenUrl!,\n      authorizeUrl: urls.authorizeUrl!,\n      issuer: urls.issuer!,\n    };\n\n    if (tokenParams.dpopPairId) {\n      tokenDict.refreshToken.dpopPairId = tokenParams.dpopPairId;\n    }\n\n    if (tokenParams.extraParams) {\n      tokenDict.refreshToken.extraParams = tokenParams.extraParams;\n    }\n  }\n\n  if (idToken) {\n    const idJwt = sdk.token.decode(idToken);\n    const idTokenObj: IDToken = {\n      idToken: idToken,\n      claims: idJwt.payload,\n      expiresAt: idJwt.payload.exp! - idJwt.payload.iat! + now, // adjusting expiresAt to be in local time\n      scopes: scopes,\n      authorizeUrl: urls.authorizeUrl!,\n      issuer: urls.issuer!,\n      clientId: clientId!\n    };\n\n    if (tokenParams.extraParams) {\n      idTokenObj.extraParams = tokenParams.extraParams;\n    }\n\n    const validationParams: TokenVerifyParams = {\n      clientId: clientId!,\n      issuer: urls.issuer!,\n      nonce: tokenParams.nonce,\n      accessToken: accessToken,\n      acrValues: tokenParams.acrValues\n    };\n\n    if (tokenParams.ignoreSignature !== undefined) {\n      validationParams.ignoreSignature = tokenParams.ignoreSignature;\n    }\n\n    await verifyToken(sdk, idTokenObj, validationParams);\n    tokenDict.idToken = idTokenObj;\n  }\n\n  // Validate received tokens against requested response types \n  if (responseType.indexOf('token') !== -1 && !tokenDict.accessToken) {\n    // eslint-disable-next-line max-len\n    throw new AuthSdkError('Unable to parse OAuth flow response: response type \"token\" was requested but \"access_token\" was not returned.');\n  }\n  if (responseType.indexOf('id_token') !== -1 && !tokenDict.idToken) {\n    // eslint-disable-next-line max-len\n    throw new AuthSdkError('Unable to parse OAuth flow response: response type \"id_token\" was requested but \"id_token\" was not returned.');\n  }\n\n  return {\n    tokens: tokenDict,\n    state: res.state!,\n    code: res.code,\n    responseType\n  };\n  \n}","/*!\n * Copyright (c) 2015-present, Okta, Inc. and/or its affiliates. All rights reserved.\n * The Okta software accompanied by this notice is provided pursuant to the Apache License, Version 2.0 (the \"License.\")\n *\n * You may obtain a copy of the License at http://www.apache.org/licenses/LICENSE-2.0.\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT\n * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n *\n * See the License for the specific language governing permissions and limitations under the License.\n *\n */\n\nimport { AuthSdkError } from '../errors';\nimport { getWellKnown } from './endpoints/well-known';\nimport { post } from '../http';\nimport { toQueryString } from '../util';\nimport { btoa } from '../crypto';\nimport { Token, TokenKind } from './types';\n\nconst hintMap = {\n  accessToken: 'access_token',\n  idToken: 'id_token',\n  refreshToken: 'refresh_token'\n};\n\n/* eslint complexity: [2, 9] */\nexport async function oidcIntrospect (sdk, kind: TokenKind, token?: Token) {\n  let issuer: string;\n  let clientId: string = sdk.options.clientId;\n  let clientSecret: string | undefined = sdk.options.clientSecret;\n\n  if (!token) {\n    token = sdk.tokenManager.getTokens()[kind];\n  }\n\n  if (!token) {\n    throw new AuthSdkError(`unable to find ${kind} in storage or fn params`);\n  }\n\n  if (kind !== TokenKind.ACCESS) {\n    issuer = (token as any)?.issuer;\n  }\n  else {\n    issuer = (token as any)?.claims?.iss;\n  }\n  issuer = issuer || sdk.options.issuer;\n\n  if (!clientId) {\n    throw new AuthSdkError('A clientId must be specified in the OktaAuth constructor to introspect a token');\n  }\n  if (!issuer) {\n    throw new AuthSdkError('Unable to find issuer');\n  }\n\n  const { introspection_endpoint: introspectUrl }  = await getWellKnown(sdk, issuer);\n  const authHeader = clientSecret ? btoa(`${clientId}:${clientSecret}`) : btoa(clientId);\n  const args = toQueryString({\n    // eslint-disable-next-line camelcase\n    token_type_hint: hintMap[kind],\n    token: token[kind]    // extract raw token string from token object\n  }).slice(1);\n  return post(sdk, introspectUrl, args, {\n    headers: {\n      'Content-Type': 'application/x-www-form-urlencoded',\n      'Authorization': 'Basic ' + authHeader\n    }\n  });\n}\n","import { httpRequest, RequestOptions } from '../../http';\nimport { OktaAuthConstructor } from '../../base/types';\nimport { \n  PromiseQueue,\n  isFunction\n} from '../../util';\nimport { CryptoAPI } from '../../crypto/types';\nimport * as crypto from '../../crypto';\nimport {\n  AccessToken,\n  CustomUserClaims,\n  IDToken,\n  IsAuthenticatedOptions,\n  OAuthResponseType,\n  OAuthStorageManagerInterface,\n  OAuthTransactionMeta,\n  OktaAuthOAuthInterface,\n  OktaAuthOAuthOptions,\n  PkceAPI,\n  PKCETransactionMeta,\n  RefreshToken,\n  SigninWithRedirectOptions,\n  SignoutOptions,\n  SignoutRedirectUrlOptions,\n  TokenAPI,\n  TransactionManagerInterface,\n  TransactionManagerConstructor,\n  UserClaims,\n  Endpoints,\n  DPoPRequest,\n  DPoPHeaders\n} from '../types';\nimport PKCE from '../util/pkce';\nimport { createEndpoints, createTokenAPI } from '../factory/api';\nimport { TokenManager } from '../TokenManager';\nimport { getOAuthUrls, isLoginRedirect, hasResponseType } from '../util';\nimport { \n  generateDPoPProof,\n  clearDPoPKeyPair,\n  clearAllDPoPKeyPairs,\n  clearDPoPKeyPairAfterRevoke,\n  findKeyPair,\n  isDPoPNonceError\n} from '../dpop';\nimport { AuthSdkError, WWWAuthError } from '../../errors';\n\nimport { OktaAuthSessionInterface } from '../../session/types';\nimport { provideOriginalUri } from './node';\nexport function mixinOAuth\n<\n  M extends OAuthTransactionMeta = PKCETransactionMeta,\n  S extends OAuthStorageManagerInterface<M> = OAuthStorageManagerInterface<M>,\n  O extends OktaAuthOAuthOptions = OktaAuthOAuthOptions,\n  TM extends TransactionManagerInterface = TransactionManagerInterface,\n  TBase extends OktaAuthConstructor<OktaAuthSessionInterface<S, O>>\n    = OktaAuthConstructor<OktaAuthSessionInterface<S, O>>\n>\n(\n  Base: TBase,\n  TransactionManagerConstructor: TransactionManagerConstructor<TM>,\n): TBase & OktaAuthConstructor<OktaAuthOAuthInterface<M, S, O, TM>>\n{\n  const WithOriginalUri = provideOriginalUri(Base);\n  return class OktaAuthOAuth extends WithOriginalUri\n  implements OktaAuthOAuthInterface<M, S, O, TM>\n  {\n    static crypto: CryptoAPI = crypto;\n    token: TokenAPI;\n    tokenManager: TokenManager;\n    transactionManager: TM;\n    pkce: PkceAPI;\n    endpoints: Endpoints;\n\n    _pending: { handleLogin: boolean };\n    _tokenQueue: PromiseQueue;\n    \n    constructor(...args: any[]) {\n      super(...args);\n\n      this.transactionManager = new TransactionManagerConstructor(Object.assign({\n        storageManager: this.storageManager,\n      }, this.options.transactionManager));\n  \n      this.pkce = {\n        DEFAULT_CODE_CHALLENGE_METHOD: PKCE.DEFAULT_CODE_CHALLENGE_METHOD,\n        generateVerifier: PKCE.generateVerifier,\n        computeChallenge: PKCE.computeChallenge\n      };\n  \n      this._pending = { handleLogin: false };\n\n      this._tokenQueue = new PromiseQueue();\n\n      this.token = createTokenAPI(this, this._tokenQueue);\n\n      // TokenManager\n      this.tokenManager = new TokenManager(this, this.options.tokenManager);\n\n      this.endpoints = createEndpoints(this);\n    }\n\n    // inherited from subclass\n    clearStorage(): void {\n      super.clearStorage();\n      \n      // Clear all local tokens\n      this.tokenManager.clear();\n    }\n\n    // Returns true if both accessToken and idToken are not expired\n    // If `autoRenew` option is set, will attempt to renew expired tokens before returning.\n    // eslint-disable-next-line complexity\n    async isAuthenticated(options: IsAuthenticatedOptions = {}): Promise<boolean> {\n      // TODO: remove dependency on tokenManager options in next major version - OKTA-473815\n      const { autoRenew, autoRemove } = this.tokenManager.getOptions();\n\n      const shouldRenew = options.onExpiredToken ? options.onExpiredToken === 'renew' : autoRenew;\n      const shouldRemove = options.onExpiredToken ? options.onExpiredToken === 'remove' : autoRemove;\n\n      let { accessToken } = this.tokenManager.getTokensSync();\n      if (accessToken && this.tokenManager.hasExpired(accessToken)) {\n        accessToken = undefined;\n        if (shouldRenew) {\n          try {\n            accessToken = await this.tokenManager.renew('accessToken') as AccessToken;\n          } catch {\n            // Renew errors will emit an \"error\" event \n          }\n        } else if (shouldRemove) {\n          this.tokenManager.remove('accessToken');\n        }\n      }\n\n      let { idToken } = this.tokenManager.getTokensSync();\n      if (idToken && this.tokenManager.hasExpired(idToken)) {\n        idToken = undefined;\n        if (shouldRenew) {\n          try {\n            idToken = await this.tokenManager.renew('idToken') as IDToken;\n          } catch {\n            // Renew errors will emit an \"error\" event \n          }\n        } else if (shouldRemove) {\n          this.tokenManager.remove('idToken');\n        }\n      }\n\n      return !!(accessToken && idToken);\n    }\n\n\n    async signInWithRedirect(opts: SigninWithRedirectOptions = {}) {\n      const { originalUri, ...additionalParams } = opts;\n      if(this._pending.handleLogin) { \n        // Don't trigger second round\n        return;\n      }\n\n      this._pending.handleLogin = true;\n      try {\n        // Trigger default signIn redirect flow\n        if (originalUri) {\n          this.setOriginalUri(originalUri);\n        }\n        const params = Object.assign({\n          // TODO: remove this line when default scopes are changed OKTA-343294\n          scopes: this.options.scopes || ['openid', 'email', 'profile']\n        }, additionalParams);\n        await this.token.getWithRedirect(params);\n      } finally {\n        this._pending.handleLogin = false;\n      }\n    }\n\n    async getUser<T extends CustomUserClaims = CustomUserClaims>(): Promise<UserClaims<T>> {\n      const { idToken, accessToken } = this.tokenManager.getTokensSync();\n      return this.token.getUserInfo(accessToken, idToken);\n    }\n  \n    getIdToken(): string | undefined {\n      const { idToken } = this.tokenManager.getTokensSync();\n      return idToken ? idToken.idToken : undefined;\n    }\n  \n    getAccessToken(): string | undefined {\n      const { accessToken } = this.tokenManager.getTokensSync();\n      return accessToken ? accessToken.accessToken : undefined;\n    }\n  \n    getRefreshToken(): string | undefined {\n      const { refreshToken } = this.tokenManager.getTokensSync();\n      return refreshToken ? refreshToken.refreshToken : undefined;\n    }\n\n    async getOrRenewAccessToken(): Promise<string | null> {\n      const { accessToken } = this.tokenManager.getTokensSync();\n      if (accessToken && !this.tokenManager.hasExpired(accessToken)) {\n        return accessToken.accessToken;\n      }\n      try {\n        const key = this.tokenManager.getStorageKeyByType('accessToken');\n        const token = await this.tokenManager.renew(key ?? 'accessToken');\n        return (token as AccessToken)?.accessToken ?? null;\n      }\n      catch (err) {\n        this.emitter.emit('error', err);\n        return null;\n      }\n    }\n  \n    /**\n     * Store parsed tokens from redirect url\n     */\n    async storeTokensFromRedirect(): Promise<void> {\n      const { tokens, responseType } = await this.token.parseFromUrl();\n      if (responseType !== 'none') {\n        this.tokenManager.setTokens(tokens);\n      }\n    }\n  \n    isLoginRedirect(): boolean {\n      return isLoginRedirect(this);\n    }\n\n    isPKCE(): boolean {\n      return !!this.options.pkce;\n    }\n\n    hasResponseType(responseType: OAuthResponseType): boolean {\n      return hasResponseType(responseType, this.options);\n    }\n  \n    isAuthorizationCodeFlow(): boolean {\n      return this.hasResponseType('code');\n    }\n\n    // Escape hatch method to make arbitrary OKTA API call\n    async invokeApiMethod(options: RequestOptions): Promise<unknown> {\n      if (!options.accessToken) {\n        const accessToken = (await this.tokenManager.getTokens()).accessToken as AccessToken;\n        options.accessToken = accessToken?.accessToken;\n      }\n      return httpRequest(this, options);\n    }\n    \n    // Revokes the access token for the application session\n    async revokeAccessToken(accessToken?: AccessToken): Promise<unknown> {\n      if (!accessToken) {\n        const tokens = await this.tokenManager.getTokens();\n        accessToken = tokens.accessToken;\n        const accessTokenKey = this.tokenManager.getStorageKeyByType('accessToken');\n        this.tokenManager.remove(accessTokenKey);\n\n        if (this.options.dpop) {\n          await clearDPoPKeyPairAfterRevoke('access', tokens);\n        }\n      }\n      // Access token may have been removed. In this case, we will silently succeed.\n      if (!accessToken) {\n        return Promise.resolve(null);\n      }\n      return this.token.revoke(accessToken);\n    }\n\n    // Revokes the refresh token for the application session\n    async revokeRefreshToken(refreshToken?: RefreshToken): Promise<unknown> {\n      if (!refreshToken) {\n        const tokens = await this.tokenManager.getTokens();\n        refreshToken = tokens.refreshToken;\n        const refreshTokenKey = this.tokenManager.getStorageKeyByType('refreshToken');\n        this.tokenManager.remove(refreshTokenKey);\n\n        if (this.options.dpop) {\n          await clearDPoPKeyPairAfterRevoke('refresh', tokens);\n        }\n      }\n      // Refresh token may have been removed. In this case, we will silently succeed.\n      if (!refreshToken) {\n        return Promise.resolve(null);\n      }\n      return this.token.revoke(refreshToken);\n    }\n\n    getSignOutRedirectUrl(options: SignoutRedirectUrlOptions = {}) {\n      let {\n        idToken,\n        postLogoutRedirectUri,\n        state,\n      } = options;\n      if (!idToken) {\n        idToken = this.tokenManager.getTokensSync().idToken as IDToken;\n      }\n      if (!idToken) {\n        return '';\n      }\n      if (postLogoutRedirectUri === undefined) {\n        postLogoutRedirectUri = this.options.postLogoutRedirectUri;\n      }\n\n      const logoutUrl = getOAuthUrls(this).logoutUrl;\n      const idTokenHint = idToken.idToken; // a string\n      let logoutUri = logoutUrl + '?id_token_hint=' + encodeURIComponent(idTokenHint);\n      if (postLogoutRedirectUri) {\n        logoutUri += '&post_logout_redirect_uri=' + encodeURIComponent(postLogoutRedirectUri);\n      } \n      // State allows option parameters to be passed to logout redirect uri\n      if (state) {\n        logoutUri += '&state=' + encodeURIComponent(state);\n      }\n\n      return logoutUri;\n    }\n\n    // Revokes refreshToken or accessToken, clears all local tokens, then redirects to Okta to end the SSO session.\n    // eslint-disable-next-line complexity, max-statements\n    async signOut(options?: SignoutOptions): Promise<boolean> {\n      options = Object.assign({}, options);\n    \n      // postLogoutRedirectUri must be whitelisted in Okta Admin UI\n      const defaultUri = window.location.origin;\n      const currentUri = window.location.href;\n      // Fix for issue/1410 - allow for no postLogoutRedirectUri to be passed, resulting in /logout default behavior\n      //    \"If no Okta session exists, this endpoint has no effect and the browser is redirected immediately to the\n      //    Okta sign-in page or the post_logout_redirect_uri (if specified).\"\n      // - https://developer.okta.com/docs/reference/api/oidc/#logout\n      const postLogoutRedirectUri = options.postLogoutRedirectUri === null ? null :\n        (options.postLogoutRedirectUri\n        || this.options.postLogoutRedirectUri\n        || defaultUri);\n      const state = options?.state;\n      \n    \n      let accessToken = options.accessToken;\n      let refreshToken = options.refreshToken;\n      const revokeAccessToken = options.revokeAccessToken !== false;\n      const revokeRefreshToken = options.revokeRefreshToken !== false;\n    \n      if (revokeRefreshToken && typeof refreshToken === 'undefined') {\n        refreshToken = this.tokenManager.getTokensSync().refreshToken as RefreshToken;\n      }\n\n      if (revokeAccessToken && typeof accessToken === 'undefined') {\n        accessToken = this.tokenManager.getTokensSync().accessToken as AccessToken;\n      }\n    \n      if (!options.idToken) {\n        options.idToken = this.tokenManager.getTokensSync().idToken as IDToken;\n      }\n\n      if (revokeRefreshToken && refreshToken) {\n        await this.revokeRefreshToken(refreshToken);\n      }\n\n      if (revokeAccessToken && accessToken) {\n        await this.revokeAccessToken(accessToken);\n      }\n\n      const dpopPairId = accessToken?.dpopPairId ?? refreshToken?.dpopPairId;\n      if (this.options.dpop && dpopPairId) {\n        await clearDPoPKeyPair(dpopPairId);\n      }\n\n      const logoutUri = this.getSignOutRedirectUrl({ ...options, postLogoutRedirectUri });\n      // No logoutUri? This can happen if the storage was cleared.\n      // Fallback to XHR signOut, then simulate a redirect to the post logout uri\n      if (!logoutUri) {\n        // local tokens are cleared once session is closed\n        const sessionClosed = await this.closeSession();   // can throw if the user cannot be signed out\n        const redirectUri = new URL(postLogoutRedirectUri || defaultUri); // during fallback, redirectUri cannot be null\n        if (state) {\n          redirectUri.searchParams.append('state', state);\n        }\n        if (postLogoutRedirectUri === currentUri) {\n          // window.location.reload(); // force a hard reload if URI is not changing\n          window.location.href = redirectUri.href;\n        } else {\n          window.location.assign(redirectUri.href);\n        }\n        return sessionClosed;\n      } else {\n        if (options.clearTokensBeforeRedirect) {\n          // Clear all local tokens\n          this.tokenManager.clear();\n        } else {\n          this.tokenManager.addPendingRemoveFlags();\n        }\n        // Flow ends with logout redirect\n        window.location.assign(logoutUri);\n        return true;\n      }\n    }\n\n    async getDPoPAuthorizationHeaders (params: DPoPRequest): Promise<DPoPHeaders> {\n      if (!this.options.dpop) {\n        throw new AuthSdkError('DPoP is not configured for this client instance');\n      }\n\n      let { accessToken } = params;\n      if (!accessToken) {\n        accessToken = (this.tokenManager.getTokensSync()).accessToken;\n      }\n\n      if (!accessToken) {\n        throw new AuthSdkError('AccessToken is required to generate a DPoP Proof');\n      }\n\n      const keyPair = await findKeyPair(accessToken?.dpopPairId);\n      const proof = await generateDPoPProof({...params, keyPair, accessToken: accessToken.accessToken});\n      return {\n        Authorization: `DPoP ${accessToken.accessToken}`,\n        Dpop: proof\n      };\n    }\n\n    async clearDPoPStorage (clearAll=false): Promise<void> {\n      if (clearAll) {\n        return clearAllDPoPKeyPairs();\n      }\n\n      const tokens = await this.tokenManager.getTokens();\n      const keyPair = tokens.accessToken?.dpopPairId || tokens.refreshToken?.dpopPairId;\n\n      if (keyPair) {\n        await clearDPoPKeyPair(keyPair);\n      }\n    }\n\n    parseUseDPoPNonceError (headers: HeadersInit): string | null {\n      const wwwAuth = WWWAuthError.getWWWAuthenticateHeader(headers);\n      const wwwErr = WWWAuthError.parseHeader(wwwAuth ?? '');\n      if (isDPoPNonceError(wwwErr)) {\n        let nonce: string | null = null;\n        if (isFunction((headers as Headers)?.get)) {\n          nonce = (headers as Headers).get('DPoP-Nonce');\n        }\n        nonce = nonce ?? headers['dpop-nonce'] ?? headers['DPoP-Nonce'];\n        return nonce;\n      }\n\n      return null;\n    }\n  };\n\n}\n","import { REFERRER_PATH_STORAGE_KEY } from '../../constants';\nimport browserStorage from '../../browser/browserStorage';\nimport { OktaAuthStorageInterface } from '../../storage';\nimport { OktaAuthConstructor } from '../../base';\nimport {\n  OAuthStorageManagerInterface,\n  OAuthTransactionMeta,\n  OktaAuthOAuthOptions,\n  OriginalUriApi,\n  PKCETransactionMeta,\n} from '../types';\n\nexport function provideOriginalUri\n<\n  M extends OAuthTransactionMeta = PKCETransactionMeta,\n  S extends OAuthStorageManagerInterface<M> = OAuthStorageManagerInterface<M>,\n  O extends OktaAuthOAuthOptions = OktaAuthOAuthOptions,\n  TBase extends OktaAuthConstructor<OktaAuthStorageInterface<S, O>>\n    = OktaAuthConstructor<OktaAuthStorageInterface<S, O>> \n>\n(BaseClass: TBase) {\n  return class WithOriginalUri extends BaseClass implements OriginalUriApi {\n    setOriginalUri(originalUri: string, state?: string): void {\n      // always store in session storage\n      const sessionStorage = browserStorage.getSessionStorage();\n      sessionStorage.setItem(REFERRER_PATH_STORAGE_KEY, originalUri);\n  \n      // to support multi-tab flows, set a state in constructor or pass as param\n      state = state || this.options.state;\n      if (state) {\n        const sharedStorage = this.storageManager.getOriginalUriStorage();\n        sharedStorage.setItem(state, originalUri);\n      }\n    }\n  \n    getOriginalUri(state?: string): string | undefined {\n      // Prefer shared storage (if state is available)\n      state = state || this.options.state;\n      if (state) {\n        const sharedStorage = this.storageManager.getOriginalUriStorage();\n        const originalUri = sharedStorage.getItem(state);\n        if (originalUri) {\n          return originalUri;\n        }\n      }\n  \n      // Try to load from session storage\n      const storage = browserStorage.getSessionStorage();\n      return storage ? storage.getItem(REFERRER_PATH_STORAGE_KEY) || undefined : undefined;\n    }\n  \n    removeOriginalUri(state?: string): void {\n      // Remove from sessionStorage\n      const storage = browserStorage.getSessionStorage();\n      storage.removeItem(REFERRER_PATH_STORAGE_KEY);\n  \n      // Also remove from shared storage\n      state = state || this.options.state;\n      if (state) {\n        const sharedStorage = this.storageManager.getOriginalUriStorage();\n        sharedStorage.removeItem && sharedStorage.removeItem(state);\n      }\n    }\n  };\n}\n","export const enableSharedStorage = true;\n","/*!\n * Copyright (c) 2015-present, Okta, Inc. and/or its affiliates. All rights reserved.\n * The Okta software accompanied by this notice is provided pursuant to the Apache License, Version 2.0 (the \"License.\")\n *\n * You may obtain a copy of the License at http://www.apache.org/licenses/LICENSE-2.0.\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT\n * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * \n * See the License for the specific language governing permissions and limitations under the License.\n */\n\nimport { DEFAULT_MAX_CLOCK_SKEW } from '../../constants';\nimport { removeTrailingSlash, toAbsoluteUrl } from '../../util/url';\nimport { isBrowser } from '../../features';\nimport { createHttpOptionsConstructor } from '../../http/options';\nimport {\n  OAuthResponseMode,\n  OAuthResponseType,\n  OktaAuthOAuthInterface,\n  OktaAuthOAuthOptions,\n  SetLocationFunction,\n  TokenManagerOptions,\n  TransactionManagerOptions\n} from '../types';\nimport { enableSharedStorage } from './node';\nimport AuthSdkError from '../../errors/AuthSdkError';\n\nfunction assertValidConfig(args) {\n  args = args || {};\n\n  var scopes = args.scopes;\n  if (scopes && !Array.isArray(scopes)) {\n    throw new AuthSdkError('scopes must be a array of strings. ' +\n      'Required usage: new OktaAuth({scopes: [\"openid\", \"email\"]})');\n  }\n\n  // eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n  var issuer = args.issuer!;\n  if (!issuer) {\n    throw new AuthSdkError('No issuer passed to constructor. ' + \n      'Required usage: new OktaAuth({issuer: \"https://{yourOktaDomain}.com/oauth2/{authServerId}\"})');\n  }\n\n  var isUrlRegex = new RegExp('^http?s?://.+');\n  if (!isUrlRegex.test(issuer)) {\n    throw new AuthSdkError('Issuer must be a valid URL. ' + \n      'Required usage: new OktaAuth({issuer: \"https://{yourOktaDomain}.com/oauth2/{authServerId}\"})');\n  }\n\n  if (issuer.indexOf('-admin.okta') !== -1) {\n    throw new AuthSdkError('Issuer URL passed to constructor contains \"-admin\" in subdomain. ' +\n      'Required usage: new OktaAuth({issuer: \"https://{yourOktaDomain}.com})');\n  }\n}\n\nexport function createOAuthOptionsConstructor() {\n  const HttpOptionsConstructor = createHttpOptionsConstructor();\n  return class OAuthOptionsConstructor\n    extends HttpOptionsConstructor\n    implements Required<OktaAuthOAuthOptions>\n  {\n    // CustomUrls\n    issuer: string;\n    authorizeUrl: string;\n    userinfoUrl: string;\n    tokenUrl: string;\n    revokeUrl: string;\n    logoutUrl: string;\n    \n    // TokenParams\n    pkce: boolean;\n    clientId: string;\n    redirectUri: string;\n    responseType: OAuthResponseType | OAuthResponseType[];\n    responseMode: OAuthResponseMode;\n    state: string;\n    scopes: string[];\n    ignoreSignature: boolean;\n    codeChallenge: string;\n    codeChallengeMethod: string;\n    acrValues: string;\n    maxAge: string | number;\n    dpop: boolean;\n\n    // Additional options\n    tokenManager: TokenManagerOptions;\n    postLogoutRedirectUri: string;\n    restoreOriginalUri: (oktaAuth: OktaAuthOAuthInterface, originalUri?: string) => Promise<void>;\n    transactionManager: TransactionManagerOptions;\n\n    // For server-side web applications ONLY!\n    clientSecret: string;\n    setLocation: SetLocationFunction;\n\n    // Workaround for bad client time/clock\n    ignoreLifetime: boolean;\n    maxClockSkew: number;\n\n\n    // eslint-disable-next-line max-statements\n    constructor(options: any) {\n      super(options);\n      \n      assertValidConfig(options);\n      \n      this.issuer = removeTrailingSlash(options.issuer);\n      this.tokenUrl = removeTrailingSlash(options.tokenUrl);\n      this.authorizeUrl = removeTrailingSlash(options.authorizeUrl);\n      this.userinfoUrl = removeTrailingSlash(options.userinfoUrl);\n      this.revokeUrl = removeTrailingSlash(options.revokeUrl);\n      this.logoutUrl = removeTrailingSlash(options.logoutUrl);\n\n      this.pkce = options.pkce === false ? false : true; // PKCE defaults to true\n      this.clientId = options.clientId;\n      this.redirectUri = options.redirectUri;\n      if (isBrowser()) {\n        this.redirectUri = toAbsoluteUrl(options.redirectUri, window.location.origin); // allow relative URIs\n      }\n      this.responseType = options.responseType;\n      this.responseMode = options.responseMode;\n      this.state = options.state;\n      this.scopes = options.scopes;\n      // Give the developer the ability to disable token signature validation.\n      this.ignoreSignature = !!options.ignoreSignature;\n      this.codeChallenge = options.codeChallenge;\n      this.codeChallengeMethod = options.codeChallengeMethod;\n      this.acrValues = options.acrValues;\n      this.maxAge = options.maxAge;\n      this.dpop = options.dpop === true; // dpop defaults to false\n\n      this.tokenManager = options.tokenManager;\n      this.postLogoutRedirectUri = options.postLogoutRedirectUri;\n      this.restoreOriginalUri = options.restoreOriginalUri;\n      this.transactionManager = { enableSharedStorage, ...options.transactionManager };\n      \n      this.clientSecret = options.clientSecret;\n      this.setLocation = options.setLocation;\n      \n      // As some end user's devices can have their date \n      // and time incorrectly set, allow for the disabling\n      // of the jwt liftetime validation\n      this.ignoreLifetime = !!options.ignoreLifetime;\n\n      // Digital clocks will drift over time, so the server\n      // can misalign with the time reported by the browser.\n      // The maxClockSkew allows relaxing the time-based\n      // validation of tokens (in seconds, not milliseconds).\n      // It currently defaults to 300, because 5 min is the\n      // default maximum tolerance allowed by Kerberos.\n      // (https://technet.microsoft.com/en-us/library/cc976357.aspx)\n      if (!options.maxClockSkew && options.maxClockSkew !== 0) {\n        this.maxClockSkew = DEFAULT_MAX_CLOCK_SKEW;\n      } else {\n        this.maxClockSkew = options.maxClockSkew;\n      }\n\n    }\n  };\n}\n","/* eslint-disable complexity */\n/*!\n * Copyright (c) 2015-present, Okta, Inc. and/or its affiliates. All rights reserved.\n * The Okta software accompanied by this notice is provided pursuant to the Apache License, Version 2.0 (the \"License.\")\n *\n * You may obtain a copy of the License at http://www.apache.org/licenses/LICENSE-2.0.\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT\n * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n *\n * See the License for the specific language governing permissions and limitations under the License.\n *\n */\nimport { AuthSdkError } from '../errors';\nimport { isInteractionRequiredError, urlParamsToObject } from './util';\nimport {\n  ParseFromUrlOptions,\n  TokenResponse,\n  CustomUrls,\n  TransactionMeta,\n  OAuthResponse\n} from './types';\nimport { isString } from '../util';\nimport { handleOAuthResponse } from './handleOAuthResponse';\n\nfunction removeHash(sdk) {\n  var nativeHistory = sdk.token.parseFromUrl._getHistory();\n  var nativeDoc = sdk.token.parseFromUrl._getDocument();\n  var nativeLoc = sdk.token.parseFromUrl._getLocation();\n  if (nativeHistory && nativeHistory.replaceState) {\n    nativeHistory.replaceState(null, nativeDoc.title, nativeLoc.pathname + nativeLoc.search);\n  } else {\n    nativeLoc.hash = '';\n  }\n}\n\nfunction removeSearch(sdk) {\n  var nativeHistory = sdk.token.parseFromUrl._getHistory();\n  var nativeDoc = sdk.token.parseFromUrl._getDocument();\n  var nativeLoc = sdk.token.parseFromUrl._getLocation();\n  if (nativeHistory && nativeHistory.replaceState) {\n    nativeHistory.replaceState(null, nativeDoc.title, nativeLoc.pathname + nativeLoc.hash);\n  } else {\n    nativeLoc.search = '';\n  }\n}\n\nexport function getResponseMode(sdk): 'query' | 'fragment' {\n  // https://openid.net/specs/openid-connect-core-1_0.html#Authentication\n  var defaultResponseMode = sdk.options.pkce ? 'query' : 'fragment';\n  var responseMode = sdk.options.responseMode || defaultResponseMode;\n  return responseMode;\n}\n\nexport function parseOAuthResponseFromUrl(sdk, options: string | ParseFromUrlOptions): OAuthResponse {\n  options = options || {};\n  if (isString(options)) {\n    options = { url: options } as ParseFromUrlOptions;\n  } else {\n    options = options as ParseFromUrlOptions;\n  }\n\n  var url = options.url;\n  var responseMode = options.responseMode || getResponseMode(sdk);\n  var nativeLoc = sdk.token.parseFromUrl._getLocation();\n  var paramStr;\n\n  if (responseMode === 'query') {\n    paramStr = url ? url.substring(url.indexOf('?')) : nativeLoc.search;\n  } else {\n    paramStr = url ? url.substring(url.indexOf('#')) : nativeLoc.hash;\n  }\n\n  if (!paramStr) {\n    throw new AuthSdkError('Unable to parse a token from the url');\n  }\n\n  return urlParamsToObject(paramStr);\n}\n\nexport function cleanOAuthResponseFromUrl(sdk, options: ParseFromUrlOptions) {\n  // Clean hash or search from the url\n  const responseMode = options.responseMode || getResponseMode(sdk);\n  responseMode === 'query' ? removeSearch(sdk) : removeHash(sdk);\n}\n\nexport async function parseFromUrl(sdk, options?: string | ParseFromUrlOptions): Promise<TokenResponse> {\n  options = options || {};\n  if (isString(options)) {\n    options = { url: options } as ParseFromUrlOptions;\n  } else {\n    options = options as ParseFromUrlOptions;\n  }\n\n  const res: OAuthResponse = parseOAuthResponseFromUrl(sdk, options);\n  const state = res.state;\n  const oauthParams: TransactionMeta = sdk.transactionManager.load({\n    state\n  });\n  if (!oauthParams) {\n    if (sdk.options.pkce) {\n      // eslint-disable-next-line max-len\n      throw new AuthSdkError('Could not load PKCE codeVerifier from storage. This may indicate the auth flow has already completed or multiple auth flows are executing concurrently.', undefined);\n    }\n    throw new AuthSdkError('Unable to retrieve OAuth redirect params from storage');\n  }\n  const urls: CustomUrls = oauthParams.urls as CustomUrls;\n  delete oauthParams.urls;\n\n  if (!options.url) {\n    // Clean hash or search from the url\n    cleanOAuthResponseFromUrl(sdk, options);\n  }\n\n  return handleOAuthResponse(sdk, oauthParams, res, urls)\n    .catch(err => {\n      if (!isInteractionRequiredError(err)) {\n        sdk.transactionManager.clear({\n          state\n        });\n      }\n      throw err;\n    })\n    .then(res => {\n      sdk.transactionManager.clear({\n        state\n      });\n      return res;\n    });\n\n}\n","/*!\n * Copyright (c) 2015-present, Okta, Inc. and/or its affiliates. All rights reserved.\n * The Okta software accompanied by this notice is provided pursuant to the Apache License, Version 2.0 (the \"License.\")\n *\n * You may obtain a copy of the License at http://www.apache.org/licenses/LICENSE-2.0.\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT\n * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n *\n * See the License for the specific language governing permissions and limitations under the License.\n *\n */\nimport { AuthSdkError } from '../errors';\nimport { OktaAuthOAuthInterface, Token, Tokens, isAccessToken, AccessToken, IDToken, isIDToken } from './types';\nimport { getWithoutPrompt } from './getWithoutPrompt';\nimport { renewTokensWithRefresh } from './renewTokensWithRefresh';\n\nfunction throwInvalidTokenError() {\n  throw new AuthSdkError(\n    'Renew must be passed a token with an array of scopes and an accessToken or idToken'\n  );\n}\n\n// Multiple tokens may have come back. Return only the token which was requested.\nfunction getSingleToken(originalToken: Token, tokens: Tokens) {\n  if (isIDToken(originalToken)) {\n    return tokens.idToken;\n  }\n  if (isAccessToken(originalToken)) {\n    return tokens.accessToken;\n  }\n  throwInvalidTokenError();\n}\n\n// If we have a refresh token, renew using that, otherwise getWithoutPrompt\nexport async function renewToken(sdk: OktaAuthOAuthInterface, token: Token): Promise<Token | undefined> {\n  if (!isIDToken(token) && !isAccessToken(token)) {\n    throwInvalidTokenError();\n  }\n\n  let tokens = sdk.tokenManager.getTokensSync();\n  if (tokens.refreshToken) {\n    tokens = await renewTokensWithRefresh(sdk, {\n      scopes: token.scopes,\n    }, tokens.refreshToken);\n    return getSingleToken(token, tokens);\n  }\n\n  var responseType;\n  if (sdk.options.pkce) {\n    responseType = 'code';\n  } else if (isAccessToken(token)) {\n    responseType = 'token';\n  } else {\n    responseType = 'id_token';\n  }\n\n  const { scopes, authorizeUrl, userinfoUrl, issuer, dpopPairId, extraParams } = token as (AccessToken & IDToken);\n  return getWithoutPrompt(sdk, {\n    responseType,\n    scopes,\n    authorizeUrl,\n    userinfoUrl,\n    issuer,\n    dpopPairId,\n    extraParams\n  })\n    .then(function (res) {\n      return getSingleToken(token, res.tokens);\n    });\n}\n","/*!\n * Copyright (c) 2015-present, Okta, Inc. and/or its affiliates. All rights reserved.\n * The Okta software accompanied by this notice is provided pursuant to the Apache License, Version 2.0 (the \"License.\")\n *\n * You may obtain a copy of the License at http://www.apache.org/licenses/LICENSE-2.0.\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT\n * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n *\n * See the License for the specific language governing permissions and limitations under the License.\n *\n */\nimport { AuthSdkError } from '../errors';\nimport { RenewTokensParams, Tokens } from './types';\nimport { getWithoutPrompt } from './getWithoutPrompt';\nimport { renewTokensWithRefresh } from './renewTokensWithRefresh';\nimport { getDefaultTokenParams } from './util';\n\n// If we have a refresh token, renew using that, otherwise getWithoutPrompt\n// eslint-disable-next-line complexity\nexport async function renewTokens(sdk, options?: RenewTokensParams): Promise<Tokens> {\n  const tokens = options?.tokens ?? sdk.tokenManager.getTokensSync();\n  if (tokens.refreshToken) {\n    return renewTokensWithRefresh(sdk, options || {}, tokens.refreshToken);\n  }\n\n  if (!tokens.accessToken && !tokens.idToken) {\n    throw new AuthSdkError('renewTokens() was called but there is no existing token');\n  }\n\n  const accessToken = tokens.accessToken || {};\n  const idToken = tokens.idToken || {};\n  const scopes = accessToken.scopes || idToken.scopes;\n  if (!scopes) {\n    throw new AuthSdkError('renewTokens: invalid tokens: could not read scopes');\n  }\n  const authorizeUrl = accessToken.authorizeUrl || idToken.authorizeUrl;\n  if (!authorizeUrl) {\n    throw new AuthSdkError('renewTokens: invalid tokens: could not read authorizeUrl');\n  }\n  const userinfoUrl = accessToken.userinfoUrl || sdk.options.userinfoUrl;\n  const issuer = idToken.issuer || sdk.options.issuer;\n  const dpopPairId = accessToken?.dpopPairId;\n  const extraParams = accessToken?.extraParams || idToken?.extraParams;\n\n  // Get tokens using the SSO cookie\n  options = Object.assign({\n    scopes,\n    authorizeUrl,\n    userinfoUrl,\n    issuer,\n    dpopPairId,\n    extraParams\n  }, options);\n\n  if (sdk.options.pkce) {\n    options.responseType = 'code';\n  } else {\n    const { responseType } = getDefaultTokenParams(sdk);\n    options.responseType = responseType;\n  }\n\n  return getWithoutPrompt(sdk, options)\n    .then(res => res.tokens);\n    \n}\n","/*!\n * Copyright (c) 2015-present, Okta, Inc. and/or its affiliates. All rights reserved.\n * The Okta software accompanied by this notice is provided pursuant to the Apache License, Version 2.0 (the \"License.\")\n *\n * You may obtain a copy of the License at http://www.apache.org/licenses/LICENSE-2.0.\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT\n * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n *\n * See the License for the specific language governing permissions and limitations under the License.\n *\n */\nimport { AuthSdkError } from '../errors';\nimport { getOAuthUrls } from './util/oauth';\nimport { isSameRefreshToken } from './util/refreshToken';\nimport { OktaAuthOAuthInterface, TokenParams, RefreshToken, Tokens } from './types';\nimport { handleOAuthResponse } from './handleOAuthResponse';\nimport { TokenEndpointParams, postRefreshToken } from './endpoints/token';\nimport { findKeyPair } from './dpop';\nimport { isRefreshTokenInvalidError } from './util/errors';\n\n/* eslint complexity:[0,8] */\nexport async function renewTokensWithRefresh(\n  sdk: OktaAuthOAuthInterface,\n  tokenParams: TokenParams,\n  refreshTokenObject: RefreshToken\n): Promise<Tokens> {\n  const { clientId, dpop } = sdk.options;\n  if (!clientId) {\n    throw new AuthSdkError('A clientId must be specified in the OktaAuth constructor to renew tokens');\n  }\n\n  try {\n    const renewTokenParams: TokenParams = Object.assign({}, tokenParams, { clientId });\n\n    if (refreshTokenObject.extraParams) {\n      renewTokenParams.extraParams = refreshTokenObject.extraParams;\n    }\n\n    const endpointParams: TokenEndpointParams = {...renewTokenParams};\n\n    if (dpop) {\n      const keyPair = await findKeyPair(refreshTokenObject?.dpopPairId);    // will throw if KP cannot be found\n      endpointParams.dpopKeyPair = keyPair;\n      renewTokenParams.dpop = dpop;\n      renewTokenParams.dpopPairId = refreshTokenObject.dpopPairId;\n    }\n\n    const tokenResponse = await postRefreshToken(sdk, endpointParams, refreshTokenObject);\n    const urls = getOAuthUrls(sdk, tokenParams);\n    const { tokens } = await handleOAuthResponse(sdk, renewTokenParams, tokenResponse, urls);\n\n    // Support rotating refresh tokens\n    const { refreshToken } = tokens;\n    if (refreshToken && !isSameRefreshToken(refreshToken, refreshTokenObject)) {\n      sdk.tokenManager.updateRefreshToken(refreshToken);\n    }\n\n    return tokens;\n  }\n  catch (err) {\n    if (isRefreshTokenInvalidError(err)) {\n      // if the refresh token is invalid, remove it from storage\n      sdk.tokenManager.removeRefreshToken();\n    }\n    throw err;\n  }\n}\n","/*!\n * Copyright (c) 2015-present, Okta, Inc. and/or its affiliates. All rights reserved.\n * The Okta software accompanied by this notice is provided pursuant to the Apache License, Version 2.0 (the \"License.\")\n *\n * You may obtain a copy of the License at http://www.apache.org/licenses/LICENSE-2.0.\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT\n * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n *\n * See the License for the specific language governing permissions and limitations under the License.\n *\n */\n\n/* eslint complexity:[0,8] */\nimport { post } from '../http';\nimport { toQueryString } from '../util';\nimport {\n  getOAuthUrls,\n} from './util/oauth';\nimport { btoa } from '../crypto';\nimport AuthSdkError from '../errors/AuthSdkError';\nimport {\n  OktaAuthOAuthInterface,\n  RevocableToken,\n  AccessToken,\n  RefreshToken\n} from './types';\n\n// refresh tokens have precedence to be revoked if no token is specified\nexport async function revokeToken(sdk: OktaAuthOAuthInterface, token: RevocableToken): Promise<any> {\n  let accessToken = '';\n  let refreshToken = '';\n  if (token) { \n      accessToken = (token as AccessToken).accessToken;\n      refreshToken = (token as RefreshToken).refreshToken;  \n  }\n  if(!accessToken && !refreshToken) { \n    throw new AuthSdkError('A valid access or refresh token object is required');\n  }\n  var clientId = sdk.options.clientId;\n  var clientSecret = sdk.options.clientSecret;\n  if (!clientId) {\n    throw new AuthSdkError('A clientId must be specified in the OktaAuth constructor to revoke a token');\n  }\n  // eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n  var revokeUrl = getOAuthUrls(sdk).revokeUrl!;\n  var args = toQueryString({\n    // eslint-disable-next-line camelcase\n    token_type_hint: refreshToken ? 'refresh_token' : 'access_token', \n    token: refreshToken || accessToken,\n  }).slice(1);\n  var creds = clientSecret ? btoa(`${clientId}:${clientSecret}`) : btoa(clientId);\n  return post(sdk, revokeUrl, args, {\n    headers: {\n      'Content-Type': 'application/x-www-form-urlencoded',\n      'Authorization': 'Basic ' + creds\n    }\n  });\n}\n","import {\n  CookieOptions,\n  StorageManagerOptions,\n  StorageOptions,\n  StorageUtil\n} from '../storage/types';\nimport { BaseStorageManager, logServerSideMemoryStorageWarning } from '../storage/BaseStorageManager';\nimport { TransactionStorage, OAuthTransactionMeta, OAuthStorageManagerInterface, PKCETransactionMeta } from './types';\nimport { SavedObject } from '../storage';\nimport { ORIGINAL_URI_STORAGE_NAME, SHARED_TRANSACTION_STORAGE_NAME, TRANSACTION_STORAGE_NAME } from '../constants';\n\n\nexport function createOAuthStorageManager<M extends OAuthTransactionMeta = PKCETransactionMeta>()\n{\n  return class OAuthStorageManager\n    extends BaseStorageManager\n    implements OAuthStorageManagerInterface<M>\n  {\n    constructor(storageManagerOptions: StorageManagerOptions, cookieOptions: CookieOptions, storageUtil: StorageUtil) {\n      super(storageManagerOptions, cookieOptions, storageUtil);\n    }\n\n    getTransactionStorage(options?: StorageOptions): TransactionStorage<M> {\n      options = this.getOptionsForSection('transaction', options);\n      logServerSideMemoryStorageWarning(options);\n      const storage = this.getStorage(options);\n      const storageKey = options.storageKey || TRANSACTION_STORAGE_NAME;\n      return new SavedObject(storage, storageKey);\n    }\n\n    getSharedTansactionStorage(options?: StorageOptions): TransactionStorage<M> {\n      options = this.getOptionsForSection('shared-transaction', options);\n      logServerSideMemoryStorageWarning(options);\n      const storage = this.getStorage(options);\n      const storageKey = options.storageKey || SHARED_TRANSACTION_STORAGE_NAME;\n      return new SavedObject(storage, storageKey);\n    }\n\n    getOriginalUriStorage(options?: StorageOptions): TransactionStorage<M> {\n      options = this.getOptionsForSection('original-uri', options);\n      logServerSideMemoryStorageWarning(options);\n      const storage = this.getStorage(options);\n      const storageKey = options.storageKey || ORIGINAL_URI_STORAGE_NAME;\n      return new SavedObject(storage, storageKey);\n    }\n  };\n\n}\n","/*!\n * Copyright (c) 2015-present, Okta, Inc. and/or its affiliates. All rights reserved.\n * The Okta software accompanied by this notice is provided pursuant to the Apache License, Version 2.0 (the \"License.\")\n *\n * You may obtain a copy of the License at http://www.apache.org/licenses/LICENSE-2.0.\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT\n * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n *\n * See the License for the specific language governing permissions and limitations under the License.\n */\n\nimport { UserClaims } from './UserClaims';\n\nexport interface AbstractToken {\n  expiresAt: number;\n  authorizeUrl: string;\n  scopes: string[];\n  pendingRemove?: boolean;\n  extraParams?: Record<string, string>;\n}\n\nexport interface AccessToken extends AbstractToken {\n  accessToken: string;\n  claims: UserClaims;\n  tokenType: string;\n  userinfoUrl: string;\n  dpopPairId?: string;\n}\n\nexport interface RefreshToken extends AbstractToken {\n  refreshToken: string;\n  tokenUrl: string;\n  issuer: string;\n  dpopPairId?: string;\n}\n\nexport interface IDToken extends AbstractToken {\n  idToken: string;\n  claims: UserClaims;\n  issuer: string;\n  clientId: string;\n}\n\nexport type Token = AccessToken | IDToken | RefreshToken;\nexport type RevocableToken = AccessToken | RefreshToken;\n\nexport type TokenType = 'accessToken' | 'idToken' | 'refreshToken';\nexport enum TokenKind {\n  ACCESS = 'accessToken',\n  ID = 'idToken',\n  REFRESH = 'refreshToken',\n}\n\nexport function isToken(obj: any): obj is Token {\n  if (obj &&\n      (obj.accessToken || obj.idToken || obj.refreshToken) &&\n      Array.isArray(obj.scopes)) {\n    return true;\n  }\n  return false;\n}\n\nexport function isAccessToken(obj: any): obj is AccessToken {\n  return obj && obj.accessToken;\n}\n\nexport function isIDToken(obj: any): obj is IDToken {\n  return obj && obj.idToken;\n}\n\nexport function isRefreshToken(obj: any): obj is RefreshToken {\n  return obj && obj.refreshToken;\n}\n\nexport interface Tokens {\n  accessToken?: AccessToken;\n  idToken?: IDToken;\n  refreshToken?: RefreshToken;\n}\n","/* eslint-disable max-len */\nimport { StorageProvider } from '../../storage/types';\nimport { TokenManagerOptions } from './options';\nimport { AccessToken, IDToken, RefreshToken, Token, Tokens, TokenType } from './Token';\n\nexport interface TokenManagerError {\n  errorSummary: string;\n  errorCode: string;\n  message: string;\n  name: string;\n  tokenKey: string;\n}\n\nexport declare type AccessTokenCallback = (key: string, token: AccessToken) => void;\nexport declare type IDTokenCallback = (key: string, token: IDToken) => void;\nexport declare type RefreshTokenCallback = (key: string, token: RefreshToken) => void;\n\nexport const EVENT_EXPIRED = 'expired';\nexport const EVENT_RENEWED = 'renewed';\nexport const EVENT_ADDED = 'added';\nexport const EVENT_REMOVED = 'removed';\nexport const EVENT_ERROR = 'error';\nexport const EVENT_SET_STORAGE = 'set_storage';\n\nexport declare type TokenManagerErrorEventHandler = (error: TokenManagerError) => void;\nexport declare type TokenManagerEventHandler = (key: string, token: Token) => void;\nexport declare type TokenManagerRenewEventHandler = (key: string, token: Token, oldtoken: Token) => void;\nexport declare type TokenManagerSetStorageEventHandler = (storage: Tokens) => void;\n\nexport declare type TokenManagerAnyEventHandler = TokenManagerErrorEventHandler | TokenManagerRenewEventHandler | TokenManagerSetStorageEventHandler | TokenManagerEventHandler;\nexport declare type TokenManagerAnyEvent = typeof EVENT_RENEWED | typeof EVENT_ERROR | typeof EVENT_SET_STORAGE | typeof EVENT_EXPIRED | typeof EVENT_ADDED | typeof EVENT_REMOVED;\n\n// only add methods needed internally\nexport interface TokenManagerInterface {\n  on(event: typeof EVENT_RENEWED, handler: TokenManagerRenewEventHandler, context?: object): void;\n  on(event: typeof EVENT_ERROR, handler: TokenManagerErrorEventHandler, context?: object): void;\n  on(event: typeof EVENT_SET_STORAGE, handler: TokenManagerSetStorageEventHandler, context?: object): void;\n  on(event: typeof EVENT_EXPIRED | typeof EVENT_ADDED | typeof EVENT_REMOVED, handler: TokenManagerEventHandler, context?: object): void;\n\n  off(event: typeof EVENT_RENEWED, handler?: TokenManagerRenewEventHandler): void;\n  off(event: typeof EVENT_ERROR, handler?: TokenManagerErrorEventHandler): void;\n  off(event: typeof EVENT_SET_STORAGE, handler?: TokenManagerSetStorageEventHandler): void;\n  off(event: typeof EVENT_EXPIRED | typeof EVENT_ADDED | typeof EVENT_REMOVED, handler?: TokenManagerEventHandler): void;\n\n  clear(): void;\n  setExpireEventTimeout(key: string, token: Token): void;\n  clearExpireEventTimeout(key: string): void;\n  clearExpireEventTimeoutAll(): void;\n  emitAdded(key: string, token: Token): void;\n  emitError(error: Error): void;\n  emitRemoved(key: string, token: Token): void;\n  emitRenewed(key: string, token: Token, oldToken?: Token): void;\n  renew(key: string): Promise<Token | undefined>;\n  remove(key: string): void;\n  hasExpired(token: Token): boolean;\n  getExpireTime(token: Token): number;\n\n  get(key): Promise<Token | undefined>;\n  getSync(key): Token | undefined;\n  getTokens(): Promise<Tokens>;\n  getTokensSync(): Tokens;\n  setTokens({ accessToken, idToken, refreshToken }: Tokens, accessTokenCb?: AccessTokenCallback, idTokenCb?: IDTokenCallback, refreshTokenCb?: RefreshTokenCallback): void;\n  getStorageKeyByType(type: TokenType): string;\n  add(key: any, token: Token): void;\n  updateRefreshToken(token: RefreshToken);\n  removeRefreshToken(): void;\n  clearPendingRemoveTokens(): void;\n\n  getOptions(): TokenManagerOptions;\n  getStorage(): StorageProvider;\n\n  start();\n  stop();\n  isStarted(): boolean;\n}\n","/*!\n * Copyright (c) 2015-present, Okta, Inc. and/or its affiliates. All rights reserved.\n * The Okta software accompanied by this notice is provided pursuant to the Apache License, Version 2.0 (the \"License.\")\n *\n * You may obtain a copy of the License at http://www.apache.org/licenses/LICENSE-2.0.\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT\n * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * \n * See the License for the specific language governing permissions and limitations under the License.\n */\n\n\nimport { IdxTransactionMeta } from '../../idx/types/meta';\nimport { OAuthTransactionMeta, PKCETransactionMeta } from './meta';\nimport { OAuthStorageManagerInterface } from './storage';\n\nexport interface TransactionManagerOptions\n{\n  storageManager?: OAuthStorageManagerInterface;\n  enableSharedStorage?: boolean; // default true\n  saveNonceCookie?: boolean; // default true\n  saveStateCookie?: boolean; // default true\n  saveParamsCookie?: boolean; // default true\n  saveLastResponse?: boolean; // default true\n}\n\n\nexport type CustomAuthTransactionMeta = Record<string, string | undefined>;\n\nexport type TransactionMeta =\n  IdxTransactionMeta |\n  PKCETransactionMeta |\n  OAuthTransactionMeta |\n  CustomAuthTransactionMeta;\n\n\nfunction isObjectWithProperties(obj) {\n  if (!obj || typeof obj !== 'object' || Object.values(obj).length === 0) {\n    return false;\n  }\n  return true;\n}\n\nexport function isOAuthTransactionMeta(obj: any): obj is OAuthTransactionMeta {\n  if (!isObjectWithProperties(obj)) {\n    return false;\n  }\n  return !!obj.redirectUri || !!obj.responseType;\n}\n\nexport function isPKCETransactionMeta(obj: any): obj is PKCETransactionMeta {\n  if (!isOAuthTransactionMeta(obj)) {\n    return false;\n  }\n  return !!(obj as any).codeVerifier;\n}\n\nexport function isIdxTransactionMeta(obj: any): obj is IdxTransactionMeta {\n  if (!isPKCETransactionMeta(obj)) {\n    return false;\n  }\n  return !!(obj as any).interactionHandle;\n}\n\nexport function isCustomAuthTransactionMeta(obj: any): obj is CustomAuthTransactionMeta {\n  if (!isObjectWithProperties(obj)) {\n    return false;\n  }\n  const isAllStringValues = Object.values(obj).find((value) => (typeof value !== 'string')) === undefined;\n  return isAllStringValues;\n}\n\nexport function isTransactionMeta(obj: any): obj is TransactionMeta {\n  if (isOAuthTransactionMeta(obj) || isCustomAuthTransactionMeta(obj)) {\n    return true;\n  }\n  return false;\n}\n","/*!\n * Copyright (c) 2015-present, Okta, Inc. and/or its affiliates. All rights reserved.\n * The Okta software accompanied by this notice is provided pursuant to the Apache License, Version 2.0 (the \"License.\")\n *\n * You may obtain a copy of the License at http://www.apache.org/licenses/LICENSE-2.0.\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT\n * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n *\n * See the License for the specific language governing permissions and limitations under the License.\n *\n */\n/* global window, document */\n/* eslint-disable complexity, max-statements */\nimport { AuthSdkError } from '../../errors';\nimport { OktaAuthOAuthInterface } from '../types';\n\nexport function addListener(eventTarget, name, fn) {\n  if (eventTarget.addEventListener) {\n    eventTarget.addEventListener(name, fn);\n  } else {\n    eventTarget.attachEvent('on' + name, fn);\n  }\n}\n\nexport function removeListener(eventTarget, name, fn) {\n  if (eventTarget.removeEventListener) {\n    eventTarget.removeEventListener(name, fn);\n  } else {\n    eventTarget.detachEvent('on' + name, fn);\n  }\n}\n\nexport function loadFrame(src) {\n  var iframe = document.createElement('iframe');\n  iframe.style.display = 'none';\n  iframe.src = src;\n\n  return document.body.appendChild(iframe);\n}\n\nexport function loadPopup(src, options) {\n  var title = options.popupTitle || 'External Identity Provider User Authentication';\n  var appearance = 'toolbar=no, scrollbars=yes, resizable=yes, ' +\n    'top=100, left=500, width=600, height=600';\n  return window.open(src, title, appearance);\n}\n\nexport function addPostMessageListener(sdk: OktaAuthOAuthInterface, timeout, state) {\n  var responseHandler;\n  var timeoutId;\n  var msgReceivedOrTimeout = new Promise(function (resolve, reject) {\n\n    responseHandler = function responseHandler(e) {\n      if (!e.data || e.data.state !== state) {\n        // A message not meant for us\n        return;\n      }\n\n      // Configuration mismatch between saved token and current app instance\n      // This may happen if apps with different issuers are running on the same host url\n      // If they share the same storage key, they may read and write tokens in the same location.\n      // Common when developing against http://localhost\n      if (e.origin !== sdk.getIssuerOrigin()) {\n        return reject(new AuthSdkError('The request does not match client configuration'));\n      }\n      resolve(e.data);\n    };\n\n    addListener(window, 'message', responseHandler);\n\n    timeoutId = setTimeout(function () {\n      reject(new AuthSdkError('OAuth flow timed out'));\n    }, timeout || 120000);\n  });\n\n  return msgReceivedOrTimeout\n    .finally(function () {\n      clearTimeout(timeoutId);\n      removeListener(window, 'message', responseHandler);\n    });\n}\n","\n/* global window */\n/*!\n * Copyright (c) 2015-present, Okta, Inc. and/or its affiliates. All rights reserved.\n * The Okta software accompanied by this notice is provided pursuant to the Apache License, Version 2.0 (the \"License.\")\n *\n * You may obtain a copy of the License at http://www.apache.org/licenses/LICENSE-2.0.\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT\n * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n *\n * See the License for the specific language governing permissions and limitations under the License.\n *\n */\nimport { generateState } from './oauth';\nimport { OktaAuthOAuthInterface, TokenParams } from '../types';\nimport { isBrowser } from '../../features';\nimport { removeNils } from '../../util';\n\nexport function getDefaultEnrollAuthenticatorParams(sdk: OktaAuthOAuthInterface): TokenParams {\n  const {\n    clientId,\n    redirectUri,\n    responseMode,\n    state,\n  } = sdk.options;\n  const defaultRedirectUri = isBrowser() ? window.location.href : undefined;\n  return removeNils({\n    clientId,\n    redirectUri: redirectUri || defaultRedirectUri,\n    responseMode,\n    state: state || generateState(),\n    responseType: 'none',\n    prompt: 'enroll_authenticator',\n  });\n}","\n/* global window */\n/*!\n * Copyright (c) 2015-present, Okta, Inc. and/or its affiliates. All rights reserved.\n * The Okta software accompanied by this notice is provided pursuant to the Apache License, Version 2.0 (the \"License.\")\n *\n * You may obtain a copy of the License at http://www.apache.org/licenses/LICENSE-2.0.\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT\n * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n *\n * See the License for the specific language governing permissions and limitations under the License.\n *\n */\nimport { generateNonce, generateState } from './oauth';\nimport { OktaAuthOAuthInterface, TokenParams } from '../types';\nimport { isBrowser } from '../../features';\nimport { removeNils } from '../../util';\n\nexport function getDefaultTokenParams(sdk: OktaAuthOAuthInterface): TokenParams {\n  const {\n    pkce,\n    clientId,\n    redirectUri,\n    responseType,\n    responseMode,\n    scopes,\n    acrValues,\n    maxAge,\n    state,\n    ignoreSignature,\n    dpop\n  } = sdk.options;\n  const defaultRedirectUri = isBrowser() ? window.location.href : undefined;\n  return removeNils({\n    pkce,\n    clientId,\n    redirectUri: redirectUri || defaultRedirectUri,\n    responseType: responseType || ['token', 'id_token'],\n    responseMode,\n    state: state || generateState(),\n    nonce: generateNonce(),\n    scopes: scopes || ['openid', 'email'],\n    acrValues,\n    maxAge,\n    ignoreSignature,\n    dpop,\n  });\n}","/* eslint-disable @typescript-eslint/no-non-null-assertion */\nimport { OAuthTransactionMeta, OktaAuthOAuthInterface, EnrollAuthenticatorOptions } from '../types';\nimport { getOAuthUrls } from './oauth';\n\nexport function createEnrollAuthenticatorMeta(\n  sdk: OktaAuthOAuthInterface, \n  params: EnrollAuthenticatorOptions\n): OAuthTransactionMeta {\n  const issuer = sdk.options.issuer!;\n  const urls = getOAuthUrls(sdk, params);\n  const oauthMeta: OAuthTransactionMeta = {\n    issuer,\n    urls,\n    clientId: params.clientId!,\n    redirectUri: params.redirectUri!,\n    responseType: params.responseType!,\n    responseMode: params.responseMode!,\n    state: params.state!,\n    acrValues: params.acrValues,\n    enrollAmrValues: params.enrollAmrValues,\n  };\n\n  return oauthMeta;\n}\n","/*!\n * Copyright (c) 2015-present, Okta, Inc. and/or its affiliates. All rights reserved.\n * The Okta software accompanied by this notice is provided pursuant to the Apache License, Version 2.0 (the \"License.\")\n *\n * You may obtain a copy of the License at http://www.apache.org/licenses/LICENSE-2.0.\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT\n * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * \n * See the License for the specific language governing permissions and limitations under the License.\n */\n\n\nimport { OktaAuthOAuthInterface } from '../types';\nimport { OAuthError, AuthApiError, isOAuthError } from '../../errors';\n\nexport function isInteractionRequiredError(error: Error) {\n  if (error.name !== 'OAuthError') {\n    return false;\n  }\n  const oauthError = error as OAuthError;\n  return (oauthError.errorCode === 'interaction_required');\n}\n\nexport function isAuthorizationCodeError(sdk: OktaAuthOAuthInterface, error: Error) {\n  if (error.name !== 'AuthApiError') {\n    return false;\n  }\n  const authApiError = error as AuthApiError;\n  // xhr property doesn't seem to match XMLHttpRequest type\n  const errorResponse = authApiError.xhr as unknown as Record<string, unknown>;\n  const responseJSON = errorResponse?.responseJSON as Record<string, unknown>;\n  return sdk.options.pkce && (responseJSON?.error as string === 'invalid_grant');\n}\n\nexport function isRefreshTokenInvalidError(error: unknown): boolean {\n  // error: {\"error\":\"invalid_grant\",\"error_description\":\"The refresh token is invalid or expired.\"}\n  return isOAuthError(error) &&\n    error.errorCode === 'invalid_grant' &&\n    error.errorSummary === 'The refresh token is invalid or expired.';\n}\n","/*!\n * Copyright (c) 2015-present, Okta, Inc. and/or its affiliates. All rights reserved.\n * The Okta software accompanied by this notice is provided pursuant to the Apache License, Version 2.0 (the \"License.\")\n *\n * You may obtain a copy of the License at http://www.apache.org/licenses/LICENSE-2.0.\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT\n * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n *\n * See the License for the specific language governing permissions and limitations under the License.\n *\n */\n/* global window */\n/* eslint-disable complexity, max-statements */\nimport { OktaAuthOAuthOptions, OktaAuthOAuthInterface, OAuthResponseType } from '../types';\n\nexport function hasTokensInHash(hash: string): boolean {\n  return /((id|access)_token=)/i.test(hash);\n}\n\n// authorization_code\nexport function hasAuthorizationCode(hashOrSearch: string): boolean {\n  return /(code=)/i.test(hashOrSearch);\n}\n\n// interaction_code\nexport function hasInteractionCode(hashOrSearch: string): boolean {\n  return /(interaction_code=)/i.test(hashOrSearch);\n}\n\nexport function hasErrorInUrl(hashOrSearch: string): boolean {\n  return /(error=)/i.test(hashOrSearch) || /(error_description)/i.test(hashOrSearch);\n}\n\nexport function isRedirectUri(uri: string, sdk: OktaAuthOAuthInterface): boolean {\n  var authParams = sdk.options;\n  if (!uri || !authParams.redirectUri) {\n    return false;\n  }\n  return uri.indexOf(authParams.redirectUri) === 0;\n}\n\nexport function isCodeFlow(options: OktaAuthOAuthOptions) {\n  return options.pkce || options.responseType === 'code' || options.responseMode === 'query';\n}\n\nexport function hasResponseType(responseType: OAuthResponseType, options: OktaAuthOAuthOptions): boolean {\n  let hasResponseType = false;\n  if (Array.isArray(options.responseType) && options.responseType.length) {\n    hasResponseType = options.responseType.indexOf(responseType) >= 0;\n  } else {\n    hasResponseType = options.responseType === responseType;\n  }\n  return hasResponseType;\n}\n\nexport function getHashOrSearch(options: OktaAuthOAuthOptions) {\n  var codeFlow = isCodeFlow(options);\n  var useQuery = codeFlow && options.responseMode !== 'fragment';\n  return useQuery ? window.location.search : window.location.hash;\n}\n\n/**\n * Check if tokens or a code have been passed back into the url, which happens in\n * the OIDC (including social auth IDP) redirect flow.\n */\nexport function isLoginRedirect (sdk: OktaAuthOAuthInterface) {\n  // First check, is this a redirect URI?\n  if (!isRedirectUri(window.location.href, sdk)){\n    return false;\n  }\n\n  // The location contains either a code, token, or an error + error_description\n  var codeFlow = isCodeFlow(sdk.options);\n  var hashOrSearch = getHashOrSearch(sdk.options);\n\n  if (hasErrorInUrl(hashOrSearch)) {\n    return true;\n  }\n\n  if (codeFlow) {\n    var hasCode =  hasAuthorizationCode(hashOrSearch) || hasInteractionCode(hashOrSearch);\n    return hasCode;\n  }\n\n  // implicit flow, will always be hash fragment\n  return hasTokensInHash(window.location.hash);\n}\n\n/**\n * Check if error=interaction_required has been passed back in the url, which happens in\n * the social auth IDP redirect flow.\n */\nexport function isInteractionRequired (sdk: OktaAuthOAuthInterface, hashOrSearch?: string) {\n  if (!hashOrSearch) { // web only\n    // First check, is this a redirect URI?\n    if (!isLoginRedirect(sdk)){\n      return false;\n    }\n  \n    hashOrSearch = getHashOrSearch(sdk.options);\n  }\n  return /(error=interaction_required)/i.test(hashOrSearch);\n}","/*!\n * Copyright (c) 2015-present, Okta, Inc. and/or its affiliates. All rights reserved.\n * The Okta software accompanied by this notice is provided pursuant to the Apache License, Version 2.0 (the \"License.\")\n *\n * You may obtain a copy of the License at http://www.apache.org/licenses/LICENSE-2.0.\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT\n * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n *\n * See the License for the specific language governing permissions and limitations under the License.\n *\n */\n/* eslint-disable complexity, max-statements */\nimport { genRandomString, removeTrailingSlash } from '../../util';\nimport AuthSdkError from '../../errors/AuthSdkError';\nimport { OktaAuthOAuthInterface, CustomUrls } from '../types';\n\nexport function generateState() {\n  return genRandomString(64);\n}\n\nexport function generateNonce() {\n  return genRandomString(64);\n}\n\nfunction getIssuer(sdk: OktaAuthOAuthInterface, options: CustomUrls = {}) {\n  const issuer = removeTrailingSlash(options.issuer) || sdk.options.issuer;\n  return issuer;\n}\n\nexport function getOAuthBaseUrl(sdk: OktaAuthOAuthInterface, options: CustomUrls = {}) {\n  const issuer = getIssuer(sdk, options);\n  const baseUrl = issuer.indexOf('/oauth2') > 0 ? issuer : issuer + '/oauth2';\n  return baseUrl;\n}\n\nexport function getOAuthDomain(sdk: OktaAuthOAuthInterface, options: CustomUrls = {}) {\n  const issuer = getIssuer(sdk, options);\n  const domain = issuer.split('/oauth2')[0];\n  return domain;\n}\n\nexport function getOAuthUrls(sdk: OktaAuthOAuthInterface, options?: CustomUrls): CustomUrls {\n  if (arguments.length > 2) {\n    throw new AuthSdkError('As of version 3.0, \"getOAuthUrls\" takes only a single set of options');\n  }\n  options = options || {};\n\n  // Get user-supplied arguments\n  var authorizeUrl = removeTrailingSlash(options.authorizeUrl) || sdk.options.authorizeUrl;\n  var issuer = getIssuer(sdk, options);\n  var userinfoUrl = removeTrailingSlash(options.userinfoUrl) || sdk.options.userinfoUrl;\n  var tokenUrl = removeTrailingSlash(options.tokenUrl) || sdk.options.tokenUrl;\n  var logoutUrl = removeTrailingSlash(options.logoutUrl) || sdk.options.logoutUrl;\n  var revokeUrl = removeTrailingSlash(options.revokeUrl) || sdk.options.revokeUrl;\n\n  var baseUrl = getOAuthBaseUrl(sdk, options);\n\n  authorizeUrl = authorizeUrl || baseUrl + '/v1/authorize';\n  userinfoUrl = userinfoUrl || baseUrl + '/v1/userinfo';\n  tokenUrl = tokenUrl || baseUrl + '/v1/token';\n  revokeUrl = revokeUrl || baseUrl + '/v1/revoke';\n  logoutUrl = logoutUrl || baseUrl + '/v1/logout';\n\n  return {\n    issuer: issuer,\n    authorizeUrl: authorizeUrl,\n    userinfoUrl: userinfoUrl,\n    tokenUrl: tokenUrl,\n    revokeUrl: revokeUrl,\n    logoutUrl: logoutUrl\n  };\n}\n","/* eslint-disable @typescript-eslint/no-non-null-assertion */\nimport { OAuthTransactionMeta, OktaAuthOAuthInterface, PKCETransactionMeta, TokenParams } from '../types';\nimport { getOAuthUrls } from './oauth';\n\nexport function createOAuthMeta(\n  sdk: OktaAuthOAuthInterface, \n  tokenParams: TokenParams\n): OAuthTransactionMeta | PKCETransactionMeta {\n  const issuer = sdk.options.issuer!;\n  const urls = getOAuthUrls(sdk, tokenParams);\n  const oauthMeta: OAuthTransactionMeta = {\n    issuer,\n    urls,\n    clientId: tokenParams.clientId!,\n    redirectUri: tokenParams.redirectUri!,\n    responseType: tokenParams.responseType!,\n    responseMode: tokenParams.responseMode!,\n    scopes: tokenParams.scopes!,\n    state: tokenParams.state!,\n    nonce: tokenParams.nonce!,\n    ignoreSignature: tokenParams.ignoreSignature!,\n    acrValues: tokenParams.acrValues,\n    extraParams: tokenParams.extraParams\n  };\n\n  if (tokenParams.pkce === false) {\n    // Implicit flow or authorization_code without PKCE\n    return oauthMeta;\n  }\n\n  const pkceMeta: PKCETransactionMeta = {\n    ...oauthMeta,\n    codeVerifier: tokenParams.codeVerifier!,\n    codeChallengeMethod: tokenParams.codeChallengeMethod!,\n    codeChallenge: tokenParams.codeChallenge!,\n  };\n\n  return pkceMeta;\n}\n","/*!\n * Copyright (c) 2019-present, Okta, Inc. and/or its affiliates. All rights reserved.\n * The Okta software accompanied by this notice is provided pursuant to the Apache License, Version 2.0 (the \"License.\")\n *\n * You may obtain a copy of the License at http://www.apache.org/licenses/LICENSE-2.0.\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT\n * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n *\n * See the License for the specific language governing permissions and limitations under the License.\n *\n */\n\n /* eslint-disable complexity, max-statements */\nimport { stringToBase64Url, webcrypto } from '../../crypto';\nimport { MIN_VERIFIER_LENGTH, MAX_VERIFIER_LENGTH, DEFAULT_CODE_CHALLENGE_METHOD } from '../../constants';\n\nfunction dec2hex (dec) {\n  return ('0' + dec.toString(16)).substr(-2);\n}\n\nfunction getRandomString(length) {\n  var a = new Uint8Array(Math.ceil(length / 2));\n  webcrypto.getRandomValues(a);\n  var str = Array.from(a, dec2hex).join('');\n  return str.slice(0, length);\n}\n\nfunction generateVerifier(prefix?: string): string {\n  var verifier = prefix || '';\n  if (verifier.length < MIN_VERIFIER_LENGTH) {\n    verifier = verifier + getRandomString(MIN_VERIFIER_LENGTH - verifier.length);\n  }\n  return encodeURIComponent(verifier).slice(0, MAX_VERIFIER_LENGTH);\n}\n\nfunction computeChallenge(str: string): PromiseLike<any> {  \n  var buffer = new TextEncoder().encode(str);\n  return webcrypto.subtle.digest('SHA-256', buffer).then(function(arrayBuffer) {\n    var hash = String.fromCharCode.apply(null, new Uint8Array(arrayBuffer) as unknown as number[]);\n    var b64u = stringToBase64Url(hash); // url-safe base64 variant\n    return b64u;\n  });\n}\n\nexport default {\n  DEFAULT_CODE_CHALLENGE_METHOD,\n  generateVerifier,\n  computeChallenge\n};\n","/* eslint-disable complexity */\n/*!\n * Copyright (c) 2015-present, Okta, Inc. and/or its affiliates. All rights reserved.\n * The Okta software accompanied by this notice is provided pursuant to the Apache License, Version 2.0 (the \"License.\")\n *\n * You may obtain a copy of the License at http://www.apache.org/licenses/LICENSE-2.0.\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT\n * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n *\n * See the License for the specific language governing permissions and limitations under the License.\n *\n */\nimport { AuthSdkError } from '../../errors';\nimport { OktaAuthOAuthInterface, EnrollAuthenticatorOptions } from '../types';\nimport { getDefaultEnrollAuthenticatorParams } from './defaultEnrollAuthenticatorParams';\n\nfunction prepareParams(\n  params: EnrollAuthenticatorOptions\n): EnrollAuthenticatorOptions {\n  params = {\n    ...params,\n    // forced params:\n    responseType: 'none',\n    prompt: 'enroll_authenticator',\n    maxAge: 0,\n  };\n\n  if (!params.enrollAmrValues) {\n    throw new AuthSdkError('enroll_amr_values must be specified');\n  }\n  if (!params.acrValues) {\n    // `acr_values` is required and should equal 'urn:okta:2fa:any:ifpossible'\n    // But this can be changed in future\n    throw new AuthSdkError('acr_values must be specified');\n  }\n\n  // `scope`, `nonce` must be omitted\n  delete params.scopes;\n  delete params.nonce;\n\n  return params;\n}\n\n// Prepares params for a call to /authorize\nexport function prepareEnrollAuthenticatorParams(\n  sdk: OktaAuthOAuthInterface,\n  options: EnrollAuthenticatorOptions\n): EnrollAuthenticatorOptions {\n  return prepareParams({\n    ...getDefaultEnrollAuthenticatorParams(sdk),\n    ...options\n  });\n}\n","/* eslint-disable complexity */\n/*!\n * Copyright (c) 2015-present, Okta, Inc. and/or its affiliates. All rights reserved.\n * The Okta software accompanied by this notice is provided pursuant to the Apache License, Version 2.0 (the \"License.\")\n *\n * You may obtain a copy of the License at http://www.apache.org/licenses/LICENSE-2.0.\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT\n * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n *\n * See the License for the specific language governing permissions and limitations under the License.\n *\n */\nimport { getWellKnown } from '../endpoints/well-known';\nimport { AuthSdkError } from '../../errors';\nimport { OktaAuthOAuthInterface, TokenParams } from '../types';\nimport { getDefaultTokenParams } from './defaultTokenParams';\nimport { DEFAULT_CODE_CHALLENGE_METHOD } from '../../constants';\nimport PKCE from './pkce';\nimport { OktaAuthBaseInterface } from '../../base/types';\n\nexport function assertPKCESupport(sdk: OktaAuthBaseInterface) {\n  if (!sdk.features.isPKCESupported()) {\n    var errorMessage = 'PKCE requires a modern browser with encryption support running in a secure context.';\n    if (!sdk.features.isHTTPS()) {\n      // eslint-disable-next-line max-len\n      errorMessage += '\\nThe current page is not being served with HTTPS protocol. PKCE requires secure HTTPS protocol.';\n    }\n    if (!sdk.features.hasTextEncoder()) {\n      // eslint-disable-next-line max-len\n      errorMessage += '\\n\"TextEncoder\" is not defined. To use PKCE, you may need to include a polyfill/shim for this browser.';\n    }\n    throw new AuthSdkError(errorMessage);\n  }\n}\n\nexport async function validateCodeChallengeMethod(sdk: OktaAuthOAuthInterface, codeChallengeMethod?: string) {\n  // set default code challenge method, if none provided\n  codeChallengeMethod = codeChallengeMethod || sdk.options.codeChallengeMethod || DEFAULT_CODE_CHALLENGE_METHOD;\n\n  // validate against .well-known/openid-configuration\n  const wellKnownResponse = await getWellKnown(sdk);\n  var methods = wellKnownResponse['code_challenge_methods_supported'] || [];\n  if (methods.indexOf(codeChallengeMethod) === -1) {\n    throw new AuthSdkError('Invalid code_challenge_method');\n  }\n  return codeChallengeMethod;\n}\n\nexport async function preparePKCE(\n  sdk: OktaAuthOAuthInterface, \n  tokenParams: TokenParams\n): Promise<TokenParams> {\n  let {\n    codeVerifier,\n    codeChallenge,\n    codeChallengeMethod\n  } = tokenParams;\n\n  // PKCE calculations can be avoided by passing a codeChallenge\n  codeChallenge = codeChallenge || sdk.options.codeChallenge;\n  if (!codeChallenge) {\n    assertPKCESupport(sdk);\n    codeVerifier = codeVerifier || PKCE.generateVerifier();\n    codeChallenge = await PKCE.computeChallenge(codeVerifier);\n  }\n  codeChallengeMethod = await validateCodeChallengeMethod(sdk, codeChallengeMethod);\n\n  // Clone/copy the params. Set PKCE values\n  tokenParams = {\n    ...tokenParams,\n    responseType: 'code', // responseType is forced\n    codeVerifier,\n    codeChallenge,\n    codeChallengeMethod\n  };\n\n  return tokenParams;\n}\n\n// Prepares params for a call to /authorize or /token\nexport async function prepareTokenParams(\n  sdk: OktaAuthOAuthInterface,\n  tokenParams: TokenParams = {}\n): Promise<TokenParams> {\n  // build params using defaults + options\n  const defaults = getDefaultTokenParams(sdk);\n  tokenParams = { ...defaults, ...tokenParams };\n\n  if (tokenParams.dpop && !sdk.features.isDPoPSupported()) {\n    throw new AuthSdkError('DPoP has been configured, but is not supported by browser');\n  }\n\n  if (tokenParams.pkce === false) {\n    // Implicit flow or authorization_code without PKCE\n    return tokenParams;\n  }\n\n  return preparePKCE(sdk, tokenParams);\n}","import { RefreshToken } from '../types';\nimport { isAuthApiError } from '../../errors';\n\nexport function isSameRefreshToken(a: RefreshToken, b: RefreshToken) {\n  return (a.refreshToken === b.refreshToken);\n}\n\nexport function isRefreshTokenError(err: Error) {\n  if (!isAuthApiError(err)) {\n    return false;\n  }\n\n  if (!err.xhr || !err.xhr.responseJSON) {\n    return false;\n  }\n\n  const { responseJSON } = err.xhr;\n  if (responseJSON.error === 'invalid_grant') {\n    return true;\n  }\n\n  return false;\n}","/*!\n * Copyright (c) 2015-present, Okta, Inc. and/or its affiliates. All rights reserved.\n * The Okta software accompanied by this notice is provided pursuant to the Apache License, Version 2.0 (the \"License.\")\n *\n * You may obtain a copy of the License at http://www.apache.org/licenses/LICENSE-2.0.\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT\n * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n *\n * See the License for the specific language governing permissions and limitations under the License.\n *\n */\n/* eslint-disable complexity, max-statements */\n\nexport function urlParamsToObject(hashOrSearch: string) {\n  // Predefine regexs for parsing hash\n  var plus2space = /\\+/g;\n  var paramSplit = /([^&=]+)=?([^&]*)/g;\n  var fragment = hashOrSearch || '';\n\n  // Some hash based routers will automatically add a / character after the hash\n  if (fragment.charAt(0) === '#' && fragment.charAt(1) === '/') {\n    fragment = fragment.substring(2);\n  }\n\n  // Remove the leading # or ?\n  if (fragment.charAt(0) === '#' || fragment.charAt(0) === '?') {\n    fragment = fragment.substring(1);\n  }\n\n\n  var obj = {};\n\n  // Loop until we have no more params\n  var param;\n  while (true) { // eslint-disable-line no-constant-condition\n    param = paramSplit.exec(fragment);\n    if (!param) { break; }\n\n    var key = param[1];\n    var value = param[2];\n\n    // id_token should remain base64url encoded\n    if (key === 'id_token' || key === 'access_token' || key === 'code') {\n      obj[key] = value;\n    } else {\n      obj[key] = decodeURIComponent(value.replace(plus2space, ' '));\n    }\n  }\n  return obj;\n}\n","/* eslint-disable @typescript-eslint/no-non-null-assertion */\n/*!\n * Copyright (c) 2015-present, Okta, Inc. and/or its affiliates. All rights reserved.\n * The Okta software accompanied by this notice is provided pursuant to the Apache License, Version 2.0 (the \"License.\")\n *\n * You may obtain a copy of the License at http://www.apache.org/licenses/LICENSE-2.0.\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT\n * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n *\n * See the License for the specific language governing permissions and limitations under the License.\n *\n */\n/* eslint-disable complexity, max-statements */\n\nimport AuthSdkError from '../../errors/AuthSdkError';\nimport { OktaAuthOAuthInterface, TokenVerifyParams, UserClaims } from '../../oidc/types';\n\nexport function validateClaims(sdk: OktaAuthOAuthInterface, claims: UserClaims, validationParams: TokenVerifyParams) {\n  const aud = validationParams.clientId;\n  const iss = validationParams.issuer;\n  const nonce = validationParams.nonce;\n  const acr = validationParams.acrValues;\n\n  if (!claims || !iss || !aud) {\n    throw new AuthSdkError('The jwt, iss, and aud arguments are all required');\n  }\n\n  if (nonce && claims.nonce !== nonce) {\n    throw new AuthSdkError('OAuth flow response nonce doesn\\'t match request nonce');\n  }\n\n  const now = Math.floor(Date.now()/1000);\n\n  if (claims.iss !== iss) {\n    throw new AuthSdkError('The issuer [' + claims.iss + '] ' +\n      'does not match [' + iss + ']');\n  }\n\n  if ((Array.isArray(claims.aud) && claims.aud.indexOf(aud) < 0) ||\n    (!Array.isArray(claims.aud) && claims.aud !== aud))\n  {\n    throw new AuthSdkError('The audience [' + claims.aud + '] ' +\n      'does not match [' + aud + ']');\n  }\n\n  if (acr && claims.acr !== acr) {\n    throw new AuthSdkError('The acr [' + claims.acr + '] ' +\n      'does not match acr_values [' + acr + ']');\n  }\n\n  if (claims.iat! > claims.exp!) {\n    throw new AuthSdkError('The JWT expired before it was issued');\n  }\n\n  if (!sdk.options.ignoreLifetime) {\n    if ((now - sdk.options.maxClockSkew!) > claims.exp!) {\n      throw new AuthSdkError('The JWT expired and is no longer valid');\n    }\n\n    if (claims.iat! > (now + sdk.options.maxClockSkew!)) {\n      throw new AuthSdkError('The JWT was issued in the future');\n    }\n  }\n}\n","/* eslint-disable complexity */\n\nimport { AuthSdkError } from '../../errors';\nimport { isAccessToken, isIDToken, isRefreshToken, Token, TokenType } from '../../oidc/types';\n\nexport function validateToken(token: Token, type?: TokenType) {\n  if (!isIDToken(token) && !isAccessToken(token) && !isRefreshToken(token)) {\n    throw new AuthSdkError(\n      'Token must be an Object with scopes, expiresAt, and one of: an idToken, accessToken, or refreshToken property'\n    );\n  }\n  \n  if (type === 'accessToken' && !isAccessToken(token)) {\n    throw new AuthSdkError('invalid accessToken');\n  } \n  if (type === 'idToken' && !isIDToken(token)) {\n    throw new AuthSdkError('invalid idToken');\n  }\n\n  if (type === 'refreshToken' && !isRefreshToken(token)) {\n    throw new AuthSdkError('invalid refreshToken');\n  }\n}","/* eslint-disable max-len */\n/* eslint-disable complexity */\n/*!\n * Copyright (c) 2015-present, Okta, Inc. and/or its affiliates. All rights reserved.\n * The Okta software accompanied by this notice is provided pursuant to the Apache License, Version 2.0 (the \"License.\")\n *\n * You may obtain a copy of the License at http://www.apache.org/licenses/LICENSE-2.0.\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT\n * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n *\n * See the License for the specific language governing permissions and limitations under the License.\n *\n */\nimport { getWellKnown, getKey } from './endpoints/well-known';\nimport { validateClaims } from './util';\nimport { AuthSdkError } from '../errors';\nimport { IDToken, OktaAuthOAuthInterface, TokenVerifyParams } from '../oidc/types';\nimport { decodeToken } from './decodeToken';\nimport * as sdkCrypto from '../crypto';\n\n// Verify the id token\nexport async function verifyToken(sdk: OktaAuthOAuthInterface, token: IDToken, validationParams: TokenVerifyParams): Promise<IDToken> {\n  if (!token || !token.idToken) {\n    throw new AuthSdkError('Only idTokens may be verified');\n  }\n\n  // Decode the Jwt object (may throw)\n  const jwt = decodeToken(token.idToken);\n\n  // The configured issuer may point to a frontend proxy.\n  // Get the \"real\" issuer from .well-known/openid-configuration\n  const configuredIssuer = validationParams?.issuer || sdk.options.issuer;\n  const { issuer } = await getWellKnown(sdk, configuredIssuer);\n\n  const validationOptions: TokenVerifyParams = Object.assign({\n    // base options, can be overridden by params\n    clientId: sdk.options.clientId,\n    ignoreSignature: sdk.options.ignoreSignature\n  }, validationParams, {\n    // final options, cannot be overridden\n    issuer\n  });\n\n  // Standard claim validation (may throw)\n  validateClaims(sdk, jwt.payload, validationOptions);\n\n  // If the browser doesn't support native crypto or we choose not\n  // to verify the signature, bail early\n  if (validationOptions.ignoreSignature == true || !sdk.features.isTokenVerifySupported()) {\n    return token;\n  }\n\n  // eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n  const key = await getKey(sdk, token.issuer, jwt.header.kid!);\n  const valid = await sdkCrypto.verifyToken(token.idToken, key);\n  if (!valid) {\n    throw new AuthSdkError('The token signature is not valid');\n  }\n  if (validationParams && validationParams.accessToken && token.claims.at_hash) {\n    const hash = await sdkCrypto.getOidcHash(validationParams.accessToken);\n    if (hash !== token.claims.at_hash) {\n      throw new AuthSdkError('Token hash verification failed');\n    }\n  }\n  return token;\n}\n","/*!\n * Copyright (c) 2015-present, Okta, Inc. and/or its affiliates. All rights reserved.\n * The Okta software accompanied by this notice is provided pursuant to the Apache License, Version 2.0 (the \"License.\")\n *\n * You may obtain a copy of the License at http://www.apache.org/licenses/LICENSE-2.0.\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT\n * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n *\n * See the License for the specific language governing permissions and limitations under the License.\n *\n */\n/* global window */\nimport { omit, getLink, toQueryString } from '../util';\nimport { get, post, httpRequest } from '../http';\n\nfunction sessionExists(sdk) {\n  return sdk.session.get()\n    .then(function(res) {\n      if (res.status === 'ACTIVE') {\n        return true;\n      }\n      return false;\n    })\n    .catch(function() {\n      return false;\n    });\n}\n\nfunction getSession(sdk) { \n  return get(sdk, '/api/v1/sessions/me', { withCredentials: true })\n  .then(function(session) {\n    var res = omit(session, '_links');\n\n    res.refresh = function() {\n      return post(sdk, getLink(session, 'refresh').href, {}, { withCredentials: true });\n    };\n\n    res.user = function() {\n      return get(sdk, getLink(session, 'user').href, { withCredentials: true });\n    };\n\n    return res;\n  })\n  .catch(function() {\n    // Return INACTIVE status on failure\n    return {status: 'INACTIVE'};\n  });\n}\n\nfunction closeSession(sdk) {\n  return httpRequest(sdk, {\n    url: sdk.getIssuerOrigin() + '/api/v1/sessions/me',\n    method: 'DELETE',\n    withCredentials: true\n  });\n}\n\nfunction refreshSession(sdk) {\n  return post(sdk, '/api/v1/sessions/me/lifecycle/refresh', {}, { withCredentials: true });\n}\n\nfunction setCookieAndRedirect(sdk, sessionToken, redirectUrl) {\n  redirectUrl = redirectUrl || window.location.href;\n  window.location.assign(sdk.getIssuerOrigin() + '/login/sessionCookieRedirect' +\n    toQueryString({\n      checkAccountSetupComplete: true,\n      token: sessionToken,\n      redirectUrl: redirectUrl\n    }));\n}\n\nexport {\n  sessionExists,\n  getSession,\n  closeSession,\n  refreshSession,\n  setCookieAndRedirect\n};\n","import { SessionAPI } from './types';\nimport { closeSession, getSession, refreshSession, sessionExists, setCookieAndRedirect } from './api';\nimport { OktaAuthBaseInterface } from '../base/types';\n\nexport function createSessionApi(sdk: OktaAuthBaseInterface): SessionAPI {\n  const session = {\n    close: closeSession.bind(null, sdk),\n    exists: sessionExists.bind(null, sdk),\n    get: getSession.bind(null, sdk),\n    refresh: refreshSession.bind(null, sdk),\n    setCookieAndRedirect: setCookieAndRedirect.bind(null, sdk)\n  };\n  return session;\n}\n","import { OktaAuthHttpInterface, OktaAuthHttpOptions } from '../http/types';\nimport { OktaAuthConstructor } from '../base/types';\nimport { createSessionApi } from './factory';\nimport {\n  OktaAuthSessionInterface, SessionAPI,\n} from './types';\nimport { StorageManagerInterface } from '../storage/types';\n\nexport function mixinSession\n<\n  S extends StorageManagerInterface = StorageManagerInterface,\n  O extends OktaAuthHttpOptions = OktaAuthHttpOptions,\n  TBase extends OktaAuthConstructor<OktaAuthHttpInterface<S, O>>\n    = OktaAuthConstructor<OktaAuthHttpInterface<S, O>>\n>\n(Base: TBase): TBase & OktaAuthConstructor<OktaAuthSessionInterface<S, O>>\n{\n  return class OktaAuthSession extends Base implements OktaAuthSessionInterface<S, O>\n  {\n    session: SessionAPI;\n\n    constructor(...args: any[]) {\n      super(...args);\n\n      this.session = createSessionApi(this);\n    }\n\n    // Ends the current Okta SSO session without redirecting to Okta.\n    closeSession(): Promise<boolean> {\n      return this.session.close() // DELETE /api/v1/sessions/me\n      .then(async () => {\n        // Clear all local tokens\n        this.clearStorage();\n        return true;\n      })\n      .catch(function(e) {\n        if (e.name === 'AuthApiError' && e.errorCode === 'E0000007') {\n          // Session does not exist or has already been closed\n          return false;\n        }\n        throw e;\n      });\n    }\n  };\n}\n","/*!\n * Copyright (c) 2015-present, Okta, Inc. and/or its affiliates. All rights reserved.\n * The Okta software accompanied by this notice is provided pursuant to the Apache License, Version 2.0 (the \"License.\")\n *\n * You may obtain a copy of the License at http://www.apache.org/licenses/LICENSE-2.0.\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT\n * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * \n * See the License for the specific language governing permissions and limitations under the License.\n */\n\n\n\nimport {\n  TOKEN_STORAGE_NAME,\n  CACHE_STORAGE_NAME,\n} from '../constants';\nimport {\n  StorageUtil,\n  StorageProvider,\n  StorageOptions,\n  CookieOptions,\n  StorageManagerOptions,\n  SimpleStorage,\n  StorageManagerInterface\n} from './types';\nimport { SavedObject } from './SavedObject';\nimport { isBrowser } from '../features';\nimport { warn } from '../util';\n\nexport function logServerSideMemoryStorageWarning(options: StorageOptions) {\n  if (!isBrowser() && !options.storageProvider && !options.storageKey) {\n    // eslint-disable-next-line max-len\n    warn('Memory storage can only support simple single user use case on server side, please provide custom storageProvider or storageKey if advanced scenarios need to be supported.');\n  }\n}\n\n\nexport class BaseStorageManager implements StorageManagerInterface {\n  storageManagerOptions: StorageManagerOptions;\n  cookieOptions: CookieOptions;\n  storageUtil: StorageUtil;\n\n  constructor(storageManagerOptions: StorageManagerOptions, cookieOptions: CookieOptions, storageUtil: StorageUtil) {\n    this.storageManagerOptions = storageManagerOptions;\n    this.cookieOptions = cookieOptions;\n    this.storageUtil = storageUtil;\n  }\n\n  // combines defaults in order\n  getOptionsForSection(sectionName: string, overrideOptions?: StorageOptions) {\n    return Object.assign({}, this.storageManagerOptions[sectionName], overrideOptions);\n  }\n \n  // generic method to get any available storage provider\n  // eslint-disable-next-line complexity\n  getStorage(options: StorageOptions): SimpleStorage {\n    options = Object.assign({}, this.cookieOptions, options); // set defaults\n\n    if (options.storageProvider) {\n      return options.storageProvider;\n    }\n\n    let { storageType, storageTypes } = options;\n\n    if(storageType === 'sessionStorage') {\n      options.sessionCookie = true;\n    }\n\n    // If both storageType and storageTypes are specified, then storageType will be used first\n    // If storageType cannot be used but it matches an entry in storageTypes, subsequent entries may be used as fallback\n    // if storageType does not match an entry in storageTypes then storageType is used with no fallback.\n    if (storageType && storageTypes) {\n      const idx = storageTypes.indexOf(storageType);\n      if (idx >= 0) {\n        storageTypes = storageTypes.slice(idx);\n        storageType = undefined;\n      }\n    }\n\n    if (!storageType) {\n      // eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n      storageType = this.storageUtil.findStorageType(storageTypes!);\n    }\n    return this.storageUtil.getStorageByType(storageType, options);\n  }\n\n  // access_token, id_token, refresh_token\n  getTokenStorage(options?: StorageOptions): StorageProvider {\n    options = this.getOptionsForSection('token', options);\n    logServerSideMemoryStorageWarning(options);\n    const storage = this.getStorage(options);\n    const storageKey = options.storageKey || TOKEN_STORAGE_NAME;\n    return new SavedObject(storage, storageKey);\n  }\n\n  // caches well-known response, among others\n  getHttpCache(options?: StorageOptions): StorageProvider {\n    options = this.getOptionsForSection('cache', options);\n    const storage = this.getStorage(options);\n    const storageKey = options.storageKey || CACHE_STORAGE_NAME;\n    return new SavedObject(storage, storageKey);\n  }\n\n}\n","/*!\n * Copyright (c) 2015-present, Okta, Inc. and/or its affiliates. All rights reserved.\n * The Okta software accompanied by this notice is provided pursuant to the Apache License, Version 2.0 (the \"License.\")\n *\n * You may obtain a copy of the License at http://www.apache.org/licenses/LICENSE-2.0.\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT\n * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n *\n * See the License for the specific language governing permissions and limitations under the License.\n *\n */\n\nimport AuthSdkError from '../errors/AuthSdkError';\nimport { StorageProvider, SimpleStorage } from './types';\n\n// formerly known as \"storageBuilder\". Represents an object saved under a key/name.\nexport class SavedObject implements StorageProvider {\n  storageProvider: SimpleStorage;\n  storageName: string;\n\n  constructor(storage: SimpleStorage, storageName: string) {\n    if (!storage) {\n      throw new AuthSdkError('\"storage\" is required');\n    }\n\n    if (typeof storageName !== 'string' || !storageName.length) {\n      throw new AuthSdkError('\"storageName\" is required');\n    }\n\n    this.storageName = storageName;\n    this.storageProvider = storage;\n  }\n\n  //\n  // SimpleStorage interface\n  //\n\n  getItem(key: string) {\n    return this.getStorage()[key];\n  }\n\n  setItem(key: string, value: any) {\n    return this.updateStorage(key, value);\n  }\n\n  removeItem(key: string) {\n    return this.clearStorage(key);\n  }\n\n  //\n  // StorageProvider interface\n  //\n\n  getStorage() {\n    var storageString = this.storageProvider.getItem(this.storageName);\n    storageString = storageString || '{}';\n    try {\n      return JSON.parse(storageString);\n    } catch(e) {\n      throw new AuthSdkError('Unable to parse storage string: ' + this.storageName);\n    }\n  }\n\n  setStorage(obj?: any) {\n    try {\n      var storageString = obj ? JSON.stringify(obj) : '{}';\n      this.storageProvider.setItem(this.storageName, storageString);\n    } catch(e) {\n      throw new AuthSdkError('Unable to set storage: ' + this.storageName);\n    }\n  }\n\n  clearStorage(key?: string) {\n    if (!key) {\n      // clear all\n      if (this.storageProvider.removeItem) {\n        this.storageProvider.removeItem(this.storageName);\n      } else {\n        this.setStorage();\n      }\n      return;\n    }\n\n    var obj = this.getStorage();\n    delete obj[key];\n    this.setStorage(obj);\n  }\n\n  updateStorage(key, value) {\n    var obj = this.getStorage();\n    obj[key] = value;\n    this.setStorage(obj);\n  }\n}\n","import { OktaAuthBaseInterface, OktaAuthConstructor } from '../base/types';\nimport {\n  OktaAuthStorageInterface,\n  OktaAuthStorageOptions,\n  StorageManagerConstructor,\n  StorageManagerInterface,\n} from './types';\n\nexport function mixinStorage\n<\n  S extends StorageManagerInterface = StorageManagerInterface,\n  O extends OktaAuthStorageOptions = OktaAuthStorageOptions,\n  TBase extends OktaAuthConstructor<OktaAuthBaseInterface<O>> = OktaAuthConstructor<OktaAuthBaseInterface<O>>\n>\n(\n  Base: TBase, StorageManager: StorageManagerConstructor<S>\n): TBase & OktaAuthConstructor<OktaAuthStorageInterface<S, O>>\n{\n  return class OktaAuthStorage extends Base implements OktaAuthStorageInterface<S, O>\n  {\n    storageManager: S;\n    constructor(...args: any[]) {\n      super(...args);\n      const { storageManager, cookies, storageUtil } = this.options;\n      this.storageManager = new StorageManager(storageManager!, cookies!, storageUtil!);\n    }\n    clearStorage(): void {\n      // override in subclass\n    }\n  };\n}\n","/*!\n * Copyright (c) 2015-present, Okta, Inc. and/or its affiliates. All rights reserved.\n * The Okta software accompanied by this notice is provided pursuant to the Apache License, Version 2.0 (the \"License.\")\n *\n * You may obtain a copy of the License at http://www.apache.org/licenses/LICENSE-2.0.\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT\n * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * \n * See the License for the specific language governing permissions and limitations under the License.\n */\n\n/* eslint-disable complexity */\nimport { StorageManagerOptions, StorageUtil, OktaAuthStorageOptions } from '../types';\nimport { warn } from '../../util';\n\nimport { default as browserStorage } from '../../browser/browserStorage';\n\nexport function getStorage(): StorageUtil {\n  const storageUtil = Object.assign({}, browserStorage, {\n    inMemoryStore: {} // create unique storage for this instance\n  });\n  return storageUtil;\n}\n\nexport const STORAGE_MANAGER_OPTIONS: StorageManagerOptions = {\n  token: {\n    storageTypes: [\n      'localStorage',\n      'sessionStorage',\n      'cookie'\n    ]\n  },\n  cache: {\n    storageTypes: [\n      'localStorage',\n      'sessionStorage',\n      'cookie'\n    ]\n  },\n  transaction: {\n    storageTypes: [\n      'sessionStorage',\n      'localStorage',\n      'cookie'\n    ]\n  },\n  'shared-transaction': {\n    storageTypes: [\n      'localStorage'\n    ]\n  },\n  'original-uri': {\n    storageTypes: [\n      'localStorage'\n    ]\n  }\n};\n\nexport function getCookieSettings(args: OktaAuthStorageOptions = {}, isHTTPS: boolean) {\n  // Secure cookies will be automatically used on a HTTPS connection\n  // Non-secure cookies will be automatically used on a HTTP connection\n  // secure option can override the automatic behavior\n  var cookieSettings = args.cookies || {};\n  if (typeof cookieSettings.secure === 'undefined') {\n    cookieSettings.secure = isHTTPS;\n  }\n  if (typeof cookieSettings.sameSite === 'undefined') {\n    cookieSettings.sameSite = cookieSettings.secure ? 'none' : 'lax';\n  }\n\n  // If secure=true, but the connection is not HTTPS, set secure=false.\n  if (cookieSettings.secure && !isHTTPS) {\n    // eslint-disable-next-line no-console\n    warn(\n      'The current page is not being served with the HTTPS protocol.\\n' +\n      'For security reasons, we strongly recommend using HTTPS.\\n' +\n      'If you cannot use HTTPS, set \"cookies.secure\" option to false.'\n    );\n    cookieSettings.secure = false;\n  }\n\n  // Chrome >= 80 will block cookies with SameSite=None unless they are also Secure\n  // If sameSite=none, but the connection is not HTTPS, set sameSite=lax.\n  if (cookieSettings.sameSite === 'none' && !cookieSettings.secure) {\n    cookieSettings.sameSite = 'lax';\n  }\n\n  return cookieSettings;\n}\n","/*!\n * Copyright (c) 2015-present, Okta, Inc. and/or its affiliates. All rights reserved.\n * The Okta software accompanied by this notice is provided pursuant to the Apache License, Version 2.0 (the \"License.\")\n *\n * You may obtain a copy of the License at http://www.apache.org/licenses/LICENSE-2.0.\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT\n * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * \n * See the License for the specific language governing permissions and limitations under the License.\n */\n\nimport { createBaseOptionsConstructor } from '../../base';\nimport { CookieOptions, OktaAuthStorageOptions, StorageManagerOptions, StorageUtil } from '../types';\nimport { getStorage, STORAGE_MANAGER_OPTIONS, getCookieSettings } from './node';\nimport { isHTTPS } from '../../features';\n\nexport function createStorageOptionsConstructor() {\n\n  const BaseOptionsConstructor = createBaseOptionsConstructor();\n  return class StorageOptionsConstructor extends BaseOptionsConstructor implements Required<OktaAuthStorageOptions> {\n    cookies: CookieOptions;\n    storageUtil: StorageUtil;\n    storageManager: StorageManagerOptions;\n    \n    constructor(args: any) {\n      super(args);\n      this.cookies = getCookieSettings(args, isHTTPS())!;\n      this.storageUtil = args.storageUtil || getStorage();\n      this.storageManager = { ...STORAGE_MANAGER_OPTIONS, ...args.storageManager };\n    }\n  };\n}\n","/*!\n * Copyright (c) 2015-present, Okta, Inc. and/or its affiliates. All rights reserved.\n * The Okta software accompanied by this notice is provided pursuant to the Apache License, Version 2.0 (the \"License.\")\n *\n * You may obtain a copy of the License at http://www.apache.org/licenses/LICENSE-2.0.\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT\n * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n *\n * See the License for the specific language governing permissions and limitations under the License.\n */\n\n// Implements a queue for synchronous or asynchronous methods\n// Methods will be wrapped in a promise and execute sequentially\n// This can be used to prevent concurrent calls to a single method or a set of methods\n\nimport { isPromise } from './types';\nimport { warn } from './console';\n\ninterface QueueItem {\n  method: () => void;\n  thisObject: object;\n  args: any[];\n  resolve: (value?: unknown) => void;\n  reject: (reason?: unknown) => void;\n}\n\ninterface PromiseQueueOptions {\n  quiet?: boolean; // if false, concurrrency warnings will not be logged\n}\nexport class PromiseQueue {\n  queue: QueueItem[];\n  running: boolean;\n  options: PromiseQueueOptions;\n\n  constructor(options: PromiseQueueOptions = { quiet: false }) {\n    this.queue = [];\n    this.running = false;\n    this.options = options;\n  }\n\n  // Returns a promise\n  // If the method is synchronous, it will resolve when the method completes\n  // If the method returns a promise, it will resolve (or reject) with the value from the method's promise\n  push(method: (...args: any) => any, thisObject: any, ...args: any[]) {\n    return new Promise((resolve, reject) => {\n      if (this.queue.length > 0) {\n        // There is at least one other pending call.\n        // The PromiseQueue will prevent these methods from running concurrently.\n        if (this.options.quiet !== false) {\n          warn(\n            'Async method is being called but another async method is already running. ' +\n            'The new method will be delayed until the previous method completes.'\n          );\n        }\n      }\n      this.queue.push({\n        method,\n        thisObject,\n        args,\n        resolve,\n        reject\n      });\n      this.run();\n    });\n  }\n\n  run() {\n    if (this.running) {\n      return;\n    }\n    if (this.queue.length === 0) {\n      return;\n    }\n    this.running = true;\n    // eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n    var queueItem = this.queue.shift()!;\n    var res = queueItem.method.apply(queueItem.thisObject, queueItem.args as never) as unknown;\n    if (isPromise(res)) {\n      (res as Promise<unknown>).then(queueItem.resolve, queueItem.reject).finally(() => {\n        this.running = false;\n        this.run();\n      });\n    } else {\n      queueItem.resolve(res);\n      this.running = false;\n      this.run();\n    }\n  }\n}\n","/*!\n * Copyright (c) 2015-present, Okta, Inc. and/or its affiliates. All rights reserved.\n * The Okta software accompanied by this notice is provided pursuant to the Apache License, Version 2.0 (the \"License.\")\n *\n * You may obtain a copy of the License at http://www.apache.org/licenses/LICENSE-2.0.\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT\n * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n *\n * See the License for the specific language governing permissions and limitations under the License.\n */\n/* global window */\n\nexport function getNativeConsole() {\n  if (typeof window !== 'undefined') {\n    return window.console;\n  } else if (typeof console !== 'undefined') {\n    return console;\n  } else {\n    return undefined;\n  }\n}\n\nexport function getConsole() {\n  var nativeConsole = getNativeConsole();\n  // eslint-disable-next-line @typescript-eslint/ban-ts-comment\n  // @ts-ignore\n  if (nativeConsole && nativeConsole.log) {\n    return nativeConsole;\n  }\n  return {\n    log: function() {},\n    warn: function() {},\n    group: function() {},\n    groupEnd: function() {}\n  };\n}\n\nexport function warn(text) {\n  /* eslint-disable no-console */\n  getConsole().warn('[okta-auth-sdk] WARN: ' + text);\n  /* eslint-enable */\n}\n\nexport function deprecate(text) {\n  /* eslint-disable no-console */\n  getConsole().warn('[okta-auth-sdk] DEPRECATION: ' + text);\n  /* eslint-enable */\n}\n\nexport function deprecateWrap(text, fn) {\n  return function() {\n    deprecate(text);\n    return fn.apply(null, arguments);\n  };\n}\n\n","/*!\n * Copyright (c) 2015-present, Okta, Inc. and/or its affiliates. All rights reserved.\n * The Okta software accompanied by this notice is provided pursuant to the Apache License, Version 2.0 (the \"License.\")\n *\n * You may obtain a copy of the License at http://www.apache.org/licenses/LICENSE-2.0.\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT\n * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n *\n * See the License for the specific language governing permissions and limitations under the License.\n */\n\nexport function isoToUTCString(str) {\n  var parts = str.match(/\\d+/g),\n      isoTime = Date.UTC(parts[0], parts[1] - 1, parts[2], parts[3], parts[4], parts[5]),\n      isoDate = new Date(isoTime);\n\n  return isoDate.toUTCString();\n}\n\nexport function genRandomString(length) {\n  var randomCharset = 'abcdefghijklnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ0123456789';\n  var random = '';\n  for (var c = 0, cl = randomCharset.length; c < length; ++c) {\n    random += randomCharset[Math.floor(Math.random() * cl)];\n  }\n  return random;\n}\n\nexport function delay(ms) {\n  return new Promise(function(resolve) {\n    setTimeout(resolve, ms);\n  });\n}\n\nexport function split2(str, delim) {\n  const parts = str.split(delim);\n  return [\n    parts[0], \n    parts.splice(1, parts.length).join(delim),\n  ];\n}\n","/*!\n * Copyright (c) 2015-present, Okta, Inc. and/or its affiliates. All rights reserved.\n * The Okta software accompanied by this notice is provided pursuant to the Apache License, Version 2.0 (the \"License.\")\n *\n * You may obtain a copy of the License at http://www.apache.org/licenses/LICENSE-2.0.\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT\n * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n *\n * See the License for the specific language governing permissions and limitations under the License.\n */\n\nexport function bind(fn, ctx) {\n  var additionalArgs = Array.prototype.slice.call(arguments, 2);\n  return function() {\n    var args = Array.prototype.slice.call(arguments);\n    args = additionalArgs.concat(args);\n    return fn.apply(ctx, args);\n  };\n}\n\n// TODO: replace all references with `Object.assign` then remove this function\nexport function extend() {\n  // First object will be modified!\n  var obj1 = arguments[0];\n  // Properties from other objects will be copied over\n  var objArray = [].slice.call(arguments, 1);\n  objArray.forEach(function(obj) {\n    for (var prop in obj) {\n      // copy over all properties with defined values\n      if (Object.prototype.hasOwnProperty.call(obj, prop) && obj[prop] !== undefined) {\n        obj1[prop] = obj[prop];\n      }\n    }\n  });\n  return obj1; // return the modified object\n}\n\nexport function removeNils(obj) {\n  var cleaned = {};\n  for (var prop in obj) {\n    if (Object.prototype.hasOwnProperty.call(obj, prop)) {\n      var value = obj[prop];\n      if (value !== null && value !== undefined) {\n        cleaned[prop] = value;\n      }\n    }\n  }\n  return cleaned;\n}\n\nexport function clone(obj) {\n  if (obj) {\n    var str = JSON.stringify(obj);\n    if (str) {\n      return JSON.parse(str);\n    }\n  }\n  return obj;\n}\n\n// Analogous to _.omit\nexport function omit(obj, ...props: any[]) {\n  // var props = Array.prototype.slice.call(arguments, 1);\n  var newobj = {};\n  for (var p in obj) {\n    if (Object.prototype.hasOwnProperty.call(obj, p) && props.indexOf(p) == -1) {\n      newobj[p] = obj[p];\n    }\n  }\n  return clone(newobj);\n}\n\nexport function find(collection, searchParams) {\n  var c = collection.length;\n  while (c--) {\n    var item = collection[c];\n    var found = true;\n    for (var prop in searchParams) {\n      if (!Object.prototype.hasOwnProperty.call(searchParams, prop)) {\n        continue;\n      }\n      if (item[prop] !== searchParams[prop]) {\n        found = false;\n        break;\n      }\n    }\n    if (found) {\n      return item;\n    }\n  }\n}\n\nexport function getLink(obj, linkName, altName?) {\n  if (!obj || !obj._links) {\n    return;\n  }\n\n  var link = clone(obj._links[linkName]);\n\n  // If a link has a name and we have an altName, return if they match\n  if (link && link.name && altName) {\n    if (link.name === altName) {\n      return link;\n    }\n  } else {\n    return link;\n  }\n}\n\n","/*!\n * Copyright (c) 2015-present, Okta, Inc. and/or its affiliates. All rights reserved.\n * The Okta software accompanied by this notice is provided pursuant to the Apache License, Version 2.0 (the \"License.\")\n *\n * You may obtain a copy of the License at http://www.apache.org/licenses/LICENSE-2.0.\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT\n * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n *\n * See the License for the specific language governing permissions and limitations under the License.\n */\n\nexport function isString(obj: any): obj is string {\n  return Object.prototype.toString.call(obj) === '[object String]';\n}\n\nexport function isObject(obj: any): obj is object {\n  return Object.prototype.toString.call(obj) === '[object Object]';\n}\n\nexport function isNumber(obj: any): obj is number {\n  return Object.prototype.toString.call(obj) === '[object Number]';\n}\n\nexport function isFunction(fn: any): fn is (...any: any[]) => any {\n  return !!fn && {}.toString.call(fn) === '[object Function]';\n}\n\nexport function isPromise(obj) {\n  return obj && obj.finally && (typeof obj.finally === 'function');\n}\n","/*!\n * Copyright (c) 2015-present, Okta, Inc. and/or its affiliates. All rights reserved.\n * The Okta software accompanied by this notice is provided pursuant to the Apache License, Version 2.0 (the \"License.\")\n *\n * You may obtain a copy of the License at http://www.apache.org/licenses/LICENSE-2.0.\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT\n * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n *\n * See the License for the specific language governing permissions and limitations under the License.\n */\n\nexport function isAbsoluteUrl(url) {\n  return /^[a-z][a-z0-9+.-]*:/i.test(url);\n}\n\nexport function toAbsoluteUrl(url = '', baseUrl) {\n  if (isAbsoluteUrl(url)) {\n    return url;\n  }\n  baseUrl = removeTrailingSlash(baseUrl);\n  return url[0] === '/' ? `${baseUrl}${url}` : `${baseUrl}/${url}`;\n}\n\nexport function toRelativeUrl(url = '', baseUrl) {\n  if (isAbsoluteUrl(url)) {\n    url = url.substring(baseUrl.length);\n  }\n\n  return url[0] === '/' ? url : `/${url}`;\n}\n\nexport function toQueryString(obj) {\n  var str = [];\n  if (obj !== null) {\n    for (var key in obj) {\n      if (Object.prototype.hasOwnProperty.call(obj, key) &&\n          obj[key] !== undefined &&\n          obj[key] !== null) {\n        str.push(key + '=' + encodeURIComponent(obj[key]) as never);\n      }\n    }\n  }\n  if (str.length) {\n    return '?' + str.join('&');\n  } else {\n    return '';\n  }\n}\n\nexport function removeTrailingSlash(path) {\n  if (!path) {\n    return;\n  }\n  // Remove any whitespace before or after string\n  var trimmed = path.replace(/^\\s+|\\s+$/gm,'');\n  // Remove trailing slash(es)\n  trimmed = trimmed.replace(/\\/+$/, '');\n\n  return trimmed;\n}\n","'use strict';\n\nclass CancelError extends Error {\n\tconstructor(reason) {\n\t\tsuper(reason || 'Promise was canceled');\n\t\tthis.name = 'CancelError';\n\t}\n\n\tget isCanceled() {\n\t\treturn true;\n\t}\n}\n\nclass PCancelable {\n\tstatic fn(userFn) {\n\t\treturn (...arguments_) => {\n\t\t\treturn new PCancelable((resolve, reject, onCancel) => {\n\t\t\t\targuments_.push(onCancel);\n\t\t\t\t// eslint-disable-next-line promise/prefer-await-to-then\n\t\t\t\tuserFn(...arguments_).then(resolve, reject);\n\t\t\t});\n\t\t};\n\t}\n\n\tconstructor(executor) {\n\t\tthis._cancelHandlers = [];\n\t\tthis._isPending = true;\n\t\tthis._isCanceled = false;\n\t\tthis._rejectOnCancel = true;\n\n\t\tthis._promise = new Promise((resolve, reject) => {\n\t\t\tthis._reject = reject;\n\n\t\t\tconst onResolve = value => {\n\t\t\t\tif (!this._isCanceled || !onCancel.shouldReject) {\n\t\t\t\t\tthis._isPending = false;\n\t\t\t\t\tresolve(value);\n\t\t\t\t}\n\t\t\t};\n\n\t\t\tconst onReject = error => {\n\t\t\t\tthis._isPending = false;\n\t\t\t\treject(error);\n\t\t\t};\n\n\t\t\tconst onCancel = handler => {\n\t\t\t\tif (!this._isPending) {\n\t\t\t\t\tthrow new Error('The `onCancel` handler was attached after the promise settled.');\n\t\t\t\t}\n\n\t\t\t\tthis._cancelHandlers.push(handler);\n\t\t\t};\n\n\t\t\tObject.defineProperties(onCancel, {\n\t\t\t\tshouldReject: {\n\t\t\t\t\tget: () => this._rejectOnCancel,\n\t\t\t\t\tset: boolean => {\n\t\t\t\t\t\tthis._rejectOnCancel = boolean;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t});\n\n\t\t\treturn executor(onResolve, onReject, onCancel);\n\t\t});\n\t}\n\n\tthen(onFulfilled, onRejected) {\n\t\t// eslint-disable-next-line promise/prefer-await-to-then\n\t\treturn this._promise.then(onFulfilled, onRejected);\n\t}\n\n\tcatch(onRejected) {\n\t\treturn this._promise.catch(onRejected);\n\t}\n\n\tfinally(onFinally) {\n\t\treturn this._promise.finally(onFinally);\n\t}\n\n\tcancel(reason) {\n\t\tif (!this._isPending || this._isCanceled) {\n\t\t\treturn;\n\t\t}\n\n\t\tthis._isCanceled = true;\n\n\t\tif (this._cancelHandlers.length > 0) {\n\t\t\ttry {\n\t\t\t\tfor (const handler of this._cancelHandlers) {\n\t\t\t\t\thandler();\n\t\t\t\t}\n\t\t\t} catch (error) {\n\t\t\t\tthis._reject(error);\n\t\t\t\treturn;\n\t\t\t}\n\t\t}\n\n\t\tif (this._rejectOnCancel) {\n\t\t\tthis._reject(new CancelError(reason));\n\t\t}\n\t}\n\n\tget isCanceled() {\n\t\treturn this._isCanceled;\n\t}\n}\n\nObject.setPrototypeOf(PCancelable.prototype, Promise.prototype);\n\nmodule.exports = PCancelable;\nmodule.exports.CancelError = CancelError;\n","var global = typeof self !== 'undefined' ? self : this;\nvar __self__ = (function () {\nfunction F() {\nthis.fetch = false;\nthis.DOMException = global.DOMException\n}\nF.prototype = global;\nreturn new F();\n})();\n(function(self) {\n\nvar irrelevant = (function (exports) {\n\n  var support = {\n    searchParams: 'URLSearchParams' in self,\n    iterable: 'Symbol' in self && 'iterator' in Symbol,\n    blob:\n      'FileReader' in self &&\n      'Blob' in self &&\n      (function() {\n        try {\n          new Blob();\n          return true\n        } catch (e) {\n          return false\n        }\n      })(),\n    formData: 'FormData' in self,\n    arrayBuffer: 'ArrayBuffer' in self\n  };\n\n  function isDataView(obj) {\n    return obj && DataView.prototype.isPrototypeOf(obj)\n  }\n\n  if (support.arrayBuffer) {\n    var viewClasses = [\n      '[object Int8Array]',\n      '[object Uint8Array]',\n      '[object Uint8ClampedArray]',\n      '[object Int16Array]',\n      '[object Uint16Array]',\n      '[object Int32Array]',\n      '[object Uint32Array]',\n      '[object Float32Array]',\n      '[object Float64Array]'\n    ];\n\n    var isArrayBufferView =\n      ArrayBuffer.isView ||\n      function(obj) {\n        return obj && viewClasses.indexOf(Object.prototype.toString.call(obj)) > -1\n      };\n  }\n\n  function normalizeName(name) {\n    if (typeof name !== 'string') {\n      name = String(name);\n    }\n    if (/[^a-z0-9\\-#$%&'*+.^_`|~]/i.test(name)) {\n      throw new TypeError('Invalid character in header field name')\n    }\n    return name.toLowerCase()\n  }\n\n  function normalizeValue(value) {\n    if (typeof value !== 'string') {\n      value = String(value);\n    }\n    return value\n  }\n\n  // Build a destructive iterator for the value list\n  function iteratorFor(items) {\n    var iterator = {\n      next: function() {\n        var value = items.shift();\n        return {done: value === undefined, value: value}\n      }\n    };\n\n    if (support.iterable) {\n      iterator[Symbol.iterator] = function() {\n        return iterator\n      };\n    }\n\n    return iterator\n  }\n\n  function Headers(headers) {\n    this.map = {};\n\n    if (headers instanceof Headers) {\n      headers.forEach(function(value, name) {\n        this.append(name, value);\n      }, this);\n    } else if (Array.isArray(headers)) {\n      headers.forEach(function(header) {\n        this.append(header[0], header[1]);\n      }, this);\n    } else if (headers) {\n      Object.getOwnPropertyNames(headers).forEach(function(name) {\n        this.append(name, headers[name]);\n      }, this);\n    }\n  }\n\n  Headers.prototype.append = function(name, value) {\n    name = normalizeName(name);\n    value = normalizeValue(value);\n    var oldValue = this.map[name];\n    this.map[name] = oldValue ? oldValue + ', ' + value : value;\n  };\n\n  Headers.prototype['delete'] = function(name) {\n    delete this.map[normalizeName(name)];\n  };\n\n  Headers.prototype.get = function(name) {\n    name = normalizeName(name);\n    return this.has(name) ? this.map[name] : null\n  };\n\n  Headers.prototype.has = function(name) {\n    return this.map.hasOwnProperty(normalizeName(name))\n  };\n\n  Headers.prototype.set = function(name, value) {\n    this.map[normalizeName(name)] = normalizeValue(value);\n  };\n\n  Headers.prototype.forEach = function(callback, thisArg) {\n    for (var name in this.map) {\n      if (this.map.hasOwnProperty(name)) {\n        callback.call(thisArg, this.map[name], name, this);\n      }\n    }\n  };\n\n  Headers.prototype.keys = function() {\n    var items = [];\n    this.forEach(function(value, name) {\n      items.push(name);\n    });\n    return iteratorFor(items)\n  };\n\n  Headers.prototype.values = function() {\n    var items = [];\n    this.forEach(function(value) {\n      items.push(value);\n    });\n    return iteratorFor(items)\n  };\n\n  Headers.prototype.entries = function() {\n    var items = [];\n    this.forEach(function(value, name) {\n      items.push([name, value]);\n    });\n    return iteratorFor(items)\n  };\n\n  if (support.iterable) {\n    Headers.prototype[Symbol.iterator] = Headers.prototype.entries;\n  }\n\n  function consumed(body) {\n    if (body.bodyUsed) {\n      return Promise.reject(new TypeError('Already read'))\n    }\n    body.bodyUsed = true;\n  }\n\n  function fileReaderReady(reader) {\n    return new Promise(function(resolve, reject) {\n      reader.onload = function() {\n        resolve(reader.result);\n      };\n      reader.onerror = function() {\n        reject(reader.error);\n      };\n    })\n  }\n\n  function readBlobAsArrayBuffer(blob) {\n    var reader = new FileReader();\n    var promise = fileReaderReady(reader);\n    reader.readAsArrayBuffer(blob);\n    return promise\n  }\n\n  function readBlobAsText(blob) {\n    var reader = new FileReader();\n    var promise = fileReaderReady(reader);\n    reader.readAsText(blob);\n    return promise\n  }\n\n  function readArrayBufferAsText(buf) {\n    var view = new Uint8Array(buf);\n    var chars = new Array(view.length);\n\n    for (var i = 0; i < view.length; i++) {\n      chars[i] = String.fromCharCode(view[i]);\n    }\n    return chars.join('')\n  }\n\n  function bufferClone(buf) {\n    if (buf.slice) {\n      return buf.slice(0)\n    } else {\n      var view = new Uint8Array(buf.byteLength);\n      view.set(new Uint8Array(buf));\n      return view.buffer\n    }\n  }\n\n  function Body() {\n    this.bodyUsed = false;\n\n    this._initBody = function(body) {\n      this._bodyInit = body;\n      if (!body) {\n        this._bodyText = '';\n      } else if (typeof body === 'string') {\n        this._bodyText = body;\n      } else if (support.blob && Blob.prototype.isPrototypeOf(body)) {\n        this._bodyBlob = body;\n      } else if (support.formData && FormData.prototype.isPrototypeOf(body)) {\n        this._bodyFormData = body;\n      } else if (support.searchParams && URLSearchParams.prototype.isPrototypeOf(body)) {\n        this._bodyText = body.toString();\n      } else if (support.arrayBuffer && support.blob && isDataView(body)) {\n        this._bodyArrayBuffer = bufferClone(body.buffer);\n        // IE 10-11 can't handle a DataView body.\n        this._bodyInit = new Blob([this._bodyArrayBuffer]);\n      } else if (support.arrayBuffer && (ArrayBuffer.prototype.isPrototypeOf(body) || isArrayBufferView(body))) {\n        this._bodyArrayBuffer = bufferClone(body);\n      } else {\n        this._bodyText = body = Object.prototype.toString.call(body);\n      }\n\n      if (!this.headers.get('content-type')) {\n        if (typeof body === 'string') {\n          this.headers.set('content-type', 'text/plain;charset=UTF-8');\n        } else if (this._bodyBlob && this._bodyBlob.type) {\n          this.headers.set('content-type', this._bodyBlob.type);\n        } else if (support.searchParams && URLSearchParams.prototype.isPrototypeOf(body)) {\n          this.headers.set('content-type', 'application/x-www-form-urlencoded;charset=UTF-8');\n        }\n      }\n    };\n\n    if (support.blob) {\n      this.blob = function() {\n        var rejected = consumed(this);\n        if (rejected) {\n          return rejected\n        }\n\n        if (this._bodyBlob) {\n          return Promise.resolve(this._bodyBlob)\n        } else if (this._bodyArrayBuffer) {\n          return Promise.resolve(new Blob([this._bodyArrayBuffer]))\n        } else if (this._bodyFormData) {\n          throw new Error('could not read FormData body as blob')\n        } else {\n          return Promise.resolve(new Blob([this._bodyText]))\n        }\n      };\n\n      this.arrayBuffer = function() {\n        if (this._bodyArrayBuffer) {\n          return consumed(this) || Promise.resolve(this._bodyArrayBuffer)\n        } else {\n          return this.blob().then(readBlobAsArrayBuffer)\n        }\n      };\n    }\n\n    this.text = function() {\n      var rejected = consumed(this);\n      if (rejected) {\n        return rejected\n      }\n\n      if (this._bodyBlob) {\n        return readBlobAsText(this._bodyBlob)\n      } else if (this._bodyArrayBuffer) {\n        return Promise.resolve(readArrayBufferAsText(this._bodyArrayBuffer))\n      } else if (this._bodyFormData) {\n        throw new Error('could not read FormData body as text')\n      } else {\n        return Promise.resolve(this._bodyText)\n      }\n    };\n\n    if (support.formData) {\n      this.formData = function() {\n        return this.text().then(decode)\n      };\n    }\n\n    this.json = function() {\n      return this.text().then(JSON.parse)\n    };\n\n    return this\n  }\n\n  // HTTP methods whose capitalization should be normalized\n  var methods = ['DELETE', 'GET', 'HEAD', 'OPTIONS', 'POST', 'PUT'];\n\n  function normalizeMethod(method) {\n    var upcased = method.toUpperCase();\n    return methods.indexOf(upcased) > -1 ? upcased : method\n  }\n\n  function Request(input, options) {\n    options = options || {};\n    var body = options.body;\n\n    if (input instanceof Request) {\n      if (input.bodyUsed) {\n        throw new TypeError('Already read')\n      }\n      this.url = input.url;\n      this.credentials = input.credentials;\n      if (!options.headers) {\n        this.headers = new Headers(input.headers);\n      }\n      this.method = input.method;\n      this.mode = input.mode;\n      this.signal = input.signal;\n      if (!body && input._bodyInit != null) {\n        body = input._bodyInit;\n        input.bodyUsed = true;\n      }\n    } else {\n      this.url = String(input);\n    }\n\n    this.credentials = options.credentials || this.credentials || 'same-origin';\n    if (options.headers || !this.headers) {\n      this.headers = new Headers(options.headers);\n    }\n    this.method = normalizeMethod(options.method || this.method || 'GET');\n    this.mode = options.mode || this.mode || null;\n    this.signal = options.signal || this.signal;\n    this.referrer = null;\n\n    if ((this.method === 'GET' || this.method === 'HEAD') && body) {\n      throw new TypeError('Body not allowed for GET or HEAD requests')\n    }\n    this._initBody(body);\n  }\n\n  Request.prototype.clone = function() {\n    return new Request(this, {body: this._bodyInit})\n  };\n\n  function decode(body) {\n    var form = new FormData();\n    body\n      .trim()\n      .split('&')\n      .forEach(function(bytes) {\n        if (bytes) {\n          var split = bytes.split('=');\n          var name = split.shift().replace(/\\+/g, ' ');\n          var value = split.join('=').replace(/\\+/g, ' ');\n          form.append(decodeURIComponent(name), decodeURIComponent(value));\n        }\n      });\n    return form\n  }\n\n  function parseHeaders(rawHeaders) {\n    var headers = new Headers();\n    // Replace instances of \\r\\n and \\n followed by at least one space or horizontal tab with a space\n    // https://tools.ietf.org/html/rfc7230#section-3.2\n    var preProcessedHeaders = rawHeaders.replace(/\\r?\\n[\\t ]+/g, ' ');\n    preProcessedHeaders.split(/\\r?\\n/).forEach(function(line) {\n      var parts = line.split(':');\n      var key = parts.shift().trim();\n      if (key) {\n        var value = parts.join(':').trim();\n        headers.append(key, value);\n      }\n    });\n    return headers\n  }\n\n  Body.call(Request.prototype);\n\n  function Response(bodyInit, options) {\n    if (!options) {\n      options = {};\n    }\n\n    this.type = 'default';\n    this.status = options.status === undefined ? 200 : options.status;\n    this.ok = this.status >= 200 && this.status < 300;\n    this.statusText = 'statusText' in options ? options.statusText : 'OK';\n    this.headers = new Headers(options.headers);\n    this.url = options.url || '';\n    this._initBody(bodyInit);\n  }\n\n  Body.call(Response.prototype);\n\n  Response.prototype.clone = function() {\n    return new Response(this._bodyInit, {\n      status: this.status,\n      statusText: this.statusText,\n      headers: new Headers(this.headers),\n      url: this.url\n    })\n  };\n\n  Response.error = function() {\n    var response = new Response(null, {status: 0, statusText: ''});\n    response.type = 'error';\n    return response\n  };\n\n  var redirectStatuses = [301, 302, 303, 307, 308];\n\n  Response.redirect = function(url, status) {\n    if (redirectStatuses.indexOf(status) === -1) {\n      throw new RangeError('Invalid status code')\n    }\n\n    return new Response(null, {status: status, headers: {location: url}})\n  };\n\n  exports.DOMException = self.DOMException;\n  try {\n    new exports.DOMException();\n  } catch (err) {\n    exports.DOMException = function(message, name) {\n      this.message = message;\n      this.name = name;\n      var error = Error(message);\n      this.stack = error.stack;\n    };\n    exports.DOMException.prototype = Object.create(Error.prototype);\n    exports.DOMException.prototype.constructor = exports.DOMException;\n  }\n\n  function fetch(input, init) {\n    return new Promise(function(resolve, reject) {\n      var request = new Request(input, init);\n\n      if (request.signal && request.signal.aborted) {\n        return reject(new exports.DOMException('Aborted', 'AbortError'))\n      }\n\n      var xhr = new XMLHttpRequest();\n\n      function abortXhr() {\n        xhr.abort();\n      }\n\n      xhr.onload = function() {\n        var options = {\n          status: xhr.status,\n          statusText: xhr.statusText,\n          headers: parseHeaders(xhr.getAllResponseHeaders() || '')\n        };\n        options.url = 'responseURL' in xhr ? xhr.responseURL : options.headers.get('X-Request-URL');\n        var body = 'response' in xhr ? xhr.response : xhr.responseText;\n        resolve(new Response(body, options));\n      };\n\n      xhr.onerror = function() {\n        reject(new TypeError('Network request failed'));\n      };\n\n      xhr.ontimeout = function() {\n        reject(new TypeError('Network request failed'));\n      };\n\n      xhr.onabort = function() {\n        reject(new exports.DOMException('Aborted', 'AbortError'));\n      };\n\n      xhr.open(request.method, request.url, true);\n\n      if (request.credentials === 'include') {\n        xhr.withCredentials = true;\n      } else if (request.credentials === 'omit') {\n        xhr.withCredentials = false;\n      }\n\n      if ('responseType' in xhr && support.blob) {\n        xhr.responseType = 'blob';\n      }\n\n      request.headers.forEach(function(value, name) {\n        xhr.setRequestHeader(name, value);\n      });\n\n      if (request.signal) {\n        request.signal.addEventListener('abort', abortXhr);\n\n        xhr.onreadystatechange = function() {\n          // DONE (success or failure)\n          if (xhr.readyState === 4) {\n            request.signal.removeEventListener('abort', abortXhr);\n          }\n        };\n      }\n\n      xhr.send(typeof request._bodyInit === 'undefined' ? null : request._bodyInit);\n    })\n  }\n\n  fetch.polyfill = true;\n\n  if (!self.fetch) {\n    self.fetch = fetch;\n    self.Headers = Headers;\n    self.Request = Request;\n    self.Response = Response;\n  }\n\n  exports.Headers = Headers;\n  exports.Request = Request;\n  exports.Response = Response;\n  exports.fetch = fetch;\n\n  Object.defineProperty(exports, '__esModule', { value: true });\n\n  return exports;\n\n})({});\n})(__self__);\n__self__.fetch.ponyfill = true;\n// Remove \"polyfill\" property added by whatwg-fetch\ndelete __self__.fetch.polyfill;\n// Choose between native implementation (global) or custom implementation (__self__)\n// var ctx = global.fetch ? global : __self__;\nvar ctx = __self__; // this line disable service worker support temporarily\nexports = ctx.fetch // To enable: import fetch from 'cross-fetch'\nexports.default = ctx.fetch // For TypeScript consumers without esModuleInterop.\nexports.fetch = ctx.fetch // To enable: import {fetch} from 'cross-fetch'\nexports.Headers = ctx.Headers\nexports.Request = ctx.Request\nexports.Response = ctx.Response\nmodule.exports = exports\n","function E () {\n  // Keep this empty so it's easier to inherit from\n  // (via https://github.com/lipsmack from https://github.com/scottcorgan/tiny-emitter/issues/3)\n}\n\nE.prototype = {\n  on: function (name, callback, ctx) {\n    var e = this.e || (this.e = {});\n\n    (e[name] || (e[name] = [])).push({\n      fn: callback,\n      ctx: ctx\n    });\n\n    return this;\n  },\n\n  once: function (name, callback, ctx) {\n    var self = this;\n    function listener () {\n      self.off(name, listener);\n      callback.apply(ctx, arguments);\n    };\n\n    listener._ = callback\n    return this.on(name, listener, ctx);\n  },\n\n  emit: function (name) {\n    var data = [].slice.call(arguments, 1);\n    var evtArr = ((this.e || (this.e = {}))[name] || []).slice();\n    var i = 0;\n    var len = evtArr.length;\n\n    for (i; i < len; i++) {\n      evtArr[i].fn.apply(evtArr[i].ctx, data);\n    }\n\n    return this;\n  },\n\n  off: function (name, callback) {\n    var e = this.e || (this.e = {});\n    var evts = e[name];\n    var liveEvents = [];\n\n    if (evts && callback) {\n      for (var i = 0, len = evts.length; i < len; i++) {\n        if (evts[i].fn !== callback && evts[i].fn._ !== callback)\n          liveEvents.push(evts[i]);\n      }\n    }\n\n    // Remove event from queue to prevent memory leak\n    // Suggested by https://github.com/lazd\n    // Ref: https://github.com/scottcorgan/tiny-emitter/commit/c6ebfaa9bc973b33d110a84a307742b7cf94c953#commitcomment-5024910\n\n    (liveEvents.length)\n      ? e[name] = liveEvents\n      : delete e[name];\n\n    return this;\n  }\n};\n\nmodule.exports = E;\n","function _assertThisInitialized(self) {\n  if (self === void 0) {\n    throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\");\n  }\n  return self;\n}\nmodule.exports = _assertThisInitialized, module.exports.__esModule = true, module.exports[\"default\"] = module.exports;","function _classCallCheck(instance, Constructor) {\n  if (!(instance instanceof Constructor)) {\n    throw new TypeError(\"Cannot call a class as a function\");\n  }\n}\nmodule.exports = _classCallCheck, module.exports.__esModule = true, module.exports[\"default\"] = module.exports;","var setPrototypeOf = require(\"./setPrototypeOf.js\");\nvar isNativeReflectConstruct = require(\"./isNativeReflectConstruct.js\");\nfunction _construct(Parent, args, Class) {\n  if (isNativeReflectConstruct()) {\n    module.exports = _construct = Reflect.construct.bind(), module.exports.__esModule = true, module.exports[\"default\"] = module.exports;\n  } else {\n    module.exports = _construct = function _construct(Parent, args, Class) {\n      var a = [null];\n      a.push.apply(a, args);\n      var Constructor = Function.bind.apply(Parent, a);\n      var instance = new Constructor();\n      if (Class) setPrototypeOf(instance, Class.prototype);\n      return instance;\n    }, module.exports.__esModule = true, module.exports[\"default\"] = module.exports;\n  }\n  return _construct.apply(null, arguments);\n}\nmodule.exports = _construct, module.exports.__esModule = true, module.exports[\"default\"] = module.exports;","function _defineProperties(target, props) {\n  for (var i = 0; i < props.length; i++) {\n    var descriptor = props[i];\n    descriptor.enumerable = descriptor.enumerable || false;\n    descriptor.configurable = true;\n    if (\"value\" in descriptor) descriptor.writable = true;\n    Object.defineProperty(target, descriptor.key, descriptor);\n  }\n}\nfunction _createClass(Constructor, protoProps, staticProps) {\n  if (protoProps) _defineProperties(Constructor.prototype, protoProps);\n  if (staticProps) _defineProperties(Constructor, staticProps);\n  Object.defineProperty(Constructor, \"prototype\", {\n    writable: false\n  });\n  return Constructor;\n}\nmodule.exports = _createClass, module.exports.__esModule = true, module.exports[\"default\"] = module.exports;","function _getPrototypeOf(o) {\n  module.exports = _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf.bind() : function _getPrototypeOf(o) {\n    return o.__proto__ || Object.getPrototypeOf(o);\n  }, module.exports.__esModule = true, module.exports[\"default\"] = module.exports;\n  return _getPrototypeOf(o);\n}\nmodule.exports = _getPrototypeOf, module.exports.__esModule = true, module.exports[\"default\"] = module.exports;","var setPrototypeOf = require(\"./setPrototypeOf.js\");\nfunction _inherits(subClass, superClass) {\n  if (typeof superClass !== \"function\" && superClass !== null) {\n    throw new TypeError(\"Super expression must either be null or a function\");\n  }\n  subClass.prototype = Object.create(superClass && superClass.prototype, {\n    constructor: {\n      value: subClass,\n      writable: true,\n      configurable: true\n    }\n  });\n  Object.defineProperty(subClass, \"prototype\", {\n    writable: false\n  });\n  if (superClass) setPrototypeOf(subClass, superClass);\n}\nmodule.exports = _inherits, module.exports.__esModule = true, module.exports[\"default\"] = module.exports;","function _isNativeFunction(fn) {\n  return Function.toString.call(fn).indexOf(\"[native code]\") !== -1;\n}\nmodule.exports = _isNativeFunction, module.exports.__esModule = true, module.exports[\"default\"] = module.exports;","function _isNativeReflectConstruct() {\n  if (typeof Reflect === \"undefined\" || !Reflect.construct) return false;\n  if (Reflect.construct.sham) return false;\n  if (typeof Proxy === \"function\") return true;\n  try {\n    Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {}));\n    return true;\n  } catch (e) {\n    return false;\n  }\n}\nmodule.exports = _isNativeReflectConstruct, module.exports.__esModule = true, module.exports[\"default\"] = module.exports;","var _typeof = require(\"./typeof.js\")[\"default\"];\nvar assertThisInitialized = require(\"./assertThisInitialized.js\");\nfunction _possibleConstructorReturn(self, call) {\n  if (call && (_typeof(call) === \"object\" || typeof call === \"function\")) {\n    return call;\n  } else if (call !== void 0) {\n    throw new TypeError(\"Derived constructors may only return object or undefined\");\n  }\n  return assertThisInitialized(self);\n}\nmodule.exports = _possibleConstructorReturn, module.exports.__esModule = true, module.exports[\"default\"] = module.exports;","var _typeof = require(\"./typeof.js\")[\"default\"];\nfunction _regeneratorRuntime() {\n  \"use strict\"; /*! regenerator-runtime -- Copyright (c) 2014-present, Facebook, Inc. -- license (MIT): https://github.com/facebook/regenerator/blob/main/LICENSE */\n  module.exports = _regeneratorRuntime = function _regeneratorRuntime() {\n    return exports;\n  }, module.exports.__esModule = true, module.exports[\"default\"] = module.exports;\n  var exports = {},\n    Op = Object.prototype,\n    hasOwn = Op.hasOwnProperty,\n    $Symbol = \"function\" == typeof Symbol ? Symbol : {},\n    iteratorSymbol = $Symbol.iterator || \"@@iterator\",\n    asyncIteratorSymbol = $Symbol.asyncIterator || \"@@asyncIterator\",\n    toStringTagSymbol = $Symbol.toStringTag || \"@@toStringTag\";\n  function define(obj, key, value) {\n    return Object.defineProperty(obj, key, {\n      value: value,\n      enumerable: !0,\n      configurable: !0,\n      writable: !0\n    }), obj[key];\n  }\n  try {\n    define({}, \"\");\n  } catch (err) {\n    define = function define(obj, key, value) {\n      return obj[key] = value;\n    };\n  }\n  function wrap(innerFn, outerFn, self, tryLocsList) {\n    var protoGenerator = outerFn && outerFn.prototype instanceof Generator ? outerFn : Generator,\n      generator = Object.create(protoGenerator.prototype),\n      context = new Context(tryLocsList || []);\n    return generator._invoke = function (innerFn, self, context) {\n      var state = \"suspendedStart\";\n      return function (method, arg) {\n        if (\"executing\" === state) throw new Error(\"Generator is already running\");\n        if (\"completed\" === state) {\n          if (\"throw\" === method) throw arg;\n          return doneResult();\n        }\n        for (context.method = method, context.arg = arg;;) {\n          var delegate = context.delegate;\n          if (delegate) {\n            var delegateResult = maybeInvokeDelegate(delegate, context);\n            if (delegateResult) {\n              if (delegateResult === ContinueSentinel) continue;\n              return delegateResult;\n            }\n          }\n          if (\"next\" === context.method) context.sent = context._sent = context.arg;else if (\"throw\" === context.method) {\n            if (\"suspendedStart\" === state) throw state = \"completed\", context.arg;\n            context.dispatchException(context.arg);\n          } else \"return\" === context.method && context.abrupt(\"return\", context.arg);\n          state = \"executing\";\n          var record = tryCatch(innerFn, self, context);\n          if (\"normal\" === record.type) {\n            if (state = context.done ? \"completed\" : \"suspendedYield\", record.arg === ContinueSentinel) continue;\n            return {\n              value: record.arg,\n              done: context.done\n            };\n          }\n          \"throw\" === record.type && (state = \"completed\", context.method = \"throw\", context.arg = record.arg);\n        }\n      };\n    }(innerFn, self, context), generator;\n  }\n  function tryCatch(fn, obj, arg) {\n    try {\n      return {\n        type: \"normal\",\n        arg: fn.call(obj, arg)\n      };\n    } catch (err) {\n      return {\n        type: \"throw\",\n        arg: err\n      };\n    }\n  }\n  exports.wrap = wrap;\n  var ContinueSentinel = {};\n  function Generator() {}\n  function GeneratorFunction() {}\n  function GeneratorFunctionPrototype() {}\n  var IteratorPrototype = {};\n  define(IteratorPrototype, iteratorSymbol, function () {\n    return this;\n  });\n  var getProto = Object.getPrototypeOf,\n    NativeIteratorPrototype = getProto && getProto(getProto(values([])));\n  NativeIteratorPrototype && NativeIteratorPrototype !== Op && hasOwn.call(NativeIteratorPrototype, iteratorSymbol) && (IteratorPrototype = NativeIteratorPrototype);\n  var Gp = GeneratorFunctionPrototype.prototype = Generator.prototype = Object.create(IteratorPrototype);\n  function defineIteratorMethods(prototype) {\n    [\"next\", \"throw\", \"return\"].forEach(function (method) {\n      define(prototype, method, function (arg) {\n        return this._invoke(method, arg);\n      });\n    });\n  }\n  function AsyncIterator(generator, PromiseImpl) {\n    function invoke(method, arg, resolve, reject) {\n      var record = tryCatch(generator[method], generator, arg);\n      if (\"throw\" !== record.type) {\n        var result = record.arg,\n          value = result.value;\n        return value && \"object\" == _typeof(value) && hasOwn.call(value, \"__await\") ? PromiseImpl.resolve(value.__await).then(function (value) {\n          invoke(\"next\", value, resolve, reject);\n        }, function (err) {\n          invoke(\"throw\", err, resolve, reject);\n        }) : PromiseImpl.resolve(value).then(function (unwrapped) {\n          result.value = unwrapped, resolve(result);\n        }, function (error) {\n          return invoke(\"throw\", error, resolve, reject);\n        });\n      }\n      reject(record.arg);\n    }\n    var previousPromise;\n    this._invoke = function (method, arg) {\n      function callInvokeWithMethodAndArg() {\n        return new PromiseImpl(function (resolve, reject) {\n          invoke(method, arg, resolve, reject);\n        });\n      }\n      return previousPromise = previousPromise ? previousPromise.then(callInvokeWithMethodAndArg, callInvokeWithMethodAndArg) : callInvokeWithMethodAndArg();\n    };\n  }\n  function maybeInvokeDelegate(delegate, context) {\n    var method = delegate.iterator[context.method];\n    if (undefined === method) {\n      if (context.delegate = null, \"throw\" === context.method) {\n        if (delegate.iterator[\"return\"] && (context.method = \"return\", context.arg = undefined, maybeInvokeDelegate(delegate, context), \"throw\" === context.method)) return ContinueSentinel;\n        context.method = \"throw\", context.arg = new TypeError(\"The iterator does not provide a 'throw' method\");\n      }\n      return ContinueSentinel;\n    }\n    var record = tryCatch(method, delegate.iterator, context.arg);\n    if (\"throw\" === record.type) return context.method = \"throw\", context.arg = record.arg, context.delegate = null, ContinueSentinel;\n    var info = record.arg;\n    return info ? info.done ? (context[delegate.resultName] = info.value, context.next = delegate.nextLoc, \"return\" !== context.method && (context.method = \"next\", context.arg = undefined), context.delegate = null, ContinueSentinel) : info : (context.method = \"throw\", context.arg = new TypeError(\"iterator result is not an object\"), context.delegate = null, ContinueSentinel);\n  }\n  function pushTryEntry(locs) {\n    var entry = {\n      tryLoc: locs[0]\n    };\n    1 in locs && (entry.catchLoc = locs[1]), 2 in locs && (entry.finallyLoc = locs[2], entry.afterLoc = locs[3]), this.tryEntries.push(entry);\n  }\n  function resetTryEntry(entry) {\n    var record = entry.completion || {};\n    record.type = \"normal\", delete record.arg, entry.completion = record;\n  }\n  function Context(tryLocsList) {\n    this.tryEntries = [{\n      tryLoc: \"root\"\n    }], tryLocsList.forEach(pushTryEntry, this), this.reset(!0);\n  }\n  function values(iterable) {\n    if (iterable) {\n      var iteratorMethod = iterable[iteratorSymbol];\n      if (iteratorMethod) return iteratorMethod.call(iterable);\n      if (\"function\" == typeof iterable.next) return iterable;\n      if (!isNaN(iterable.length)) {\n        var i = -1,\n          next = function next() {\n            for (; ++i < iterable.length;) {\n              if (hasOwn.call(iterable, i)) return next.value = iterable[i], next.done = !1, next;\n            }\n            return next.value = undefined, next.done = !0, next;\n          };\n        return next.next = next;\n      }\n    }\n    return {\n      next: doneResult\n    };\n  }\n  function doneResult() {\n    return {\n      value: undefined,\n      done: !0\n    };\n  }\n  return GeneratorFunction.prototype = GeneratorFunctionPrototype, define(Gp, \"constructor\", GeneratorFunctionPrototype), define(GeneratorFunctionPrototype, \"constructor\", GeneratorFunction), GeneratorFunction.displayName = define(GeneratorFunctionPrototype, toStringTagSymbol, \"GeneratorFunction\"), exports.isGeneratorFunction = function (genFun) {\n    var ctor = \"function\" == typeof genFun && genFun.constructor;\n    return !!ctor && (ctor === GeneratorFunction || \"GeneratorFunction\" === (ctor.displayName || ctor.name));\n  }, exports.mark = function (genFun) {\n    return Object.setPrototypeOf ? Object.setPrototypeOf(genFun, GeneratorFunctionPrototype) : (genFun.__proto__ = GeneratorFunctionPrototype, define(genFun, toStringTagSymbol, \"GeneratorFunction\")), genFun.prototype = Object.create(Gp), genFun;\n  }, exports.awrap = function (arg) {\n    return {\n      __await: arg\n    };\n  }, defineIteratorMethods(AsyncIterator.prototype), define(AsyncIterator.prototype, asyncIteratorSymbol, function () {\n    return this;\n  }), exports.AsyncIterator = AsyncIterator, exports.async = function (innerFn, outerFn, self, tryLocsList, PromiseImpl) {\n    void 0 === PromiseImpl && (PromiseImpl = Promise);\n    var iter = new AsyncIterator(wrap(innerFn, outerFn, self, tryLocsList), PromiseImpl);\n    return exports.isGeneratorFunction(outerFn) ? iter : iter.next().then(function (result) {\n      return result.done ? result.value : iter.next();\n    });\n  }, defineIteratorMethods(Gp), define(Gp, toStringTagSymbol, \"Generator\"), define(Gp, iteratorSymbol, function () {\n    return this;\n  }), define(Gp, \"toString\", function () {\n    return \"[object Generator]\";\n  }), exports.keys = function (object) {\n    var keys = [];\n    for (var key in object) {\n      keys.push(key);\n    }\n    return keys.reverse(), function next() {\n      for (; keys.length;) {\n        var key = keys.pop();\n        if (key in object) return next.value = key, next.done = !1, next;\n      }\n      return next.done = !0, next;\n    };\n  }, exports.values = values, Context.prototype = {\n    constructor: Context,\n    reset: function reset(skipTempReset) {\n      if (this.prev = 0, this.next = 0, this.sent = this._sent = undefined, this.done = !1, this.delegate = null, this.method = \"next\", this.arg = undefined, this.tryEntries.forEach(resetTryEntry), !skipTempReset) for (var name in this) {\n        \"t\" === name.charAt(0) && hasOwn.call(this, name) && !isNaN(+name.slice(1)) && (this[name] = undefined);\n      }\n    },\n    stop: function stop() {\n      this.done = !0;\n      var rootRecord = this.tryEntries[0].completion;\n      if (\"throw\" === rootRecord.type) throw rootRecord.arg;\n      return this.rval;\n    },\n    dispatchException: function dispatchException(exception) {\n      if (this.done) throw exception;\n      var context = this;\n      function handle(loc, caught) {\n        return record.type = \"throw\", record.arg = exception, context.next = loc, caught && (context.method = \"next\", context.arg = undefined), !!caught;\n      }\n      for (var i = this.tryEntries.length - 1; i >= 0; --i) {\n        var entry = this.tryEntries[i],\n          record = entry.completion;\n        if (\"root\" === entry.tryLoc) return handle(\"end\");\n        if (entry.tryLoc <= this.prev) {\n          var hasCatch = hasOwn.call(entry, \"catchLoc\"),\n            hasFinally = hasOwn.call(entry, \"finallyLoc\");\n          if (hasCatch && hasFinally) {\n            if (this.prev < entry.catchLoc) return handle(entry.catchLoc, !0);\n            if (this.prev < entry.finallyLoc) return handle(entry.finallyLoc);\n          } else if (hasCatch) {\n            if (this.prev < entry.catchLoc) return handle(entry.catchLoc, !0);\n          } else {\n            if (!hasFinally) throw new Error(\"try statement without catch or finally\");\n            if (this.prev < entry.finallyLoc) return handle(entry.finallyLoc);\n          }\n        }\n      }\n    },\n    abrupt: function abrupt(type, arg) {\n      for (var i = this.tryEntries.length - 1; i >= 0; --i) {\n        var entry = this.tryEntries[i];\n        if (entry.tryLoc <= this.prev && hasOwn.call(entry, \"finallyLoc\") && this.prev < entry.finallyLoc) {\n          var finallyEntry = entry;\n          break;\n        }\n      }\n      finallyEntry && (\"break\" === type || \"continue\" === type) && finallyEntry.tryLoc <= arg && arg <= finallyEntry.finallyLoc && (finallyEntry = null);\n      var record = finallyEntry ? finallyEntry.completion : {};\n      return record.type = type, record.arg = arg, finallyEntry ? (this.method = \"next\", this.next = finallyEntry.finallyLoc, ContinueSentinel) : this.complete(record);\n    },\n    complete: function complete(record, afterLoc) {\n      if (\"throw\" === record.type) throw record.arg;\n      return \"break\" === record.type || \"continue\" === record.type ? this.next = record.arg : \"return\" === record.type ? (this.rval = this.arg = record.arg, this.method = \"return\", this.next = \"end\") : \"normal\" === record.type && afterLoc && (this.next = afterLoc), ContinueSentinel;\n    },\n    finish: function finish(finallyLoc) {\n      for (var i = this.tryEntries.length - 1; i >= 0; --i) {\n        var entry = this.tryEntries[i];\n        if (entry.finallyLoc === finallyLoc) return this.complete(entry.completion, entry.afterLoc), resetTryEntry(entry), ContinueSentinel;\n      }\n    },\n    \"catch\": function _catch(tryLoc) {\n      for (var i = this.tryEntries.length - 1; i >= 0; --i) {\n        var entry = this.tryEntries[i];\n        if (entry.tryLoc === tryLoc) {\n          var record = entry.completion;\n          if (\"throw\" === record.type) {\n            var thrown = record.arg;\n            resetTryEntry(entry);\n          }\n          return thrown;\n        }\n      }\n      throw new Error(\"illegal catch attempt\");\n    },\n    delegateYield: function delegateYield(iterable, resultName, nextLoc) {\n      return this.delegate = {\n        iterator: values(iterable),\n        resultName: resultName,\n        nextLoc: nextLoc\n      }, \"next\" === this.method && (this.arg = undefined), ContinueSentinel;\n    }\n  }, exports;\n}\nmodule.exports = _regeneratorRuntime, module.exports.__esModule = true, module.exports[\"default\"] = module.exports;","function _setPrototypeOf(o, p) {\n  module.exports = _setPrototypeOf = Object.setPrototypeOf ? Object.setPrototypeOf.bind() : function _setPrototypeOf(o, p) {\n    o.__proto__ = p;\n    return o;\n  }, module.exports.__esModule = true, module.exports[\"default\"] = module.exports;\n  return _setPrototypeOf(o, p);\n}\nmodule.exports = _setPrototypeOf, module.exports.__esModule = true, module.exports[\"default\"] = module.exports;","function _typeof(obj) {\n  \"@babel/helpers - typeof\";\n\n  return (module.exports = _typeof = \"function\" == typeof Symbol && \"symbol\" == typeof Symbol.iterator ? function (obj) {\n    return typeof obj;\n  } : function (obj) {\n    return obj && \"function\" == typeof Symbol && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj;\n  }, module.exports.__esModule = true, module.exports[\"default\"] = module.exports), _typeof(obj);\n}\nmodule.exports = _typeof, module.exports.__esModule = true, module.exports[\"default\"] = module.exports;","var getPrototypeOf = require(\"./getPrototypeOf.js\");\nvar setPrototypeOf = require(\"./setPrototypeOf.js\");\nvar isNativeFunction = require(\"./isNativeFunction.js\");\nvar construct = require(\"./construct.js\");\nfunction _wrapNativeSuper(Class) {\n  var _cache = typeof Map === \"function\" ? new Map() : undefined;\n  module.exports = _wrapNativeSuper = function _wrapNativeSuper(Class) {\n    if (Class === null || !isNativeFunction(Class)) return Class;\n    if (typeof Class !== \"function\") {\n      throw new TypeError(\"Super expression must either be null or a function\");\n    }\n    if (typeof _cache !== \"undefined\") {\n      if (_cache.has(Class)) return _cache.get(Class);\n      _cache.set(Class, Wrapper);\n    }\n    function Wrapper() {\n      return construct(Class, arguments, getPrototypeOf(this).constructor);\n    }\n    Wrapper.prototype = Object.create(Class.prototype, {\n      constructor: {\n        value: Wrapper,\n        enumerable: false,\n        writable: true,\n        configurable: true\n      }\n    });\n    return setPrototypeOf(Wrapper, Class);\n  }, module.exports.__esModule = true, module.exports[\"default\"] = module.exports;\n  return _wrapNativeSuper(Class);\n}\nmodule.exports = _wrapNativeSuper, module.exports.__esModule = true, module.exports[\"default\"] = module.exports;","// TODO(Babel 8): Remove this file.\n\nvar runtime = require(\"../helpers/regeneratorRuntime\")();\nmodule.exports = runtime;\n\n// Copied from https://github.com/facebook/regenerator/blob/main/packages/runtime/runtime.js#L736=\ntry {\n  regeneratorRuntime = runtime;\n} catch (accidentalStrictMode) {\n  if (typeof globalThis === \"object\") {\n    globalThis.regeneratorRuntime = runtime;\n  } else {\n    Function(\"r\", \"regeneratorRuntime = r\")(runtime);\n  }\n}\n","export default function _arrayLikeToArray(arr, len) {\n  if (len == null || len > arr.length) len = arr.length;\n  for (var i = 0, arr2 = new Array(len); i < len; i++) {\n    arr2[i] = arr[i];\n  }\n  return arr2;\n}","export default function _assertThisInitialized(self) {\n  if (self === void 0) {\n    throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\");\n  }\n  return self;\n}","function asyncGeneratorStep(gen, resolve, reject, _next, _throw, key, arg) {\n  try {\n    var info = gen[key](arg);\n    var value = info.value;\n  } catch (error) {\n    reject(error);\n    return;\n  }\n  if (info.done) {\n    resolve(value);\n  } else {\n    Promise.resolve(value).then(_next, _throw);\n  }\n}\nexport default function _asyncToGenerator(fn) {\n  return function () {\n    var self = this,\n      args = arguments;\n    return new Promise(function (resolve, reject) {\n      var gen = fn.apply(self, args);\n      function _next(value) {\n        asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"next\", value);\n      }\n      function _throw(err) {\n        asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"throw\", err);\n      }\n      _next(undefined);\n    });\n  };\n}","export default function _classCallCheck(instance, Constructor) {\n  if (!(instance instanceof Constructor)) {\n    throw new TypeError(\"Cannot call a class as a function\");\n  }\n}","function _defineProperties(target, props) {\n  for (var i = 0; i < props.length; i++) {\n    var descriptor = props[i];\n    descriptor.enumerable = descriptor.enumerable || false;\n    descriptor.configurable = true;\n    if (\"value\" in descriptor) descriptor.writable = true;\n    Object.defineProperty(target, descriptor.key, descriptor);\n  }\n}\nexport default function _createClass(Constructor, protoProps, staticProps) {\n  if (protoProps) _defineProperties(Constructor.prototype, protoProps);\n  if (staticProps) _defineProperties(Constructor, staticProps);\n  Object.defineProperty(Constructor, \"prototype\", {\n    writable: false\n  });\n  return Constructor;\n}","export default function _defineProperty(obj, key, value) {\n  if (key in obj) {\n    Object.defineProperty(obj, key, {\n      value: value,\n      enumerable: true,\n      configurable: true,\n      writable: true\n    });\n  } else {\n    obj[key] = value;\n  }\n  return obj;\n}","import superPropBase from \"./superPropBase.js\";\nexport default function _get() {\n  if (typeof Reflect !== \"undefined\" && Reflect.get) {\n    _get = Reflect.get.bind();\n  } else {\n    _get = function _get(target, property, receiver) {\n      var base = superPropBase(target, property);\n      if (!base) return;\n      var desc = Object.getOwnPropertyDescriptor(base, property);\n      if (desc.get) {\n        return desc.get.call(arguments.length < 3 ? target : receiver);\n      }\n      return desc.value;\n    };\n  }\n  return _get.apply(this, arguments);\n}","import getPrototypeOf from \"./getPrototypeOf.js\";\nexport default function _superPropBase(object, property) {\n  while (!Object.prototype.hasOwnProperty.call(object, property)) {\n    object = getPrototypeOf(object);\n    if (object === null) break;\n  }\n  return object;\n}","export default function _getPrototypeOf(o) {\n  _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf.bind() : function _getPrototypeOf(o) {\n    return o.__proto__ || Object.getPrototypeOf(o);\n  };\n  return _getPrototypeOf(o);\n}","import setPrototypeOf from \"./setPrototypeOf.js\";\nexport default function _inherits(subClass, superClass) {\n  if (typeof superClass !== \"function\" && superClass !== null) {\n    throw new TypeError(\"Super expression must either be null or a function\");\n  }\n  subClass.prototype = Object.create(superClass && superClass.prototype, {\n    constructor: {\n      value: subClass,\n      writable: true,\n      configurable: true\n    }\n  });\n  Object.defineProperty(subClass, \"prototype\", {\n    writable: false\n  });\n  if (superClass) setPrototypeOf(subClass, superClass);\n}","import objectWithoutPropertiesLoose from \"./objectWithoutPropertiesLoose.js\";\nexport default function _objectWithoutProperties(source, excluded) {\n  if (source == null) return {};\n  var target = objectWithoutPropertiesLoose(source, excluded);\n  var key, i;\n  if (Object.getOwnPropertySymbols) {\n    var sourceSymbolKeys = Object.getOwnPropertySymbols(source);\n    for (i = 0; i < sourceSymbolKeys.length; i++) {\n      key = sourceSymbolKeys[i];\n      if (excluded.indexOf(key) >= 0) continue;\n      if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue;\n      target[key] = source[key];\n    }\n  }\n  return target;\n}","export default function _objectWithoutPropertiesLoose(source, excluded) {\n  if (source == null) return {};\n  var target = {};\n  var sourceKeys = Object.keys(source);\n  var key, i;\n  for (i = 0; i < sourceKeys.length; i++) {\n    key = sourceKeys[i];\n    if (excluded.indexOf(key) >= 0) continue;\n    target[key] = source[key];\n  }\n  return target;\n}","import _typeof from \"./typeof.js\";\nimport assertThisInitialized from \"./assertThisInitialized.js\";\nexport default function _possibleConstructorReturn(self, call) {\n  if (call && (_typeof(call) === \"object\" || typeof call === \"function\")) {\n    return call;\n  } else if (call !== void 0) {\n    throw new TypeError(\"Derived constructors may only return object or undefined\");\n  }\n  return assertThisInitialized(self);\n}","export default function _setPrototypeOf(o, p) {\n  _setPrototypeOf = Object.setPrototypeOf ? Object.setPrototypeOf.bind() : function _setPrototypeOf(o, p) {\n    o.__proto__ = p;\n    return o;\n  };\n  return _setPrototypeOf(o, p);\n}","import arrayWithHoles from \"./arrayWithHoles.js\";\nimport iterableToArrayLimit from \"./iterableToArrayLimit.js\";\nimport unsupportedIterableToArray from \"./unsupportedIterableToArray.js\";\nimport nonIterableRest from \"./nonIterableRest.js\";\nexport default function _slicedToArray(arr, i) {\n  return arrayWithHoles(arr) || iterableToArrayLimit(arr, i) || unsupportedIterableToArray(arr, i) || nonIterableRest();\n}","export default function _arrayWithHoles(arr) {\n  if (Array.isArray(arr)) return arr;\n}","export default function _iterableToArrayLimit(arr, i) {\n  var _i = arr == null ? null : typeof Symbol !== \"undefined\" && arr[Symbol.iterator] || arr[\"@@iterator\"];\n  if (_i == null) return;\n  var _arr = [];\n  var _n = true;\n  var _d = false;\n  var _s, _e;\n  try {\n    for (_i = _i.call(arr); !(_n = (_s = _i.next()).done); _n = true) {\n      _arr.push(_s.value);\n      if (i && _arr.length === i) break;\n    }\n  } catch (err) {\n    _d = true;\n    _e = err;\n  } finally {\n    try {\n      if (!_n && _i[\"return\"] != null) _i[\"return\"]();\n    } finally {\n      if (_d) throw _e;\n    }\n  }\n  return _arr;\n}","export default function _nonIterableRest() {\n  throw new TypeError(\"Invalid attempt to destructure non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n}","import arrayWithoutHoles from \"./arrayWithoutHoles.js\";\nimport iterableToArray from \"./iterableToArray.js\";\nimport unsupportedIterableToArray from \"./unsupportedIterableToArray.js\";\nimport nonIterableSpread from \"./nonIterableSpread.js\";\nexport default function _toConsumableArray(arr) {\n  return arrayWithoutHoles(arr) || iterableToArray(arr) || unsupportedIterableToArray(arr) || nonIterableSpread();\n}","import arrayLikeToArray from \"./arrayLikeToArray.js\";\nexport default function _arrayWithoutHoles(arr) {\n  if (Array.isArray(arr)) return arrayLikeToArray(arr);\n}","export default function _iterableToArray(iter) {\n  if (typeof Symbol !== \"undefined\" && iter[Symbol.iterator] != null || iter[\"@@iterator\"] != null) return Array.from(iter);\n}","export default function _nonIterableSpread() {\n  throw new TypeError(\"Invalid attempt to spread non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n}","export default function _typeof(obj) {\n  \"@babel/helpers - typeof\";\n\n  return _typeof = \"function\" == typeof Symbol && \"symbol\" == typeof Symbol.iterator ? function (obj) {\n    return typeof obj;\n  } : function (obj) {\n    return obj && \"function\" == typeof Symbol && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj;\n  }, _typeof(obj);\n}","import arrayLikeToArray from \"./arrayLikeToArray.js\";\nexport default function _unsupportedIterableToArray(o, minLen) {\n  if (!o) return;\n  if (typeof o === \"string\") return arrayLikeToArray(o, minLen);\n  var n = Object.prototype.toString.call(o).slice(8, -1);\n  if (n === \"Object\" && o.constructor) n = o.constructor.name;\n  if (n === \"Map\" || n === \"Set\") return Array.from(o);\n  if (n === \"Arguments\" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return arrayLikeToArray(o, minLen);\n}","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tvar cachedModule = __webpack_module_cache__[moduleId];\n\tif (cachedModule !== undefined) {\n\t\treturn cachedModule.exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\t// no module.id needed\n\t\t// no module.loaded needed\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n","// getDefaultExport function for compatibility with non-harmony modules\n__webpack_require__.n = function(module) {\n\tvar getter = module && module.__esModule ?\n\t\tfunction() { return module['default']; } :\n\t\tfunction() { return module; };\n\t__webpack_require__.d(getter, { a: getter });\n\treturn getter;\n};","// define getter functions for harmony exports\n__webpack_require__.d = function(exports, definition) {\n\tfor(var key in definition) {\n\t\tif(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {\n\t\t\tObject.defineProperty(exports, key, { enumerable: true, get: definition[key] });\n\t\t}\n\t}\n};","__webpack_require__.g = (function() {\n\tif (typeof globalThis === 'object') return globalThis;\n\ttry {\n\t\treturn this || new Function('return this')();\n\t} catch (e) {\n\t\tif (typeof window === 'object') return window;\n\t}\n})();","__webpack_require__.o = function(obj, prop) { return Object.prototype.hasOwnProperty.call(obj, prop); }","// define __esModule on exports\n__webpack_require__.r = function(exports) {\n\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n\t}\n\tObject.defineProperty(exports, '__esModule', { value: true });\n};","import {\n  OktaAuthOptionsConstructor,\n} from '../base';\n\nimport {\n  IdxStorageManagerConstructor,\n  IdxTransactionManagerConstructor,\n  OktaAuthIdxOptions,\n  createIdxTransactionManager,\n  createOktaAuthIdx,\n  createIdxStorageManager,\n  createIdxOptionsConstructor\n} from '../idx';\n\nimport { mixinMyAccount } from '../myaccount';\nimport { mixinAuthn } from '../authn';\n\n\n// eslint-disable-next-line @typescript-eslint/no-empty-interface\nexport interface OktaAuthOptions extends OktaAuthIdxOptions {}\n\nconst OptionsConstructor: OktaAuthOptionsConstructor<OktaAuthOptions> = createIdxOptionsConstructor();\nconst StorageManager: IdxStorageManagerConstructor = createIdxStorageManager();\nconst TransactionManager: IdxTransactionManagerConstructor = createIdxTransactionManager();\n\n// Default bundle includes everything\nconst WithIdx = createOktaAuthIdx(StorageManager, OptionsConstructor, TransactionManager);\nconst WithMyAccount = mixinMyAccount(WithIdx);\nconst WithAuthn = mixinAuthn(WithMyAccount);\n\nclass OktaAuth extends WithAuthn {\n  constructor(options: OktaAuthOptions) {\n    super(options);\n  }\n}\n\nexport default OktaAuth;\nexport { OktaAuth };\nexport * from './common';\nexport * from '../idx';\nexport * from '../myaccount';\nexport * from '../authn';\n"],"names":["root","factory","exports","module","define","amd","self","addStateToken","res","options","builtArgs","Object","assign","stateToken","transactionStatus","sdk","args","post","getIssuerOrigin","withCredentials","transactionExists","getSavedStateToken","postToTransaction","tx","url","then","createTransaction","storageUtil","storage","get","STATE_TOKEN_KEY_NAME","link2fn","obj","link","ref","Array","isArray","name","opts","AuthSdkError","lk","find","hints","allow","length","href","isPolling","data","status","factorType","provider","params","autoPush","undefined","e","Promise","reject","omit","rememberDevice","profile","updatePhone","toQueryString","getPollFn","delay","transactionCallBack","isNumber","isObject","DEFAULT_POLLING_DELAY","pollLink","getLink","delayNextPoll","ms","isIOS","race","resolve","timeoutId","setTimeout","pageDidHide","pageVisibilityHandler","document","hidden","clearTimeout","addEventListener","removeEventListener","delayFn","retryCount","recursivePoll","handler","getStateToken","saveAuthnState","pollFn","pollRes","factorResult","AuthPollStopError","catch","err","xhr","delayLength","Math","pow","flattenEmbedded","clone","objArr","o","ol","push","embedded","_embedded","key","prototype","hasOwnProperty","call","fns","linkName","_links","type","poll","fn","links2fns","AuthnTransactionImpl","this","cancel","createAuthnTransactionAPI","bind","resume","resumeTransaction","exists","introspect","transactionStep","introspectAuthn","mixinAuthn","Base","authn","fingerprint","_postToTransaction","sendFingerprint","headers","signIn","createOktaAuthBase","OptionsConstructor","OktaAuthBase","removeNils","emitter","Emitter","features","constants","createBaseOptionsConstructor","devMode","target","i","arguments","source","api","init","converter","defaultAttributes","set","value","attributes","expires","Date","now","toUTCString","encodeURIComponent","replace","decodeURIComponent","escape","stringifiedAttributes","attributeName","split","cookie","write","create","cookies","jar","parts","slice","join","foundKey","read","remove","withAttributes","withConverter","freeze","path","browserHasLocalStorage","getLocalStorage","testStorage","browserHasSessionStorage","getSessionStorage","testStorageType","storageType","supported","getStorageByType","storageProvider","getCookieStorage","getInMemoryStorage","findStorageType","types","curType","nextType","shift","warn","isIE11OrLess","window","onstorage","localStorage","sessionStorage","secure","sameSite","sessionCookie","getItem","setItem","expiresAt","removeItem","delete","useSeparateCookies","keys","forEach","k","indexOf","JSON","parse","stringify","existingValues","storageKey","valueToStore","inMemoryStore","cookieOptions","Cookies","isMessageFromCorrectSource","iframe","event","contentWindow","isFingerprintSupported","timeout","listener","container","body","createElement","style","display","origin","msg","postMessage","addListener","src","appendChild","finally","removeListener","contains","parentElement","removeChild","DEFAULT_MAX_CLOCK_SKEW","DEFAULT_CACHE_DURATION","TOKEN_STORAGE_NAME","CACHE_STORAGE_NAME","PKCE_STORAGE_NAME","TRANSACTION_STORAGE_NAME","SHARED_TRANSACTION_STORAGE_NAME","ORIGINAL_URI_STORAGE_NAME","IDX_RESPONSE_STORAGE_NAME","ACCESS_TOKEN_STORAGE_KEY","ID_TOKEN_STORAGE_KEY","REFRESH_TOKEN_STORAGE_KEY","REFERRER_PATH_STORAGE_KEY","MIN_VERIFIER_LENGTH","MAX_VERIFIER_LENGTH","DEFAULT_CODE_CHALLENGE_METHOD","IDX_API_VERSION","INITIAL_AUTH_STATE","DEFAULT_PENDING","updateAuthStatePromise","canceledTimes","EVENT_AUTH_STATE_CHANGE","AuthStateManager","_sdk","_pending","_authState","_logOptions","_prevAuthState","_transformQueue","PromiseQueue","quiet","tokenManager","on","EVENT_ADDED","token","_setLogOptions","updateAuthState","EVENT_REMOVED","transformAuthState","log","getConsole","group","groupEnd","emitAuthStateChange","authState","prevState","state","isAuthenticated","idToken","accessToken","error","emit","finalPromise","origPromise","curPromise","getAuthState","cancelablePromise","PCancelable","_","onCancel","shouldReject","emitAndResolve","isCanceled","getTokensSync","refreshToken","off","PROMISE_RESOLVED_TRUE","PROMISE_RESOLVED_VOID","sleep","time","resolveWith","randomToken","random","toString","substring","lastMs","additional","microSeconds","getTime","NativeMethod","channelName","messagesCallback","bc","BroadcastChannel","subFns","onmessage","close","channelState","onMessage","messageJson","canBeUsed","_pubkey","Error","averageResponseTime","ObliviousSet","ttl","map","Map","_to","has","add","_this","obliviousSet","olderThen","iterator","Symbol","next","removeTooOldValues","clear","originalOptions","webWorkerSupport","idb","fallbackInterval","onclose","localstorage","removeTimeout","methods","node","maxParallelWrites","useFastPath","OBJECT_STORE_ID","TRANSACTION_SETTINGS","durability","getIdb","indexedDB","mozIndexedDB","webkitIndexedDB","msIndexedDB","commitIndexedDBTransaction","commit","_readLoop","closed","readNewMessages","db","lastCursorId","transaction","objectStore","ret","keyRangeValue","IDBKeyRange","bound","Infinity","getAll","getAllRequest","rej","onerror","onsuccess","result","openCursorRequest","openCursor","ev","cursor","id","getMessagesHigherThan","newerMessages","useMessages","filter","msgObj","uuid","eMIs","messagesCallbackTime","_filterMessage","sort","msgObjA","msgObjB","IndexedDBMethod","dbName","openRequest","open","onupgradeneeded","createObjectStore","keyPath","autoIncrement","createDatabase","writeBlockPromise","readQueuePromises","readerUuid","writeObject","oncomplete","writeMessage","floor","msgObk","tooOld","ids","all","deleteRequest","removeMessagesById","cleanOldMessages","ls","LocalstorageMethod","newValue","addStorageEventListener","writeObj","createEvent","initEvent","dispatchEvent","userAgent","navigator","toLowerCase","includes","defaultTime","SIMULATE_CHANNELS","Set","SimulateMethod","from","channel","METHODS","OPEN_BROADCAST_CHANNELS","lastId","maybePromise","method","chooseMethods","concat","Boolean","m","useMethod","_iL","_onML","_addEL","message","internal","_uMP","_befC","_prepP","s","_state","_post","broadcastChannel","sendPromise","_hasMessageListeners","_addListenerObject","listenerFn","listenerObject","minMessageTime","_startListening","_removeListenerObject","_stopListening","postInternal","listenObj","awaitPrepare","isClosed","USE_METHOD","process","exit","console","trace","WorkerGlobalScope","oldClose","LISTENERS","startedListening","runAll","promises","sendLeaderMessage","leaderElector","action","msgJson","context","beLeader","isLeader","_hasLeader","unloadFn","run","die","_unl","isLeaderListener","_dpLC","_dpL","_lstns","LeaderElectionWebLock","_options","isDead","_wKMC","lN","hasLeader","_this2","locks","query","relevantLocks","held","lock","awaitLeadership","_this3","_wLMP","c","AbortController","returnPromise","request","signal","onduplicate","_fn","_this4","uFn","abort","LeaderElection","_aplQ","_aplQC","hasLeaderListener","createLeaderElection","_leaderElector","responseTime","elector","applyOnce","isFromFallbackInterval","stopCriteriaPromiseResolve","stopCriteria","stopCriteriaPromise","handleMessage","waitForAnswerTime","applyRun","_aLP","resolved","finish","whenDeathListener","tryOnFallBack","LeaderElectionService","onLeaderDuplicate","onLeader","canStart","electionChannelName","started","isBrowser","AutoRenewService","renewTimeQueue","onTokenExpiredHandler","firstTime","syncStorage","tokens","getStorage","isRefreshToken","hasExpired","autoRenew","shouldThrottleRenew","emitError","renew","autoRemove","EVENT_EXPIRED","isStarted","processExpiredTokens","SyncStorageService","onTokenAddedHandler","onTokenRemovedHandler","onTokenRenewedHandler","onSetStorageHandler","onSyncMessageHandler","syncChannelName","EVENT_RENEWED","EVENT_SET_STORAGE","enablePostMessage","oldToken","setStorage","emitAdded","setExpireEventTimeout","clearExpireEventTimeout","emitRemoved","emitRenewed","getNow","RenewOnTabActivationService","onPageVisbilityChange","_onPageVisbilityChange","lastHidden","tabInactivityDuration","getStorageKeyByType","renewOnTabActivation","AUTO_RENEW","SYNC_STORAGE","LEADER_ELECTION","RENEW_ON_TAB_ACTIVATION","ServiceManager","getOptions","broadcastChannelName","defaultOptions","clientId","services","knownServices","svc","createService","startServices","getService","values","some","srv","requiresLeadership","stopServices","entries","canStartService","start","stop","isLeaderRequired","service","createOktaAuthCore","StorageManagerConstructor","TransactionManagerConstructor","WithStorage","mixinStorage","WithHttp","mixinHttp","WithSession","mixinSession","WithOAuth","mixinOAuth","mixinCore","authStateManager","serviceManager","isLoginRedirect","originalUri","handleLoginRedirect","setTokens","getOriginalUri","parseOAuthResponseFromUrl","oAuthResponse","storeTokensFromRedirect","removeOriginalUri","restoreOriginalUri","location","createCoreOptionsConstructor","createOAuthOptionsConstructor","createCoreStorageManager","createOAuthStorageManager","stringToBase64Url","str","base64ToBase64Url","btoa","b64","base64UrlToBase64","b64u","base64UrlToString","utf8","atob","stringToBuffer","buffer","Uint8Array","charCodeAt","base64UrlDecode","base64UrlToBuffer","bufferToBase64Url","bin","reduce","byte","String","fromCharCode","a","b","crypto","getOidcHash","TextEncoder","encode","webcrypto","arrayBuffer","firstHalf","hash","apply","verifyToken","algo","use","cryptoKey","jwt","payload","b64Signature","signature","AuthApiError","meta","errorSummary","errorCode","errorLink","errorId","errorCauses","CustomError","_construct","Parent","Class","Reflect","construct","sham","Proxy","valueOf","instance","Function","setPrototypeOf","_wrapNativeSuper","_cache","TypeError","Wrapper","getPrototypeOf","constructor","enumerable","writable","configurable","OAuthError","summary","resp","error_description","WWWAuthError","scheme","parameters","UNKNOWN_ERROR","errorDescription","realm","header","match","regex","firstSpace","remaining","exec","isFunction","isAuthApiError","isOAuthError","isWWWAuthError","isWindowsPhone","documentMode","getUserAgent","agent","test","isPopupPostMessageSupported","isIE8or9","isWebCryptoSubtleSupported","isTokenVerifySupported","hasTextEncoder","isPKCESupported","isHTTPS","protocol","isLocalhost","hostname","isDPoPSupported","MSStream","OktaUserAgent","environments","SDK_VERSION","maybeAddNodeEnvironment","env","versions","version","setRequestHeader","authClient","headerName","headerValue","_oktaUserAgent","http","issuer","appJsonContentTypeRegex","contentType","param","fetchPromise","global","fetch","crossFetch","credentials","response","ok","json","text","readData","pair","responseText","responseType","responseJSON","formatResult","createHttpOptionsConstructor","transformErrorXHR","httpRequestClient","fetchRequest","httpRequestInterceptors","createStorageOptionsConstructor","formatError","serverErr","isString","wwwAuthHeader","wwwAuthErr","max_age","acr_values","httpRequest","interceptor","httpCache","storageManager","getHttpCache","cacheResponse","cachedResponse","getHttpHeader","ajaxOptions","item","updateStorage","isAbsoluteUrl","postOptions","createIdxTransactionManager","clearIdxResponse","saveLastResponse","getIdxResponseStorage","storedValue","isRawIdxResponse","rawIdxResponse","stateHandle","interactionHandle","useGenericRemediator","clearStorage","createTransactionManager","authenticate","password","authenticator","AuthenticatorKey","flow","Authenticator","OktaPassword","passcode","revokeSessions","idxRemediationValue","inputs","form","required","input","label","formatAuthenticator","incoming","isAuthenticator","compareAuthenticators","auth1","auth2","findMatchedOption","authenticators","option","relatesTo","transactionManager","load","flowSpec","getFlowSpecification","actions","EmailVerifyCallbackError","otp","isEmailVerifyCallbackError","isEmailVerifyCallback","urlPath","parseEmailVerifyCallback","urlParamsToObject","handleEmailVerifyCallback","search","idx","canProceed","proceed","createOktaAuthIdx","Core","mixinIdx","createIdxAPI","setRemediatorsCtx","remediators","boundStartTransaction","startTransaction","interact","makeIdxResponse","makeIdxState","register","recoverPassword","handleInteractionCodeRedirect","isInteractionRequired","isInteractionRequiredError","getSavedTransactionMeta","createTransactionMeta","getTransactionMeta","saveTransactionMeta","clearTransactionMeta","isTransactionMetaValid","setFlow","getFlow","unlockAccount","AuthenticationFlow","Identify","SelectAuthenticatorAuthenticate","SelectAuthenticatorEnroll","AuthenticatorEnrollmentData","AuthenticatorVerificationData","EnrollAuthenticator","ChallengeAuthenticator","ChallengePoll","ReEnrollAuthenticator","ReEnrollAuthenticatorWarning","EnrollPoll","SelectEnrollmentChannel","EnrollmentChannelData","RedirectIdp","Skip","PasswordRecoveryFlow","ResetAuthenticator","RegistrationFlow","SelectEnrollProfile","EnrollProfile","AccountUnlockFlow","SelectAuthenticatorUnlockAccount","oktaAuth","codeVerifier","savedState","URL","searchParams","interactionCode","exchangeCodeForTokens","isFieldMutable","field","mutable","divideSingleActionParamsByMutability","defaultParamsForAction","neededParamsForAction","immutableParamsForAction","generateDirectFetch","actionDefinition","toPersist","accepts","idxResponse","stepUp","generator","actionList","neededParams","defaultParams","immutableParams","divideActionParamsByMutability","jsonpathRegex","SKIP_FIELDS","expandRelatesTo","steps","step","groups","index","lastStep","pop","curr","jsonpath","innerValue","parseIdxResponse","remediationData","remediation","authenticatorChallenge","remediations","rel","remediationActions","remediationValue","generateIdxAction","generateRemediationFunctions","actionFn","convertRemediationAction","fieldValue","info","subField","parseNonRemediations","requestDidSucceed","neededToProceed","remediationChoice","paramsFromUser","remediationChoiceObject","rawIdxState","successWithInteractionCode","parsersForVersion","v1","validateVersionConfig","mixinMinimalIdx","webauthn","mixinMinimalOAuth","prepareTokenParams","decode","decodeToken","pkce","hasResponseType","createMinimalOktaAuthIdx","getResponse","baseUrl","getOAuthBaseUrl","redirectUri","scopes","codeChallenge","codeChallengeMethod","activationToken","recoveryToken","maxAge","acrValues","nonce","clientSecret","client_id","scope","redirect_uri","code_challenge","code_challenge_method","activation_token","recovery_token","client_secret","interaction_handle","newMeta","savedIdxResponse","loadIdxResponse","domain","getOAuthDomain","Accept","createIdxOptionsConstructor","startPolling","availablePollingRemeditaions","Number","isInteger","refresh","nextStep","hasSavedInteractionHandle","autoRemediate","enabledFeatures","IdxFeature","authenticatorData","getAuthenticatorData","getAuthenticatorFromRemediation","methodType","phoneNumber","val","AuthenticatorData","valueKey","getAuthenticator","formatAuthenticatorData","authenticatorsData","mapAuthenticatorDataFromValues","enrollmentId","Remediator","formatAuthenticators","existing","acc","getRequiredValues","hasData","getAllValues","getData","titleCase","entry","_authClient","_context","getName","getInputs","inputFromRemediation","visible","messages","alias","aliases","inputsFromRemediation","inputsFromRemediator","authenticatorFromRemediation","SelectAuthenticator","matchedOption","isCurrentAuthenticator","currentAuthenticator","isCurrentAuthenticatorEnrollment","currentAuthenticatorEnrollment","selectedAuthenticator","selectedOption","VerificationCodeAuthenticator","verificationCode","OktaVerifyTotp","totp","SecurityQuestionEnrollment","questionKey","answer","question","SecurityQuestionVerification","contextualData","enrolledQuestion","WebauthnEnrollment","clientData","attestation","WebauthnVerification","signatureData","VerifyAuthenticator","challengeData","authenticatorEnrollments","canVerify","mapCredentials","common","getCredentialsFromRemediation","userProfileFromValues","userProfile","canRemediate","attributeValues","errorRemediation","errors","email","unwrapFormValue","formKeys","unwrappedForm","GenericRemediator","endsWith","produces","rest","identifier","newPassword","idp","isRecoveryFlow","authenticatorMap","methodTypeOption","methodTypeValue","filterKey","skip","idxRemediation","r","cur","charAt","toUpperCase","getActionFromValues","resend","removeActionFromValues","removeActionFromOptions","actionName","remediate","remediator","getRemediator","actionFromValues","actionFromOptions","valuesWithoutExecutedAction","optionsWithoutExecutedAction","handleFailedResponse","canceled","terminal","isTerminalResponse","filterValuesForRemediation","getNextStep","getValuesAfterProceed","gr","initializeValues","initializeData","IdxStatus","getDataFromIntrospect","interactResponse","getDataFromRemediate","idxResponseFromRemediation","getTokens","ignoreSignature","urls","tokenResponse","finalizeData","shouldSaveResponse","shouldClearTransaction","clearSharedStorage","getEnabledFeatures","availableSteps","getAvailableSteps","getMessagesFromResponse","hasActions","hasErrors","class","saveIdxResponse","createIdxStorageManager","storageManagerOptions","transactionStorage","getTransactionStorage","SavedObject","tokenParams","pkceMeta","createOAuthMeta","savedMeta","validExistingMeta","save","muteWarning","isTransactionMetaValidForOptions","isTransactionMetaValidForFlow","ctx","_oktaAuth","newCtx","getMessagesFromIdxRemediationValue","messagesFromForm","optionValues","messagesFromOptions","globalMessages","fieldMessages","seen","filtered","i18n","remediatorMap","remediatorClass","remediationName","T","getRemediatorClass","stepObj","startsWith","split2","part1","part2","actionObj","idxRemediations","remediatorCandidates","canSkip","canSkipFn","canResend","canResendFn","getEnrolledCredentials","enrollement","credentialId","buildCredentialCreationOptions","activationData","publicKey","rp","user","displayName","challenge","pubKeyCredParams","authenticatorSelection","excludeCredentials","buildCredentialRequestOptions","userVerification","allowCredentials","getAttestation","credential","clientDataJSON","attestationObject","getAssertion","BaseTransaction","sendRequest","TransactionClass","accessTokenObj","requestUrl","generateRequestFnFromLinks","methodName","links","ProfileTransaction","createdAt","modifiedAt","ProfileSchemaTransaction","properties","getProfile","updateProfile","getProfileSchema","EmailStatusTransaction","EmailChallengeTransaction","verify","EmailTransaction","roles","getEmails","getEmail","addEmail","deleteEmail","sendEmailChallenge","getEmailChallenge","emailId","challengeId","verifyEmailChallenge","PhoneTransaction","getPhones","getPhone","addPhone","deletePhone","sendPhoneChallenge","verifyPhoneChallenge","PasswordTransaction","created","lastUpdated","PasswordStatus","enroll","update","getPassword","enrollPassword","updatePassword","deletePassword","createOktaAuthMyAccount","TransactionManager","mixinMyAccount","myaccount","MyAccountMethods","EmailRole","Status","SdkClock","localOffset","parseInt","DEFAULT_OPTIONS","clearPendingRemoveTokens","expireEarlySeconds","TokenManager","storageOptions","getTokenStorage","clock","expireTimeouts","renewPromise","setExpireEventTimeoutAll","clearExpireEventTimeoutAll","getExpireTime","freshToken","EVENT_ERROR","expireTime","expireEventWait","max","expireEventTimeout","emitExpired","tokenStorage","validateToken","emitSetStorageEvent","getSync","isAccessToken","isIDToken","accessTokenCb","idTokenCb","refreshTokenCb","handleTokenCallback","getTokenType","handleAdded","handleRemoved","existingTokens","newToken","existingToken","removedToken","shouldRenew","refreshKey","renewTokens","tokenKey","removedTokens","pendingRemove","MAX_ENTRY_LIFETIME","enableSharedStorage","sharedStorage","getSharedTansactionStorage","clearTransactionFromSharedStorage","isTransactionMeta","dateCreated","saveTransactionToSharedStorage","loadTransactionFromSharedStorage","decodedToken","INDEXEDDB_NAME","DB_KEY","isDPoPNonceError","createJwt","claims","signingKey","head","algorithm","cryptoRandomValue","byteLen","v","generateKeyPair","modulusLength","publicExponent","hashAccessToken","invokeStoreMethod","req","store","storeKeyPair","pairId","keyPair","findKeyPair","clearDPoPKeyPair","clearAllDPoPKeyPairs","createDPoPKeyPair","keyPairId","clearDPoPKeyPairAfterRevoke","revokedToken","shouldClear","tokenType","dpopPairId","generateDPoPProof","kty","crv","n","x","y","alg","typ","jwk","htm","htu","iat","jti","ath","privateKey","generateDPoPForTokenRequest","convertTokenParamsToOAuthParams","oauthParams","idpScope","loginHint","prompt","responseMode","sessionToken","enrollAmrValues","mayBeArray","buildAuthorizeParams","oauthQueryParams","extraParams","validateOptions","authorizationCode","getPostData","code","makeTokenRequest","dpopKeyPair","dpop","proof","DPoP","dpopNonce","postToTokenEndpoint","tokenUrl","postRefreshToken","grant_type","refresh_token","getWellKnown","authServerUri","getKey","kid","wellKnown","jwksUri","cachedKey","getOAuthUrls","getDefaultTokenParams","getTokenOptions","handleResponseOptions","oauthResponse","handleOAuthResponse","enrollAuthenticator","prepareEnrollAuthenticatorParams","createEnrollAuthenticatorMeta","authorizeUrl","setLocation","createTokenAPI","queue","useQueue","getWithRedirectFn","getWithRedirect","parseFromUrlFn","parseFromUrl","parseFromUrlApi","_getHistory","history","_getLocation","_getDocument","getWithoutPrompt","getWithPopup","revoke","revokeToken","renewToken","renewTokensWithRefresh","getUserInfo","accessTokenObject","idTokenObject","oidcIntrospect","createEndpoints","authorize","createOktaAuthOAuth","getToken","popupWindow","iframePromise","addPostMessageListener","iframeEl","loadFrame","oauthPromise","closePoller","setInterval","clearInterval","userinfoUrl","getDPoPAuthorizationHeaders","userInfo","sub","loadPopup","validateResponse","token_type","interaction_code","tokenDict","expiresIn","expires_in","access_token","id_token","accessJwt","idJwt","idTokenObj","exp","validationParams","hintMap","kind","TokenKind","iss","introspectUrl","introspection_endpoint","authHeader","token_type_hint","WithOriginalUri","browserStorage","getOriginalUriStorage","PKCE","generateVerifier","computeChallenge","handleLogin","_tokenQueue","endpoints","onExpiredToken","shouldRemove","additionalParams","setOriginalUri","accessTokenKey","refreshTokenKey","postLogoutRedirectUri","logoutUrl","idTokenHint","logoutUri","defaultUri","currentUri","revokeAccessToken","revokeRefreshToken","getSignOutRedirectUrl","closeSession","sessionClosed","append","clearTokensBeforeRedirect","addPendingRemoveFlags","Authorization","Dpop","wwwAuth","wwwErr","RegExp","assertValidConfig","removeTrailingSlash","revokeUrl","toAbsoluteUrl","ignoreLifetime","maxClockSkew","getResponseMode","defaultResponseMode","paramStr","nativeLoc","cleanOAuthResponseFromUrl","nativeHistory","nativeDoc","replaceState","title","pathname","removeSearch","removeHash","throwInvalidTokenError","getSingleToken","originalToken","refreshTokenObject","renewTokenParams","endpointParams","isSameRefreshToken","updateRefreshToken","isRefreshTokenInvalidError","removeRefreshToken","creds","getOptionsForSection","logServerSideMemoryStorageWarning","BaseStorageManager","isToken","isObjectWithProperties","isOAuthTransactionMeta","isPKCETransactionMeta","isIdxTransactionMeta","isCustomAuthTransactionMeta","eventTarget","attachEvent","detachEvent","popupTitle","responseHandler","getDefaultEnrollAuthenticatorParams","defaultRedirectUri","generateState","generateNonce","isAuthorizationCodeError","errorResponse","hasTokensInHash","hasAuthorizationCode","hashOrSearch","hasInteractionCode","hasErrorInUrl","isRedirectUri","uri","authParams","isCodeFlow","getHashOrSearch","codeFlow","genRandomString","getIssuer","oauthMeta","dec2hex","dec","substr","prefix","verifier","ceil","prepareParams","assertPKCESupport","errorMessage","validateCodeChallengeMethod","preparePKCE","defaults","isRefreshTokenError","plus2space","paramSplit","fragment","validateClaims","aud","acr","configuredIssuer","validationOptions","sdkCrypto","at_hash","sessionExists","session","getSession","refreshSession","setCookieAndRedirect","redirectUrl","checkAccountSetupComplete","createSessionApi","sectionName","overrideOptions","storageTypes","storageName","storageString","StorageManager","STORAGE_MANAGER_OPTIONS","cache","cookieSettings","getCookieSettings","running","thisObject","queueItem","isPromise","getNativeConsole","nativeConsole","deprecate","deprecateWrap","isoToUTCString","isoTime","UTC","randomCharset","delim","splice","additionalArgs","extend","obj1","prop","cleaned","newobj","props","p","collection","found","altName","toRelativeUrl","trimmed","CancelError","reason","executor","_cancelHandlers","_isPending","_isCanceled","_rejectOnCancel","_promise","_reject","defineProperties","boolean","onFulfilled","onRejected","onFinally","userFn","arguments_","__self__","F","DOMException","support","iterable","blob","Blob","formData","viewClasses","isArrayBufferView","ArrayBuffer","isView","normalizeName","normalizeValue","iteratorFor","items","done","Headers","getOwnPropertyNames","consumed","bodyUsed","fileReaderReady","reader","onload","readBlobAsArrayBuffer","FileReader","promise","readAsArrayBuffer","bufferClone","buf","view","byteLength","Body","_initBody","_bodyInit","_bodyText","isPrototypeOf","_bodyBlob","FormData","_bodyFormData","URLSearchParams","DataView","_bodyArrayBuffer","rejected","readAsText","chars","readArrayBufferAsText","oldValue","callback","thisArg","Request","upcased","mode","referrer","trim","bytes","Response","bodyInit","statusText","redirectStatuses","redirect","RangeError","stack","aborted","XMLHttpRequest","abortXhr","rawHeaders","getAllResponseHeaders","line","responseURL","ontimeout","onabort","onreadystatechange","readyState","send","polyfill","defineProperty","ponyfill","E","once","evtArr","len","evts","liveEvents","ReferenceError","__esModule","Constructor","isNativeReflectConstruct","_defineProperties","descriptor","protoProps","staticProps","_getPrototypeOf","__proto__","subClass","superClass","_typeof","assertThisInitialized","_regeneratorRuntime","Op","hasOwn","$Symbol","iteratorSymbol","asyncIteratorSymbol","asyncIterator","toStringTagSymbol","toStringTag","wrap","innerFn","outerFn","tryLocsList","protoGenerator","Generator","Context","_invoke","arg","delegate","delegateResult","maybeInvokeDelegate","ContinueSentinel","sent","_sent","dispatchException","abrupt","record","tryCatch","GeneratorFunction","GeneratorFunctionPrototype","IteratorPrototype","getProto","NativeIteratorPrototype","Gp","defineIteratorMethods","AsyncIterator","PromiseImpl","invoke","__await","unwrapped","previousPromise","callInvokeWithMethodAndArg","resultName","nextLoc","pushTryEntry","locs","tryLoc","catchLoc","finallyLoc","afterLoc","tryEntries","resetTryEntry","completion","reset","iteratorMethod","isNaN","doneResult","isGeneratorFunction","genFun","ctor","mark","awrap","async","iter","object","reverse","skipTempReset","prev","rootRecord","rval","exception","handle","loc","caught","hasCatch","hasFinally","finallyEntry","complete","thrown","delegateYield","_setPrototypeOf","isNativeFunction","runtime","regeneratorRuntime","accidentalStrictMode","globalThis","_arrayLikeToArray","arr","arr2","_assertThisInitialized","asyncGeneratorStep","gen","_next","_throw","_asyncToGenerator","_classCallCheck","_createClass","_defineProperty","_get","property","receiver","base","desc","getOwnPropertyDescriptor","_inherits","_objectWithoutProperties","excluded","sourceKeys","getOwnPropertySymbols","sourceSymbolKeys","propertyIsEnumerable","_possibleConstructorReturn","_slicedToArray","_i","_s","_e","_arr","_n","_d","unsupportedIterableToArray","_toConsumableArray","arrayLikeToArray","_unsupportedIterableToArray","minLen","__webpack_module_cache__","__webpack_require__","moduleId","cachedModule","__webpack_modules__","getter","d","definition","g","WithIdx","WithMyAccount","OktaAuth"],"sourceRoot":""}