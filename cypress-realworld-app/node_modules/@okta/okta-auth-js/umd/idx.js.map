{"version":3,"file":"idx.js","mappings":"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","sources":["webpack://OktaAuth/webpack/universalModuleDefinition","webpack://OktaAuth/./lib/base/factory.ts","webpack://OktaAuth/./lib/base/options.ts","webpack://OktaAuth/./node_modules/js-cookie/dist/js.cookie.mjs","webpack://OktaAuth/./lib/browser/browserStorage.ts","webpack://OktaAuth/./lib/browser/fingerprint.ts","webpack://OktaAuth/./lib/constants.ts","webpack://OktaAuth/./lib/core/AuthStateManager.ts","webpack://OktaAuth/./node_modules/broadcast-channel/dist/esbrowser/util.js","webpack://OktaAuth/./node_modules/broadcast-channel/dist/esbrowser/methods/native.js","webpack://OktaAuth/./node_modules/oblivious-set/dist/es/index.js","webpack://OktaAuth/./node_modules/broadcast-channel/dist/esbrowser/options.js","webpack://OktaAuth/./node_modules/broadcast-channel/dist/esbrowser/methods/indexed-db.js","webpack://OktaAuth/./node_modules/broadcast-channel/dist/esbrowser/methods/localstorage.js","webpack://OktaAuth/./node_modules/broadcast-channel/dist/esbrowser/methods/simulate.js","webpack://OktaAuth/./node_modules/broadcast-channel/dist/esbrowser/method-chooser.js","webpack://OktaAuth/./node_modules/broadcast-channel/dist/esbrowser/broadcast-channel.js","webpack://OktaAuth/./node_modules/unload/dist/es/index.js","webpack://OktaAuth/./node_modules/unload/dist/es/node.js","webpack://OktaAuth/./node_modules/unload/dist/es/browser.js","webpack://OktaAuth/./node_modules/broadcast-channel/dist/esbrowser/leader-election-util.js","webpack://OktaAuth/./node_modules/broadcast-channel/dist/esbrowser/leader-election-web-lock.js","webpack://OktaAuth/./node_modules/broadcast-channel/dist/esbrowser/leader-election.js","webpack://OktaAuth/./lib/services/LeaderElectionService.ts","webpack://OktaAuth/./lib/services/AutoRenewService.ts","webpack://OktaAuth/./lib/services/SyncStorageService.ts","webpack://OktaAuth/./lib/services/RenewOnTabActivationService.ts","webpack://OktaAuth/./lib/core/ServiceManager/browser.ts","webpack://OktaAuth/./lib/core/factory.ts","webpack://OktaAuth/./lib/core/mixin.ts","webpack://OktaAuth/./lib/core/options.ts","webpack://OktaAuth/./lib/core/storage.ts","webpack://OktaAuth/./lib/crypto/base64.ts","webpack://OktaAuth/./lib/crypto/browser.ts","webpack://OktaAuth/./lib/crypto/oidcHash.ts","webpack://OktaAuth/./lib/crypto/verifyToken.ts","webpack://OktaAuth/./lib/errors/AuthApiError.ts","webpack://OktaAuth/./lib/errors/AuthPollStopError.ts","webpack://OktaAuth/./lib/errors/AuthSdkError.ts","webpack://OktaAuth/./node_modules/@babel/runtime/helpers/esm/construct.js","webpack://OktaAuth/./node_modules/@babel/runtime/helpers/esm/isNativeReflectConstruct.js","webpack://OktaAuth/./node_modules/@babel/runtime/helpers/esm/wrapNativeSuper.js","webpack://OktaAuth/./node_modules/@babel/runtime/helpers/esm/isNativeFunction.js","webpack://OktaAuth/./lib/errors/CustomError.ts","webpack://OktaAuth/./lib/errors/OAuthError.ts","webpack://OktaAuth/./lib/errors/WWWAuthError.ts","webpack://OktaAuth/./lib/errors/index.ts","webpack://OktaAuth/./lib/features.ts","webpack://OktaAuth/./lib/http/OktaUserAgent.ts","webpack://OktaAuth/./lib/http/headers.ts","webpack://OktaAuth/./lib/http/mixin.ts","webpack://OktaAuth/./lib/fetch/fetchRequest.ts","webpack://OktaAuth/./lib/http/options.ts","webpack://OktaAuth/./lib/http/request.ts","webpack://OktaAuth/./lib/idx/IdxTransactionManager.ts","webpack://OktaAuth/./lib/idx/authenticate.ts","webpack://OktaAuth/./lib/idx/authenticator/Authenticator.ts","webpack://OktaAuth/./lib/idx/authenticator/OktaPassword.ts","webpack://OktaAuth/./lib/idx/authenticator/util.ts","webpack://OktaAuth/./lib/idx/cancel.ts","webpack://OktaAuth/./lib/idx/emailVerify.ts","webpack://OktaAuth/./lib/idx/factory/OktaAuthIdx.ts","webpack://OktaAuth/./lib/idx/factory/api.ts","webpack://OktaAuth/./lib/idx/flow/AuthenticationFlow.ts","webpack://OktaAuth/./lib/idx/flow/PasswordRecoveryFlow.ts","webpack://OktaAuth/./lib/idx/flow/RegistrationFlow.ts","webpack://OktaAuth/./lib/idx/flow/AccountUnlockFlow.ts","webpack://OktaAuth/./lib/idx/flow/FlowSpecification.ts","webpack://OktaAuth/./lib/idx/handleInteractionCodeRedirect.ts","webpack://OktaAuth/./lib/idx/idxState/v1/actionParser.ts","webpack://OktaAuth/./lib/idx/idxState/v1/generateIdxAction.ts","webpack://OktaAuth/./lib/idx/idxState/v1/remediationParser.ts","webpack://OktaAuth/./lib/util/jsonpath.ts","webpack://OktaAuth/./lib/idx/idxState/v1/idxResponseParser.ts","webpack://OktaAuth/./lib/idx/idxState/v1/parsers.ts","webpack://OktaAuth/./lib/idx/idxState/v1/makeIdxState.ts","webpack://OktaAuth/./lib/idx/idxState/index.ts","webpack://OktaAuth/./lib/idx/mixinMinimal.ts","webpack://OktaAuth/./lib/idx/factory/minimalApi.ts","webpack://OktaAuth/./lib/oidc/mixin/minimal.ts","webpack://OktaAuth/./lib/oidc/factory/baseApi.ts","webpack://OktaAuth/./lib/idx/factory/MinimalOktaAuthIdx.ts","webpack://OktaAuth/./lib/idx/interact.ts","webpack://OktaAuth/./lib/idx/introspect.ts","webpack://OktaAuth/./lib/idx/mixin.ts","webpack://OktaAuth/./lib/idx/options.ts","webpack://OktaAuth/./lib/idx/poll.ts","webpack://OktaAuth/./lib/idx/proceed.ts","webpack://OktaAuth/./lib/idx/recoverPassword.ts","webpack://OktaAuth/./lib/idx/register.ts","webpack://OktaAuth/./lib/idx/remediators/AuthenticatorEnrollmentData.ts","webpack://OktaAuth/./lib/idx/remediators/AuthenticatorVerificationData.ts","webpack://OktaAuth/./lib/idx/remediators/Base/AuthenticatorData.ts","webpack://OktaAuth/./lib/idx/remediators/Base/Remediator.ts","webpack://OktaAuth/./lib/idx/remediators/Base/SelectAuthenticator.ts","webpack://OktaAuth/./lib/idx/authenticator/VerificationCodeAuthenticator.ts","webpack://OktaAuth/./lib/idx/authenticator/OktaVerifyTotp.ts","webpack://OktaAuth/./lib/idx/authenticator/SecurityQuestionEnrollment.ts","webpack://OktaAuth/./lib/idx/authenticator/SecurityQuestionVerification.ts","webpack://OktaAuth/./lib/idx/authenticator/WebauthnEnrollment.ts","webpack://OktaAuth/./lib/idx/authenticator/WebauthnVerification.ts","webpack://OktaAuth/./lib/idx/remediators/Base/VerifyAuthenticator.ts","webpack://OktaAuth/./lib/idx/authenticator/getAuthenticator.ts","webpack://OktaAuth/./lib/idx/remediators/ChallengeAuthenticator.ts","webpack://OktaAuth/./lib/idx/remediators/ChallengePoll.ts","webpack://OktaAuth/./lib/idx/remediators/EnrollAuthenticator.ts","webpack://OktaAuth/./lib/idx/remediators/EnrollPoll.ts","webpack://OktaAuth/./lib/idx/remediators/EnrollProfile.ts","webpack://OktaAuth/./lib/idx/remediators/EnrollmentChannelData.ts","webpack://OktaAuth/./lib/idx/remediators/GenericRemediator/util.ts","webpack://OktaAuth/./lib/idx/remediators/GenericRemediator/GenericRemediator.ts","webpack://OktaAuth/./lib/idx/remediators/Identify.ts","webpack://OktaAuth/./lib/idx/remediators/ReEnrollAuthenticator.ts","webpack://OktaAuth/./lib/idx/remediators/ReEnrollAuthenticatorWarning.ts","webpack://OktaAuth/./lib/idx/remediators/RedirectIdp.ts","webpack://OktaAuth/./lib/idx/remediators/ResetAuthenticator.ts","webpack://OktaAuth/./lib/idx/remediators/SelectAuthenticatorAuthenticate.ts","webpack://OktaAuth/./lib/idx/remediators/SelectAuthenticatorEnroll.ts","webpack://OktaAuth/./lib/idx/remediators/SelectAuthenticatorUnlockAccount.ts","webpack://OktaAuth/./lib/idx/remediators/SelectEnrollProfile.ts","webpack://OktaAuth/./lib/idx/remediators/SelectEnrollmentChannel.ts","webpack://OktaAuth/./lib/idx/remediators/Skip.ts","webpack://OktaAuth/./lib/idx/remediators/util.ts","webpack://OktaAuth/./lib/idx/remediate.ts","webpack://OktaAuth/./lib/idx/run.ts","webpack://OktaAuth/./lib/idx/startTransaction.ts","webpack://OktaAuth/./lib/idx/storage.ts","webpack://OktaAuth/./lib/idx/transactionMeta.ts","webpack://OktaAuth/./lib/idx/types/api.ts","webpack://OktaAuth/./lib/idx/types/idx-js.ts","webpack://OktaAuth/./lib/idx/unlockAccount.ts","webpack://OktaAuth/./lib/idx/util.ts","webpack://OktaAuth/./lib/idx/webauthn.ts","webpack://OktaAuth/./lib/clock.ts","webpack://OktaAuth/./lib/oidc/TokenManager.ts","webpack://OktaAuth/./lib/oidc/util/sharedStorage.ts","webpack://OktaAuth/./lib/oidc/TransactionManager.ts","webpack://OktaAuth/./lib/oidc/decodeToken.ts","webpack://OktaAuth/./lib/oidc/dpop.ts","webpack://OktaAuth/./lib/oidc/endpoints/authorize.ts","webpack://OktaAuth/./lib/oidc/endpoints/token.ts","webpack://OktaAuth/./lib/oidc/endpoints/well-known.ts","webpack://OktaAuth/./lib/oidc/exchangeCodeForTokens.ts","webpack://OktaAuth/./lib/oidc/enrollAuthenticator.ts","webpack://OktaAuth/./lib/oidc/factory/api.ts","webpack://OktaAuth/./lib/oidc/factory/OktaAuthOAuth.ts","webpack://OktaAuth/./lib/oidc/getToken.ts","webpack://OktaAuth/./lib/oidc/getUserInfo.ts","webpack://OktaAuth/./lib/oidc/getWithPopup.ts","webpack://OktaAuth/./lib/oidc/getWithRedirect.ts","webpack://OktaAuth/./lib/oidc/getWithoutPrompt.ts","webpack://OktaAuth/./lib/oidc/handleOAuthResponse.ts","webpack://OktaAuth/./lib/oidc/introspect.ts","webpack://OktaAuth/./lib/oidc/mixin/index.ts","webpack://OktaAuth/./lib/oidc/mixin/browser.ts","webpack://OktaAuth/./lib/oidc/options/browser.ts","webpack://OktaAuth/./lib/oidc/options/OAuthOptionsConstructor.ts","webpack://OktaAuth/./lib/oidc/parseFromUrl.ts","webpack://OktaAuth/./lib/oidc/renewToken.ts","webpack://OktaAuth/./lib/oidc/renewTokens.ts","webpack://OktaAuth/./lib/oidc/renewTokensWithRefresh.ts","webpack://OktaAuth/./lib/oidc/revokeToken.ts","webpack://OktaAuth/./lib/oidc/storage.ts","webpack://OktaAuth/./lib/oidc/types/Token.ts","webpack://OktaAuth/./lib/oidc/types/TokenManager.ts","webpack://OktaAuth/./lib/oidc/types/Transaction.ts","webpack://OktaAuth/./lib/oidc/util/browser.ts","webpack://OktaAuth/./lib/oidc/util/defaultEnrollAuthenticatorParams.ts","webpack://OktaAuth/./lib/oidc/util/defaultTokenParams.ts","webpack://OktaAuth/./lib/oidc/util/enrollAuthenticatorMeta.ts","webpack://OktaAuth/./lib/oidc/util/errors.ts","webpack://OktaAuth/./lib/oidc/util/loginRedirect.ts","webpack://OktaAuth/./lib/oidc/util/oauth.ts","webpack://OktaAuth/./lib/oidc/util/oauthMeta.ts","webpack://OktaAuth/./lib/oidc/util/pkce.ts","webpack://OktaAuth/./lib/oidc/util/prepareEnrollAuthenticatorParams.ts","webpack://OktaAuth/./lib/oidc/util/prepareTokenParams.ts","webpack://OktaAuth/./lib/oidc/util/refreshToken.ts","webpack://OktaAuth/./lib/oidc/util/urlParams.ts","webpack://OktaAuth/./lib/oidc/util/validateClaims.ts","webpack://OktaAuth/./lib/oidc/util/validateToken.ts","webpack://OktaAuth/./lib/oidc/verifyToken.ts","webpack://OktaAuth/./lib/session/api.ts","webpack://OktaAuth/./lib/session/factory.ts","webpack://OktaAuth/./lib/session/mixin.ts","webpack://OktaAuth/./lib/storage/BaseStorageManager.ts","webpack://OktaAuth/./lib/storage/SavedObject.ts","webpack://OktaAuth/./lib/storage/mixin.ts","webpack://OktaAuth/./lib/storage/options/browser.ts","webpack://OktaAuth/./lib/storage/options/StorageOptionsConstructor.ts","webpack://OktaAuth/./lib/util/PromiseQueue.ts","webpack://OktaAuth/./lib/util/console.ts","webpack://OktaAuth/./lib/util/misc.ts","webpack://OktaAuth/./lib/util/object.ts","webpack://OktaAuth/./lib/util/types.ts","webpack://OktaAuth/./lib/util/url.ts","webpack://OktaAuth/./node_modules/p-cancelable/index.js","webpack://OktaAuth/./node_modules/cross-fetch/dist/browser-ponyfill.js","webpack://OktaAuth/./node_modules/tiny-emitter/index.js","webpack://OktaAuth/./node_modules/@babel/runtime/helpers/assertThisInitialized.js","webpack://OktaAuth/./node_modules/@babel/runtime/helpers/classCallCheck.js","webpack://OktaAuth/./node_modules/@babel/runtime/helpers/construct.js","webpack://OktaAuth/./node_modules/@babel/runtime/helpers/createClass.js","webpack://OktaAuth/./node_modules/@babel/runtime/helpers/getPrototypeOf.js","webpack://OktaAuth/./node_modules/@babel/runtime/helpers/inherits.js","webpack://OktaAuth/./node_modules/@babel/runtime/helpers/isNativeFunction.js","webpack://OktaAuth/./node_modules/@babel/runtime/helpers/isNativeReflectConstruct.js","webpack://OktaAuth/./node_modules/@babel/runtime/helpers/possibleConstructorReturn.js","webpack://OktaAuth/./node_modules/@babel/runtime/helpers/regeneratorRuntime.js","webpack://OktaAuth/./node_modules/@babel/runtime/helpers/setPrototypeOf.js","webpack://OktaAuth/./node_modules/@babel/runtime/helpers/typeof.js","webpack://OktaAuth/./node_modules/@babel/runtime/helpers/wrapNativeSuper.js","webpack://OktaAuth/./node_modules/@babel/runtime/regenerator/index.js","webpack://OktaAuth/./node_modules/@babel/runtime/helpers/esm/arrayLikeToArray.js","webpack://OktaAuth/./node_modules/@babel/runtime/helpers/esm/assertThisInitialized.js","webpack://OktaAuth/./node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js","webpack://OktaAuth/./node_modules/@babel/runtime/helpers/esm/classCallCheck.js","webpack://OktaAuth/./node_modules/@babel/runtime/helpers/esm/createClass.js","webpack://OktaAuth/./node_modules/@babel/runtime/helpers/esm/defineProperty.js","webpack://OktaAuth/./node_modules/@babel/runtime/helpers/esm/get.js","webpack://OktaAuth/./node_modules/@babel/runtime/helpers/esm/superPropBase.js","webpack://OktaAuth/./node_modules/@babel/runtime/helpers/esm/getPrototypeOf.js","webpack://OktaAuth/./node_modules/@babel/runtime/helpers/esm/inherits.js","webpack://OktaAuth/./node_modules/@babel/runtime/helpers/esm/objectWithoutProperties.js","webpack://OktaAuth/./node_modules/@babel/runtime/helpers/esm/objectWithoutPropertiesLoose.js","webpack://OktaAuth/./node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn.js","webpack://OktaAuth/./node_modules/@babel/runtime/helpers/esm/setPrototypeOf.js","webpack://OktaAuth/./node_modules/@babel/runtime/helpers/esm/slicedToArray.js","webpack://OktaAuth/./node_modules/@babel/runtime/helpers/esm/arrayWithHoles.js","webpack://OktaAuth/./node_modules/@babel/runtime/helpers/esm/iterableToArrayLimit.js","webpack://OktaAuth/./node_modules/@babel/runtime/helpers/esm/nonIterableRest.js","webpack://OktaAuth/./node_modules/@babel/runtime/helpers/esm/toConsumableArray.js","webpack://OktaAuth/./node_modules/@babel/runtime/helpers/esm/arrayWithoutHoles.js","webpack://OktaAuth/./node_modules/@babel/runtime/helpers/esm/iterableToArray.js","webpack://OktaAuth/./node_modules/@babel/runtime/helpers/esm/nonIterableSpread.js","webpack://OktaAuth/./node_modules/@babel/runtime/helpers/esm/typeof.js","webpack://OktaAuth/./node_modules/@babel/runtime/helpers/esm/unsupportedIterableToArray.js","webpack://OktaAuth/webpack/bootstrap","webpack://OktaAuth/webpack/runtime/compat get default export","webpack://OktaAuth/webpack/runtime/define property getters","webpack://OktaAuth/webpack/runtime/global","webpack://OktaAuth/webpack/runtime/hasOwnProperty shorthand","webpack://OktaAuth/webpack/runtime/make namespace object","webpack://OktaAuth/./lib/exports/idx.ts"],"sourcesContent":["(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory();\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine([], factory);\n\telse if(typeof exports === 'object')\n\t\texports[\"OktaAuth\"] = factory();\n\telse\n\t\troot[\"OktaAuth\"] = factory();\n})(self, function() {\nreturn ","\n\n// Do not use this type in code, so it won't be emitted in the declaration output\nimport { removeNils } from '../util';\n\nimport * as features from '../features';\nimport * as constants from '../constants';\n\n// eslint-disable-next-line @typescript-eslint/ban-ts-comment\n// @ts-ignore \n// Do not use this type in code, so it won't be emitted in the declaration output\nimport Emitter from 'tiny-emitter';\n\nimport {\n  EventEmitter,\n  OktaAuthConstructor,\n  OktaAuthBaseInterface,\n  OktaAuthBaseOptions,\n  OktaAuthOptionsConstructor, \n  FeaturesAPI,\n} from './types';\n\nexport function createOktaAuthBase\n<\n  O extends OktaAuthBaseOptions = OktaAuthBaseOptions,\n>\n(\n  OptionsConstructor: OktaAuthOptionsConstructor<O>\n): OktaAuthConstructor<OktaAuthBaseInterface<O>>\n{\n  class OktaAuthBase implements OktaAuthBaseInterface<O>\n  {\n    options: O;\n    emitter: EventEmitter;\n    features: FeaturesAPI;\n    static features: FeaturesAPI = features;\n    static constants = constants;\n    \n    constructor(...args: any[]) {\n      const options = new OptionsConstructor(args.length ? args[0] || {} : {});\n      this.options = removeNils(options) as O; // clear out undefined values\n      this.emitter = new Emitter();\n      this.features = features;\n    }\n  }\n\n  // Hoist feature detection functions to prototype & static type\n  OktaAuthBase.features = OktaAuthBase.prototype.features = features;\n\n  // Also hoist constants for CommonJS users\n  Object.assign(OktaAuthBase, {\n    constants\n  });\n\n  return OktaAuthBase;\n}\n","/*!\n * Copyright (c) 2015-present, Okta, Inc. and/or its affiliates. All rights reserved.\n * The Okta software accompanied by this notice is provided pursuant to the Apache License, Version 2.0 (the \"License.\")\n *\n * You may obtain a copy of the License at http://www.apache.org/licenses/LICENSE-2.0.\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT\n * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * \n * See the License for the specific language governing permissions and limitations under the License.\n */\n\nimport { OktaAuthBaseOptions } from './types';\n\nexport function createBaseOptionsConstructor() {\n\n  return class BaseOptionsConstructor implements Required<OktaAuthBaseOptions> {\n    devMode: boolean;\n\n    constructor(args: any) {\n      this.devMode = !!args.devMode;\n    }\n  };\n\n}\n","/*! js-cookie v3.0.1 | MIT */\n/* eslint-disable no-var */\nfunction assign (target) {\n  for (var i = 1; i < arguments.length; i++) {\n    var source = arguments[i];\n    for (var key in source) {\n      target[key] = source[key];\n    }\n  }\n  return target\n}\n/* eslint-enable no-var */\n\n/* eslint-disable no-var */\nvar defaultConverter = {\n  read: function (value) {\n    if (value[0] === '\"') {\n      value = value.slice(1, -1);\n    }\n    return value.replace(/(%[\\dA-F]{2})+/gi, decodeURIComponent)\n  },\n  write: function (value) {\n    return encodeURIComponent(value).replace(\n      /%(2[346BF]|3[AC-F]|40|5[BDE]|60|7[BCD])/g,\n      decodeURIComponent\n    )\n  }\n};\n/* eslint-enable no-var */\n\n/* eslint-disable no-var */\n\nfunction init (converter, defaultAttributes) {\n  function set (key, value, attributes) {\n    if (typeof document === 'undefined') {\n      return\n    }\n\n    attributes = assign({}, defaultAttributes, attributes);\n\n    if (typeof attributes.expires === 'number') {\n      attributes.expires = new Date(Date.now() + attributes.expires * 864e5);\n    }\n    if (attributes.expires) {\n      attributes.expires = attributes.expires.toUTCString();\n    }\n\n    key = encodeURIComponent(key)\n      .replace(/%(2[346B]|5E|60|7C)/g, decodeURIComponent)\n      .replace(/[()]/g, escape);\n\n    var stringifiedAttributes = '';\n    for (var attributeName in attributes) {\n      if (!attributes[attributeName]) {\n        continue\n      }\n\n      stringifiedAttributes += '; ' + attributeName;\n\n      if (attributes[attributeName] === true) {\n        continue\n      }\n\n      // Considers RFC 6265 section 5.2:\n      // ...\n      // 3.  If the remaining unparsed-attributes contains a %x3B (\";\")\n      //     character:\n      // Consume the characters of the unparsed-attributes up to,\n      // not including, the first %x3B (\";\") character.\n      // ...\n      stringifiedAttributes += '=' + attributes[attributeName].split(';')[0];\n    }\n\n    return (document.cookie =\n      key + '=' + converter.write(value, key) + stringifiedAttributes)\n  }\n\n  function get (key) {\n    if (typeof document === 'undefined' || (arguments.length && !key)) {\n      return\n    }\n\n    // To prevent the for loop in the first place assign an empty array\n    // in case there are no cookies at all.\n    var cookies = document.cookie ? document.cookie.split('; ') : [];\n    var jar = {};\n    for (var i = 0; i < cookies.length; i++) {\n      var parts = cookies[i].split('=');\n      var value = parts.slice(1).join('=');\n\n      try {\n        var foundKey = decodeURIComponent(parts[0]);\n        jar[foundKey] = converter.read(value, foundKey);\n\n        if (key === foundKey) {\n          break\n        }\n      } catch (e) {}\n    }\n\n    return key ? jar[key] : jar\n  }\n\n  return Object.create(\n    {\n      set: set,\n      get: get,\n      remove: function (key, attributes) {\n        set(\n          key,\n          '',\n          assign({}, attributes, {\n            expires: -1\n          })\n        );\n      },\n      withAttributes: function (attributes) {\n        return init(this.converter, assign({}, this.attributes, attributes))\n      },\n      withConverter: function (converter) {\n        return init(assign({}, this.converter, converter), this.attributes)\n      }\n    },\n    {\n      attributes: { value: Object.freeze(defaultAttributes) },\n      converter: { value: Object.freeze(converter) }\n    }\n  )\n}\n\nvar api = init(defaultConverter, { path: '/' });\n/* eslint-enable no-var */\n\nexport default api;\n","/* eslint-disable @typescript-eslint/no-non-null-assertion */\n/*!\n * Copyright (c) 2015-present, Okta, Inc. and/or its affiliates. All rights reserved.\n * The Okta software accompanied by this notice is provided pursuant to the Apache License, Version 2.0 (the \"License.\")\n *\n * You may obtain a copy of the License at http://www.apache.org/licenses/LICENSE-2.0.\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT\n * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n *\n * See the License for the specific language governing permissions and limitations under the License.\n *\n */\n\nimport Cookies from 'js-cookie';\nimport AuthSdkError from '../errors/AuthSdkError';\nimport {\n  StorageOptions,\n  CookieOptions,\n  SimpleStorage,\n  StorageType,\n  StorageUtil,\n} from '../storage/types';\nimport { warn } from '../util';\nimport { isIE11OrLess } from '../features';\n\nexport interface CookieStorage extends SimpleStorage {\n  setItem(key: string, value: any, expiresAt?: string | null): void; // can customize expiresAt\n  getItem(key?: string): any; // if no key is passed, all cookies are returned\n  removeItem(key: string); // remove a cookie\n}\n\nexport interface BrowserStorageUtil extends StorageUtil {\n  browserHasLocalStorage(): boolean;\n  browserHasSessionStorage(): boolean;\n  getStorageByType(storageType: StorageType, options: StorageOptions): SimpleStorage;\n  getLocalStorage(): Storage;\n  getSessionStorage(): Storage;\n  getInMemoryStorage(): SimpleStorage;\n  getCookieStorage(options?: StorageOptions): CookieStorage;\n  testStorage(storage: any): boolean;\n  storage: Cookies;\n  inMemoryStore: Record<string, unknown>;\n}\n\n// Building this as an object allows us to mock the functions in our tests\nvar storageUtil: BrowserStorageUtil = {\n\n  // IE11 bug that Microsoft doesn't plan to fix\n  // https://connect.microsoft.com/IE/Feedback/Details/1496040\n  browserHasLocalStorage: function() {\n    try {\n      var storage = this.getLocalStorage();\n      return this.testStorage(storage);\n    } catch (e) {\n      return false;\n    }\n  },\n\n  browserHasSessionStorage: function() {\n    try {\n      var storage = this.getSessionStorage();\n      return this.testStorage(storage);\n    } catch (e) {\n      return false;\n    }\n  },\n\n  testStorageType: function(storageType: StorageType): boolean {\n    var supported = false;\n    switch (storageType) {\n      case 'sessionStorage':\n        supported = this.browserHasSessionStorage();\n        break;\n      case 'localStorage':\n        supported = this.browserHasLocalStorage();\n        break;\n      case 'cookie':\n      case 'memory':\n        supported = true;\n        break;\n      default:\n        supported = false;\n        break;\n    }\n    return supported;\n  },\n\n  getStorageByType: function(storageType: StorageType, options?: StorageOptions): SimpleStorage {\n    let storageProvider;\n    switch (storageType) {\n      case 'sessionStorage':\n        storageProvider = this.getSessionStorage();\n        break;\n      case 'localStorage':\n        storageProvider = this.getLocalStorage();\n        break;\n      case 'cookie':\n        storageProvider = this.getCookieStorage(options);\n        break;\n      case 'memory':\n        storageProvider = this.getInMemoryStorage();\n        break;\n      default:\n        throw new AuthSdkError(`Unrecognized storage option: ${storageType}`);\n        break;\n    }\n    return storageProvider;\n  },\n\n  findStorageType: function(types: StorageType[]) {\n    let curType;\n    let nextType;\n    \n    types = types.slice(); // copy array\n    curType = types.shift();\n    nextType = types.length ? types[0] : null;\n    if (!nextType) {\n      return curType;\n    }\n\n    if (this.testStorageType(curType)) {\n      return curType;\n    }\n\n    // preferred type was unsupported.\n    warn(`This browser doesn't support ${curType}. Switching to ${nextType}.`);\n\n    // fallback to the next type. this is a recursive call\n    return this.findStorageType(types);\n  },\n\n  getLocalStorage: function() {\n    // Workaound for synchronization issue of LocalStorage cross tabs in IE11\n    if (isIE11OrLess() && !window.onstorage) {\n      window.onstorage = function() {};\n    }\n    \n    return localStorage;\n  },\n\n  getSessionStorage: function() {\n    return sessionStorage;\n  },\n\n  // Provides webStorage-like interface for cookies\n  getCookieStorage: function(options): CookieStorage {\n    const secure = options!.secure;\n    const sameSite = options!.sameSite;\n    const sessionCookie = options!.sessionCookie;\n    if (typeof secure === 'undefined' || typeof sameSite === 'undefined') {\n      throw new AuthSdkError('getCookieStorage: \"secure\" and \"sameSite\" options must be provided');\n    }\n    const storage: CookieStorage = {\n      getItem: this.storage.get,\n      setItem: (key, value, expiresAt = '2200-01-01T00:00:00.000Z') => {\n        // By defauilt, cookie shouldn't expire\n        expiresAt = (sessionCookie ? null : expiresAt) as string;\n        this.storage.set(key, value, expiresAt, {\n          secure: secure, \n          sameSite: sameSite,\n        });\n      },\n      removeItem: (key) => {\n        this.storage.delete(key);\n      },\n    };\n\n    if (!options!.useSeparateCookies) {\n      return storage;\n    }\n\n    // Tokens are stored separately because cookies have size limits.\n    // Can only be used when storing an object value. Object properties will be saved to separate cookies.\n    // Each property of the object must also be an object.\n    return {\n      getItem: function(key) {\n        var data = storage.getItem(); // read all cookies\n        var value = {};\n        Object.keys(data).forEach(k => {\n          if (k.indexOf(key!) === 0) { // filter out unrelated cookies\n            value[k.replace(`${key}_`, '')] = JSON.parse(data[k]); // populate with cookie data\n          }\n        });\n        return JSON.stringify(value);\n      },\n      setItem: function(key, value) {\n        var existingValues = JSON.parse(this.getItem(key));\n        value = JSON.parse(value);\n        // Set key-value pairs from input to cookies\n        Object.keys(value).forEach(k => {\n          var storageKey = key + '_' + k;\n          var valueToStore = JSON.stringify(value[k]);\n          storage.setItem(storageKey, valueToStore);\n          delete existingValues[k];\n        });\n        // Delete unmatched keys from existing cookies\n        Object.keys(existingValues).forEach(k => {\n          storage.removeItem(key + '_' + k);\n        });\n      },\n      removeItem: function(key) {\n        var existingValues = JSON.parse(this.getItem(key));\n        Object.keys(existingValues).forEach(k => {\n          storage.removeItem(key + '_' + k);\n        });\n      },\n    };\n  },\n\n  // Provides an in-memory solution\n  inMemoryStore: {}, // override this for a unique memory store per instance\n  getInMemoryStorage: function() {\n    return {\n      getItem: (key) => {\n        return this.inMemoryStore[key];\n      },\n      setItem: (key, value) => {\n        this.inMemoryStore[key] = value;\n      },\n    };\n  },\n\n  testStorage: function(storage) {\n    var key = 'okta-test-storage';\n    try {\n      storage.setItem(key, key);\n      storage.removeItem(key);\n      return true;\n    } catch (e) {\n      return false;\n    }\n  },\n\n  storage: {\n    set: function(name: string, value: string, expiresAt: string, options: CookieOptions): string {\n      const { sameSite, secure } = options;\n      if (typeof secure === 'undefined' || typeof sameSite === 'undefined') {\n        throw new AuthSdkError('storage.set: \"secure\" and \"sameSite\" options must be provided');\n      }\n      var cookieOptions: CookieOptions = {\n        path: options.path || '/',\n        secure,\n        sameSite\n      };\n\n      // eslint-disable-next-line no-extra-boolean-cast\n      if (!!(Date.parse(expiresAt))) {\n        // Expires value can be converted to a Date object.\n        //\n        // If the 'expiresAt' value is not provided, or the value cannot be\n        // parsed as a Date object, the cookie will set as a session cookie.\n        cookieOptions.expires = new Date(expiresAt);\n      }\n\n      Cookies.set(name, value, cookieOptions);\n      return this.get(name);\n    },\n\n    get: function(name?: string): string {\n      // return all cookies when no args is provided\n      if (!arguments.length) {\n        return Cookies.get();\n      }\n      return Cookies.get(name);\n    },\n\n    delete: function(name: string): string {\n      return Cookies.remove(name, { path: '/' });\n    }\n  }\n};\n\nexport default storageUtil;\n","/*!\n * Copyright (c) 2015-present, Okta, Inc. and/or its affiliates. All rights reserved.\n * The Okta software accompanied by this notice is provided pursuant to the Apache License, Version 2.0 (the \"License.\")\n *\n * You may obtain a copy of the License at http://www.apache.org/licenses/LICENSE-2.0.\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT\n * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * \n * See the License for the specific language governing permissions and limitations under the License.\n */\n\n\nimport { AuthSdkError } from '../errors';\nimport { isFingerprintSupported } from '../features';\nimport {\n  addListener,\n  removeListener\n} from '../oidc';\nimport { FingerprintOptions } from '../base/types';\nimport { OktaAuthHttpInterface } from '../http/types';\n\nconst isMessageFromCorrectSource = (iframe: HTMLIFrameElement, event: MessageEvent)\n: boolean => event.source === iframe.contentWindow;\n\nexport default function fingerprint(sdk: OktaAuthHttpInterface, options?: FingerprintOptions): Promise<string> {\n  if (!isFingerprintSupported()) {\n    return Promise.reject(new AuthSdkError('Fingerprinting is not supported on this device'));\n  }\n\n  const container = options?.container ?? document.body;\n  let timeout: NodeJS.Timeout;\n  let iframe: HTMLIFrameElement;\n  let listener: (this: Window, ev: MessageEvent) => void;\n  const promise = new Promise(function (resolve, reject) {\n    iframe = document.createElement('iframe');\n    iframe.style.display = 'none';\n\n    // eslint-disable-next-line complexity\n    listener = function listener(e: MessageEvent) {\n      if (!isMessageFromCorrectSource(iframe, e)) {\n        return;\n      }\n\n      if (!e || !e.data || e.origin !== sdk.getIssuerOrigin()) {\n        return;\n      }\n\n      let msg;\n      try {\n        msg = JSON.parse(e.data);\n      } catch (err) {\n        // iframe messages should all be parsable\n        // skip not parsable messages come from other sources in same origin (browser extensions)\n        // TODO: add namespace flag in okta-core to distinguish messages that come from other sources\n        return;\n      }\n\n      if (!msg) { return; }\n      if (msg.type === 'FingerprintAvailable') {\n        return resolve(msg.fingerprint as string);\n      } else if (msg.type === 'FingerprintServiceReady') {\n        iframe?.contentWindow?.postMessage(JSON.stringify({\n          type: 'GetFingerprint'\n        }), e.origin);\n      } else {\n        return reject(new AuthSdkError('No data'));\n      }\n    };\n    addListener(window, 'message', listener);\n\n    iframe.src = sdk.getIssuerOrigin() + '/auth/services/devicefingerprint';\n    container.appendChild(iframe);\n\n    timeout = setTimeout(function() {\n      reject(new AuthSdkError('Fingerprinting timed out'));\n    }, options?.timeout || 15000);\n  });\n\n  return promise.finally(function() {\n    clearTimeout(timeout);\n    removeListener(window, 'message', listener);\n    if (container.contains(iframe)) {\n      iframe.parentElement?.removeChild(iframe);\n    }\n  }) as Promise<string>;\n}\n","/*!\n * Copyright (c) 2015-present, Okta, Inc. and/or its affiliates. All rights reserved.\n * The Okta software accompanied by this notice is provided pursuant to the Apache License, Version 2.0 (the \"License.\")\n *\n * You may obtain a copy of the License at http://www.apache.org/licenses/LICENSE-2.0.\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT\n * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n *\n * See the License for the specific language governing permissions and limitations under the License.\n */\n\nexport const STATE_TOKEN_KEY_NAME = 'oktaStateToken';\nexport const DEFAULT_POLLING_DELAY = 500;\nexport const DEFAULT_MAX_CLOCK_SKEW = 300;\nexport const DEFAULT_CACHE_DURATION = 86400;\nexport const TOKEN_STORAGE_NAME = 'okta-token-storage';\nexport const CACHE_STORAGE_NAME = 'okta-cache-storage';\nexport const PKCE_STORAGE_NAME = 'okta-pkce-storage';\nexport const TRANSACTION_STORAGE_NAME = 'okta-transaction-storage';\nexport const SHARED_TRANSACTION_STORAGE_NAME = 'okta-shared-transaction-storage';\nexport const ORIGINAL_URI_STORAGE_NAME = 'okta-original-uri-storage';\nexport const IDX_RESPONSE_STORAGE_NAME = 'okta-idx-response-storage';\nexport const ACCESS_TOKEN_STORAGE_KEY = 'accessToken';\nexport const ID_TOKEN_STORAGE_KEY =  'idToken';\nexport const REFRESH_TOKEN_STORAGE_KEY =  'refreshToken';\nexport const REFERRER_PATH_STORAGE_KEY = 'referrerPath';\n\n// Code verifier: Random URL-safe string with a minimum length of 43 characters.\n// Code challenge: Base64 URL-encoded SHA-256 hash of the code verifier.\nexport const MIN_VERIFIER_LENGTH = 43;\nexport const MAX_VERIFIER_LENGTH = 128;\nexport const DEFAULT_CODE_CHALLENGE_METHOD = 'S256';\n\nexport const IDX_API_VERSION = '1.0.0';","/*!\n * Copyright (c) 2015-present, Okta, Inc. and/or its affiliates. All rights reserved.\n * The Okta software accompanied by this notice is provided pursuant to the Apache License, Version 2.0 (the \"License.\")\n *\n * You may obtain a copy of the License at http://www.apache.org/licenses/LICENSE-2.0.\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT\n * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * \n * See the License for the specific language governing permissions and limitations under the License.\n */\n \n// eslint-disable-next-line @typescript-eslint/ban-ts-comment\n// @ts-ignore \n// Do not use this type in code, so it won't be emitted in the declaration output\nimport PCancelable from 'p-cancelable';\nimport { AuthSdkError } from '../errors';\nimport {\n  EVENT_ADDED,\n  EVENT_REMOVED,\n  OAuthStorageManagerInterface,\n  OAuthTransactionMeta,\n  OktaAuthOAuthInterface\n} from '../oidc';\nimport {\n  AuthState,\n  AuthStateLogOptions,\n  OktaAuthCoreOptions,\n} from './types';\nimport { PromiseQueue, getConsole } from '../util';\n\nexport const INITIAL_AUTH_STATE = null;\nconst DEFAULT_PENDING = {\n  updateAuthStatePromise: null,\n  canceledTimes: 0\n};\nconst EVENT_AUTH_STATE_CHANGE = 'authStateChange';\nconst MAX_PROMISE_CANCEL_TIMES = 10;\n\n// only compare first level of authState\nconst isSameAuthState = (prevState: AuthState | null, state: AuthState) => {\n  // initial state is null\n  if (!prevState) {\n    return false;\n  }\n\n  return prevState.isAuthenticated === state.isAuthenticated \n    && JSON.stringify(prevState.idToken) === JSON.stringify(state.idToken)\n    && JSON.stringify(prevState.accessToken) === JSON.stringify(state.accessToken)\n    && prevState.error === state.error;\n};\n\n\nexport class AuthStateManager\n<\n  M extends OAuthTransactionMeta,\n  S extends OAuthStorageManagerInterface<M>,\n  O extends OktaAuthCoreOptions\n>\n{\n  _sdk: OktaAuthOAuthInterface<M, S, O>;\n  _pending: { \n    updateAuthStatePromise: any;\n    canceledTimes: number; \n  };\n  _authState: AuthState | null;\n  _prevAuthState: AuthState | null;\n  _logOptions: AuthStateLogOptions;\n  _transformQueue: PromiseQueue;\n\n  constructor(sdk: OktaAuthOAuthInterface<M, S, O>) {\n    if (!sdk.emitter) {\n      throw new AuthSdkError('Emitter should be initialized before AuthStateManager');\n    }\n\n    this._sdk = sdk;\n    this._pending = { ...DEFAULT_PENDING };\n    this._authState = INITIAL_AUTH_STATE;\n    this._logOptions = {};\n    this._prevAuthState = null;\n    this._transformQueue = new PromiseQueue({\n      quiet: true\n    });\n\n    // Listen on tokenManager events to start updateState process\n    // \"added\" event is emitted in both add and renew process\n    // Only listen on \"added\" event to update auth state\n    sdk.tokenManager.on(EVENT_ADDED, (key, token) => {\n      this._setLogOptions({ event: EVENT_ADDED, key, token });\n      this.updateAuthState();\n    });\n    sdk.tokenManager.on(EVENT_REMOVED, (key, token) => {\n      this._setLogOptions({ event: EVENT_REMOVED, key, token });\n      this.updateAuthState();\n    });\n  }\n\n  _setLogOptions(options) {\n    this._logOptions = options;\n  }\n\n  getAuthState(): AuthState | null {\n    return this._authState;\n  }\n\n  getPreviousAuthState(): AuthState | null {\n    return this._prevAuthState;\n  }\n\n  async updateAuthState(): Promise<AuthState> {\n    const { transformAuthState, devMode } = this._sdk.options;\n\n    const log = (status) => {\n      const { event, key, token } = this._logOptions;\n      getConsole().group(`OKTA-AUTH-JS:updateAuthState: Event:${event} Status:${status}`);\n      getConsole().log(key, token);\n      getConsole().log('Current authState', this._authState);\n      getConsole().groupEnd();\n      \n      // clear log options after logging\n      this._logOptions = {};\n    };\n\n    const emitAuthStateChange = (authState) => {\n      if (isSameAuthState(this._authState, authState)) {\n        devMode && log('unchanged'); \n        return;\n      }\n      this._prevAuthState = this._authState;\n      this._authState = authState;\n      // emit new authState object\n      this._sdk.emitter.emit(EVENT_AUTH_STATE_CHANGE, { ...authState });\n      devMode && log('emitted');\n    };\n\n    const finalPromise = (origPromise) => {       \n      return this._pending.updateAuthStatePromise.then(() => {\n        const curPromise = this._pending.updateAuthStatePromise;\n        if (curPromise && curPromise !== origPromise) {\n          return finalPromise(curPromise);\n        }\n        return this.getAuthState();\n      });\n    };\n\n    if (this._pending.updateAuthStatePromise) {\n      if (this._pending.canceledTimes >= MAX_PROMISE_CANCEL_TIMES) {\n        // stop canceling then starting a new promise\n        // let existing promise finish to prevent running into loops\n        devMode && log('terminated');\n        return finalPromise(this._pending.updateAuthStatePromise);\n      } else {\n        this._pending.updateAuthStatePromise.cancel();\n      }\n    }\n\n    /* eslint-disable complexity */\n    const cancelablePromise = new PCancelable((resolve, _, onCancel) => {\n      onCancel.shouldReject = false;\n      onCancel(() => {\n        this._pending.updateAuthStatePromise = null;\n        this._pending.canceledTimes = this._pending.canceledTimes + 1;\n        devMode && log('canceled');\n      });\n\n      const emitAndResolve = (authState) => {\n        if (cancelablePromise.isCanceled) {\n          resolve();\n          return;\n        }\n        // emit event and resolve promise \n        emitAuthStateChange(authState);\n        resolve();\n\n        // clear pending states after resolve\n        this._pending = { ...DEFAULT_PENDING };\n      };\n\n      this._sdk.isAuthenticated()\n        .then(() => {\n          if (cancelablePromise.isCanceled) {\n            resolve();\n            return;\n          }\n\n          const { accessToken, idToken, refreshToken } = this._sdk.tokenManager.getTokensSync();\n          const authState = {\n            accessToken,\n            idToken,\n            refreshToken,\n            isAuthenticated: !!(accessToken && idToken)\n          };\n\n          // Enqueue transformAuthState so that it does not run concurrently\n          const promise: Promise<AuthState> = transformAuthState\n            ? this._transformQueue.push(transformAuthState, null, this._sdk, authState) as Promise<AuthState>\n            : Promise.resolve(authState);\n\n          promise\n            .then(authState => emitAndResolve(authState))\n            .catch(error => emitAndResolve({\n              accessToken, \n              idToken, \n              refreshToken,\n              isAuthenticated: false, \n              error\n            }));\n        });\n    });\n    /* eslint-enable complexity */\n    this._pending.updateAuthStatePromise = cancelablePromise;\n\n    return finalPromise(cancelablePromise);\n  }\n\n  subscribe(handler): void {\n    this._sdk.emitter.on(EVENT_AUTH_STATE_CHANGE, handler);\n  }\n\n  unsubscribe(handler?): void {\n    this._sdk.emitter.off(EVENT_AUTH_STATE_CHANGE, handler);\n  }\n}\n","/**\n * returns true if the given object is a promise\n */\nexport function isPromise(obj) {\n  return obj && typeof obj.then === 'function';\n}\nexport var PROMISE_RESOLVED_FALSE = Promise.resolve(false);\nexport var PROMISE_RESOLVED_TRUE = Promise.resolve(true);\nexport var PROMISE_RESOLVED_VOID = Promise.resolve();\nexport function sleep(time, resolveWith) {\n  if (!time) time = 0;\n  return new Promise(function (res) {\n    return setTimeout(function () {\n      return res(resolveWith);\n    }, time);\n  });\n}\nexport function randomInt(min, max) {\n  return Math.floor(Math.random() * (max - min + 1) + min);\n}\n\n/**\n * https://stackoverflow.com/a/8084248\n */\nexport function randomToken() {\n  return Math.random().toString(36).substring(2);\n}\nvar lastMs = 0;\nvar additional = 0;\n\n/**\n * returns the current time in micro-seconds,\n * WARNING: This is a pseudo-function\n * Performance.now is not reliable in webworkers, so we just make sure to never return the same time.\n * This is enough in browsers, and this function will not be used in nodejs.\n * The main reason for this hack is to ensure that BroadcastChannel behaves equal to production when it is used in fast-running unit tests.\n */\nexport function microSeconds() {\n  var ms = new Date().getTime();\n  if (ms === lastMs) {\n    additional++;\n    return ms * 1000 + additional;\n  } else {\n    lastMs = ms;\n    additional = 0;\n    return ms * 1000;\n  }\n}\n\n/**\n * Check if WebLock API is supported.\n * @link https://developer.mozilla.org/en-US/docs/Web/API/Web_Locks_API\n */\nexport function supportsWebLockAPI() {\n  if (typeof navigator !== 'undefined' && typeof navigator.locks !== 'undefined' && typeof navigator.locks.request === 'function') {\n    return true;\n  } else {\n    return false;\n  }\n}","import { microSeconds as micro, PROMISE_RESOLVED_VOID } from '../util.js';\nexport var microSeconds = micro;\nexport var type = 'native';\nexport function create(channelName) {\n  var state = {\n    messagesCallback: null,\n    bc: new BroadcastChannel(channelName),\n    subFns: [] // subscriberFunctions\n  };\n\n  state.bc.onmessage = function (msg) {\n    if (state.messagesCallback) {\n      state.messagesCallback(msg.data);\n    }\n  };\n  return state;\n}\nexport function close(channelState) {\n  channelState.bc.close();\n  channelState.subFns = [];\n}\nexport function postMessage(channelState, messageJson) {\n  try {\n    channelState.bc.postMessage(messageJson, false);\n    return PROMISE_RESOLVED_VOID;\n  } catch (err) {\n    return Promise.reject(err);\n  }\n}\nexport function onMessage(channelState, fn) {\n  channelState.messagesCallback = fn;\n}\nexport function canBeUsed() {\n  if ((typeof window !== 'undefined' || typeof self !== 'undefined') && typeof BroadcastChannel === 'function') {\n    if (BroadcastChannel._pubkey) {\n      throw new Error('BroadcastChannel: Do not overwrite window.BroadcastChannel with this module, this is not a polyfill');\n    }\n    return true;\n  } else {\n    return false;\n  }\n}\nexport function averageResponseTime() {\n  return 150;\n}\nexport var NativeMethod = {\n  create: create,\n  close: close,\n  onMessage: onMessage,\n  postMessage: postMessage,\n  canBeUsed: canBeUsed,\n  type: type,\n  averageResponseTime: averageResponseTime,\n  microSeconds: microSeconds\n};","/**\n * this is a set which automatically forgets\n * a given entry when a new entry is set and the ttl\n * of the old one is over\n */\nvar ObliviousSet = /** @class */ (function () {\n    function ObliviousSet(ttl) {\n        this.ttl = ttl;\n        this.map = new Map();\n        /**\n         * Creating calls to setTimeout() is expensive,\n         * so we only do that if there is not timeout already open.\n         */\n        this._to = false;\n    }\n    ObliviousSet.prototype.has = function (value) {\n        return this.map.has(value);\n    };\n    ObliviousSet.prototype.add = function (value) {\n        var _this = this;\n        this.map.set(value, now());\n        /**\n         * When a new value is added,\n         * start the cleanup at the next tick\n         * to not block the cpu for more important stuff\n         * that might happen.\n         */\n        if (!this._to) {\n            this._to = true;\n            setTimeout(function () {\n                _this._to = false;\n                removeTooOldValues(_this);\n            }, 0);\n        }\n    };\n    ObliviousSet.prototype.clear = function () {\n        this.map.clear();\n    };\n    return ObliviousSet;\n}());\nexport { ObliviousSet };\n/**\n * Removes all entries from the set\n * where the TTL has expired\n */\nexport function removeTooOldValues(obliviousSet) {\n    var olderThen = now() - obliviousSet.ttl;\n    var iterator = obliviousSet.map[Symbol.iterator]();\n    /**\n     * Because we can assume the new values are added at the bottom,\n     * we start from the top and stop as soon as we reach a non-too-old value.\n     */\n    while (true) {\n        var next = iterator.next().value;\n        if (!next) {\n            return; // no more elements\n        }\n        var value = next[0];\n        var time = next[1];\n        if (time < olderThen) {\n            obliviousSet.map.delete(value);\n        }\n        else {\n            // We reached a value that is not old enough\n            return;\n        }\n    }\n}\nexport function now() {\n    return new Date().getTime();\n}\n//# sourceMappingURL=index.js.map","export function fillOptionsWithDefaults() {\n  var originalOptions = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n  var options = JSON.parse(JSON.stringify(originalOptions));\n\n  // main\n  if (typeof options.webWorkerSupport === 'undefined') options.webWorkerSupport = true;\n\n  // indexed-db\n  if (!options.idb) options.idb = {};\n  //  after this time the messages get deleted\n  if (!options.idb.ttl) options.idb.ttl = 1000 * 45;\n  if (!options.idb.fallbackInterval) options.idb.fallbackInterval = 150;\n  //  handles abrupt db onclose events.\n  if (originalOptions.idb && typeof originalOptions.idb.onclose === 'function') options.idb.onclose = originalOptions.idb.onclose;\n\n  // localstorage\n  if (!options.localstorage) options.localstorage = {};\n  if (!options.localstorage.removeTimeout) options.localstorage.removeTimeout = 1000 * 60;\n\n  // custom methods\n  if (originalOptions.methods) options.methods = originalOptions.methods;\n\n  // node\n  if (!options.node) options.node = {};\n  if (!options.node.ttl) options.node.ttl = 1000 * 60 * 2; // 2 minutes;\n  /**\n   * On linux use 'ulimit -Hn' to get the limit of open files.\n   * On ubuntu this was 4096 for me, so we use half of that as maxParallelWrites default.\n   */\n  if (!options.node.maxParallelWrites) options.node.maxParallelWrites = 2048;\n  if (typeof options.node.useFastPath === 'undefined') options.node.useFastPath = true;\n  return options;\n}","/**\n * this method uses indexeddb to store the messages\n * There is currently no observerAPI for idb\n * @link https://github.com/w3c/IndexedDB/issues/51\n * \n * When working on this, ensure to use these performance optimizations:\n * @link https://rxdb.info/slow-indexeddb.html\n */\n\nimport { sleep, randomInt, randomToken, microSeconds as micro, PROMISE_RESOLVED_VOID } from '../util.js';\nexport var microSeconds = micro;\nimport { ObliviousSet } from 'oblivious-set';\nimport { fillOptionsWithDefaults } from '../options.js';\nvar DB_PREFIX = 'pubkey.broadcast-channel-0-';\nvar OBJECT_STORE_ID = 'messages';\n\n/**\n * Use relaxed durability for faster performance on all transactions.\n * @link https://nolanlawson.com/2021/08/22/speeding-up-indexeddb-reads-and-writes/\n */\nexport var TRANSACTION_SETTINGS = {\n  durability: 'relaxed'\n};\nexport var type = 'idb';\nexport function getIdb() {\n  if (typeof indexedDB !== 'undefined') return indexedDB;\n  if (typeof window !== 'undefined') {\n    if (typeof window.mozIndexedDB !== 'undefined') return window.mozIndexedDB;\n    if (typeof window.webkitIndexedDB !== 'undefined') return window.webkitIndexedDB;\n    if (typeof window.msIndexedDB !== 'undefined') return window.msIndexedDB;\n  }\n  return false;\n}\n\n/**\n * If possible, we should explicitly commit IndexedDB transactions\n * for better performance.\n * @link https://nolanlawson.com/2021/08/22/speeding-up-indexeddb-reads-and-writes/\n */\nexport function commitIndexedDBTransaction(tx) {\n  if (tx.commit) {\n    tx.commit();\n  }\n}\nexport function createDatabase(channelName) {\n  var IndexedDB = getIdb();\n\n  // create table\n  var dbName = DB_PREFIX + channelName;\n\n  /**\n   * All IndexedDB databases are opened without version\n   * because it is a bit faster, especially on firefox\n   * @link http://nparashuram.com/IndexedDB/perf/#Open%20Database%20with%20version\n   */\n  var openRequest = IndexedDB.open(dbName);\n  openRequest.onupgradeneeded = function (ev) {\n    var db = ev.target.result;\n    db.createObjectStore(OBJECT_STORE_ID, {\n      keyPath: 'id',\n      autoIncrement: true\n    });\n  };\n  return new Promise(function (res, rej) {\n    openRequest.onerror = function (ev) {\n      return rej(ev);\n    };\n    openRequest.onsuccess = function () {\n      res(openRequest.result);\n    };\n  });\n}\n\n/**\n * writes the new message to the database\n * so other readers can find it\n */\nexport function writeMessage(db, readerUuid, messageJson) {\n  var time = new Date().getTime();\n  var writeObject = {\n    uuid: readerUuid,\n    time: time,\n    data: messageJson\n  };\n  var tx = db.transaction([OBJECT_STORE_ID], 'readwrite', TRANSACTION_SETTINGS);\n  return new Promise(function (res, rej) {\n    tx.oncomplete = function () {\n      return res();\n    };\n    tx.onerror = function (ev) {\n      return rej(ev);\n    };\n    var objectStore = tx.objectStore(OBJECT_STORE_ID);\n    objectStore.add(writeObject);\n    commitIndexedDBTransaction(tx);\n  });\n}\nexport function getAllMessages(db) {\n  var tx = db.transaction(OBJECT_STORE_ID, 'readonly', TRANSACTION_SETTINGS);\n  var objectStore = tx.objectStore(OBJECT_STORE_ID);\n  var ret = [];\n  return new Promise(function (res) {\n    objectStore.openCursor().onsuccess = function (ev) {\n      var cursor = ev.target.result;\n      if (cursor) {\n        ret.push(cursor.value);\n        //alert(\"Name for SSN \" + cursor.key + \" is \" + cursor.value.name);\n        cursor[\"continue\"]();\n      } else {\n        commitIndexedDBTransaction(tx);\n        res(ret);\n      }\n    };\n  });\n}\nexport function getMessagesHigherThan(db, lastCursorId) {\n  var tx = db.transaction(OBJECT_STORE_ID, 'readonly', TRANSACTION_SETTINGS);\n  var objectStore = tx.objectStore(OBJECT_STORE_ID);\n  var ret = [];\n  var keyRangeValue = IDBKeyRange.bound(lastCursorId + 1, Infinity);\n\n  /**\n   * Optimization shortcut,\n   * if getAll() can be used, do not use a cursor.\n   * @link https://rxdb.info/slow-indexeddb.html\n   */\n  if (objectStore.getAll) {\n    var getAllRequest = objectStore.getAll(keyRangeValue);\n    return new Promise(function (res, rej) {\n      getAllRequest.onerror = function (err) {\n        return rej(err);\n      };\n      getAllRequest.onsuccess = function (e) {\n        res(e.target.result);\n      };\n    });\n  }\n  function openCursor() {\n    // Occasionally Safari will fail on IDBKeyRange.bound, this\n    // catches that error, having it open the cursor to the first\n    // item. When it gets data it will advance to the desired key.\n    try {\n      keyRangeValue = IDBKeyRange.bound(lastCursorId + 1, Infinity);\n      return objectStore.openCursor(keyRangeValue);\n    } catch (e) {\n      return objectStore.openCursor();\n    }\n  }\n  return new Promise(function (res, rej) {\n    var openCursorRequest = openCursor();\n    openCursorRequest.onerror = function (err) {\n      return rej(err);\n    };\n    openCursorRequest.onsuccess = function (ev) {\n      var cursor = ev.target.result;\n      if (cursor) {\n        if (cursor.value.id < lastCursorId + 1) {\n          cursor[\"continue\"](lastCursorId + 1);\n        } else {\n          ret.push(cursor.value);\n          cursor[\"continue\"]();\n        }\n      } else {\n        commitIndexedDBTransaction(tx);\n        res(ret);\n      }\n    };\n  });\n}\nexport function removeMessagesById(channelState, ids) {\n  if (channelState.closed) {\n    return Promise.resolve([]);\n  }\n  var tx = channelState.db.transaction(OBJECT_STORE_ID, 'readwrite', TRANSACTION_SETTINGS);\n  var objectStore = tx.objectStore(OBJECT_STORE_ID);\n  return Promise.all(ids.map(function (id) {\n    var deleteRequest = objectStore[\"delete\"](id);\n    return new Promise(function (res) {\n      deleteRequest.onsuccess = function () {\n        return res();\n      };\n    });\n  }));\n}\nexport function getOldMessages(db, ttl) {\n  var olderThen = new Date().getTime() - ttl;\n  var tx = db.transaction(OBJECT_STORE_ID, 'readonly', TRANSACTION_SETTINGS);\n  var objectStore = tx.objectStore(OBJECT_STORE_ID);\n  var ret = [];\n  return new Promise(function (res) {\n    objectStore.openCursor().onsuccess = function (ev) {\n      var cursor = ev.target.result;\n      if (cursor) {\n        var msgObk = cursor.value;\n        if (msgObk.time < olderThen) {\n          ret.push(msgObk);\n          //alert(\"Name for SSN \" + cursor.key + \" is \" + cursor.value.name);\n          cursor[\"continue\"]();\n        } else {\n          // no more old messages,\n          commitIndexedDBTransaction(tx);\n          res(ret);\n        }\n      } else {\n        res(ret);\n      }\n    };\n  });\n}\nexport function cleanOldMessages(channelState) {\n  return getOldMessages(channelState.db, channelState.options.idb.ttl).then(function (tooOld) {\n    return removeMessagesById(channelState, tooOld.map(function (msg) {\n      return msg.id;\n    }));\n  });\n}\nexport function create(channelName, options) {\n  options = fillOptionsWithDefaults(options);\n  return createDatabase(channelName).then(function (db) {\n    var state = {\n      closed: false,\n      lastCursorId: 0,\n      channelName: channelName,\n      options: options,\n      uuid: randomToken(),\n      /**\n       * emittedMessagesIds\n       * contains all messages that have been emitted before\n       * @type {ObliviousSet}\n       */\n      eMIs: new ObliviousSet(options.idb.ttl * 2),\n      // ensures we do not read messages in parallel\n      writeBlockPromise: PROMISE_RESOLVED_VOID,\n      messagesCallback: null,\n      readQueuePromises: [],\n      db: db\n    };\n\n    /**\n     * Handle abrupt closes that do not originate from db.close().\n     * This could happen, for example, if the underlying storage is\n     * removed or if the user clears the database in the browser's\n     * history preferences.\n     */\n    db.onclose = function () {\n      state.closed = true;\n      if (options.idb.onclose) options.idb.onclose();\n    };\n\n    /**\n     * if service-workers are used,\n     * we have no 'storage'-event if they post a message,\n     * therefore we also have to set an interval\n     */\n    _readLoop(state);\n    return state;\n  });\n}\nfunction _readLoop(state) {\n  if (state.closed) return;\n  readNewMessages(state).then(function () {\n    return sleep(state.options.idb.fallbackInterval);\n  }).then(function () {\n    return _readLoop(state);\n  });\n}\nfunction _filterMessage(msgObj, state) {\n  if (msgObj.uuid === state.uuid) return false; // send by own\n  if (state.eMIs.has(msgObj.id)) return false; // already emitted\n  if (msgObj.data.time < state.messagesCallbackTime) return false; // older then onMessageCallback\n  return true;\n}\n\n/**\n * reads all new messages from the database and emits them\n */\nfunction readNewMessages(state) {\n  // channel already closed\n  if (state.closed) return PROMISE_RESOLVED_VOID;\n\n  // if no one is listening, we do not need to scan for new messages\n  if (!state.messagesCallback) return PROMISE_RESOLVED_VOID;\n  return getMessagesHigherThan(state.db, state.lastCursorId).then(function (newerMessages) {\n    var useMessages = newerMessages\n    /**\n     * there is a bug in iOS where the msgObj can be undefined sometimes\n     * so we filter them out\n     * @link https://github.com/pubkey/broadcast-channel/issues/19\n     */.filter(function (msgObj) {\n      return !!msgObj;\n    }).map(function (msgObj) {\n      if (msgObj.id > state.lastCursorId) {\n        state.lastCursorId = msgObj.id;\n      }\n      return msgObj;\n    }).filter(function (msgObj) {\n      return _filterMessage(msgObj, state);\n    }).sort(function (msgObjA, msgObjB) {\n      return msgObjA.time - msgObjB.time;\n    }); // sort by time\n    useMessages.forEach(function (msgObj) {\n      if (state.messagesCallback) {\n        state.eMIs.add(msgObj.id);\n        state.messagesCallback(msgObj.data);\n      }\n    });\n    return PROMISE_RESOLVED_VOID;\n  });\n}\nexport function close(channelState) {\n  channelState.closed = true;\n  channelState.db.close();\n}\nexport function postMessage(channelState, messageJson) {\n  channelState.writeBlockPromise = channelState.writeBlockPromise.then(function () {\n    return writeMessage(channelState.db, channelState.uuid, messageJson);\n  }).then(function () {\n    if (randomInt(0, 10) === 0) {\n      /* await (do not await) */\n      cleanOldMessages(channelState);\n    }\n  });\n  return channelState.writeBlockPromise;\n}\nexport function onMessage(channelState, fn, time) {\n  channelState.messagesCallbackTime = time;\n  channelState.messagesCallback = fn;\n  readNewMessages(channelState);\n}\nexport function canBeUsed() {\n  return !!getIdb();\n}\nexport function averageResponseTime(options) {\n  return options.idb.fallbackInterval * 2;\n}\nexport var IndexedDBMethod = {\n  create: create,\n  close: close,\n  onMessage: onMessage,\n  postMessage: postMessage,\n  canBeUsed: canBeUsed,\n  type: type,\n  averageResponseTime: averageResponseTime,\n  microSeconds: microSeconds\n};","/**\n * A localStorage-only method which uses localstorage and its 'storage'-event\n * This does not work inside webworkers because they have no access to localstorage\n * This is basically implemented to support IE9 or your grandmother's toaster.\n * @link https://caniuse.com/#feat=namevalue-storage\n * @link https://caniuse.com/#feat=indexeddb\n */\n\nimport { ObliviousSet } from 'oblivious-set';\nimport { fillOptionsWithDefaults } from '../options.js';\nimport { sleep, randomToken, microSeconds as micro } from '../util.js';\nexport var microSeconds = micro;\nvar KEY_PREFIX = 'pubkey.broadcastChannel-';\nexport var type = 'localstorage';\n\n/**\n * copied from crosstab\n * @link https://github.com/tejacques/crosstab/blob/master/src/crosstab.js#L32\n */\nexport function getLocalStorage() {\n  var localStorage;\n  if (typeof window === 'undefined') return null;\n  try {\n    localStorage = window.localStorage;\n    localStorage = window['ie8-eventlistener/storage'] || window.localStorage;\n  } catch (e) {\n    // New versions of Firefox throw a Security exception\n    // if cookies are disabled. See\n    // https://bugzilla.mozilla.org/show_bug.cgi?id=1028153\n  }\n  return localStorage;\n}\nexport function storageKey(channelName) {\n  return KEY_PREFIX + channelName;\n}\n\n/**\n* writes the new message to the storage\n* and fires the storage-event so other readers can find it\n*/\nexport function postMessage(channelState, messageJson) {\n  return new Promise(function (res) {\n    sleep().then(function () {\n      var key = storageKey(channelState.channelName);\n      var writeObj = {\n        token: randomToken(),\n        time: new Date().getTime(),\n        data: messageJson,\n        uuid: channelState.uuid\n      };\n      var value = JSON.stringify(writeObj);\n      getLocalStorage().setItem(key, value);\n\n      /**\n       * StorageEvent does not fire the 'storage' event\n       * in the window that changes the state of the local storage.\n       * So we fire it manually\n       */\n      var ev = document.createEvent('Event');\n      ev.initEvent('storage', true, true);\n      ev.key = key;\n      ev.newValue = value;\n      window.dispatchEvent(ev);\n      res();\n    });\n  });\n}\nexport function addStorageEventListener(channelName, fn) {\n  var key = storageKey(channelName);\n  var listener = function listener(ev) {\n    if (ev.key === key) {\n      fn(JSON.parse(ev.newValue));\n    }\n  };\n  window.addEventListener('storage', listener);\n  return listener;\n}\nexport function removeStorageEventListener(listener) {\n  window.removeEventListener('storage', listener);\n}\nexport function create(channelName, options) {\n  options = fillOptionsWithDefaults(options);\n  if (!canBeUsed()) {\n    throw new Error('BroadcastChannel: localstorage cannot be used');\n  }\n  var uuid = randomToken();\n\n  /**\n   * eMIs\n   * contains all messages that have been emitted before\n   * @type {ObliviousSet}\n   */\n  var eMIs = new ObliviousSet(options.localstorage.removeTimeout);\n  var state = {\n    channelName: channelName,\n    uuid: uuid,\n    eMIs: eMIs // emittedMessagesIds\n  };\n\n  state.listener = addStorageEventListener(channelName, function (msgObj) {\n    if (!state.messagesCallback) return; // no listener\n    if (msgObj.uuid === uuid) return; // own message\n    if (!msgObj.token || eMIs.has(msgObj.token)) return; // already emitted\n    if (msgObj.data.time && msgObj.data.time < state.messagesCallbackTime) return; // too old\n\n    eMIs.add(msgObj.token);\n    state.messagesCallback(msgObj.data);\n  });\n  return state;\n}\nexport function close(channelState) {\n  removeStorageEventListener(channelState.listener);\n}\nexport function onMessage(channelState, fn, time) {\n  channelState.messagesCallbackTime = time;\n  channelState.messagesCallback = fn;\n}\nexport function canBeUsed() {\n  var ls = getLocalStorage();\n  if (!ls) return false;\n  try {\n    var key = '__broadcastchannel_check';\n    ls.setItem(key, 'works');\n    ls.removeItem(key);\n  } catch (e) {\n    // Safari 10 in private mode will not allow write access to local\n    // storage and fail with a QuotaExceededError. See\n    // https://developer.mozilla.org/en-US/docs/Web/API/Web_Storage_API#Private_Browsing_Incognito_modes\n    return false;\n  }\n  return true;\n}\nexport function averageResponseTime() {\n  var defaultTime = 120;\n  var userAgent = navigator.userAgent.toLowerCase();\n  if (userAgent.includes('safari') && !userAgent.includes('chrome')) {\n    // safari is much slower so this time is higher\n    return defaultTime * 2;\n  }\n  return defaultTime;\n}\nexport var LocalstorageMethod = {\n  create: create,\n  close: close,\n  onMessage: onMessage,\n  postMessage: postMessage,\n  canBeUsed: canBeUsed,\n  type: type,\n  averageResponseTime: averageResponseTime,\n  microSeconds: microSeconds\n};","import { microSeconds as micro } from '../util.js';\nexport var microSeconds = micro;\nexport var type = 'simulate';\nvar SIMULATE_CHANNELS = new Set();\nexport function create(channelName) {\n  var state = {\n    name: channelName,\n    messagesCallback: null\n  };\n  SIMULATE_CHANNELS.add(state);\n  return state;\n}\nexport function close(channelState) {\n  SIMULATE_CHANNELS[\"delete\"](channelState);\n}\nexport function postMessage(channelState, messageJson) {\n  return new Promise(function (res) {\n    return setTimeout(function () {\n      var channelArray = Array.from(SIMULATE_CHANNELS);\n      channelArray.filter(function (channel) {\n        return channel.name === channelState.name;\n      }).filter(function (channel) {\n        return channel !== channelState;\n      }).filter(function (channel) {\n        return !!channel.messagesCallback;\n      }).forEach(function (channel) {\n        return channel.messagesCallback(messageJson);\n      });\n      res();\n    }, 5);\n  });\n}\nexport function onMessage(channelState, fn) {\n  channelState.messagesCallback = fn;\n}\nexport function canBeUsed() {\n  return true;\n}\nexport function averageResponseTime() {\n  return 5;\n}\nexport var SimulateMethod = {\n  create: create,\n  close: close,\n  onMessage: onMessage,\n  postMessage: postMessage,\n  canBeUsed: canBeUsed,\n  type: type,\n  averageResponseTime: averageResponseTime,\n  microSeconds: microSeconds\n};","import { NativeMethod } from './methods/native.js';\nimport { IndexedDBMethod } from './methods/indexed-db.js';\nimport { LocalstorageMethod } from './methods/localstorage.js';\nimport { SimulateMethod } from './methods/simulate.js';\n// the line below will be removed from es5/browser builds\n\n// order is important\nvar METHODS = [NativeMethod,\n// fastest\nIndexedDBMethod, LocalstorageMethod];\nexport function chooseMethod(options) {\n  var chooseMethods = [].concat(options.methods, METHODS).filter(Boolean);\n\n  // the line below will be removed from es5/browser builds\n\n  // directly chosen\n  if (options.type) {\n    if (options.type === 'simulate') {\n      // only use simulate-method if directly chosen\n      return SimulateMethod;\n    }\n    var ret = chooseMethods.find(function (m) {\n      return m.type === options.type;\n    });\n    if (!ret) throw new Error('method-type ' + options.type + ' not found');else return ret;\n  }\n\n  /**\n   * if no webworker support is needed,\n   * remove idb from the list so that localstorage will be chosen\n   */\n  if (!options.webWorkerSupport) {\n    chooseMethods = chooseMethods.filter(function (m) {\n      return m.type !== 'idb';\n    });\n  }\n  var useMethod = chooseMethods.find(function (method) {\n    return method.canBeUsed();\n  });\n  if (!useMethod) {\n    throw new Error(\"No usable method found in \" + JSON.stringify(METHODS.map(function (m) {\n      return m.type;\n    })));\n  } else {\n    return useMethod;\n  }\n}","import { isPromise, PROMISE_RESOLVED_FALSE, PROMISE_RESOLVED_VOID } from './util.js';\nimport { chooseMethod } from './method-chooser.js';\nimport { fillOptionsWithDefaults } from './options.js';\n\n/**\n * Contains all open channels,\n * used in tests to ensure everything is closed.\n */\nexport var OPEN_BROADCAST_CHANNELS = new Set();\nvar lastId = 0;\nexport var BroadcastChannel = function BroadcastChannel(name, options) {\n  // identifier of the channel to debug stuff\n  this.id = lastId++;\n  OPEN_BROADCAST_CHANNELS.add(this);\n  this.name = name;\n  if (ENFORCED_OPTIONS) {\n    options = ENFORCED_OPTIONS;\n  }\n  this.options = fillOptionsWithDefaults(options);\n  this.method = chooseMethod(this.options);\n\n  // isListening\n  this._iL = false;\n\n  /**\n   * _onMessageListener\n   * setting onmessage twice,\n   * will overwrite the first listener\n   */\n  this._onML = null;\n\n  /**\n   * _addEventListeners\n   */\n  this._addEL = {\n    message: [],\n    internal: []\n  };\n\n  /**\n   * Unsent message promises\n   * where the sending is still in progress\n   * @type {Set<Promise>}\n   */\n  this._uMP = new Set();\n\n  /**\n   * _beforeClose\n   * array of promises that will be awaited\n   * before the channel is closed\n   */\n  this._befC = [];\n\n  /**\n   * _preparePromise\n   */\n  this._prepP = null;\n  _prepareChannel(this);\n};\n\n// STATICS\n\n/**\n * used to identify if someone overwrites\n * window.BroadcastChannel with this\n * See methods/native.js\n */\nBroadcastChannel._pubkey = true;\n\n/**\n * clears the tmp-folder if is node\n * @return {Promise<boolean>} true if has run, false if not node\n */\nexport function clearNodeFolder(options) {\n  options = fillOptionsWithDefaults(options);\n  var method = chooseMethod(options);\n  if (method.type === 'node') {\n    return method.clearNodeFolder().then(function () {\n      return true;\n    });\n  } else {\n    return PROMISE_RESOLVED_FALSE;\n  }\n}\n\n/**\n * if set, this method is enforced,\n * no mather what the options are\n */\nvar ENFORCED_OPTIONS;\nexport function enforceOptions(options) {\n  ENFORCED_OPTIONS = options;\n}\n\n// PROTOTYPE\nBroadcastChannel.prototype = {\n  postMessage: function postMessage(msg) {\n    if (this.closed) {\n      throw new Error('BroadcastChannel.postMessage(): ' + 'Cannot post message after channel has closed ' +\n      /**\n       * In the past when this error appeared, it was really hard to debug.\n       * So now we log the msg together with the error so it at least\n       * gives some clue about where in your application this happens.\n       */\n      JSON.stringify(msg));\n    }\n    return _post(this, 'message', msg);\n  },\n  postInternal: function postInternal(msg) {\n    return _post(this, 'internal', msg);\n  },\n  set onmessage(fn) {\n    var time = this.method.microSeconds();\n    var listenObj = {\n      time: time,\n      fn: fn\n    };\n    _removeListenerObject(this, 'message', this._onML);\n    if (fn && typeof fn === 'function') {\n      this._onML = listenObj;\n      _addListenerObject(this, 'message', listenObj);\n    } else {\n      this._onML = null;\n    }\n  },\n  addEventListener: function addEventListener(type, fn) {\n    var time = this.method.microSeconds();\n    var listenObj = {\n      time: time,\n      fn: fn\n    };\n    _addListenerObject(this, type, listenObj);\n  },\n  removeEventListener: function removeEventListener(type, fn) {\n    var obj = this._addEL[type].find(function (obj) {\n      return obj.fn === fn;\n    });\n    _removeListenerObject(this, type, obj);\n  },\n  close: function close() {\n    var _this = this;\n    if (this.closed) {\n      return;\n    }\n    OPEN_BROADCAST_CHANNELS[\"delete\"](this);\n    this.closed = true;\n    var awaitPrepare = this._prepP ? this._prepP : PROMISE_RESOLVED_VOID;\n    this._onML = null;\n    this._addEL.message = [];\n    return awaitPrepare\n    // wait until all current sending are processed\n    .then(function () {\n      return Promise.all(Array.from(_this._uMP));\n    })\n    // run before-close hooks\n    .then(function () {\n      return Promise.all(_this._befC.map(function (fn) {\n        return fn();\n      }));\n    })\n    // close the channel\n    .then(function () {\n      return _this.method.close(_this._state);\n    });\n  },\n  get type() {\n    return this.method.type;\n  },\n  get isClosed() {\n    return this.closed;\n  }\n};\n\n/**\n * Post a message over the channel\n * @returns {Promise} that resolved when the message sending is done\n */\nfunction _post(broadcastChannel, type, msg) {\n  var time = broadcastChannel.method.microSeconds();\n  var msgObj = {\n    time: time,\n    type: type,\n    data: msg\n  };\n  var awaitPrepare = broadcastChannel._prepP ? broadcastChannel._prepP : PROMISE_RESOLVED_VOID;\n  return awaitPrepare.then(function () {\n    var sendPromise = broadcastChannel.method.postMessage(broadcastChannel._state, msgObj);\n\n    // add/remove to unsent messages list\n    broadcastChannel._uMP.add(sendPromise);\n    sendPromise[\"catch\"]().then(function () {\n      return broadcastChannel._uMP[\"delete\"](sendPromise);\n    });\n    return sendPromise;\n  });\n}\nfunction _prepareChannel(channel) {\n  var maybePromise = channel.method.create(channel.name, channel.options);\n  if (isPromise(maybePromise)) {\n    channel._prepP = maybePromise;\n    maybePromise.then(function (s) {\n      // used in tests to simulate slow runtime\n      /*if (channel.options.prepareDelay) {\n           await new Promise(res => setTimeout(res, this.options.prepareDelay));\n      }*/\n      channel._state = s;\n    });\n  } else {\n    channel._state = maybePromise;\n  }\n}\nfunction _hasMessageListeners(channel) {\n  if (channel._addEL.message.length > 0) return true;\n  if (channel._addEL.internal.length > 0) return true;\n  return false;\n}\nfunction _addListenerObject(channel, type, obj) {\n  channel._addEL[type].push(obj);\n  _startListening(channel);\n}\nfunction _removeListenerObject(channel, type, obj) {\n  channel._addEL[type] = channel._addEL[type].filter(function (o) {\n    return o !== obj;\n  });\n  _stopListening(channel);\n}\nfunction _startListening(channel) {\n  if (!channel._iL && _hasMessageListeners(channel)) {\n    // someone is listening, start subscribing\n\n    var listenerFn = function listenerFn(msgObj) {\n      channel._addEL[msgObj.type].forEach(function (listenerObject) {\n        /**\n         * Getting the current time in JavaScript has no good precision.\n         * So instead of only listening to events that happened 'after' the listener\n         * was added, we also listen to events that happened 100ms before it.\n         * This ensures that when another process, like a WebWorker, sends events\n         * we do not miss them out because their timestamp is a bit off compared to the main process.\n         * Not doing this would make messages missing when we send data directly after subscribing and awaiting a response.\n         * @link https://johnresig.com/blog/accuracy-of-javascript-time/\n         */\n        var hundredMsInMicro = 100 * 1000;\n        var minMessageTime = listenerObject.time - hundredMsInMicro;\n        if (msgObj.time >= minMessageTime) {\n          listenerObject.fn(msgObj.data);\n        }\n      });\n    };\n    var time = channel.method.microSeconds();\n    if (channel._prepP) {\n      channel._prepP.then(function () {\n        channel._iL = true;\n        channel.method.onMessage(channel._state, listenerFn, time);\n      });\n    } else {\n      channel._iL = true;\n      channel.method.onMessage(channel._state, listenerFn, time);\n    }\n  }\n}\nfunction _stopListening(channel) {\n  if (channel._iL && !_hasMessageListeners(channel)) {\n    // no one is listening, stop subscribing\n    channel._iL = false;\n    var time = channel.method.microSeconds();\n    channel.method.onMessage(channel._state, null, time);\n  }\n}","import { addBrowser } from './browser.js';\nimport { addNode } from './node.js';\n\n/**\n * Use the code directly to prevent import problems\n * with the detect-node package.\n * @link https://github.com/iliakan/detect-node/blob/master/index.js\n */\nvar isNode = Object.prototype.toString.call(typeof process !== 'undefined' ? process : 0) === '[object process]';\nvar USE_METHOD = isNode ? addNode : addBrowser;\nvar LISTENERS = new Set();\nvar startedListening = false;\nfunction startListening() {\n  if (startedListening) {\n    return;\n  }\n  startedListening = true;\n  USE_METHOD(runAll);\n}\nexport function add(fn) {\n  startListening();\n  if (typeof fn !== 'function') {\n    throw new Error('Listener is no function');\n  }\n  LISTENERS.add(fn);\n  var addReturn = {\n    remove: function remove() {\n      return LISTENERS[\"delete\"](fn);\n    },\n    run: function run() {\n      LISTENERS[\"delete\"](fn);\n      return fn();\n    }\n  };\n  return addReturn;\n}\nexport function runAll() {\n  var promises = [];\n  LISTENERS.forEach(function (fn) {\n    promises.push(fn());\n    LISTENERS[\"delete\"](fn);\n  });\n  return Promise.all(promises);\n}\nexport function removeAll() {\n  LISTENERS.clear();\n}\nexport function getSize() {\n  return LISTENERS.size;\n}","export function addNode(fn) {\n  process.on('exit', function () {\n    return fn();\n  });\n\n  /**\n   * on the following events,\n   * the process will not end if there are\n   * event-handlers attached,\n   * therefore we have to call process.exit()\n   */\n  process.on('beforeExit', function () {\n    return fn().then(function () {\n      return process.exit();\n    });\n  });\n  // catches ctrl+c event\n  process.on('SIGINT', function () {\n    return fn().then(function () {\n      return process.exit();\n    });\n  });\n  // catches uncaught exceptions\n  process.on('uncaughtException', function (err) {\n    return fn().then(function () {\n      console.trace(err);\n      process.exit(101);\n    });\n  });\n}","/* global WorkerGlobalScope */\n\nexport function addBrowser(fn) {\n  if (typeof WorkerGlobalScope === 'function' && self instanceof WorkerGlobalScope) {\n    /**\n     * Because killing a worker does directly stop the excution\n     * of the code, our only chance is to overwrite the close function\n     * which could work some times.\n     * @link https://stackoverflow.com/q/72903255/3443137\n     */\n    var oldClose = self.close.bind(self);\n    self.close = function () {\n      fn();\n      return oldClose();\n    };\n  } else {\n    /**\n     * if we are on react-native, there is no window.addEventListener\n     * @link https://github.com/pubkey/unload/issues/6\n     */\n    if (typeof window.addEventListener !== 'function') {\n      return;\n    }\n\n    /**\n     * for normal browser-windows, we use the beforeunload-event\n     */\n    window.addEventListener('beforeunload', function () {\n      fn();\n    }, true);\n\n    /**\n     * for iframes, we have to use the unload-event\n     * @link https://stackoverflow.com/q/47533670/3443137\n     */\n    window.addEventListener('unload', function () {\n      fn();\n    }, true);\n  }\n\n  /**\n   * TODO add fallback for safari-mobile\n   * @link https://stackoverflow.com/a/26193516/3443137\n   */\n}","import { add as unloadAdd } from 'unload';\n\n/**\n * sends and internal message over the broadcast-channel\n */\nexport function sendLeaderMessage(leaderElector, action) {\n  var msgJson = {\n    context: 'leader',\n    action: action,\n    token: leaderElector.token\n  };\n  return leaderElector.broadcastChannel.postInternal(msgJson);\n}\nexport function beLeader(leaderElector) {\n  leaderElector.isLeader = true;\n  leaderElector._hasLeader = true;\n  var unloadFn = unloadAdd(function () {\n    return leaderElector.die();\n  });\n  leaderElector._unl.push(unloadFn);\n  var isLeaderListener = function isLeaderListener(msg) {\n    if (msg.context === 'leader' && msg.action === 'apply') {\n      sendLeaderMessage(leaderElector, 'tell');\n    }\n    if (msg.context === 'leader' && msg.action === 'tell' && !leaderElector._dpLC) {\n      /**\n       * another instance is also leader!\n       * This can happen on rare events\n       * like when the CPU is at 100% for long time\n       * or the tabs are open very long and the browser throttles them.\n       * @link https://github.com/pubkey/broadcast-channel/issues/414\n       * @link https://github.com/pubkey/broadcast-channel/issues/385\n       */\n      leaderElector._dpLC = true;\n      leaderElector._dpL(); // message the lib user so the app can handle the problem\n      sendLeaderMessage(leaderElector, 'tell'); // ensure other leader also knows the problem\n    }\n  };\n\n  leaderElector.broadcastChannel.addEventListener('internal', isLeaderListener);\n  leaderElector._lstns.push(isLeaderListener);\n  return sendLeaderMessage(leaderElector, 'tell');\n}","import { randomToken } from './util.js';\nimport { sendLeaderMessage, beLeader } from './leader-election-util.js';\n\n/**\n * A faster version of the leader elector that uses the WebLock API\n * @link https://developer.mozilla.org/en-US/docs/Web/API/Web_Locks_API\n */\nexport var LeaderElectionWebLock = function LeaderElectionWebLock(broadcastChannel, options) {\n  var _this = this;\n  this.broadcastChannel = broadcastChannel;\n  broadcastChannel._befC.push(function () {\n    return _this.die();\n  });\n  this._options = options;\n  this.isLeader = false;\n  this.isDead = false;\n  this.token = randomToken();\n  this._lstns = [];\n  this._unl = [];\n  this._dpL = function () {}; // onduplicate listener\n  this._dpLC = false; // true when onduplicate called\n\n  this._wKMC = {}; // stuff for cleanup\n\n  // lock name\n  this.lN = 'pubkey-bc||' + broadcastChannel.method.type + '||' + broadcastChannel.name;\n};\nLeaderElectionWebLock.prototype = {\n  hasLeader: function hasLeader() {\n    var _this2 = this;\n    return navigator.locks.query().then(function (locks) {\n      var relevantLocks = locks.held ? locks.held.filter(function (lock) {\n        return lock.name === _this2.lN;\n      }) : [];\n      if (relevantLocks && relevantLocks.length > 0) {\n        return true;\n      } else {\n        return false;\n      }\n    });\n  },\n  awaitLeadership: function awaitLeadership() {\n    var _this3 = this;\n    if (!this._wLMP) {\n      this._wKMC.c = new AbortController();\n      var returnPromise = new Promise(function (res, rej) {\n        _this3._wKMC.res = res;\n        _this3._wKMC.rej = rej;\n      });\n      this._wLMP = new Promise(function (res) {\n        navigator.locks.request(_this3.lN, {\n          signal: _this3._wKMC.c.signal\n        }, function () {\n          // if the lock resolved, we can drop the abort controller\n          _this3._wKMC.c = undefined;\n          beLeader(_this3);\n          res();\n          return returnPromise;\n        })[\"catch\"](function () {});\n      });\n    }\n    return this._wLMP;\n  },\n  set onduplicate(_fn) {\n    // Do nothing because there are no duplicates in the WebLock version\n  },\n  die: function die() {\n    var _this4 = this;\n    this._lstns.forEach(function (listener) {\n      return _this4.broadcastChannel.removeEventListener('internal', listener);\n    });\n    this._lstns = [];\n    this._unl.forEach(function (uFn) {\n      return uFn.remove();\n    });\n    this._unl = [];\n    if (this.isLeader) {\n      this.isLeader = false;\n    }\n    this.isDead = true;\n    if (this._wKMC.res) {\n      this._wKMC.res();\n    }\n    if (this._wKMC.c) {\n      this._wKMC.c.abort('LeaderElectionWebLock.die() called');\n    }\n    return sendLeaderMessage(this, 'death');\n  }\n};","import { sleep, randomToken, PROMISE_RESOLVED_VOID, PROMISE_RESOLVED_TRUE, supportsWebLockAPI } from './util.js';\nimport { sendLeaderMessage, beLeader } from './leader-election-util.js';\nimport { LeaderElectionWebLock } from './leader-election-web-lock.js';\nvar LeaderElection = function LeaderElection(broadcastChannel, options) {\n  var _this = this;\n  this.broadcastChannel = broadcastChannel;\n  this._options = options;\n  this.isLeader = false;\n  this._hasLeader = false;\n  this.isDead = false;\n  this.token = randomToken();\n\n  /**\n   * Apply Queue,\n   * used to ensure we do not run applyOnce()\n   * in parallel.\n   */\n  this._aplQ = PROMISE_RESOLVED_VOID;\n  // amount of unfinished applyOnce() calls\n  this._aplQC = 0;\n\n  // things to clean up\n  this._unl = []; // _unloads\n  this._lstns = []; // _listeners\n  this._dpL = function () {}; // onduplicate listener\n  this._dpLC = false; // true when onduplicate called\n\n  /**\n   * Even when the own instance is not applying,\n   * we still listen to messages to ensure the hasLeader flag\n   * is set correctly.\n   */\n  var hasLeaderListener = function hasLeaderListener(msg) {\n    if (msg.context === 'leader') {\n      if (msg.action === 'death') {\n        _this._hasLeader = false;\n      }\n      if (msg.action === 'tell') {\n        _this._hasLeader = true;\n      }\n    }\n  };\n  this.broadcastChannel.addEventListener('internal', hasLeaderListener);\n  this._lstns.push(hasLeaderListener);\n};\nLeaderElection.prototype = {\n  hasLeader: function hasLeader() {\n    return Promise.resolve(this._hasLeader);\n  },\n  /**\n   * Returns true if the instance is leader,\n   * false if not.\n   * @async\n   */\n  applyOnce: function applyOnce(\n  // true if the applyOnce() call came from the fallbackInterval cycle\n  isFromFallbackInterval) {\n    var _this2 = this;\n    if (this.isLeader) {\n      return sleep(0, true);\n    }\n    if (this.isDead) {\n      return sleep(0, false);\n    }\n\n    /**\n     * Already applying more than once,\n     * -> wait for the apply queue to be finished.\n     */\n    if (this._aplQC > 1) {\n      return this._aplQ;\n    }\n\n    /**\n     * Add a new apply-run\n     */\n    var applyRun = function applyRun() {\n      /**\n       * Optimization shortcuts.\n       * Directly return if a previous run\n       * has already elected a leader.\n       */\n      if (_this2.isLeader) {\n        return PROMISE_RESOLVED_TRUE;\n      }\n      var stopCriteria = false;\n      var stopCriteriaPromiseResolve;\n      /**\n       * Resolves when a stop criteria is reached.\n       * Uses as a performance shortcut so we do not\n       * have to await the responseTime when it is already clear\n       * that the election failed.\n       */\n      var stopCriteriaPromise = new Promise(function (res) {\n        stopCriteriaPromiseResolve = function stopCriteriaPromiseResolve() {\n          stopCriteria = true;\n          res();\n        };\n      });\n      var handleMessage = function handleMessage(msg) {\n        if (msg.context === 'leader' && msg.token != _this2.token) {\n          if (msg.action === 'apply') {\n            // other is applying\n            if (msg.token > _this2.token) {\n              /**\n               * other has higher token\n               * -> stop applying and let other become leader.\n               */\n              stopCriteriaPromiseResolve();\n            }\n          }\n          if (msg.action === 'tell') {\n            // other is already leader\n            stopCriteriaPromiseResolve();\n            _this2._hasLeader = true;\n          }\n        }\n      };\n      _this2.broadcastChannel.addEventListener('internal', handleMessage);\n\n      /**\n       * If the applyOnce() call came from the fallbackInterval,\n       * we can assume that the election runs in the background and\n       * not critical process is waiting for it.\n       * When this is true, we give the other instances\n       * more time to answer to messages in the election cycle.\n       * This makes it less likely to elect duplicate leaders.\n       * But also it takes longer which is not a problem because we anyway\n       * run in the background.\n       */\n      var waitForAnswerTime = isFromFallbackInterval ? _this2._options.responseTime * 4 : _this2._options.responseTime;\n      return sendLeaderMessage(_this2, 'apply') // send out that this one is applying\n      .then(function () {\n        return Promise.race([sleep(waitForAnswerTime), stopCriteriaPromise.then(function () {\n          return Promise.reject(new Error());\n        })]);\n      })\n      // send again in case another instance was just created\n      .then(function () {\n        return sendLeaderMessage(_this2, 'apply');\n      })\n      // let others time to respond\n      .then(function () {\n        return Promise.race([sleep(waitForAnswerTime), stopCriteriaPromise.then(function () {\n          return Promise.reject(new Error());\n        })]);\n      })[\"catch\"](function () {}).then(function () {\n        _this2.broadcastChannel.removeEventListener('internal', handleMessage);\n        if (!stopCriteria) {\n          // no stop criteria -> own is leader\n          return beLeader(_this2).then(function () {\n            return true;\n          });\n        } else {\n          // other is leader\n          return false;\n        }\n      });\n    };\n    this._aplQC = this._aplQC + 1;\n    this._aplQ = this._aplQ.then(function () {\n      return applyRun();\n    }).then(function () {\n      _this2._aplQC = _this2._aplQC - 1;\n    });\n    return this._aplQ.then(function () {\n      return _this2.isLeader;\n    });\n  },\n  awaitLeadership: function awaitLeadership() {\n    if ( /* _awaitLeadershipPromise */\n    !this._aLP) {\n      this._aLP = _awaitLeadershipOnce(this);\n    }\n    return this._aLP;\n  },\n  set onduplicate(fn) {\n    this._dpL = fn;\n  },\n  die: function die() {\n    var _this3 = this;\n    this._lstns.forEach(function (listener) {\n      return _this3.broadcastChannel.removeEventListener('internal', listener);\n    });\n    this._lstns = [];\n    this._unl.forEach(function (uFn) {\n      return uFn.remove();\n    });\n    this._unl = [];\n    if (this.isLeader) {\n      this._hasLeader = false;\n      this.isLeader = false;\n    }\n    this.isDead = true;\n    return sendLeaderMessage(this, 'death');\n  }\n};\n\n/**\n * @param leaderElector {LeaderElector}\n */\nfunction _awaitLeadershipOnce(leaderElector) {\n  if (leaderElector.isLeader) {\n    return PROMISE_RESOLVED_VOID;\n  }\n  return new Promise(function (res) {\n    var resolved = false;\n    function finish() {\n      if (resolved) {\n        return;\n      }\n      resolved = true;\n      leaderElector.broadcastChannel.removeEventListener('internal', whenDeathListener);\n      res(true);\n    }\n\n    // try once now\n    leaderElector.applyOnce().then(function () {\n      if (leaderElector.isLeader) {\n        finish();\n      }\n    });\n\n    /**\n     * Try on fallbackInterval\n     * @recursive\n     */\n    var tryOnFallBack = function tryOnFallBack() {\n      return sleep(leaderElector._options.fallbackInterval).then(function () {\n        if (leaderElector.isDead || resolved) {\n          return;\n        }\n        if (leaderElector.isLeader) {\n          finish();\n        } else {\n          return leaderElector.applyOnce(true).then(function () {\n            if (leaderElector.isLeader) {\n              finish();\n            } else {\n              tryOnFallBack();\n            }\n          });\n        }\n      });\n    };\n    tryOnFallBack();\n\n    // try when other leader dies\n    var whenDeathListener = function whenDeathListener(msg) {\n      if (msg.context === 'leader' && msg.action === 'death') {\n        leaderElector._hasLeader = false;\n        leaderElector.applyOnce().then(function () {\n          if (leaderElector.isLeader) {\n            finish();\n          }\n        });\n      }\n    };\n    leaderElector.broadcastChannel.addEventListener('internal', whenDeathListener);\n    leaderElector._lstns.push(whenDeathListener);\n  });\n}\nfunction fillOptionsWithDefaults(options, channel) {\n  if (!options) options = {};\n  options = JSON.parse(JSON.stringify(options));\n  if (!options.fallbackInterval) {\n    options.fallbackInterval = 3000;\n  }\n  if (!options.responseTime) {\n    options.responseTime = channel.method.averageResponseTime(channel.options);\n  }\n  return options;\n}\nexport function createLeaderElection(channel, options) {\n  if (channel._leaderElector) {\n    throw new Error('BroadcastChannel already has a leader-elector');\n  }\n  options = fillOptionsWithDefaults(options, channel);\n  var elector = supportsWebLockAPI() ? new LeaderElectionWebLock(channel, options) : new LeaderElection(channel, options);\n  channel._befC.push(function () {\n    return elector.die();\n  });\n  channel._leaderElector = elector;\n  return elector;\n}","/*!\n * Copyright (c) 2015-present, Okta, Inc. and/or its affiliates. All rights reserved.\n * The Okta software accompanied by this notice is provided pursuant to the Apache License, Version 2.0 (the \"License.\")\n *\n * You may obtain a copy of the License at http://www.apache.org/licenses/LICENSE-2.0.\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT\n * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * \n * See the License for the specific language governing permissions and limitations under the License.\n */\n\n\nimport { ServiceInterface, ServiceManagerOptions } from '../core/types';\nimport {\n  BroadcastChannel,\n  createLeaderElection,\n  LeaderElector\n} from 'broadcast-channel';\nimport { isBrowser } from '../features';\n\ndeclare type OnLeaderHandler = (() => Promise<void>);\ndeclare type ServiceOptions = ServiceManagerOptions & {\n  onLeader?: OnLeaderHandler;\n};\n\nexport class LeaderElectionService implements ServiceInterface {\n  private options: ServiceOptions;\n  private channel?: BroadcastChannel;\n  private elector?: LeaderElector;\n  private started = false;\n\n  constructor(options: ServiceOptions = {}) {\n    this.options = options;\n    this.onLeaderDuplicate = this.onLeaderDuplicate.bind(this);\n    this.onLeader = this.onLeader.bind(this);\n  }\n\n  private onLeaderDuplicate() {\n  }\n\n  private async onLeader() {\n    await this.options.onLeader?.();\n  }\n\n  isLeader() {\n    return !!this.elector?.isLeader;\n  }\n\n  hasLeader() {\n    return !!this.elector?.hasLeader;\n  }\n\n  async start() {\n    if (this.canStart()) {\n      const { electionChannelName } = this.options;\n      this.channel = new BroadcastChannel(electionChannelName as string);\n      this.elector = createLeaderElection(this.channel);\n      this.elector.onduplicate = this.onLeaderDuplicate;\n      this.elector.awaitLeadership().then(this.onLeader);\n      this.started = true;\n    }\n  }\n\n  async stop() {\n    if (this.started) {\n      if (this.elector) {\n        await this.elector.die();\n        this.elector = undefined;\n      }\n      if (this.channel) {\n        // Workaround to fix error `Failed to execute 'postMessage' on 'BroadcastChannel': Channel is closed`\n        (this.channel as any).postInternal = () => Promise.resolve();\n        await this.channel.close();\n        this.channel = undefined;\n      }\n      this.started = false;\n    }\n  }\n\n  requiresLeadership() {\n    return false;\n  }\n\n  isStarted() {\n    return this.started;\n  }\n\n  canStart() {\n    return isBrowser() && !this.started;\n  }\n\n}\n","/*!\n * Copyright (c) 2015-present, Okta, Inc. and/or its affiliates. All rights reserved.\n * The Okta software accompanied by this notice is provided pursuant to the Apache License, Version 2.0 (the \"License.\")\n *\n * You may obtain a copy of the License at http://www.apache.org/licenses/LICENSE-2.0.\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT\n * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * \n * See the License for the specific language governing permissions and limitations under the License.\n */\n\n\nimport { AuthSdkError } from '../errors';\nimport { ServiceInterface, ServiceManagerOptions } from '../core/types';\nimport { EVENT_EXPIRED, TokenManagerInterface, isRefreshToken } from '../oidc/types';\nimport { isBrowser } from '../features';\n\nexport class AutoRenewService implements ServiceInterface {\n  private tokenManager: TokenManagerInterface;\n  private options: ServiceManagerOptions;\n  private renewTimeQueue: Array<number>;\n  private started = false;\n\n  constructor(tokenManager: TokenManagerInterface, options: ServiceManagerOptions = {}) {\n    this.tokenManager = tokenManager;\n    this.options = options;\n    this.renewTimeQueue = [];\n    this.onTokenExpiredHandler = this.onTokenExpiredHandler.bind(this);\n  }\n  \n  private shouldThrottleRenew(): boolean {\n    let res = false;\n    this.renewTimeQueue.push(Date.now());\n    if (this.renewTimeQueue.length >= 10) {\n      // get and remove first item from queue\n      const firstTime = this.renewTimeQueue.shift() as number;\n      const lastTime = this.renewTimeQueue[this.renewTimeQueue.length - 1];\n      res = (lastTime - firstTime) < 30 * 1000;\n    }\n    return res;\n  }\n\n  requiresLeadership() {\n    // If tokens sync storage is enabled, handle tokens expiration only in 1 leader tab\n    return !!this.options.syncStorage && isBrowser();\n  }\n\n  private processExpiredTokens() {\n    const tokenStorage = this.tokenManager.getStorage();\n    const tokens = tokenStorage.getStorage();\n    Object.keys(tokens).forEach(key => {\n      const token = tokens[key];\n      if (!isRefreshToken(token) && this.tokenManager.hasExpired(token)) {\n        this.onTokenExpiredHandler(key);\n      }\n    });\n  }\n\n  private onTokenExpiredHandler(key: string) {\n    if (this.options.autoRenew) {\n      if (this.shouldThrottleRenew()) {\n        const error = new AuthSdkError('Too many token renew requests');\n        this.tokenManager.emitError(error);\n      } else {\n        this.tokenManager.renew(key).catch(() => {}); // Renew errors will emit an \"error\" event \n      }\n    } else if (this.options.autoRemove) {\n      this.tokenManager.remove(key);\n    }\n  }\n\n  canStart() {\n    return (!!this.options.autoRenew || !!this.options.autoRemove) && !this.started;\n  }\n\n  async start() {\n    if (this.canStart()) {\n      this.tokenManager.on(EVENT_EXPIRED, this.onTokenExpiredHandler);\n      if (this.tokenManager.isStarted()) {\n        // If token manager has been already started, we could miss token expire events,\n        //  so need to process expired tokens manually.\n        this.processExpiredTokens();\n      }\n      this.started = true;\n    }\n  }\n\n  async stop() {\n    if (this.started) {\n      this.tokenManager.off(EVENT_EXPIRED, this.onTokenExpiredHandler);\n      this.renewTimeQueue = [];\n      this.started = false;\n    }\n  }\n\n  isStarted() {\n    return this.started;\n  }\n}\n","/*!\n * Copyright (c) 2015-present, Okta, Inc. and/or its affiliates. All rights reserved.\n * The Okta software accompanied by this notice is provided pursuant to the Apache License, Version 2.0 (the \"License.\")\n *\n * You may obtain a copy of the License at http://www.apache.org/licenses/LICENSE-2.0.\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT\n * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * \n * See the License for the specific language governing permissions and limitations under the License.\n */\n\nimport { BroadcastChannel } from 'broadcast-channel';\nimport { isBrowser } from '../features';\nimport {\n  ServiceManagerOptions, ServiceInterface\n} from '../core/types';\nimport {\n  Token, Tokens, \n  EVENT_ADDED, EVENT_REMOVED, EVENT_RENEWED, EVENT_SET_STORAGE, TokenManagerInterface\n} from '../oidc/types';\nimport { AuthSdkError } from '../errors';\n\nexport type SyncMessage = {\n  type: string;\n  key?: string;\n  token?: Token;\n  oldToken?: Token;\n  storage?: Tokens;\n};\nexport class SyncStorageService implements ServiceInterface {\n  private tokenManager: TokenManagerInterface;\n  private options: ServiceManagerOptions;\n  private channel?: BroadcastChannel<SyncMessage>;\n  private started = false;\n  private enablePostMessage = true;\n\n  constructor(tokenManager: TokenManagerInterface, options: ServiceManagerOptions = {}) {\n    this.tokenManager = tokenManager;\n    this.options = options;\n    this.onTokenAddedHandler = this.onTokenAddedHandler.bind(this);\n    this.onTokenRemovedHandler = this.onTokenRemovedHandler.bind(this);\n    this.onTokenRenewedHandler = this.onTokenRenewedHandler.bind(this);\n    this.onSetStorageHandler = this.onSetStorageHandler.bind(this);\n    this.onSyncMessageHandler = this.onSyncMessageHandler.bind(this);\n  }\n\n  requiresLeadership() {\n    return false;\n  }\n\n  isStarted() {\n    return this.started;\n  }\n\n  canStart() {\n    return !!this.options.syncStorage && isBrowser() && !this.started;\n  }\n\n  async start() {\n    if (!this.canStart()) {\n      return;\n    }\n    \n    const { syncChannelName } = this.options;\n    try {\n      // BroadcastChannel throws if no supported method can be found\n      this.channel = new BroadcastChannel(syncChannelName as string);\n    } catch (err) {\n      throw new AuthSdkError('SyncStorageService is not supported in current browser.');\n    }\n\n    this.tokenManager.on(EVENT_ADDED, this.onTokenAddedHandler);\n    this.tokenManager.on(EVENT_REMOVED, this.onTokenRemovedHandler);\n    this.tokenManager.on(EVENT_RENEWED, this.onTokenRenewedHandler);\n    this.tokenManager.on(EVENT_SET_STORAGE, this.onSetStorageHandler);\n    this.channel.addEventListener('message', this.onSyncMessageHandler);\n    this.started = true;\n  }\n\n  async stop() {\n    if (this.started) {\n      this.tokenManager.off(EVENT_ADDED, this.onTokenAddedHandler);\n      this.tokenManager.off(EVENT_REMOVED, this.onTokenRemovedHandler);\n      this.tokenManager.off(EVENT_RENEWED, this.onTokenRenewedHandler);\n      this.tokenManager.off(EVENT_SET_STORAGE, this.onSetStorageHandler);\n      this.channel?.removeEventListener('message', this.onSyncMessageHandler);\n      await this.channel?.close();\n      this.channel = undefined;\n      this.started = false;\n    }\n  }\n\n  private onTokenAddedHandler(key: string, token: Token) {\n    if (!this.enablePostMessage) {\n      return;\n    }\n    this.channel?.postMessage({\n      type: EVENT_ADDED,\n      key,\n      token\n    });\n  }\n\n  private onTokenRemovedHandler(key: string, token: Token) {\n    if (!this.enablePostMessage) {\n      return;\n    }\n    this.channel?.postMessage({\n      type: EVENT_REMOVED,\n      key,\n      token\n    });\n  }\n\n  private onTokenRenewedHandler(key: string, token: Token, oldToken?: Token) {\n    if (!this.enablePostMessage) {\n      return;\n    }\n    this.channel?.postMessage({\n      type: EVENT_RENEWED,\n      key,\n      token,\n      oldToken\n    });\n  }\n\n  private onSetStorageHandler(storage: Tokens) {\n    this.channel?.postMessage({\n      type: EVENT_SET_STORAGE,\n      storage\n    });\n  }\n\n  /* eslint-disable complexity */\n  private onSyncMessageHandler(msg: SyncMessage) {\n    // Notes:\n    // 1. Using `enablePostMessage` flag here to prevent sync message loop.\n    //    If this flag is on, tokenManager event handlers do not post sync message.\n    // 2. IE11 has known issue with synchronization of LocalStorage cross tabs.\n    //    One workaround is to set empty event handler for `window.onstorage`.\n    //    But it's not 100% working, sometimes you still get old value from LocalStorage.\n    //    Better approch is to explicitly udpate LocalStorage with `setStorage`.\n\n    this.enablePostMessage = false;\n    switch (msg.type) {\n      case EVENT_SET_STORAGE:\n        this.tokenManager.getStorage().setStorage(msg.storage);\n        break;\n      case EVENT_ADDED:\n        this.tokenManager.emitAdded(msg.key!, msg.token!);\n        this.tokenManager.setExpireEventTimeout(msg.key!, msg.token!);\n        break;\n      case EVENT_REMOVED:\n        this.tokenManager.clearExpireEventTimeout(msg.key!);\n        this.tokenManager.emitRemoved(msg.key!, msg.token!);\n        break;\n      case EVENT_RENEWED:\n        this.tokenManager.emitRenewed(msg.key!, msg.token!, msg.oldToken);\n        break;\n      default:\n        break;\n    }\n    this.enablePostMessage = true;\n  }\n} ","import { ServiceInterface, ServiceManagerOptions } from '../core/types';\nimport { TokenManagerInterface } from '../oidc/types';\nimport { isBrowser } from '../features';\n\nconst getNow = () => Math.floor(Date.now() / 1000);\n\nexport class RenewOnTabActivationService implements ServiceInterface {\n  private tokenManager: TokenManagerInterface;\n  private started = false;\n  private options: ServiceManagerOptions;\n  private lastHidden = -1;\n  onPageVisbilityChange: () => void;\n\n  constructor(tokenManager: TokenManagerInterface, options: ServiceManagerOptions = {}) {\n    this.tokenManager = tokenManager;\n    this.options = options;\n    // store this context for event handler\n    this.onPageVisbilityChange = this._onPageVisbilityChange.bind(this);\n  }\n\n  // do not use directly, use `onPageVisbilityChange` (with binded this context)\n  /* eslint complexity: [0, 10] */\n  private _onPageVisbilityChange () {\n    if (document.hidden) {\n      this.lastHidden = getNow();\n    }\n    // renew will only attempt if tab was inactive for duration\n    else if (this.lastHidden > 0 && (getNow() - this.lastHidden >= this.options.tabInactivityDuration!)) {\n      const { accessToken, idToken } = this.tokenManager.getTokensSync();\n      if (!!accessToken && this.tokenManager.hasExpired(accessToken)) {\n        const key = this.tokenManager.getStorageKeyByType('accessToken');\n        // Renew errors will emit an \"error\" event\n        this.tokenManager.renew(key).catch(() => {});\n      }\n      else if (!!idToken && this.tokenManager.hasExpired(idToken)) {\n        const key = this.tokenManager.getStorageKeyByType('idToken');\n        // Renew errors will emit an \"error\" event\n        this.tokenManager.renew(key).catch(() => {});\n      }\n    }\n  }\n\n  async start () {\n    if (this.canStart() && !!document) {\n      document.addEventListener('visibilitychange', this.onPageVisbilityChange);\n      this.started = true;\n    }\n  }\n\n  async stop () {\n    if (document) {\n      document.removeEventListener('visibilitychange', this.onPageVisbilityChange);\n      this.started = false;\n    }\n  }\n\n  canStart(): boolean {\n    return isBrowser() &&\n    !!this.options.autoRenew &&\n    !!this.options.renewOnTabActivation &&\n    !this.started;\n  }\n\n  requiresLeadership(): boolean {\n    return false;\n  }\n\n  isStarted(): boolean {\n    return this.started;\n  }\n}\n","/*!\n * Copyright (c) 2015-present, Okta, Inc. and/or its affiliates. All rights reserved.\n * The Okta software accompanied by this notice is provided pursuant to the Apache License, Version 2.0 (the \"License.\")\n *\n * You may obtain a copy of the License at http://www.apache.org/licenses/LICENSE-2.0.\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT\n * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * \n * See the License for the specific language governing permissions and limitations under the License.\n */\n\n\nimport {\n  OAuthTransactionMeta,\n  OAuthStorageManagerInterface,\n} from '../../oidc';\n\nimport {\n  ServiceManagerInterface,\n  ServiceInterface,\n  ServiceManagerOptions,\n  OktaAuthCoreInterface,\n  OktaAuthCoreOptions\n} from '../types';\nimport { AutoRenewService,\n  SyncStorageService,\n  LeaderElectionService,\n  RenewOnTabActivationService\n} from '../../services';\nimport { removeNils } from '../../util';\n\nconst AUTO_RENEW = 'autoRenew';\nconst SYNC_STORAGE = 'syncStorage';\nconst LEADER_ELECTION = 'leaderElection';\nconst RENEW_ON_TAB_ACTIVATION = 'renewOnTabActivation';\n\nexport class ServiceManager\n<\n  M extends OAuthTransactionMeta,\n  S extends OAuthStorageManagerInterface<M>,\n  O extends OktaAuthCoreOptions\n>\nimplements ServiceManagerInterface \n{\n  private sdk: OktaAuthCoreInterface<M, S, O>;\n  private options: ServiceManagerOptions;\n  private services: Map<string, ServiceInterface>;\n  private started: boolean;\n\n  private static knownServices = [AUTO_RENEW, SYNC_STORAGE, LEADER_ELECTION, RENEW_ON_TAB_ACTIVATION];\n\n  private static defaultOptions: ServiceManagerOptions = {\n    autoRenew: true,\n    autoRemove: true,\n    syncStorage: true,\n    renewOnTabActivation: true,\n    tabInactivityDuration: 1800,    // 30 mins in seconds\n  };\n\n  constructor(sdk: OktaAuthCoreInterface<M, S, O>, options: ServiceManagerOptions = {}) {\n    this.sdk = sdk;\n    this.onLeader = this.onLeader.bind(this);\n\n    // TODO: backwards compatibility, remove in next major version - OKTA-473815\n    const { autoRenew, autoRemove, syncStorage } = sdk.tokenManager.getOptions();\n    options.electionChannelName = options.electionChannelName || options.broadcastChannelName;\n    this.options = Object.assign({}, \n      ServiceManager.defaultOptions,\n      { autoRenew, autoRemove, syncStorage }, \n      {\n        electionChannelName: `${sdk.options.clientId}-election`,\n        syncChannelName: `${sdk.options.clientId}-sync`,\n      },\n      removeNils(options)\n    );\n\n    this.started = false;\n    this.services = new Map();\n\n    ServiceManager.knownServices.forEach(name => {\n      const svc = this.createService(name);\n      if (svc) {\n        this.services.set(name, svc);\n      }\n    });\n  }\n\n  private async onLeader() {\n    if (this.started) {\n      // Start services that requires leadership\n      await this.startServices();\n    }\n  }\n\n  isLeader() {\n    return (this.getService(LEADER_ELECTION) as LeaderElectionService)?.isLeader();\n  }\n\n  isLeaderRequired() {\n    return [...this.services.values()].some(srv => srv.canStart() && srv.requiresLeadership());\n  }\n\n  async start() {\n    if (this.started) {\n      return;     // noop if services have already started\n    }\n    await this.startServices();\n    this.started = true;\n  }\n  \n  async stop() {\n    await this.stopServices();\n    this.started = false;\n  }\n\n  getService(name: string): ServiceInterface | undefined {\n    return this.services.get(name);\n  }\n\n  private async startServices() {\n    for (const [name, srv] of this.services.entries()) {\n      if (this.canStartService(name, srv)) {\n        await srv.start();\n      }\n    }\n  }\n\n  private async stopServices() {\n    for (const srv of this.services.values()) {\n      await srv.stop();\n    }\n  }\n\n  // eslint-disable-next-line complexity\n  private canStartService(name: string, srv: ServiceInterface): boolean {\n    let canStart = srv.canStart() && !srv.isStarted();\n    // only start election if a leader is required\n    if (name === LEADER_ELECTION) {\n      canStart &&= this.isLeaderRequired();\n    } else if (srv.requiresLeadership()) {\n      canStart &&= this.isLeader();\n    }\n    return canStart;\n  }\n\n  private createService(name: string): ServiceInterface {\n    const tokenManager = this.sdk.tokenManager;\n\n    let service: ServiceInterface;\n    switch (name) {\n      case LEADER_ELECTION:\n        service = new LeaderElectionService({...this.options, onLeader: this.onLeader});\n        break;\n      case AUTO_RENEW:\n        service = new AutoRenewService(tokenManager, {...this.options});\n        break;\n      case SYNC_STORAGE:\n        service = new SyncStorageService(tokenManager, {...this.options});\n        break;\n      case RENEW_ON_TAB_ACTIVATION:\n        service = new RenewOnTabActivationService(tokenManager, {...this.options});\n        break;\n      default:\n        throw new Error(`Unknown service ${name}`);\n    }\n    return service;\n  }\n\n}\n","import { StorageManagerConstructor } from '../storage/types';\nimport { OktaAuthConstructor, OktaAuthOptionsConstructor } from '../base/types';\n\nimport { OktaAuthCoreInterface, OktaAuthCoreOptions } from './types';\nimport { createOktaAuthBase } from '../base';\nimport { mixinStorage } from '../storage/mixin';\nimport { mixinHttp } from '../http/mixin';\nimport { mixinOAuth } from '../oidc/mixin';\nimport {\n  OAuthStorageManagerInterface,\n  PKCETransactionMeta,\n  TransactionManagerConstructor,\n  TransactionManagerInterface\n} from '../oidc/types';\nimport { mixinCore } from './mixin';\nimport { mixinSession } from '../session/mixin';\n\nexport function createOktaAuthCore<\n  M extends PKCETransactionMeta = PKCETransactionMeta,\n  S extends OAuthStorageManagerInterface<M> = OAuthStorageManagerInterface<M>,\n  O extends OktaAuthCoreOptions = OktaAuthCoreOptions,\n  TM extends TransactionManagerInterface = TransactionManagerInterface\n>(\n  StorageManagerConstructor: StorageManagerConstructor<S>,\n  OptionsConstructor: OktaAuthOptionsConstructor<O>,\n  TransactionManagerConstructor: TransactionManagerConstructor<TM>\n): OktaAuthConstructor<OktaAuthCoreInterface<M, S, O, TM>>\n{\n  const Base = createOktaAuthBase(OptionsConstructor);\n  const WithStorage = mixinStorage<S, O>(Base, StorageManagerConstructor);\n  const WithHttp = mixinHttp<S, O>(WithStorage);\n  const WithSession = mixinSession<S, O>(WithHttp);\n  const WithOAuth = mixinOAuth<M, S, O, TM>(WithSession, TransactionManagerConstructor);\n  const Core = mixinCore<M, S, O, TM>(WithOAuth);\n  return Core;\n}\n","import { parseOAuthResponseFromUrl } from '../oidc/parseFromUrl';\nimport { OktaAuthConstructor } from '../base/types';\nimport {\n  OAuthStorageManagerInterface,\n  OAuthTransactionMeta,\n  OktaAuthOAuthInterface,\n  PKCETransactionMeta,\n  Tokens,\n  TransactionManagerInterface,\n} from '../oidc/types';\nimport { AuthStateManager } from './AuthStateManager';\nimport { ServiceManager } from './ServiceManager';\nimport { OktaAuthCoreInterface, OktaAuthCoreOptions } from './types';\n\nexport function mixinCore\n<\n  M extends OAuthTransactionMeta = PKCETransactionMeta,\n  S extends OAuthStorageManagerInterface<M> = OAuthStorageManagerInterface<M>,\n  O extends OktaAuthCoreOptions = OktaAuthCoreOptions,\n  TM extends TransactionManagerInterface = TransactionManagerInterface,\n  TBase extends OktaAuthConstructor<OktaAuthOAuthInterface<M, S, O, TM>>\n    = OktaAuthConstructor<OktaAuthOAuthInterface<M, S, O, TM>>\n>\n(Base: TBase): TBase & OktaAuthConstructor<OktaAuthCoreInterface<M, S, O, TM>>\n{\n  return class OktaAuthCore extends Base implements OktaAuthCoreInterface<M, S, O, TM>\n  {\n    authStateManager: AuthStateManager<M, S, O>;\n    serviceManager: ServiceManager<M, S, O>;\n    \n    constructor(...args: any[]) {\n      super(...args);\n\n      // AuthStateManager\n      this.authStateManager = new AuthStateManager<M, S, O>(this);\n\n      // ServiceManager\n      this.serviceManager = new ServiceManager<M, S, O>(this, this.options.services);\n    }\n\n    async start() {\n      await this.serviceManager.start();\n      // TODO: review tokenManager.start\n      this.tokenManager.start();\n      if (!this.token.isLoginRedirect()) {\n        await this.authStateManager.updateAuthState();\n      }\n    }\n  \n    async stop() {\n      // TODO: review tokenManager.stop\n      this.tokenManager.stop();\n      await this.serviceManager.stop();\n    }\n\n    async handleRedirect(originalUri?: string): Promise<void> {\n      await this.handleLoginRedirect(undefined, originalUri);\n    }\n\n    // eslint-disable-next-line complexity\n    async handleLoginRedirect(tokens?: Tokens, originalUri?: string): Promise<void> {\n      let state = this.options.state;\n  \n      // Store tokens and update AuthState by the emitted events\n      if (tokens) {\n        this.tokenManager.setTokens(tokens);\n        originalUri = originalUri || this.getOriginalUri(this.options.state);\n      } else if (this.isLoginRedirect()) {\n        try {\n          // For redirect flow, get state from the URL and use it to retrieve the originalUri\n          const oAuthResponse = await parseOAuthResponseFromUrl(this, {});\n          state = oAuthResponse.state;\n          originalUri = originalUri || this.getOriginalUri(state);\n          await this.storeTokensFromRedirect();\n        } catch(e) {\n          // auth state should be updated\n          await this.authStateManager.updateAuthState();\n          throw e;\n        }\n      } else {\n        return; // nothing to do\n      }\n      \n      // ensure auth state has been updated\n      await this.authStateManager.updateAuthState();\n  \n      // clear originalUri from storage\n      this.removeOriginalUri(state);\n  \n      // Redirect to originalUri\n      const { restoreOriginalUri } = this.options;\n      if (restoreOriginalUri) {\n        await restoreOriginalUri(this, originalUri);\n      } else if (originalUri) {\n        window.location.replace(originalUri);\n      }\n    }\n  };\n}\n","/*!\n * Copyright (c) 2015-present, Okta, Inc. and/or its affiliates. All rights reserved.\n * The Okta software accompanied by this notice is provided pursuant to the Apache License, Version 2.0 (the \"License.\")\n *\n * You may obtain a copy of the License at http://www.apache.org/licenses/LICENSE-2.0.\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT\n * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * \n * See the License for the specific language governing permissions and limitations under the License.\n */\n\nimport { createOAuthOptionsConstructor } from '../oidc';\nimport { AuthState, OktaAuthCoreInterface, OktaAuthCoreOptions, ServiceManagerOptions } from './types';\n\n\nexport function createCoreOptionsConstructor()\n{\n  const OAuthOptionsConstructor = createOAuthOptionsConstructor();\n  return class CoreOptionsConstructor\n    extends OAuthOptionsConstructor\n    implements Required<OktaAuthCoreOptions>\n  {\n    services: ServiceManagerOptions;\n    transformAuthState: (oktaAuth: OktaAuthCoreInterface, authState: AuthState) => Promise<AuthState>;\n\n    constructor(options: any) {\n      super(options);\n      this.services = options.services;\n      this.transformAuthState = options.transformAuthState;\n    }\n  };\n}\n","import { createOAuthStorageManager } from '../oidc/storage';\nimport { PKCETransactionMeta } from '../oidc/types';\n\nexport function createCoreStorageManager<M extends PKCETransactionMeta = PKCETransactionMeta>() {\n  return createOAuthStorageManager<M>();\n}\n","/*!\n * Copyright (c) 2015-present, Okta, Inc. and/or its affiliates. All rights reserved.\n * The Okta software accompanied by this notice is provided pursuant to the Apache License, Version 2.0 (the \"License.\")\n *\n * You may obtain a copy of the License at http://www.apache.org/licenses/LICENSE-2.0.\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT\n * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n *\n * See the License for the specific language governing permissions and limitations under the License.\n */\n\nimport { AuthSdkError } from '../errors';\nimport { atob, btoa } from './webcrypto';\n\n// converts a string to base64 (url/filename safe variant)\nexport function stringToBase64Url(str) {\n  var b64 = btoa(str);\n  return base64ToBase64Url(b64);\n}\n\n// converts a standard base64-encoded string to a \"url/filename safe\" variant\nexport function base64ToBase64Url(b64) {\n  return b64.replace(/\\+/g, '-').replace(/\\//g, '_').replace(/=+$/, '');\n}\n\n// converts a \"url/filename safe\" base64 string to a \"standard\" base64 string\nexport function base64UrlToBase64(b64u) {\n  return b64u.replace(/-/g, '+').replace(/_/g, '/');\n}\n\nexport function base64UrlToString(b64u) {\n  var b64 = base64UrlToBase64(b64u);\n  switch (b64.length % 4) {\n    case 0:\n      break;\n    case 2:\n      b64 += '==';\n      break;\n    case 3:\n      b64 += '=';\n      break;\n    default:\n      throw new AuthSdkError('Not a valid Base64Url');\n  }\n  var utf8 = atob(b64);\n  try {\n    return decodeURIComponent(escape(utf8));\n  } catch (e) {\n    return utf8;\n  }\n}\n\nexport function stringToBuffer(str) {\n  var buffer = new Uint8Array(str.length);\n  for (var i = 0; i < str.length; i++) {\n    buffer[i] = str.charCodeAt(i);\n  }\n  return buffer;\n}\n\nexport function base64UrlDecode(str) {\n  return atob(base64UrlToBase64(str));\n}\n\n// Converts base64 string to binary data view\nexport function base64UrlToBuffer(b64u) {\n  return Uint8Array.from(base64UrlDecode(b64u), (c: string) => c.charCodeAt(0));\n}\n\n// Converts an ArrayBuffer object that contains binary data to base64 encoded string\nexport function bufferToBase64Url(bin) {\n  return btoa(new Uint8Array(bin).reduce((s, byte) => s + String.fromCharCode(byte), ''));\n}\n\n\n","/*!\n * Copyright (c) 2015-present, Okta, Inc. and/or its affiliates. All rights reserved.\n * The Okta software accompanied by this notice is provided pursuant to the Apache License, Version 2.0 (the \"License.\")\n *\n * You may obtain a copy of the License at http://www.apache.org/licenses/LICENSE-2.0.\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT\n * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * \n * See the License for the specific language governing permissions and limitations under the License.\n */\n\n\n/* global atob, btoa, crypto */\nconst a = function(str) { return atob(str); };\nconst b = function (str) { return btoa(str); };\nconst c = typeof crypto === 'undefined' ? null : crypto;\n\nexport { a as atob, b as btoa, c as webcrypto };\n","/*!\n * Copyright (c) 2015-present, Okta, Inc. and/or its affiliates. All rights reserved.\n * The Okta software accompanied by this notice is provided pursuant to the Apache License, Version 2.0 (the \"License.\")\n *\n * You may obtain a copy of the License at http://www.apache.org/licenses/LICENSE-2.0.\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT\n * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n *\n * See the License for the specific language governing permissions and limitations under the License.\n */\n\n/* global TextEncoder */\nimport { stringToBase64Url } from './base64';\nimport { webcrypto } from './webcrypto';\n\nexport function getOidcHash(str) {  \n  var buffer = new TextEncoder().encode(str);\n  return webcrypto.subtle.digest('SHA-256', buffer).then(function(arrayBuffer) {\n    var intBuffer = new Uint8Array(arrayBuffer);\n    var firstHalf = intBuffer.slice(0, 16);\n    var hash = String.fromCharCode.apply(null, firstHalf as unknown as number[]);\n    var b64u = stringToBase64Url(hash); // url-safe base64 variant\n    return b64u;\n  });\n}\n","/*!\n * Copyright (c) 2015-present, Okta, Inc. and/or its affiliates. All rights reserved.\n * The Okta software accompanied by this notice is provided pursuant to the Apache License, Version 2.0 (the \"License.\")\n *\n * You may obtain a copy of the License at http://www.apache.org/licenses/LICENSE-2.0.\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT\n * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n *\n * See the License for the specific language governing permissions and limitations under the License.\n */\n\nimport { clone } from '../util';\nimport { stringToBuffer, base64UrlDecode } from './base64';\nimport { webcrypto } from './webcrypto';\n\nexport function verifyToken(idToken, key) {\n  key = clone(key);\n\n  var format = 'jwk';\n  var algo = {\n    name: 'RSASSA-PKCS1-v1_5',\n    hash: { name: 'SHA-256' }\n  };\n  var extractable = true;\n  var usages = ['verify'];\n\n  // https://connect.microsoft.com/IE/feedback/details/2242108/webcryptoapi-importing-jwk-with-use-field-fails\n  // This is a metadata tag that specifies the intent of how the key should be used.\n  // It's not necessary to properly verify the jwt's signature.\n  delete key.use;\n\n  // eslint-disable-next-line @typescript-eslint/ban-ts-comment\n  // @ts-ignore\n  return webcrypto.subtle.importKey(\n    format,\n    key,\n    algo,\n    extractable,\n    usages\n  )\n  .then(function(cryptoKey) {\n    var jwt = idToken.split('.');\n    var payload = stringToBuffer(jwt[0] + '.' + jwt[1]);\n    var b64Signature = base64UrlDecode(jwt[2]);\n    var signature = stringToBuffer(b64Signature);\n\n    return webcrypto.subtle.verify(\n      algo,\n      cryptoKey,\n      signature,\n      payload\n    );\n  });\n}\n\n","/*!\n * Copyright (c) 2015-present, Okta, Inc. and/or its affiliates. All rights reserved.\n * The Okta software accompanied by this notice is provided pursuant to the Apache License, Version 2.0 (the \"License.\")\n *\n * You may obtain a copy of the License at http://www.apache.org/licenses/LICENSE-2.0.\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT\n * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n *\n * See the License for the specific language governing permissions and limitations under the License.\n */\n\nimport CustomError from './CustomError';\nimport { HttpResponse } from '../http/types';\nimport { APIError, FieldError } from './types';\n\nexport default class AuthApiError extends CustomError implements APIError {\n  errorSummary: string;\n  errorCode?: string;\n  errorLink?: string;\n  errorId?: string;\n  errorCauses?: Array<FieldError>;\n  xhr?: HttpResponse;\n  meta?: Record<string, string | number>;\n\n  constructor(err: APIError, xhr?: HttpResponse, meta?: Record<string, string | number>) {\n    const message = err.errorSummary;\n    super(message);\n\n    this.name = 'AuthApiError';\n    this.errorSummary = err.errorSummary;\n    this.errorCode = err.errorCode;\n    this.errorLink = err.errorLink;\n    this.errorId = err.errorId;\n    this.errorCauses = err.errorCauses;\n\n    if (xhr) {\n      this.xhr = xhr;\n    }\n\n    if (meta) {\n      this.meta = meta;\n    }\n  }\n}\n","/*!\n * Copyright (c) 2015-present, Okta, Inc. and/or its affiliates. All rights reserved.\n * The Okta software accompanied by this notice is provided pursuant to the Apache License, Version 2.0 (the \"License.\")\n *\n * You may obtain a copy of the License at http://www.apache.org/licenses/LICENSE-2.0.\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT\n * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n *\n * See the License for the specific language governing permissions and limitations under the License.\n */\n\nimport CustomError from './CustomError';\n\nexport default class AuthPollStopError extends CustomError {\n  constructor() {\n    const message = 'The poll was stopped by the sdk';\n    super(message);\n  }\n}\n","/*!\n * Copyright (c) 2015-present, Okta, Inc. and/or its affiliates. All rights reserved.\n * The Okta software accompanied by this notice is provided pursuant to the Apache License, Version 2.0 (the \"License.\")\n *\n * You may obtain a copy of the License at http://www.apache.org/licenses/LICENSE-2.0.\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT\n * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n *\n * See the License for the specific language governing permissions and limitations under the License.\n */\n\nimport CustomError from './CustomError';\nimport { APIError, FieldError } from './types';\n\nexport default class AuthSdkError extends CustomError implements APIError {\n  errorSummary: string;\n  errorCode: string;\n  errorLink: string;\n  errorId: string;\n  errorCauses: Array<FieldError>;\n  xhr?: XMLHttpRequest;\n\n  constructor(msg: string, xhr?: XMLHttpRequest) {\n    super(msg);\n    this.name = 'AuthSdkError';\n    this.errorCode = 'INTERNAL';\n    this.errorSummary = msg;\n    this.errorLink = 'INTERNAL';\n    this.errorId = 'INTERNAL';\n    this.errorCauses = [];\n    if (xhr) {\n      this.xhr = xhr;\n    }\n  }\n}\n","import setPrototypeOf from \"./setPrototypeOf.js\";\nimport isNativeReflectConstruct from \"./isNativeReflectConstruct.js\";\nexport default function _construct(Parent, args, Class) {\n  if (isNativeReflectConstruct()) {\n    _construct = Reflect.construct.bind();\n  } else {\n    _construct = function _construct(Parent, args, Class) {\n      var a = [null];\n      a.push.apply(a, args);\n      var Constructor = Function.bind.apply(Parent, a);\n      var instance = new Constructor();\n      if (Class) setPrototypeOf(instance, Class.prototype);\n      return instance;\n    };\n  }\n  return _construct.apply(null, arguments);\n}","export default function _isNativeReflectConstruct() {\n  if (typeof Reflect === \"undefined\" || !Reflect.construct) return false;\n  if (Reflect.construct.sham) return false;\n  if (typeof Proxy === \"function\") return true;\n  try {\n    Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {}));\n    return true;\n  } catch (e) {\n    return false;\n  }\n}","import getPrototypeOf from \"./getPrototypeOf.js\";\nimport setPrototypeOf from \"./setPrototypeOf.js\";\nimport isNativeFunction from \"./isNativeFunction.js\";\nimport construct from \"./construct.js\";\nexport default function _wrapNativeSuper(Class) {\n  var _cache = typeof Map === \"function\" ? new Map() : undefined;\n  _wrapNativeSuper = function _wrapNativeSuper(Class) {\n    if (Class === null || !isNativeFunction(Class)) return Class;\n    if (typeof Class !== \"function\") {\n      throw new TypeError(\"Super expression must either be null or a function\");\n    }\n    if (typeof _cache !== \"undefined\") {\n      if (_cache.has(Class)) return _cache.get(Class);\n      _cache.set(Class, Wrapper);\n    }\n    function Wrapper() {\n      return construct(Class, arguments, getPrototypeOf(this).constructor);\n    }\n    Wrapper.prototype = Object.create(Class.prototype, {\n      constructor: {\n        value: Wrapper,\n        enumerable: false,\n        writable: true,\n        configurable: true\n      }\n    });\n    return setPrototypeOf(Wrapper, Class);\n  };\n  return _wrapNativeSuper(Class);\n}","export default function _isNativeFunction(fn) {\n  return Function.toString.call(fn).indexOf(\"[native code]\") !== -1;\n}","/*!\n * Copyright (c) 2015-present, Okta, Inc. and/or its affiliates. All rights reserved.\n * The Okta software accompanied by this notice is provided pursuant to the Apache License, Version 2.0 (the \"License.\")\n *\n * You may obtain a copy of the License at http://www.apache.org/licenses/LICENSE-2.0.\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT\n * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n *\n * See the License for the specific language governing permissions and limitations under the License.\n */\n\nexport default class CustomError extends Error {\n  constructor(message: string) {\n    // https://stackoverflow.com/questions/41102060/typescript-extending-error-class\n    super(message); // 'Error' breaks prototype chain here\n    Object.setPrototypeOf(this, new.target.prototype); // restore prototype chain\n  }\n}\n","/* eslint-disable camelcase */\n/*!\n * Copyright (c) 2015-present, Okta, Inc. and/or its affiliates. All rights reserved.\n * The Okta software accompanied by this notice is provided pursuant to the Apache License, Version 2.0 (the \"License.\")\n *\n * You may obtain a copy of the License at http://www.apache.org/licenses/LICENSE-2.0.\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT\n * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n *\n * See the License for the specific language governing permissions and limitations under the License.\n */\n\nimport CustomError from './CustomError';\nimport type { HttpResponse } from '../http';\n\nexport default class OAuthError extends CustomError {\n  errorCode: string;\n  errorSummary: string;\n\n  // for widget / idx-js backward compatibility\n  error: string;\n  error_description: string;\n\n  resp: HttpResponse | null = null;\n\n  constructor(errorCode: string, summary: string, resp?: HttpResponse) {\n    super(summary);\n\n    this.name = 'OAuthError';\n    this.errorCode = errorCode;\n    this.errorSummary = summary;\n\n    // for widget / idx-js backward compatibility\n    this.error = errorCode;\n    this.error_description = summary;\n\n    // an OAuth error (should) always result from a network request\n    // therefore include that in error for potential error handling\n    if (resp) {\n      this.resp = resp;\n    }\n  }\n}\n\n","/*!\n * Copyright (c) 2015-present, Okta, Inc. and/or its affiliates. All rights reserved.\n * The Okta software accompanied by this notice is provided pursuant to the Apache License, Version 2.0 (the \"License.\")\n *\n * You may obtain a copy of the License at http://www.apache.org/licenses/LICENSE-2.0.\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT\n * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n *\n * See the License for the specific language governing permissions and limitations under the License.\n */\n\n\nimport type { HttpResponse } from '../http';\nimport CustomError from './CustomError';\nimport { isFunction } from '../util';\n\n// Error thrown after an unsuccessful network request which requires an Authorization header \n// and returns a 4XX error with a www-authenticate header. The header value is parsed to construct \n// an error instance, which contains key/value pairs parsed out\nexport default class WWWAuthError extends CustomError {\n  static UNKNOWN_ERROR = 'UNKNOWN_WWW_AUTH_ERROR';\n\n  scheme: string;\n  parameters: Record<string, string>;\n  name = 'WWWAuthError';\n\n  resp: HttpResponse | null = null;\n\n  constructor(scheme: string, parameters: Record<string, string>, resp?: HttpResponse) {\n    // defaults to unknown error. `error` being returned in the www-authenticate header is expected\n    // but cannot be guaranteed. Throwing an error within a error constructor seems awkward\n    super(parameters.error ?? WWWAuthError.UNKNOWN_ERROR);\n    this.scheme = scheme;\n    this.parameters = parameters;\n\n    if (resp) {\n      this.resp = resp;\n    }\n  }\n\n  // convenience references\n  get error (): string { return this.parameters.error; }\n  get errorCode (): string { return this.error; }                 // parity with other error props\n  // eslint-disable-next-line camelcase\n  get error_description (): string { return this.parameters.error_description; }\n  // eslint-disable-next-line camelcase\n  get errorDescription (): string { return this.error_description; }\n  get errorSummary (): string { return this.errorDescription; }   // parity with other error props\n  get realm (): string { return this.parameters.realm; }\n\n  // parses the www-authenticate header for releveant\n  static parseHeader (header: string): WWWAuthError | null {\n    // header cannot be empty string\n    if (!header) {\n      return null;\n    }\n\n    // example string: Bearer error=\"invalid_token\", error_description=\"The access token is invalid\"\n    // regex will match on `error=\"invalid_token\", error_description=\"The access token is invalid\"`\n    // see unit test for more examples of possible www-authenticate values\n    // eslint-disable-next-line max-len\n    const regex = /(?:,|, )?([a-zA-Z0-9!#$%&'*+\\-.^_`|~]+)=(?:\"([a-zA-Z0-9!#$%&'*+\\-.,^_`|~ /:]+)\"|([a-zA-Z0-9!#$%&'*+\\-.^_`|~/:]+))/g;\n    const firstSpace = header.indexOf(' ');\n    const scheme = header.slice(0, firstSpace);\n    const remaining = header.slice(firstSpace + 1);\n    const params = {};\n\n    // Reference: foo=\"hello\", bar=\"bye\"\n    // i=0, match=[foo=\"hello1\", foo, hello]\n    // i=1, match=[bar=\"bye\", bar, bye]\n    let match;\n    while ((match = regex.exec(remaining)) !== null) {\n      params[match[1]] = (match[2] ?? match[3]);\n    }\n\n    return new WWWAuthError(scheme, params);\n  }\n\n  // finds the value of the `www-authenticate` header. HeadersInit allows for a few different\n  // representations of headers with different access patterns (.get vs [key])\n  static getWWWAuthenticateHeader (headers: HeadersInit = {}): string | null {\n    if (isFunction((headers as Headers)?.get)) {\n      return (headers as Headers).get('WWW-Authenticate');\n    }\n    return headers['www-authenticate'] ?? headers['WWW-Authenticate'];\n  }\n}\n","\n/*!\n * Copyright (c) 2015-present, Okta, Inc. and/or its affiliates. All rights reserved.\n * The Okta software accompanied by this notice is provided pursuant to the Apache License, Version 2.0 (the \"License.\")\n *\n * You may obtain a copy of the License at http://www.apache.org/licenses/LICENSE-2.0.\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT\n * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n *\n * See the License for the specific language governing permissions and limitations under the License.\n */\n\nimport AuthApiError from './AuthApiError';\nimport AuthPollStopError from './AuthPollStopError';\nimport AuthSdkError from './AuthSdkError';\nimport OAuthError from './OAuthError';\nimport WWWAuthError from './WWWAuthError';\n\nfunction isAuthApiError(obj: any): obj is AuthApiError {\n  return (obj instanceof AuthApiError);\n}\n\nfunction isOAuthError(obj: any): obj is OAuthError {\n  return (obj instanceof OAuthError);\n}\n\nfunction isWWWAuthError(obj: any): obj is WWWAuthError {\n  return (obj instanceof WWWAuthError);\n}\n\nexport {\n  isAuthApiError,\n  isOAuthError,\n  isWWWAuthError,\n  AuthApiError,\n  AuthPollStopError,\n  AuthSdkError,\n  OAuthError,\n  WWWAuthError\n};\n\nexport * from './types';\n","/*!\n * Copyright (c) 2015-present, Okta, Inc. and/or its affiliates. All rights reserved.\n * The Okta software accompanied by this notice is provided pursuant to the Apache License, Version 2.0 (the \"License.\")\n *\n * You may obtain a copy of the License at http://www.apache.org/licenses/LICENSE-2.0.\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT\n * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n *\n * See the License for the specific language governing permissions and limitations under the License.\n */\n\n/* eslint-disable node/no-unsupported-features/node-builtins */\n/* global document, window, TextEncoder, navigator */\n\nimport { webcrypto } from './crypto';\n\nconst isWindowsPhone = /windows phone|iemobile|wpdesktop/i;\t\n\nexport function isBrowser() {\n  return typeof document !== 'undefined' && typeof window !== 'undefined';\n}\n\nexport function isIE11OrLess() {\n  if (!isBrowser()) {\n    return false;\n  }\n  const documentMode = (document as any).documentMode;\n  return !!documentMode && documentMode <= 11;\n}\n\nexport function getUserAgent() {\n  return navigator.userAgent;\n}\n\nexport function isFingerprintSupported() {\n  const agent = getUserAgent();\n  return agent && !isWindowsPhone.test(agent);\t\n}\n\nexport function isPopupPostMessageSupported() {\n  if (!isBrowser()) {\n    return false;\n  }\n  const documentMode = (document as any).documentMode;\n  var isIE8or9 = documentMode && documentMode < 10;\n  if (typeof window.postMessage !== 'undefined' && !isIE8or9) {\n    return true;\n  }\n  return false;\n}\n\nfunction isWebCryptoSubtleSupported () {\n  return typeof webcrypto !== 'undefined'\n    && webcrypto !== null\n    && typeof webcrypto.subtle !== 'undefined'\n    && typeof Uint8Array !== 'undefined';\n}\n\nexport function isTokenVerifySupported() {\n  return isWebCryptoSubtleSupported();\n}\n\nexport function hasTextEncoder() {\n  return typeof TextEncoder !== 'undefined';\n}\n\nexport function isPKCESupported() {\n  return isTokenVerifySupported() && hasTextEncoder();\n}\n\nexport function isHTTPS() {\n  if (!isBrowser()) {\n    return false;\n  }\n  return window.location.protocol === 'https:';\n}\n\nexport function isLocalhost() {\n  // eslint-disable-next-line compat/compat\n  return isBrowser() && window.location.hostname === 'localhost';\n}\n\n// For now, DPoP is only supported on browsers\nexport function isDPoPSupported () {\n  return !isIE11OrLess() &&\n    typeof window.indexedDB !== 'undefined' &&\n    hasTextEncoder() &&\n    isWebCryptoSubtleSupported();\n}\n\nexport function isIOS () {\n  // iOS detection from: http://stackoverflow.com/a/9039885/177710\n  return isBrowser() && typeof navigator !== 'undefined' && typeof navigator.userAgent !== 'undefined' &&\n    // @ts-expect-error - MSStream is not in `window` type, unsurprisingly\n    (/iPad|iPhone|iPod/.test(navigator.userAgent) && !window.MSStream);\n}\n","/*!\n * Copyright (c) 2015-present, Okta, Inc. and/or its affiliates. All rights reserved.\n * The Okta software accompanied by this notice is provided pursuant to the Apache License, Version 2.0 (the \"License.\")\n *\n * You may obtain a copy of the License at http://www.apache.org/licenses/LICENSE-2.0.\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT\n * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n *\n * See the License for the specific language governing permissions and limitations under the License.\n *\n */\n\n/* global SDK_VERSION */\n\nimport { isBrowser } from '../features';\nexport class OktaUserAgent {\n  environments: string[];\n\n  constructor() {\n    // add base sdk env\n    this.environments = [`okta-auth-js/${SDK_VERSION}`];\n    this.maybeAddNodeEnvironment();\n  }\n\n  addEnvironment(env: string) {\n    this.environments.push(env);\n  }\n\n  getHttpHeader() {\n    return { 'X-Okta-User-Agent-Extended': this.environments.join(' ') };\n  }\n\n  getVersion() {\n    return SDK_VERSION;\n  }\n\n  maybeAddNodeEnvironment() {\n    if (isBrowser() || !process || !process.versions) {\n      return;\n    }\n    const { node: version } = process.versions;\n    this.environments.push(`nodejs/${version}`);\n  }\n}\n","/*!\n * Copyright (c) 2015-present, Okta, Inc. and/or its affiliates. All rights reserved.\n * The Okta software accompanied by this notice is provided pursuant to the Apache License, Version 2.0 (the \"License.\")\n *\n * You may obtain a copy of the License at http://www.apache.org/licenses/LICENSE-2.0.\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT\n * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n *\n * See the License for the specific language governing permissions and limitations under the License.\n *\n */\nimport { OktaAuthHttpInterface } from './types';\n\nexport function setRequestHeader(authClient: OktaAuthHttpInterface, headerName, headerValue) {\n  authClient.options.headers = authClient.options.headers || {};\n  authClient.options.headers[headerName] = headerValue;\n}","import { OktaAuthStorageInterface, StorageManagerInterface } from '../storage/types';\nimport { OktaAuthConstructor } from '../base/types';\nimport {\n  HttpAPI,\n  OktaAuthHttpInterface,\n  OktaAuthHttpOptions,\n} from './types';\nimport { OktaUserAgent } from './OktaUserAgent';\nimport { setRequestHeader } from './headers';\nimport { toQueryString } from '../util';\nimport { get } from './request';\n\nexport function mixinHttp\n<\n  S extends StorageManagerInterface = StorageManagerInterface,\n  O extends OktaAuthHttpOptions = OktaAuthHttpOptions,\n  TBase extends OktaAuthConstructor<OktaAuthStorageInterface<S, O>>\n    = OktaAuthConstructor<OktaAuthStorageInterface<S, O>>\n>\n(Base: TBase): TBase & OktaAuthConstructor<OktaAuthHttpInterface<S, O>>\n{\n  return class OktaAuthHttp extends Base implements OktaAuthHttpInterface<S, O>\n  {\n    _oktaUserAgent: OktaUserAgent;\n    http: HttpAPI;\n    \n    constructor(...args: any[]) {\n      super(...args);\n\n      this._oktaUserAgent = new OktaUserAgent();\n\n      // HTTP\n      this.http = {\n        setRequestHeader: setRequestHeader.bind(null, this)\n      };\n    }\n\n    setHeaders(headers) {\n      this.options.headers = Object.assign({}, this.options.headers, headers);\n    }\n  \n    getIssuerOrigin(): string {\n      // Infer the URL from the issuer URL, omitting the /oauth2/{authServerId}\n      // eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n      return this.options.issuer!.split('/oauth2/')[0];\n    }\n  \n    webfinger(opts): Promise<object> {\n      var url = '/.well-known/webfinger' + toQueryString(opts);\n      var options = {\n        headers: {\n          'Accept': 'application/jrd+json'\n        }\n      };\n      return get(this, url, options);\n    }\n  };\n}\n","/*!\n * Copyright (c) 2018-present, Okta, Inc. and/or its affiliates. All rights reserved.\n * The Okta software accompanied by this notice is provided pursuant to the Apache License, Version 2.0 (the \"License.\")\n *\n * You may obtain a copy of the License at http://www.apache.org/licenses/LICENSE-2.0.\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT\n * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n *\n * See the License for the specific language governing permissions and limitations under the License.\n */\n\nimport crossFetch from 'cross-fetch';\nimport { FetchOptions, HttpResponse } from '../http/types';\n\n// content-type = application/json OR application/ion+json\nconst appJsonContentTypeRegex = /application\\/\\w*\\+?json/;\n\nfunction readData(response: Response): Promise<object | string> {\n  if (response.headers.get('Content-Type') &&\n    // eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n    response.headers.get('Content-Type')!.toLowerCase().indexOf('application/json') >= 0) {\n  return response.json()\n    // JSON parse can fail if response is not a valid object\n    .catch(e => {\n      return {\n        error: e,\n        errorSummary: 'Could not parse server response'\n      };\n    });\n  } else {\n    return response.text();\n  }\n}\n\nfunction formatResult(status: number, data: object | string, response: Response) {\n  const isObject = typeof data === 'object';\n  const headers = {};\n  for (const pair of (response.headers as any).entries()) {\n    headers[pair[0]] = pair[1];\n  }\n  const result: HttpResponse = {\n    responseText: isObject ? JSON.stringify(data) : data as string,\n    status: status,\n    headers\n  };\n  if (isObject) {\n    result.responseType = 'json';\n    result.responseJSON = data as object;\n  }\n  return result;\n}\n\n/* eslint-disable complexity */\nfunction fetchRequest(method: string, url: string, args: FetchOptions) {\n  var body = args.data;\n  var headers = args.headers || {};\n  var contentType = (headers['Content-Type'] || headers['content-type'] || '');\n\n  if (body && typeof body !== 'string') {\n    // JSON encode body (if appropriate)\n    if (appJsonContentTypeRegex.test(contentType)) {\n      body = JSON.stringify(body);\n    }\n    else if (contentType === 'application/x-www-form-urlencoded') {\n      body = Object.entries(body)\n      .map( ([param, value]) => `${param}=${encodeURIComponent(value)}` )\n      .join('&');\n    }\n  }\n\n  var fetch = global.fetch || crossFetch;\n  var fetchPromise = fetch(url, {\n    method: method,\n    headers: args.headers,\n    body: body as string,\n    credentials: args.withCredentials ? 'include' : 'omit'\n  });\n\n  if (!fetchPromise.finally) {\n    fetchPromise = Promise.resolve(fetchPromise);\n  }\n\n  return fetchPromise.then(function(response) {\n    var error = !response.ok;\n    var status = response.status;\n    return readData(response)\n      .then(data => {\n        return formatResult(status, data, response);\n      })\n      .then(result => {\n        if (error || result.responseJSON?.error) {\n          // Throwing result object since error handling is done in http.js\n          throw result;\n        }\n        return result;\n      });\n  });\n}\n\nexport default fetchRequest;\n","/*!\n * Copyright (c) 2015-present, Okta, Inc. and/or its affiliates. All rights reserved.\n * The Okta software accompanied by this notice is provided pursuant to the Apache License, Version 2.0 (the \"License.\")\n *\n * You may obtain a copy of the License at http://www.apache.org/licenses/LICENSE-2.0.\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT\n * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * \n * See the License for the specific language governing permissions and limitations under the License.\n */\n\nimport { createStorageOptionsConstructor } from '../storage';\nimport { HttpRequestClient, OktaAuthHttpOptions, RequestOptions } from './types';\nimport fetchRequest from '../fetch/fetchRequest';\n\nexport function createHttpOptionsConstructor() {\n  const StorageOptionsConstructor = createStorageOptionsConstructor();\n  return class HttpOptionsConstructor extends StorageOptionsConstructor implements Required<OktaAuthHttpOptions> {\n    issuer: string;\n    transformErrorXHR: (xhr: object) => any;\n    headers: object;\n    httpRequestClient: HttpRequestClient;\n    httpRequestInterceptors: ((request: RequestOptions) => void)[];\n    \n    constructor(args: any) {\n      super(args);\n      this.issuer = args.issuer;\n      this.transformErrorXHR = args.transformErrorXHR;\n      this.headers = args.headers;\n      this.httpRequestClient = args.httpRequestClient || fetchRequest;\n      this.httpRequestInterceptors = args.httpRequestInterceptors;\n    }\n  };\n}\n","/* eslint-disable @typescript-eslint/no-non-null-assertion */\n/*!\n * Copyright (c) 2015-present, Okta, Inc. and/or its affiliates. All rights reserved.\n * The Okta software accompanied by this notice is provided pursuant to the Apache License, Version 2.0 (the \"License.\")\n *\n * You may obtain a copy of the License at http://www.apache.org/licenses/LICENSE-2.0.\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT\n * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n *\n * See the License for the specific language governing permissions and limitations under the License.\n *\n */\n\n/* eslint-disable complexity */\nimport { isString, clone, isAbsoluteUrl, removeNils } from '../util';\nimport { STATE_TOKEN_KEY_NAME, DEFAULT_CACHE_DURATION } from '../constants';\nimport {\n  OktaAuthHttpInterface,\n  RequestOptions,\n  FetchOptions,\n  RequestData,\n  HttpResponse\n} from './types';\nimport { AuthApiError, OAuthError, APIError, WWWAuthError } from '../errors';\n\n\nconst formatError = (sdk: OktaAuthHttpInterface, error: HttpResponse | Error): AuthApiError | OAuthError => {\n  if (error instanceof Error) {\n    // fetch() can throw exceptions\n    // see https://developer.mozilla.org/en-US/docs/Web/API/fetch#exceptions\n    return new AuthApiError({\n      errorSummary: error.message,\n    });\n  }\n\n  let resp: HttpResponse = error;\n  let err: AuthApiError | OAuthError | WWWAuthError;\n  let serverErr: Record<string, any> = {};\n  if (resp.responseText && isString(resp.responseText)) {\n    try {\n      serverErr = JSON.parse(resp.responseText);\n    } catch (e) {\n      serverErr = {\n        errorSummary: 'Unknown error'\n      };\n    }\n  }\n\n  if (resp.status >= 500) {\n    serverErr.errorSummary = 'Unknown error';\n  }\n\n  if (sdk.options.transformErrorXHR) {\n    resp = sdk.options.transformErrorXHR(clone(resp));\n  }\n\n  // \n  const wwwAuthHeader = WWWAuthError.getWWWAuthenticateHeader(resp?.headers) ?? '';\n\n  if (serverErr.error && serverErr.error_description) {\n    err = new OAuthError(serverErr.error, serverErr.error_description, resp);\n  } else {\n    err = new AuthApiError(serverErr as APIError, resp, { wwwAuthHeader });\n  }\n\n  if (wwwAuthHeader && resp?.status >= 400 && resp?.status < 500) {\n    const wwwAuthErr = WWWAuthError.parseHeader(wwwAuthHeader);\n    // check for 403 to avoid breaking change\n    if (resp.status === 403 && wwwAuthErr?.error === 'insufficient_authentication_context') {\n      // eslint-disable-next-line camelcase\n      const { max_age, acr_values } = wwwAuthErr.parameters;\n      err = new AuthApiError(\n        {\n          errorSummary: wwwAuthErr.error,\n          errorCauses: [{ errorSummary: wwwAuthErr.errorDescription }]\n        },\n        resp,\n        {\n          // eslint-disable-next-line camelcase\n          max_age: +max_age,\n          // eslint-disable-next-line camelcase\n          ...(acr_values && { acr_values })\n        }\n      );\n    }\n    else if (wwwAuthErr?.scheme === 'DPoP') {\n      err = wwwAuthErr;\n    }\n    // else {\n    //   // WWWAuthError.parseHeader may return null, only overwrite if !null\n    //   err = wwwAuthErr ?? err;\n    // }\n  }\n\n  return err;\n};\n\nexport function httpRequest(sdk: OktaAuthHttpInterface, options: RequestOptions): Promise<any> {\n  options = options || {};\n\n  if (sdk.options.httpRequestInterceptors) {\n    for (const interceptor of sdk.options.httpRequestInterceptors) {\n      interceptor(options);\n    }\n  }\n\n  var url = options.url,\n      method = options.method,\n      args = options.args,\n      saveAuthnState = options.saveAuthnState,\n      accessToken = options.accessToken,\n      withCredentials = options.withCredentials === true, // default value is false\n      storageUtil = sdk.options.storageUtil,\n      storage = storageUtil!.storage,\n      httpCache = sdk.storageManager.getHttpCache(sdk.options.cookies);\n\n  if (options.cacheResponse) {\n    var cacheContents = httpCache.getStorage();\n    var cachedResponse = cacheContents[url as string];\n    if (cachedResponse && Date.now()/1000 < cachedResponse.expiresAt) {\n      return Promise.resolve(cachedResponse.response);\n    }\n  }\n\n  var oktaUserAgentHeader = sdk._oktaUserAgent.getHttpHeader();\n  var headers: HeadersInit = {\n    'Accept': 'application/json',\n    'Content-Type': 'application/json',\n    ...oktaUserAgentHeader\n  };\n  Object.assign(headers, sdk.options.headers, options.headers);\n  headers = removeNils(headers) as HeadersInit;\n\n  if (accessToken && isString(accessToken)) {\n    headers['Authorization'] = 'Bearer ' + accessToken;\n  }\n\n  var ajaxOptions: FetchOptions = {\n    headers,\n    data: args || undefined,\n    withCredentials\n  };\n\n  var err, res;\n  return sdk.options.httpRequestClient!(method!, url!, ajaxOptions)\n    .then(function(resp) {\n      res = resp.responseText;\n      if (res && isString(res)) {\n        res = JSON.parse(res);\n        if (res && typeof res === 'object' && !res.headers) {\n          if (Array.isArray(res)) {\n            res.forEach(item => {\n              item.headers = resp.headers;\n            });\n          } else {\n            res.headers = resp.headers;\n          }\n        }\n      }\n\n      if (saveAuthnState) {\n        if (!res.stateToken) {\n          storage.delete(STATE_TOKEN_KEY_NAME);\n        }\n      }\n\n      if (res && res.stateToken && res.expiresAt) {\n        storage.set(STATE_TOKEN_KEY_NAME, res.stateToken, res.expiresAt, sdk.options.cookies!);\n      }\n\n      if (res && options.cacheResponse) {\n        httpCache.updateStorage(url!, {\n          expiresAt: Math.floor(Date.now()/1000) + DEFAULT_CACHE_DURATION,\n          response: res\n        });\n      }\n      \n      return res;\n    })\n    .catch(function(resp) {\n      err = formatError(sdk, resp);\n\n      if (err.errorCode === 'E0000011') {\n        storage.delete(STATE_TOKEN_KEY_NAME);\n      }\n\n      throw err;\n    });\n}\n\nexport function get(sdk: OktaAuthHttpInterface, url: string, options?: RequestOptions) {\n  url = isAbsoluteUrl(url) ? url : sdk.getIssuerOrigin() + url;\n  var getOptions = {\n    url: url,\n    method: 'GET'\n  };\n  Object.assign(getOptions, options);\n  return httpRequest(sdk, getOptions);\n}\n\nexport function post(sdk: OktaAuthHttpInterface, url: string, args?: RequestData, options?: RequestOptions) {\n  url = isAbsoluteUrl(url) ? url : sdk.getIssuerOrigin() + url;\n  var postOptions = {\n    url: url,\n    method: 'POST',\n    args: args,\n    saveAuthnState: true\n  };\n  Object.assign(postOptions, options);\n  return httpRequest(sdk, postOptions);\n}\n","import { ClearTransactionMetaOptions, TransactionManagerOptions } from '../oidc/types';\nimport { createTransactionManager } from '../oidc/TransactionManager';\nimport { IdxTransactionMeta, IntrospectOptions } from './types';\nimport { isRawIdxResponse } from './types/idx-js';\nimport { IdxStorageManagerInterface, SavedIdxResponse } from './types/storage';\n\nexport function createIdxTransactionManager\n<\n  M extends IdxTransactionMeta = IdxTransactionMeta,\n  S extends IdxStorageManagerInterface<M> = IdxStorageManagerInterface<M>\n>\n()\n{\n  const TransactionManager = createTransactionManager<M, S>();\n  return class IdxTransactionManager extends TransactionManager\n  {\n    constructor(options: TransactionManagerOptions) {\n      super(options);\n    }\n\n    clear(options: ClearTransactionMetaOptions = {}) {\n      super.clear(options);\n\n      if (options.clearIdxResponse !== false) {\n        this.clearIdxResponse();\n      }\n    }\n    \n    saveIdxResponse(data: SavedIdxResponse): void {\n      if (!this.saveLastResponse) {\n        return;\n      }\n      const storage = this.storageManager.getIdxResponseStorage();\n      if (!storage) {\n        return;\n      }\n      storage.setStorage(data);\n    }\n\n    // eslint-disable-next-line complexity\n    loadIdxResponse(options?: IntrospectOptions): SavedIdxResponse | null {\n      if (!this.saveLastResponse) {\n        return null;\n      }\n      const storage = this.storageManager.getIdxResponseStorage();\n      if (!storage) {\n        return null;\n      }\n      const storedValue = storage.getStorage();\n      if (!storedValue || !isRawIdxResponse(storedValue.rawIdxResponse)) {\n        return null;\n      }\n\n      if (options) {\n        const { stateHandle, interactionHandle } = options;\n        // only perform this check if NOT using generic remediator\n        if (!options.useGenericRemediator && stateHandle && storedValue.stateHandle !== stateHandle) {\n          return null;\n        }\n        if (interactionHandle && storedValue.interactionHandle !== interactionHandle) {\n          return null;\n        }\n      }\n\n      return storedValue;\n    }\n\n    clearIdxResponse(): void {\n      if (!this.saveLastResponse) {\n        return;\n      }\n      const storage = this.storageManager.getIdxResponseStorage();\n      storage?.clearStorage();\n    }\n  };\n}\n","/*!\n * Copyright (c) 2015-present, Okta, Inc. and/or its affiliates. All rights reserved.\n * The Okta software accompanied by this notice is provided pursuant to the Apache License, Version 2.0 (the \"License.\")\n *\n * You may obtain a copy of the License at http://www.apache.org/licenses/LICENSE-2.0.\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT\n * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * \n * See the License for the specific language governing permissions and limitations under the License.\n */\n\n\nimport { \n  OktaAuthIdxInterface,\n  IdxTransaction,\n  AuthenticatorKey,\n  AuthenticationOptions\n} from './types';\nimport { run } from './run';\n\nexport async function authenticate(\n  authClient: OktaAuthIdxInterface, options: AuthenticationOptions = {}\n): Promise<IdxTransaction> {\n  if (options.password && !options.authenticator) {\n    options.authenticator = AuthenticatorKey.OKTA_PASSWORD;\n  }\n  return run(authClient, { \n    ...options, \n    flow: 'authenticate'\n  });\n}\n","import { IdxAuthenticator, IdxRemediationValue } from '../types/idx-js';\n\n\nexport interface Credentials {\n  [key: string]: string | boolean | number | undefined;\n}\n\nexport abstract class Authenticator<Values> {\n  meta: IdxAuthenticator;\n\n  constructor(authenticator: IdxAuthenticator) {\n    this.meta = authenticator;\n  }\n\n  abstract canVerify(values: Values): boolean;\n\n  abstract mapCredentials(values: Values): Credentials | undefined;\n\n  abstract getInputs(idxRemediationValue: IdxRemediationValue): any; // TODO: add type\n}\n","import { Authenticator, Credentials } from './Authenticator';\n\nexport interface OktaPasswordInputValues {\n  password?: string;\n  passcode?: string;\n  credentials?: Credentials;\n  // for ResetAuthenticator\n  revokeSessions?: boolean;\n}\n\nexport class OktaPassword extends Authenticator<OktaPasswordInputValues> {\n  canVerify(values: OktaPasswordInputValues) {\n    return !!(values.credentials || values.password || values.passcode);\n  }\n\n  mapCredentials(values: OktaPasswordInputValues): Credentials | undefined {\n    const { credentials, password, passcode, revokeSessions } = values;\n    if (!credentials && !password && !passcode) {\n      return;\n    }\n    return credentials || {\n      passcode: passcode || password,\n      revokeSessions,\n    };\n  }\n\n  getInputs(idxRemediationValue) {\n    const inputs = [{\n      ...idxRemediationValue.form?.value[0],\n      name: 'password',\n      type: 'string',\n      required: idxRemediationValue.required,\n    }];\n    const revokeSessions = idxRemediationValue.form?.value.find(\n      input => input.name === 'revokeSessions'\n    );\n    if (revokeSessions) {\n      inputs.push({\n        name: 'revokeSessions',\n        type: 'boolean',\n        label: 'Sign me out of all other devices',\n        required: false,\n      });\n    }\n    return inputs;\n  }\n}\n","import { Authenticator, isAuthenticator } from '../types';\n\nexport function formatAuthenticator(incoming: unknown): Authenticator {\n  let authenticator: Authenticator;\n  if  (isAuthenticator(incoming)) {\n    authenticator = incoming;\n  } else if (typeof incoming === 'string') {\n    authenticator = {\n      key: incoming\n    };\n  } else {\n    throw new Error('Invalid format for authenticator');\n  }\n  return authenticator;\n}\n\n// Returns true if the authenticators are equivalent\nexport function compareAuthenticators(auth1, auth2) {\n  if (!auth1 || !auth2) {\n    return false;\n  }\n  // by id\n  if (auth1.id && auth2.id) {\n    return (auth1.id === auth2.id);\n  }\n  // by key\n  if (auth1.key && auth2.key) {\n    return (auth1.key === auth2.key);\n  }\n  return false;\n}\n\n// Find matched authenticator in provided order\nexport function findMatchedOption(authenticators, options) {\n  let option;\n  for (let authenticator of authenticators) {\n    option = options\n      .find(({ relatesTo }) => relatesTo.key && relatesTo.key === authenticator.key);\n    if (option) {\n      break;\n    }\n  }\n  return option;\n}","/*!\n * Copyright (c) 2021, Okta, Inc. and/or its affiliates. All rights reserved.\n * The Okta software accompanied by this notice is provided pursuant to the Apache License, Version 2.0 (the \"License.\")\n *\n * You may obtain a copy of the License at http://www.apache.org/licenses/LICENSE-2.0.\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT\n * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n *\n * See the License for the specific language governing permissions and limitations under the License.\n */\n\nimport { OktaAuthIdxInterface, CancelOptions, IdxTransactionMeta } from './types';\nimport { run } from './run';\nimport { getFlowSpecification } from './flow';\n\nexport async function cancel (authClient: OktaAuthIdxInterface, options?: CancelOptions) {\n  const meta = authClient.transactionManager.load() as IdxTransactionMeta;\n  const flowSpec = getFlowSpecification(authClient, meta.flow);\n  return run(authClient, {\n    ...options,\n    ...flowSpec,\n    actions: ['cancel']\n  });\n}\n","\n/*!\n * Copyright (c) 2015-present, Okta, Inc. and/or its affiliates. All rights reserved.\n * The Okta software accompanied by this notice is provided pursuant to the Apache License, Version 2.0 (the \"License.\")\n *\n * You may obtain a copy of the License at http://www.apache.org/licenses/LICENSE-2.0.\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT\n * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n *\n * See the License for the specific language governing permissions and limitations under the License.\n */\n\nimport { OktaAuthIdxInterface } from './types';\n\nimport CustomError from '../errors/CustomError';\nimport { urlParamsToObject  } from '../oidc/util/urlParams';\nimport { EmailVerifyCallbackResponse } from './types/api';\n\nexport class EmailVerifyCallbackError extends CustomError {\n  state: string;\n  otp: string;\n\n  constructor(state: string, otp: string) {\n    super(`Enter the OTP code in the originating client: ${otp}`);\n    this.name = 'EmailVerifyCallbackError';\n    this.state = state;\n    this.otp = otp;\n  }\n}\n\nexport function isEmailVerifyCallbackError(error: Error) {\n  return (error.name === 'EmailVerifyCallbackError');\n}\n\n// Check if state && otp have been passed back in the url\nexport function isEmailVerifyCallback (urlPath: string): boolean {\n  return /(otp=)/i.test(urlPath) && /(state=)/i.test(urlPath);\n}\n\n// Parse state and otp from a urlPath (should be either a search or fragment from the URL)\nexport function parseEmailVerifyCallback(urlPath: string): EmailVerifyCallbackResponse {\n  return urlParamsToObject(urlPath) as EmailVerifyCallbackResponse;\n}\n\nexport async function handleEmailVerifyCallback(authClient: OktaAuthIdxInterface, search: string) {\n  if (isEmailVerifyCallback(search)) {\n    const { state, otp } = parseEmailVerifyCallback(search);\n    if (authClient.idx.canProceed({ state })) {\n      // same browser / device\n      return await authClient.idx.proceed({ state, otp });\n    } else {\n      // different browser or device\n      throw new EmailVerifyCallbackError(state, otp);\n    }\n  }\n}\n","import { createOktaAuthCore } from '../../core/factory';\nimport { OktaAuthOptionsConstructor } from '../../base/types';\nimport { StorageManagerConstructor } from '../../storage/types';\nimport { IdxTransactionManagerInterface, OktaAuthIdxInterface, OktaAuthIdxConstructor } from '../types/api';\nimport { IdxTransactionMeta } from '../types/meta';\nimport { IdxStorageManagerInterface } from '../types/storage';\nimport { OktaAuthIdxOptions } from '../types/options';\nimport { mixinIdx } from '../mixin';\nimport { TransactionManagerConstructor } from '../../oidc/types';\nimport { OktaAuthCoreInterface } from '../../core/types';\n\nexport function createOktaAuthIdx<\n  M extends IdxTransactionMeta = IdxTransactionMeta,\n  S extends IdxStorageManagerInterface<M> = IdxStorageManagerInterface<M>,\n  O extends OktaAuthIdxOptions = OktaAuthIdxOptions,\n  TM extends IdxTransactionManagerInterface = IdxTransactionManagerInterface\n>(\n  StorageManagerConstructor: StorageManagerConstructor<S>,\n  OptionsConstructor: OktaAuthOptionsConstructor<O>,\n  TransactionManagerConstructor: TransactionManagerConstructor<TM>\n)\n: OktaAuthIdxConstructor<OktaAuthIdxInterface<M, S, O, TM> & OktaAuthCoreInterface<M, S, O, TM>>\n{\n  const Core = createOktaAuthCore<M, S, O, TM>(\n    StorageManagerConstructor,\n    OptionsConstructor,\n    TransactionManagerConstructor\n  );\n  const WithIdx = mixinIdx(Core);\n  return WithIdx;\n}\n","/*!\n * Copyright (c) 2015-present, Okta, Inc. and/or its affiliates. All rights reserved.\n * The Okta software accompanied by this notice is provided pursuant to the Apache License, Version 2.0 (the \"License.\")\n *\n * You may obtain a copy of the License at http://www.apache.org/licenses/LICENSE-2.0.\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT\n * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n *\n * See the License for the specific language governing permissions and limitations under the License.\n *\n */\n\nimport { isInteractionRequired, isInteractionRequiredError } from '../../oidc';\nimport { authenticate } from '../authenticate';\nimport { cancel } from '../cancel';\nimport {\n  handleEmailVerifyCallback,\n  isEmailVerifyCallback,\n  isEmailVerifyCallbackError,\n  parseEmailVerifyCallback\n} from '../emailVerify';\nimport { handleInteractionCodeRedirect } from '../handleInteractionCodeRedirect';\nimport { makeIdxState } from '../idxState';\nimport { interact } from '../interact';\nimport { introspect } from '../introspect';\nimport { poll } from '../poll';\nimport { canProceed, proceed } from '../proceed';\nimport { recoverPassword } from '../recoverPassword';\nimport { register } from '../register';\nimport { startTransaction } from '../startTransaction';\nimport {\n  clearTransactionMeta,\n  createTransactionMeta,\n  getSavedTransactionMeta,\n  getTransactionMeta,\n  isTransactionMetaValid,\n  saveTransactionMeta\n} from '../transactionMeta';\nimport { FlowIdentifier, IdxAPI, OktaAuthIdxInterface } from '../types';\nimport { unlockAccount } from '../unlockAccount';\nimport * as remediators from '../remediators';\nimport { getFlowSpecification } from '../flow/FlowSpecification';\nimport { setRemediatorsCtx } from '../util';\n\n// Factory\nexport function createIdxAPI(sdk: OktaAuthIdxInterface): IdxAPI {\n  setRemediatorsCtx({\n    remediators,\n    getFlowSpecification,\n  });\n  const boundStartTransaction = startTransaction.bind(null, sdk);\n  const idx = {\n    interact: interact.bind(null, sdk),\n    introspect: introspect.bind(null, sdk),\n    makeIdxResponse: makeIdxState.bind(null, sdk),\n    \n    authenticate: authenticate.bind(null, sdk),\n    register: register.bind(null, sdk),\n    start: boundStartTransaction,\n    startTransaction: boundStartTransaction, // Use `start` instead. `startTransaction` will be removed in 7.0\n    poll: poll.bind(null, sdk),\n    proceed: proceed.bind(null, sdk),\n    cancel: cancel.bind(null, sdk),\n    recoverPassword: recoverPassword.bind(null, sdk),\n\n    // oauth redirect callback\n    handleInteractionCodeRedirect: handleInteractionCodeRedirect.bind(null, sdk),\n\n    // interaction required callback\n    isInteractionRequired: isInteractionRequired.bind(null, sdk),\n    isInteractionRequiredError,\n\n    // email verify callback\n    handleEmailVerifyCallback: handleEmailVerifyCallback.bind(null, sdk),\n    isEmailVerifyCallback,\n    parseEmailVerifyCallback,\n    isEmailVerifyCallbackError,\n    \n    getSavedTransactionMeta: getSavedTransactionMeta.bind(null, sdk),\n    createTransactionMeta: createTransactionMeta.bind(null, sdk),\n    getTransactionMeta: getTransactionMeta.bind(null, sdk),\n    saveTransactionMeta: saveTransactionMeta.bind(null, sdk),\n    clearTransactionMeta: clearTransactionMeta.bind(null, sdk),\n    isTransactionMetaValid,\n    setFlow: (flow: FlowIdentifier) => {\n      sdk.options.flow = flow;\n    },\n    getFlow: (): FlowIdentifier | undefined => {\n      return sdk.options.flow;\n    },\n    canProceed: canProceed.bind(null, sdk),\n    unlockAccount: unlockAccount.bind(null, sdk),\n  };\n  return idx;\n}\n\n","/*!\n * Copyright (c) 2015-present, Okta, Inc. and/or its affiliates. All rights reserved.\n * The Okta software accompanied by this notice is provided pursuant to the Apache License, Version 2.0 (the \"License.\")\n *\n * You may obtain a copy of the License at http://www.apache.org/licenses/LICENSE-2.0.\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT\n * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * \n * See the License for the specific language governing permissions and limitations under the License.\n */\n\n\nimport { RemediationFlow } from './RemediationFlow';\nimport { \n  Identify,\n  SelectAuthenticatorAuthenticate,\n  ChallengeAuthenticator,\n  ReEnrollAuthenticator,\n  ReEnrollAuthenticatorWarning,\n  RedirectIdp,\n  AuthenticatorEnrollmentData,\n  SelectAuthenticatorEnroll,\n  EnrollAuthenticator,\n  AuthenticatorVerificationData,\n  EnrollPoll,\n  ChallengePoll,\n  SelectEnrollmentChannel,\n  EnrollmentChannelData,\n  Skip\n} from '../remediators';\n\nexport const AuthenticationFlow: RemediationFlow = {\n  'identify': Identify,\n  'select-authenticator-authenticate': SelectAuthenticatorAuthenticate,\n  'select-authenticator-enroll': SelectAuthenticatorEnroll,\n  'authenticator-enrollment-data': AuthenticatorEnrollmentData,\n  'authenticator-verification-data': AuthenticatorVerificationData,\n  'enroll-authenticator': EnrollAuthenticator,\n  'challenge-authenticator': ChallengeAuthenticator,\n  'challenge-poll': ChallengePoll,\n  'reenroll-authenticator': ReEnrollAuthenticator,\n  'reenroll-authenticator-warning': ReEnrollAuthenticatorWarning,\n  'enroll-poll': EnrollPoll,\n  'select-enrollment-channel': SelectEnrollmentChannel,\n  'enrollment-channel-data': EnrollmentChannelData,\n  'redirect-idp': RedirectIdp,\n  'skip': Skip,\n};\n","/*!\n * Copyright (c) 2015-present, Okta, Inc. and/or its affiliates. All rights reserved.\n * The Okta software accompanied by this notice is provided pursuant to the Apache License, Version 2.0 (the \"License.\")\n *\n * You may obtain a copy of the License at http://www.apache.org/licenses/LICENSE-2.0.\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT\n * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * \n * See the License for the specific language governing permissions and limitations under the License.\n */\n\n\nimport { RemediationFlow } from './RemediationFlow';\nimport {\n  Identify,\n  SelectAuthenticatorAuthenticate,\n  ChallengeAuthenticator,\n  AuthenticatorVerificationData,\n  ResetAuthenticator,\n  ReEnrollAuthenticator,\n  ReEnrollAuthenticatorWarning,\n  SelectAuthenticatorEnroll,\n  AuthenticatorEnrollmentData,\n  EnrollPoll\n} from '../remediators';\n\nexport const PasswordRecoveryFlow: RemediationFlow = {\n  'identify': Identify,\n  'identify-recovery': Identify,\n  'select-authenticator-authenticate': SelectAuthenticatorAuthenticate,\n  'select-authenticator-enroll': SelectAuthenticatorEnroll,\n  'challenge-authenticator': ChallengeAuthenticator,\n  'authenticator-verification-data': AuthenticatorVerificationData,\n  'authenticator-enrollment-data': AuthenticatorEnrollmentData,\n  'reset-authenticator': ResetAuthenticator,\n  'reenroll-authenticator': ReEnrollAuthenticator,\n  'reenroll-authenticator-warning': ReEnrollAuthenticatorWarning,\n  'enroll-poll': EnrollPoll,\n};\n","/*!\n * Copyright (c) 2015-present, Okta, Inc. and/or its affiliates. All rights reserved.\n * The Okta software accompanied by this notice is provided pursuant to the Apache License, Version 2.0 (the \"License.\")\n *\n * You may obtain a copy of the License at http://www.apache.org/licenses/LICENSE-2.0.\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT\n * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * \n * See the License for the specific language governing permissions and limitations under the License.\n */\n\n\nimport { RemediationFlow } from './RemediationFlow';\nimport { \n  SelectEnrollProfile,\n  EnrollPoll,\n  SelectEnrollmentChannel,\n  EnrollmentChannelData,\n  EnrollProfile,\n  SelectAuthenticatorEnroll,\n  EnrollAuthenticator,\n  AuthenticatorEnrollmentData,\n  Skip,\n} from '../remediators';\n\nexport const RegistrationFlow: RemediationFlow = {\n  'select-enroll-profile': SelectEnrollProfile,\n  'enroll-profile': EnrollProfile,\n  'authenticator-enrollment-data': AuthenticatorEnrollmentData,\n  'select-authenticator-enroll': SelectAuthenticatorEnroll,\n  'enroll-poll': EnrollPoll,\n  'select-enrollment-channel': SelectEnrollmentChannel,\n  'enrollment-channel-data': EnrollmentChannelData,\n  'enroll-authenticator': EnrollAuthenticator,\n  'skip': Skip,\n};\n","/*!\n * Copyright (c) 2015-present, Okta, Inc. and/or its affiliates. All rights reserved.\n * The Okta software accompanied by this notice is provided pursuant to the Apache License, Version 2.0 (the \"License.\")\n *\n * You may obtain a copy of the License at http://www.apache.org/licenses/LICENSE-2.0.\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT\n * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * \n * See the License for the specific language governing permissions and limitations under the License.\n */\n\n\nimport { RemediationFlow } from './RemediationFlow';\nimport {\n  Identify,\n  SelectAuthenticatorUnlockAccount,\n  SelectAuthenticatorAuthenticate,\n  ChallengeAuthenticator,\n  ChallengePoll,\n  AuthenticatorVerificationData,\n  ReEnrollAuthenticatorWarning\n} from '../remediators';\n\nexport const AccountUnlockFlow: RemediationFlow = {\n  'identify': Identify,\n  // NOTE: unlock-account is purposely not included. Handled as action\n  // because it's a rememdiation which requires no input\n  // 'unlock-account': UnlockAccount,\n  'select-authenticator-unlock-account': SelectAuthenticatorUnlockAccount,\n  'select-authenticator-authenticate': SelectAuthenticatorAuthenticate,\n  'challenge-authenticator': ChallengeAuthenticator,\n  'challenge-poll': ChallengePoll,\n  'authenticator-verification-data': AuthenticatorVerificationData,\n  'reenroll-authenticator-warning': ReEnrollAuthenticatorWarning,\n};\n","import { OktaAuthIdxInterface, FlowIdentifier, FlowSpecification } from '../types';\nimport { AuthenticationFlow } from './AuthenticationFlow';\nimport { PasswordRecoveryFlow } from './PasswordRecoveryFlow';\nimport { RegistrationFlow } from './RegistrationFlow';\nimport { AccountUnlockFlow } from './AccountUnlockFlow';\n\n// eslint-disable-next-line complexity\nexport function getFlowSpecification(\n  oktaAuth: OktaAuthIdxInterface,\n  flow: FlowIdentifier = 'default'\n): FlowSpecification {\n  let remediators, actions, withCredentials = true;\n  switch (flow) {\n    case 'register':\n    case 'signup':\n    case 'enrollProfile':\n      remediators = RegistrationFlow;\n      withCredentials = false;\n      break;\n    case 'recoverPassword':\n    case 'resetPassword':\n      remediators = PasswordRecoveryFlow;\n      actions = [\n        'currentAuthenticator-recover', \n        'currentAuthenticatorEnrollment-recover'\n      ];\n      withCredentials = false;\n      break;\n    case 'unlockAccount':\n      remediators = AccountUnlockFlow;\n      withCredentials = false;\n      actions = [\n        'unlock-account'\n      ];\n      break;\n    case 'authenticate':\n    case 'login':\n    case 'signin':\n      remediators = AuthenticationFlow;\n      break;\n    default:\n      // default case has no flow monitor\n      remediators = AuthenticationFlow;\n      break;\n  }\n  return { flow, remediators, actions, withCredentials };\n}\n","/*!\n * Copyright (c) 2015-present, Okta, Inc. and/or its affiliates. All rights reserved.\n * The Okta software accompanied by this notice is provided pursuant to the Apache License, Version 2.0 (the \"License.\")\n *\n * You may obtain a copy of the License at http://www.apache.org/licenses/LICENSE-2.0.\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT\n * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * \n * See the License for the specific language governing permissions and limitations under the License.\n */\n\n\nimport { AuthSdkError, OAuthError } from '../errors';\nimport { IdxTransactionMeta } from './types/meta';\nimport { OktaAuthIdxInterface } from './types';\n\nexport async function handleInteractionCodeRedirect(\n  authClient: OktaAuthIdxInterface, \n  url: string\n): Promise<void> {\n  const meta = authClient.transactionManager.load() as IdxTransactionMeta;\n  if (!meta) {\n    throw new AuthSdkError('No transaction data was found in storage');\n  }\n\n  const { \n    codeVerifier,\n    state: savedState \n  } = meta;\n  const { \n    searchParams\n  // URL API has been added to the polyfill\n  // eslint-disable-next-line compat/compat\n  } = new URL(url); \n  const state = searchParams.get('state');\n  const interactionCode = searchParams.get('interaction_code');\n\n  // Error handling\n  const error = searchParams.get('error');\n  if (error) {\n    // eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n    throw new OAuthError(error, searchParams.get('error_description')!);\n  }\n  if (state !== savedState) {\n    throw new AuthSdkError('State in redirect uri does not match with transaction state');\n  }\n  if (!interactionCode) {\n    throw new AuthSdkError('Unable to parse interaction_code from the url');\n  }\n  \n  // Save tokens to storage\n  const { tokens } = await authClient.token.exchangeCodeForTokens({ interactionCode, codeVerifier });\n  authClient.tokenManager.setTokens(tokens);\n}","/*!\n * Copyright (c) 2021-Present, Okta, Inc. and/or its affiliates. All rights reserved.\n * The Okta software accompanied by this notice is provided pursuant to the Apache License, Version 2.0 (the \"License.\")\n *\n * You may obtain a copy of the License at http://www.apache.org/licenses/LICENSE-2.0.\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT\n * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n *\n * See the License for the specific language governing permissions and limitations under the License.\n */\n\n// eslint-disable-next-line @typescript-eslint/ban-ts-comment\n// @ts-nocheck\nconst isFieldMutable = function isFieldMutable(field) {\n  // mutable defaults to true, annoyingly\n  return ( field.mutable !== false );\n};\n\nconst divideSingleActionParamsByMutability = function divideSingleActionParamsByMutability( action ) {\n  const defaultParamsForAction = {}; // mutable and present\n  const neededParamsForAction = []; // mutable values\n  const immutableParamsForAction = {}; // immutable\n  // TODO: remove assumption that form names are unique, neededParams being an array is a temp fix\n  // not all actions have value (e.g. redirect)\n  // making sure they are not empty and instead hold the remediation object\n  if (!action.value) {\n    neededParamsForAction.push(action);\n    return { defaultParamsForAction, neededParamsForAction, immutableParamsForAction };\n  }\n\n  for ( let field of action.value ) {\n\n    if ( isFieldMutable( field ) ) {\n\n      neededParamsForAction.push(field);\n\n      if ( field.value ?? false ) {\n        defaultParamsForAction[field.name] = field.value;\n      }\n\n    } else {\n      immutableParamsForAction[field.name] = field.value ?? '';\n    }\n  }\n  return { defaultParamsForAction, neededParamsForAction, immutableParamsForAction };\n};\n\nexport const divideActionParamsByMutability = function divideActionParamsByMutability( actionList ) {\n  // TODO: when removing form name is unique assumption, this may all be redundant\n  actionList = Array.isArray(actionList) ? actionList : [ actionList ];\n  const neededParams = [];\n  const defaultParams = {};\n  const immutableParams = {};\n\n  for ( let action of actionList ) {\n    const { \n      defaultParamsForAction, \n      neededParamsForAction, \n      immutableParamsForAction \n    } = divideSingleActionParamsByMutability(action);\n    neededParams.push(neededParamsForAction);\n    defaultParams[action.name] = defaultParamsForAction;\n    immutableParams[action.name] = immutableParamsForAction;\n  }\n\n  return { defaultParams, neededParams, immutableParams };\n};\n\n","/*!\n * Copyright (c) 2021-Present, Okta, Inc. and/or its affiliates. All rights reserved.\n * The Okta software accompanied by this notice is provided pursuant to the Apache License, Version 2.0 (the \"License.\")\n *\n * You may obtain a copy of the License at http://www.apache.org/licenses/LICENSE-2.0.\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT\n * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n *\n * See the License for the specific language governing permissions and limitations under the License.\n */\n\n/* eslint-disable max-len, complexity */\nimport { httpRequest } from '../../../http';\nimport { OktaAuthIdxInterface } from '../../types';    // auth-js/types\nimport { IdxActionFunction, IdxActionParams, IdxResponse, IdxToPersist } from '../../types/idx-js';\nimport { divideActionParamsByMutability } from './actionParser';\nimport AuthApiError from '../../../errors/AuthApiError';\n\nconst generateDirectFetch = function generateDirectFetch(authClient: OktaAuthIdxInterface, { \n  actionDefinition, \n  defaultParamsForAction = {}, \n  immutableParamsForAction = {}, \n  toPersist = {} as IdxToPersist\n}): IdxActionFunction {\n  const target = actionDefinition.href;\n  return async function(params: IdxActionParams = {}): Promise<IdxResponse> {\n    const headers = {\n      'Content-Type': 'application/json',\n      'Accept': actionDefinition.accepts || 'application/ion+json',\n    };\n    const body = JSON.stringify({\n      ...defaultParamsForAction,\n      ...params,\n      ...immutableParamsForAction\n    });\n\n    try {\n      const response = await httpRequest(authClient, {\n        url: target,\n        method: actionDefinition.method,\n        headers,\n        args: body,\n        withCredentials: toPersist?.withCredentials ?? true\n      });\n\n      return authClient.idx.makeIdxResponse({ ...response }, toPersist, true);\n    }\n    catch (err) {\n      if (!(err instanceof AuthApiError) || !err?.xhr) {\n        throw err;\n      }\n\n      const response = err.xhr;\n      const payload = response.responseJSON || JSON.parse(response.responseText);\n      const wwwAuthHeader = response.headers['WWW-Authenticate'] || response.headers['www-authenticate'];\n\n      const idxResponse = authClient.idx.makeIdxResponse({ ...payload }, toPersist, false);\n      if (response.status === 401 && wwwAuthHeader === 'Oktadevicejwt realm=\"Okta Device\"') {\n        // Okta server responds 401 status code with WWW-Authenticate header and new remediation\n        // so that the iOS/MacOS credential SSO extension (Okta Verify) can intercept\n        // the response reaches here when Okta Verify is not installed\n        // set `stepUp` to true if flow should be continued without showing any errors\n        idxResponse.stepUp = true;\n      }\n\n      return idxResponse;\n    }\n  };\n};\n\n// TODO: Resolve in M2: Either build the final polling solution or remove this code\n// const generatePollingFetch = function generatePollingFetch( { actionDefinition, defaultParamsForAction = {}, immutableParamsForAction = {} } ) {\n//   // TODO: Discussions ongoing about when/how to terminate polling: OKTA-246581\n//   const target = actionDefinition.href;\n//   return async function(params) {\n//     return fetch(target, {\n//       method: actionDefinition.method,\n//       headers: {\n//         'content-type': actionDefinition.accepts,\n//       },\n//       body: JSON.stringify({ ...defaultParamsForAction, ...params, ...immutableParamsForAction })\n//     })\n//       .then( response => response.ok ? response.json() : response.json().then( err => Promise.reject(err)) )\n//       .then( idxResponse => makeIdxState(authClient, idxResponse) );\n//   };\n// };\n\nconst generateIdxAction = function generateIdxAction( authClient: OktaAuthIdxInterface, actionDefinition, toPersist ): IdxActionFunction {\n  // TODO: leaving this here to see where the polling is EXPECTED to drop into the code, but removing any accidental trigger of incomplete code\n  // const generator =  actionDefinition.refresh ? generatePollingFetch : generateDirectFetch;\n  const generator = generateDirectFetch;\n  const { defaultParams, neededParams, immutableParams } = divideActionParamsByMutability( actionDefinition );\n\n  const action = generator(authClient, {\n    actionDefinition,\n    defaultParamsForAction: defaultParams[actionDefinition.name],\n    immutableParamsForAction: immutableParams[actionDefinition.name],\n    toPersist\n  });\n  action.neededParams = neededParams;\n  return action;\n};\n\nexport default generateIdxAction;\n","/*!\n * Copyright (c) 2021-Present, Okta, Inc. and/or its affiliates. All rights reserved.\n * The Okta software accompanied by this notice is provided pursuant to the Apache License, Version 2.0 (the \"License.\")\n *\n * You may obtain a copy of the License at http://www.apache.org/licenses/LICENSE-2.0.\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT\n * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n *\n * See the License for the specific language governing permissions and limitations under the License.\n */\n\nimport { OktaAuthIdxInterface, IdxRemediation } from '../../types';    // auth-js/types\nimport generateIdxAction from './generateIdxAction';\n\nexport const generateRemediationFunctions = function generateRemediationFunctions(\n  authClient: OktaAuthIdxInterface,\n  remediationValue: IdxRemediation[],\n  toPersist = {}\n) {\n  return remediationValue.reduce((obj, remediation) => ({\n    ...obj,\n    [remediation.name]: generateIdxAction(authClient, remediation, toPersist)\n  }), {});\n};\n","const jsonpathRegex = /\\$?(?<step>\\w+)|(?:\\[(?<index>\\d+)\\])/g;\n\n/* eslint complexity:[0,8] */\nexport function jsonpath({ path, json }) {\n  const steps: string[] = [];\n  let match: RegExpExecArray | null;\n  while ((match = jsonpathRegex.exec(path)) !== null) {\n    const step = match?.groups?.step ?? match?.groups?.index;\n    if (step) {\n      steps.push(step);\n    }\n  }\n\n  if (steps.length < 1) {\n    return undefined;\n  }\n\n  // array length check above guarantees .pop() will return a value\n  // eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n  const lastStep = steps.pop()!;\n  let curr = json;\n  for (const step of steps) {\n    if (Object.prototype.hasOwnProperty.call(curr, step)) {\n      if (typeof curr[step] !== 'object') {\n        return undefined;\n      }\n\n      curr = curr[step];\n    }\n  }\n\n  return curr[lastStep];\n}\n","/*!\n * Copyright (c) 2021-Present, Okta, Inc. and/or its affiliates. All rights reserved.\n * The Okta software accompanied by this notice is provided pursuant to the Apache License, Version 2.0 (the \"License.\")\n *\n * You may obtain a copy of the License at http://www.apache.org/licenses/LICENSE-2.0.\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT\n * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n *\n * See the License for the specific language governing permissions and limitations under the License.\n */\n\n/* eslint-disable max-len */\n\nimport { OktaAuthIdxInterface, IdxResponse, IdxRemediation, IdxContext } from '../../types';    // auth-js/types\nimport { IdxActions } from '../../types/idx-js';\nimport { generateRemediationFunctions } from './remediationParser';\nimport generateIdxAction from './generateIdxAction';\nimport { jsonpath } from '../../../util/jsonpath';\nimport { AuthSdkError } from '../../../errors';\n\nconst SKIP_FIELDS = {\n  'remediation': true, // remediations are put into proceed/neededToProceed\n  'context': true, // the API response of 'context' isn't externally useful.  We ignore it and put all non-action (contextual) info into idxState.context\n};\n\nexport const parseNonRemediations = function parseNonRemediations( authClient: OktaAuthIdxInterface, idxResponse: IdxResponse, toPersist = {} ) {\n  const actions = {};\n  const context = {} as IdxContext;\n\n  Object.keys(idxResponse)\n    .filter( field => !SKIP_FIELDS[field])\n    .forEach( field => {\n      const fieldIsObject = typeof idxResponse[field] === 'object' && !!idxResponse[field];\n\n      if ( !fieldIsObject ) {\n        // simple fields are contextual info\n        context[field] = idxResponse[field];\n        return;\n      }\n\n      if ( idxResponse[field].rel ) {\n        // top level actions\n        actions[idxResponse[field].name] = generateIdxAction(authClient, idxResponse[field], toPersist);\n        return;\n      }\n\n      const { value: fieldValue, type, ...info} = idxResponse[field];\n      context[field] = { type, ...info}; // add the non-action parts as context\n\n      if ( type !== 'object' ) {\n        // only object values hold actions\n        context[field].value = fieldValue;\n        return;\n      }\n\n      // We are an object field containing an object value\n      context[field].value = {};\n      Object.entries<IdxRemediation>(fieldValue)\n        .forEach( ([subField, value]) => {\n          if (value.rel) { // is [field].value[subField] an action?\n            // add any \"action\" value subfields to actions\n            // eslint-disable-next-line @typescript-eslint/ban-ts-comment\n            // @ts-ignore\n            actions[`${field}-${subField.name || subField}`] = generateIdxAction(authClient, value, toPersist);\n          } else {\n            // add non-action value subfields to context\n            context[field].value[subField] = value;\n          }\n        });\n    });\n\n  return { context, actions };\n};\n\nconst expandRelatesTo = (idxResponse, value) => {\n  Object.keys(value).forEach(k => {\n    if (k === 'relatesTo') {\n      const query = Array.isArray(value[k]) ? value[k][0] : value[k];\n      if (typeof query === 'string') {\n        const result = jsonpath({ path: query, json: idxResponse });\n        if (result) {\n          value[k] = result;\n          return;\n        } else {\n          throw new AuthSdkError(`Cannot resolve relatesTo: ${query}`);\n        }\n      }\n    }\n    if (Array.isArray(value[k])) {\n      value[k].forEach(innerValue => expandRelatesTo(idxResponse, innerValue));\n    }\n  });\n};\n\nconst convertRemediationAction = (authClient: OktaAuthIdxInterface, remediation, toPersist) => {\n  // Only remediation that has `rel` field (indicator for form submission) can have http action\n  if (remediation.rel) {\n    const remediationActions = generateRemediationFunctions( authClient, [remediation], toPersist );\n    const actionFn = remediationActions[remediation.name];\n    return {\n      ...remediation,\n      action: actionFn,\n    };\n  }\n\n  return remediation;\n};\n\nexport const parseIdxResponse = function parseIdxResponse( authClient: OktaAuthIdxInterface, idxResponse, toPersist = {} ): {\n  remediations: IdxRemediation[];\n  context: IdxContext;\n  actions: IdxActions;\n} {\n  const remediationData = idxResponse.remediation?.value || [];\n\n  remediationData.forEach(\n    remediation => {\n      // TODO: remove once IDX is fixed - OKTA-659181\n      if (remediation.name === 'launch-authenticator' &&\n        remediation?.relatesTo?.[0] === 'authenticatorChallenge' &&\n        !idxResponse?.authenticatorChallenge\n      ) {\n        delete remediation.relatesTo;\n        return;\n      }\n\n      return expandRelatesTo(idxResponse, remediation);\n    }\n  );\n\n  const remediations = remediationData.map(remediation => convertRemediationAction( authClient, remediation, toPersist ));\n\n  const { context, actions } = parseNonRemediations( authClient, idxResponse, toPersist );\n\n  return {\n    remediations,\n    context,\n    actions,\n  };\n};\n","/*!\n * Copyright (c) 2021-Present, Okta, Inc. and/or its affiliates. All rights reserved.\n * The Okta software accompanied by this notice is provided pursuant to the Apache License, Version 2.0 (the \"License.\")\n *\n * You may obtain a copy of the License at http://www.apache.org/licenses/LICENSE-2.0.\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT\n * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n *\n * See the License for the specific language governing permissions and limitations under the License.\n */\n\nimport { makeIdxState } from './makeIdxState';\n\nexport default {\n  makeIdxState,\n};\n","/*!\n * Copyright (c) 2021-Present, Okta, Inc. and/or its affiliates. All rights reserved.\n * The Okta software accompanied by this notice is provided pursuant to the Apache License, Version 2.0 (the \"License.\")\n *\n * You may obtain a copy of the License at http://www.apache.org/licenses/LICENSE-2.0.\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT\n * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n *\n * See the License for the specific language governing permissions and limitations under the License.\n */\n\nimport { IdxResponse, IdxToPersist, IdxActionParams } from '../../types/idx-js';\nimport { OktaAuthIdxInterface, RawIdxResponse } from '../../types';    // auth-js/types\nimport { parseIdxResponse } from './idxResponseParser';\n\nexport function makeIdxState( \n  authClient: OktaAuthIdxInterface,\n  idxResponse: RawIdxResponse,\n  toPersist: IdxToPersist,\n  requestDidSucceed: boolean\n): IdxResponse {\n  const rawIdxResponse =  idxResponse;\n  const { remediations, context, actions } = parseIdxResponse( authClient, idxResponse, toPersist );\n  const neededToProceed = [...remediations];\n\n  const proceed: IdxResponse['proceed'] = async function( remediationChoice, paramsFromUser = {} ) {\n    /*\n    remediationChoice is the name attribute on each form\n    name should remain unique for items inside the remediation that are considered forms(identify, select-factor)\n    name can be duplicate for items like redirect where its not considered a form(redirect)\n    when names are not unique its a redirect to a href, so widget wont POST to idx-js layer.\n    */\n    const remediationChoiceObject = remediations.find((remediation) => remediation.name === remediationChoice);\n    if ( !remediationChoiceObject ) {\n      return Promise.reject(`Unknown remediation choice: [${remediationChoice}]`);\n    }\n\n    const actionFn = remediationChoiceObject.action;\n    if (typeof actionFn !== 'function') {\n      return Promise.reject(`Current remediation cannot make form submit action: [${remediationChoice}]`);\n    }\n\n    return remediationChoiceObject.action!(paramsFromUser as IdxActionParams);\n  };\n\n  const findCode = item => item.name === 'interaction_code';\n  const interactionCode = rawIdxResponse.successWithInteractionCode?.value?.find( findCode )?.value as string;\n\n  return {\n    proceed,\n    neededToProceed,\n    actions,\n    context,\n    rawIdxState: rawIdxResponse,\n    interactionCode,\n    toPersist,\n    requestDidSucceed,\n  };\n}\n","import { OktaAuthIdxInterface } from '../types';    // auth-js/types\nimport { IdxResponse, IdxToPersist, RawIdxResponse } from '../types/idx-js';      // idx/types\nimport { IDX_API_VERSION } from '../../constants';\nimport v1 from './v1/parsers';\n\n\nexport const parsersForVersion = function parsersForVersion( version ) {\n  switch (version) {\n    case '1.0.0':\n      return v1;\n    case undefined:\n    case null:\n      throw new Error('Api version is required');\n    default:\n      throw new Error(`Unknown api version: ${version}.  Use an exact semver version.`);\n  }\n};\n\nexport function validateVersionConfig(version) {\n  if ( !version ) {\n    throw new Error('version is required');\n  }\n\n  const cleanVersion = (version ?? '').replace(/[^0-9a-zA-Z._-]/, '');\n  if ( cleanVersion !== version || !version ) {\n    throw new Error('invalid version supplied - version is required and uses semver syntax');\n  }\n\n  parsersForVersion(version); // will throw for invalid version\n}\n\nexport function makeIdxState ( \n  authClient: OktaAuthIdxInterface,\n  rawIdxResponse: RawIdxResponse,\n  toPersist: IdxToPersist,\n  requestDidSucceed: boolean,\n): IdxResponse {\n  const version = rawIdxResponse?.version ?? IDX_API_VERSION;\n  validateVersionConfig(version);\n  \n  const { makeIdxState } = parsersForVersion(version);\n  return makeIdxState(authClient, rawIdxResponse, toPersist, requestDidSucceed);\n}\n","import { FingerprintAPI, OktaAuthConstructor } from '../base/types';\nimport { MinimalOktaOAuthInterface } from '../oidc/types';\nimport {\n  IdxTransactionManagerInterface,\n  OktaAuthIdxConstructor,\n  OktaAuthIdxOptions,\n  MinimalIdxAPI,\n  WebauthnAPI,\n  MinimalOktaAuthIdxInterface\n} from './types';\nimport { IdxTransactionMeta } from './types/meta';\nimport { IdxStorageManagerInterface } from './types/storage';\nimport { createMinimalIdxAPI } from '../idx/factory/minimalApi';\nimport fingerprint from '../browser/fingerprint';\nimport * as webauthn from './webauthn';\n\nexport function mixinMinimalIdx\n<\n  M extends IdxTransactionMeta = IdxTransactionMeta,\n  S extends IdxStorageManagerInterface<M> = IdxStorageManagerInterface<M>,\n  O extends OktaAuthIdxOptions = OktaAuthIdxOptions,\n  TM extends IdxTransactionManagerInterface = IdxTransactionManagerInterface,\n  TBase extends OktaAuthConstructor<MinimalOktaOAuthInterface<M, S, O, TM>>\n    = OktaAuthConstructor<MinimalOktaOAuthInterface<M, S, O, TM>>\n>\n(\n  Base: TBase\n): TBase & OktaAuthIdxConstructor<MinimalOktaAuthIdxInterface<M, S, O, TM>>\n{\n  return class OktaAuthIdx extends Base implements MinimalOktaAuthIdxInterface<M, S, O, TM>\n  {\n    idx: MinimalIdxAPI;\n    fingerprint: FingerprintAPI;\n    static webauthn: WebauthnAPI = webauthn;\n    \n    constructor(...args: any[]) {\n      super(...args);\n      this.idx = createMinimalIdxAPI(this);\n      this.fingerprint = fingerprint.bind(null, this);\n    }\n  };\n}\n","/*!\n * Copyright (c) 2015-present, Okta, Inc. and/or its affiliates. All rights reserved.\n * The Okta software accompanied by this notice is provided pursuant to the Apache License, Version 2.0 (the \"License.\")\n *\n * You may obtain a copy of the License at http://www.apache.org/licenses/LICENSE-2.0.\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT\n * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n *\n * See the License for the specific language governing permissions and limitations under the License.\n *\n */\n\nimport { makeIdxState } from '../idxState';\nimport { canProceed, proceed } from '../proceed';\nimport { startTransaction } from '../startTransaction';\nimport {\n  clearTransactionMeta,\n  createTransactionMeta,\n  getSavedTransactionMeta,\n  getTransactionMeta,\n  isTransactionMetaValid,\n  saveTransactionMeta\n} from '../transactionMeta';\nimport { MinimalIdxAPI, MinimalOktaAuthIdxInterface, OktaAuthIdxInterface } from '../types';\n\n// Factory\nexport function createMinimalIdxAPI(minimalSdk: MinimalOktaAuthIdxInterface): MinimalIdxAPI {\n  const sdk = minimalSdk as OktaAuthIdxInterface;\n  const boundStartTransaction = startTransaction.bind(null, sdk);\n  const idx = {\n    makeIdxResponse: makeIdxState.bind(null, sdk),\n\n    start: boundStartTransaction,\n    startTransaction: boundStartTransaction, // Use `start` instead. `startTransaction` will be removed in 7.0\n    proceed: proceed.bind(null, sdk),\n    canProceed: canProceed.bind(null, sdk),\n    \n    getSavedTransactionMeta: getSavedTransactionMeta.bind(null, sdk),\n    createTransactionMeta: createTransactionMeta.bind(null, sdk),\n    getTransactionMeta: getTransactionMeta.bind(null, sdk),\n    saveTransactionMeta: saveTransactionMeta.bind(null, sdk),\n    clearTransactionMeta: clearTransactionMeta.bind(null, sdk),\n    isTransactionMetaValid,\n  };\n  return idx;\n}\n\n","\nimport { OktaAuthConstructor } from '../../base/types';\nimport {\n  OAuthResponseType,\n  OAuthStorageManagerInterface,\n  OAuthTransactionMeta,\n  MinimalOktaOAuthInterface,\n  OktaAuthOAuthOptions,\n  PKCETransactionMeta,\n  BaseTokenAPI,\n  TransactionManagerInterface,\n  TransactionManagerConstructor,\n} from '../types';\nimport { createBaseTokenAPI } from '../factory/baseApi';\nimport { isLoginRedirect, hasResponseType } from '../util';\n\nimport { OktaAuthSessionInterface } from '../../session/types';\nexport function mixinMinimalOAuth\n<\n  M extends OAuthTransactionMeta = PKCETransactionMeta,\n  S extends OAuthStorageManagerInterface<M> = OAuthStorageManagerInterface<M>,\n  O extends OktaAuthOAuthOptions = OktaAuthOAuthOptions,\n  TM extends TransactionManagerInterface = TransactionManagerInterface,\n  TBase extends OktaAuthConstructor<OktaAuthSessionInterface<S, O>>\n    = OktaAuthConstructor<OktaAuthSessionInterface<S, O>>\n>\n(\n  Base: TBase,\n  TransactionManagerConstructor: TransactionManagerConstructor<TM>,\n): TBase & OktaAuthConstructor<MinimalOktaOAuthInterface<M, S, O, TM>>\n{\n  return class OktaAuthOAuth extends Base implements MinimalOktaOAuthInterface<M, S, O, TM>\n  {\n    token: BaseTokenAPI;\n    transactionManager: TM;\n    \n    constructor(...args: any[]) {\n      super(...args);\n\n      this.transactionManager = new TransactionManagerConstructor(Object.assign({\n        storageManager: this.storageManager,\n      }, this.options.transactionManager));\n  \n      this.token = createBaseTokenAPI(this as any);\n    }\n\n    isLoginRedirect(): boolean {\n      return isLoginRedirect(this as any);\n    }\n\n    isPKCE(): boolean {\n      return !!this.options.pkce;\n    }\n\n    hasResponseType(responseType: OAuthResponseType): boolean {\n      return hasResponseType(responseType, this.options);\n    }\n\n    isAuthorizationCodeFlow(): boolean {\n      return this.hasResponseType('code');\n    }\n\n  };\n\n}\n","/*!\n * Copyright (c) 2015-present, Okta, Inc. and/or its affiliates. All rights reserved.\n * The Okta software accompanied by this notice is provided pursuant to the Apache License, Version 2.0 (the \"License.\")\n *\n * You may obtain a copy of the License at http://www.apache.org/licenses/LICENSE-2.0.\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT\n * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n *\n * See the License for the specific language governing permissions and limitations under the License.\n *\n */\n\nimport { decodeToken } from '../decodeToken';\nimport { exchangeCodeForTokens } from '../exchangeCodeForTokens';\nimport {\n  OktaAuthOAuthInterface,\n  BaseTokenAPI,\n} from '../types';\nimport { prepareTokenParams } from '../util';\n\n// Factory\nexport function createBaseTokenAPI(sdk: OktaAuthOAuthInterface): BaseTokenAPI {\n  const token: BaseTokenAPI = {\n    prepareTokenParams: prepareTokenParams.bind(null, sdk),\n    exchangeCodeForTokens: exchangeCodeForTokens.bind(null, sdk),\n    decode: decodeToken,\n  };\n\n  return token;\n}\n","import { OktaAuthOptionsConstructor } from '../../base/types';\nimport { StorageManagerConstructor } from '../../storage/types';\nimport { IdxTransactionManagerInterface, MinimalOktaAuthIdxInterface, OktaAuthIdxConstructor } from '../types/api';\nimport { IdxTransactionMeta } from '../types/meta';\nimport { IdxStorageManagerInterface } from '../types/storage';\nimport { OktaAuthIdxOptions } from '../types/options';\nimport { TransactionManagerConstructor, MinimalOktaOAuthInterface } from '../../oidc/types';\nimport { mixinMinimalIdx } from '../mixinMinimal';\nimport { createOktaAuthBase } from '../../base/factory';\nimport { mixinStorage } from '../../storage/mixin';\nimport { mixinHttp } from '../../http/mixin';\nimport { mixinSession } from '../../session/mixin';\nimport { mixinMinimalOAuth } from '../../oidc/mixin/minimal';\n\nexport function createMinimalOktaAuthIdx<\n  M extends IdxTransactionMeta = IdxTransactionMeta,\n  S extends IdxStorageManagerInterface<M> = IdxStorageManagerInterface<M>,\n  O extends OktaAuthIdxOptions = OktaAuthIdxOptions,\n  TM extends IdxTransactionManagerInterface = IdxTransactionManagerInterface\n>(\n  StorageManagerConstructor: StorageManagerConstructor<S>,\n  OptionsConstructor: OktaAuthOptionsConstructor<O>,\n  TransactionManagerConstructor: TransactionManagerConstructor<TM>\n)\n: OktaAuthIdxConstructor<\n  MinimalOktaAuthIdxInterface<M, S, O, TM> & MinimalOktaOAuthInterface<M, S, O, TM>\n>\n{\n  const Base = createOktaAuthBase(OptionsConstructor);\n  const WithStorage = mixinStorage<S, O>(Base, StorageManagerConstructor);\n  const WithHttp = mixinHttp<S, O>(WithStorage);\n  const WithSession = mixinSession<S, O>(WithHttp);\n  const WithOAuth = mixinMinimalOAuth<M, S, O, TM>(WithSession, TransactionManagerConstructor);\n  // do not mixin core\n  const WithIdx = mixinMinimalIdx(WithOAuth);\n  return WithIdx;\n}\n","/* eslint-disable @typescript-eslint/no-non-null-assertion */\n/*!\n * Copyright (c) 2021, Okta, Inc. and/or its affiliates. All rights reserved.\n * The Okta software accompanied by this notice is provided pursuant to the Apache License, Version 2.0 (the \"License.\")\n *\n * You may obtain a copy of the License at http://www.apache.org/licenses/LICENSE-2.0.\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT\n * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n *\n * See the License for the specific language governing permissions and limitations under the License.\n */\n/* eslint complexity:[0,8] */\nimport { OktaAuthIdxInterface, IdxTransactionMeta, InteractOptions, InteractResponse } from './types';\nimport { getSavedTransactionMeta, saveTransactionMeta, createTransactionMeta } from './transactionMeta';\nimport { getOAuthBaseUrl } from '../oidc';\nimport { removeNils } from '../util';\nimport { httpRequest } from '../http';\n\n\n/* eslint-disable camelcase */\nexport interface InteractParams {\n  client_id: string;\n  scope: string;\n  redirect_uri: string;\n  code_challenge: string;\n  code_challenge_method: string;\n  state: string;\n  activation_token?: string;\n  recovery_token?: string;\n  client_secret?: string;\n  max_age?: string | number;\n  acr_values?: string;\n  nonce?: string;\n}\n/* eslint-enable camelcase */\n\nfunction getResponse(meta: IdxTransactionMeta): InteractResponse {\n  return {\n    meta,\n    interactionHandle: meta.interactionHandle!,\n    state: meta.state\n  };\n}\n\n// Begin or resume a transaction. Returns an interaction handle\nexport async function interact (\n  authClient: OktaAuthIdxInterface, \n  options: InteractOptions = {}\n): Promise<InteractResponse> {\n  options = removeNils(options);\n\n  let meta = getSavedTransactionMeta(authClient, options);\n  // If meta exists, it has been validated against all options\n\n  if (meta?.interactionHandle) {\n    return getResponse(meta); // Saved transaction, return meta\n  }\n\n  // Create new meta, respecting previous meta if it has been set and is not overridden\n  meta = await createTransactionMeta(authClient, { ...meta, ...options });\n  const baseUrl = getOAuthBaseUrl(authClient);\n  let {\n    clientId,\n    redirectUri,\n    state,\n    scopes,\n    withCredentials,\n    codeChallenge,\n    codeChallengeMethod,\n    activationToken,\n    recoveryToken,\n    maxAge,\n    acrValues,\n    nonce\n  } = meta as IdxTransactionMeta;\n  const clientSecret = options.clientSecret || authClient.options.clientSecret;\n  withCredentials = withCredentials ?? true;\n\n  /* eslint-disable camelcase */\n  const url = `${baseUrl}/v1/interact`;\n  const params = {\n    client_id: clientId,\n    scope: scopes!.join(' '),\n    redirect_uri: redirectUri,\n    code_challenge: codeChallenge,\n    code_challenge_method: codeChallengeMethod,\n    state,\n    ...(activationToken && { activation_token: activationToken }),\n    ...(recoveryToken && { recovery_token: recoveryToken }),\n    // X-Device-Token header need to pair with `client_secret`\n    // eslint-disable-next-line max-len\n    // https://oktawiki.atlassian.net/wiki/spaces/eng/pages/2445902453/Support+Device+Binding+in+interact#Scenario-1%3A-Non-User-Agent-with-Confidential-Client-(top-priority)\n    ...(clientSecret && { client_secret: clientSecret }),\n    ...(maxAge && { max_age: maxAge }),\n    ...(acrValues && { acr_values: acrValues }),\n    ...(nonce && { nonce }),\n  } as InteractParams;\n  /* eslint-enable camelcase */\n\n  const headers = {\n    'Content-Type': 'application/x-www-form-urlencoded',\n  };\n\n  const resp = await httpRequest(authClient, {\n    method: 'POST',\n    url,\n    headers,\n    withCredentials,\n    args: params\n  });\n  const interactionHandle = resp.interaction_handle;\n\n  const newMeta = {\n    ...meta,\n    interactionHandle,\n    \n    // Options which can be passed into interact() should be saved in the meta\n    withCredentials,\n    state,\n    scopes,\n    recoveryToken,\n    activationToken\n  };\n  // Save transaction meta so it can be resumed\n  saveTransactionMeta(authClient, newMeta);\n\n  return getResponse(newMeta);\n}\n","/* eslint-disable complexity */\n/*!\n * Copyright (c) 2021, Okta, Inc. and/or its affiliates. All rights reserved.\n * The Okta software accompanied by this notice is provided pursuant to the Apache License, Version 2.0 (the \"License.\")\n *\n * You may obtain a copy of the License at http://www.apache.org/licenses/LICENSE-2.0.\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT\n * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n *\n * See the License for the specific language governing permissions and limitations under the License.\n */\n\nimport { makeIdxState, validateVersionConfig } from './idxState';\nimport { IntrospectOptions, OktaAuthIdxInterface } from './types';\nimport { IdxResponse, isRawIdxResponse } from './types/idx-js';\nimport { getOAuthDomain } from '../oidc';\nimport { IDX_API_VERSION } from '../constants';\nimport { httpRequest } from '../http';\nimport { isAuthApiError } from '../errors';\n\nexport async function introspect (\n  authClient: OktaAuthIdxInterface, \n  options: IntrospectOptions = {}\n): Promise<IdxResponse> {\n  let rawIdxResponse;\n  let requestDidSucceed;\n\n  // try load from storage first\n  const savedIdxResponse = authClient.transactionManager.loadIdxResponse(options);\n  if (savedIdxResponse) {\n    rawIdxResponse = savedIdxResponse.rawIdxResponse;\n    requestDidSucceed = savedIdxResponse.requestDidSucceed;\n  }\n\n  // call idx.introspect if no existing idx response available in storage\n  if (!rawIdxResponse) {\n    const version = options.version || IDX_API_VERSION;\n    const domain = getOAuthDomain(authClient);\n    const { interactionHandle, stateHandle } = options;\n    const withCredentials = options.withCredentials ?? true;\n    try {\n      requestDidSucceed = true;\n      validateVersionConfig(version);\n      const url = `${domain}/idp/idx/introspect`;\n      const body = stateHandle ? { stateToken: stateHandle } : { interactionHandle };\n      const headers = {\n        'Content-Type': `application/ion+json; okta-version=${version}`, // Server wants this version info\n        Accept: `application/ion+json; okta-version=${version}`,\n      };\n      rawIdxResponse = await httpRequest(authClient, {\n        method: 'POST',\n        url,\n        headers,\n        withCredentials,\n        args: body\n      });\n    } catch (err) {\n      if (isAuthApiError(err) && err.xhr && isRawIdxResponse(err.xhr.responseJSON)) {\n        rawIdxResponse = err.xhr.responseJSON;\n        requestDidSucceed = false;\n      } else {\n        throw err;\n      }\n    }\n  }\n\n  const { withCredentials } = options;\n  return makeIdxState(authClient, rawIdxResponse, { withCredentials }, requestDidSucceed);\n}\n","import { FingerprintAPI, OktaAuthConstructor } from '../base/types';\nimport { OktaAuthOAuthInterface } from '../oidc/types';\nimport {\n  IdxAPI, \n  IdxTransactionManagerInterface, \n  OktaAuthIdxInterface, \n  OktaAuthIdxConstructor, \n  OktaAuthIdxOptions, \n  WebauthnAPI\n} from './types';\nimport { IdxTransactionMeta } from './types/meta';\nimport { IdxStorageManagerInterface } from './types/storage';\nimport { createIdxAPI } from './factory/api';\nimport fingerprint from '../browser/fingerprint';\nimport * as webauthn from './webauthn';\n\nexport function mixinIdx\n<\n  M extends IdxTransactionMeta = IdxTransactionMeta,\n  S extends IdxStorageManagerInterface<M> = IdxStorageManagerInterface<M>,\n  O extends OktaAuthIdxOptions = OktaAuthIdxOptions,\n  TM extends IdxTransactionManagerInterface = IdxTransactionManagerInterface,\n  TBase extends OktaAuthConstructor<OktaAuthOAuthInterface<M, S, O, TM>>\n    = OktaAuthConstructor<OktaAuthOAuthInterface<M, S, O, TM>>\n>\n(Base: TBase): TBase & OktaAuthIdxConstructor<OktaAuthIdxInterface<M, S, O, TM>>\n{\n  return class OktaAuthIdx extends Base implements OktaAuthIdxInterface<M, S, O, TM>\n  {\n    idx: IdxAPI;\n    fingerprint: FingerprintAPI;\n    static webauthn: WebauthnAPI = webauthn;\n    \n    constructor(...args: any[]) {\n      super(...args);\n      this.idx = createIdxAPI(this);\n      this.fingerprint = fingerprint.bind(null, this);\n    }\n  };\n}\n","/*!\n * Copyright (c) 2015-present, Okta, Inc. and/or its affiliates. All rights reserved.\n * The Okta software accompanied by this notice is provided pursuant to the Apache License, Version 2.0 (the \"License.\")\n *\n * You may obtain a copy of the License at http://www.apache.org/licenses/LICENSE-2.0.\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT\n * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * \n * See the License for the specific language governing permissions and limitations under the License.\n */\n\nimport { createCoreOptionsConstructor } from '../core/options';\nimport { FlowIdentifier } from './types/FlowIdentifier';\nimport { OktaAuthIdxOptions } from './types/options';\n\n\nexport function createIdxOptionsConstructor() {\n  const CoreOptionsConstructor = createCoreOptionsConstructor();\n  return class IdxOptionsConstructor\n    extends CoreOptionsConstructor \n    implements Required<OktaAuthIdxOptions>\n  {\n    flow: FlowIdentifier;\n    activationToken: string;\n    recoveryToken: string;\n  \n    // BETA WARNING: configs in this section are subject to change without a breaking change notice\n    idx: {\n      useGenericRemediator?: boolean;\n      exchangeCodeForTokens?: boolean;\n    };\n  \n    constructor(options: any) {\n      super(options);\n  \n      this.flow = options.flow;\n      this.activationToken = options.activationToken;\n      this.recoveryToken = options.recoveryToken;\n      this.idx = options.idx;\n    }\n  };\n  \n}\n","/*!\n * Copyright (c) 2021-present, Okta, Inc. and/or its affiliates. All rights reserved.\n * The Okta software accompanied by this notice is provided pursuant to the Apache License, Version 2.0 (the \"License.\")\n *\n * You may obtain a copy of the License at http://www.apache.org/licenses/LICENSE-2.0.\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT\n * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n *\n * See the License for the specific language governing permissions and limitations under the License.\n */\n\nimport { proceed } from './proceed';\n\nimport { \n  IdxPollOptions,\n  IdxTransaction,\n  OktaAuthIdxInterface,\n} from './types';\nimport { getSavedTransactionMeta } from './transactionMeta';\nimport { warn } from '../util';\n\nexport async function poll(authClient: OktaAuthIdxInterface, options: IdxPollOptions = {}): Promise<IdxTransaction> {\n  let transaction = await proceed(authClient, {\n    startPolling: true\n  });\n\n  const meta = getSavedTransactionMeta(authClient);\n  let availablePollingRemeditaions = meta?.remediations?.find(remediation => remediation.includes('poll'));\n  if (!availablePollingRemeditaions?.length) {\n    warn('No polling remediations available at the current IDX flow stage');\n  }\n\n  if (Number.isInteger(options.refresh)) {\n    return new Promise(function (resolve, reject) {\n      setTimeout(async function () {\n        try {\n          const refresh = transaction.nextStep?.poll?.refresh;\n          if (refresh) {\n            resolve(poll(authClient, {\n              refresh\n            }));\n          } else {\n            resolve(transaction);\n          }\n        } catch (err) {\n          reject(err);\n        }\n      }, options.refresh);\n    });\n  }\n\n  return transaction;\n}\n","/*!\n * Copyright (c) 2015-present, Okta, Inc. and/or its affiliates. All rights reserved.\n * The Okta software accompanied by this notice is provided pursuant to the Apache License, Version 2.0 (the \"License.\")\n *\n * You may obtain a copy of the License at http://www.apache.org/licenses/LICENSE-2.0.\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT\n * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * \n * See the License for the specific language governing permissions and limitations under the License.\n */\n\n\nimport { \n  OktaAuthIdxInterface,\n  IdxTransaction,\n  ProceedOptions,\n} from './types';\nimport { run } from './run';\nimport { getSavedTransactionMeta } from './transactionMeta';\nimport { AuthSdkError } from '../errors';\n\nexport function canProceed(authClient: OktaAuthIdxInterface, options: ProceedOptions = {}): boolean {\n  const meta = getSavedTransactionMeta(authClient, options);\n  return !!(meta || options.stateHandle);\n}\n\nexport async function proceed(\n  authClient: OktaAuthIdxInterface,\n  options: ProceedOptions = {}\n): Promise<IdxTransaction> {\n\n  if (!canProceed(authClient, options)) {\n    throw new AuthSdkError('Unable to proceed: saved transaction could not be loaded');\n  }\n\n  let { flow, state } = options;\n  if (!flow) {\n    const meta = getSavedTransactionMeta(authClient, { state });\n    flow = meta?.flow;\n  }\n\n  return run(authClient, { \n    ...options, \n    flow\n  });\n}\n","/*!\n * Copyright (c) 2015-present, Okta, Inc. and/or its affiliates. All rights reserved.\n * The Okta software accompanied by this notice is provided pursuant to the Apache License, Version 2.0 (the \"License.\")\n *\n * You may obtain a copy of the License at http://www.apache.org/licenses/LICENSE-2.0.\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT\n * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * \n * See the License for the specific language governing permissions and limitations under the License.\n */\n\n\nimport { run } from './run';\nimport { getFlowSpecification } from './flow';\nimport { \n  OktaAuthIdxInterface, \n  PasswordRecoveryOptions, \n  IdxTransaction,\n} from './types';\n\nexport async function recoverPassword(\n  authClient: OktaAuthIdxInterface, options: PasswordRecoveryOptions = {}\n): Promise<IdxTransaction> {\n  const flowSpec = getFlowSpecification(authClient, 'recoverPassword');\n  return run(\n    authClient, \n    { \n      ...options,\n      ...flowSpec,\n    }\n  );\n}\n","/*!\n * Copyright (c) 2015-present, Okta, Inc. and/or its affiliates. All rights reserved.\n * The Okta software accompanied by this notice is provided pursuant to the Apache License, Version 2.0 (the \"License.\")\n *\n * You may obtain a copy of the License at http://www.apache.org/licenses/LICENSE-2.0.\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT\n * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * \n * See the License for the specific language governing permissions and limitations under the License.\n */\n\n\nimport { run } from './run';\nimport { hasSavedInteractionHandle } from './transactionMeta';\nimport { startTransaction } from './startTransaction';\nimport { AuthSdkError } from '../errors';\nimport { \n  RegistrationOptions, \n  IdxTransaction, \n  OktaAuthIdxInterface, \n  IdxFeature,\n} from './types';\n\nexport async function register(\n  authClient: OktaAuthIdxInterface, options: RegistrationOptions = {}\n): Promise<IdxTransaction> {\n\n  // Only check at the beginning of the transaction\n  if (!hasSavedInteractionHandle(authClient)) {\n    const { enabledFeatures } = await startTransaction(authClient, {\n      ...options,\n      flow: 'register',\n      autoRemediate: false\n    });\n    if (!options.activationToken && enabledFeatures && !enabledFeatures.includes(IdxFeature.REGISTRATION)) {\n      throw new AuthSdkError('Registration is not supported based on your current org configuration.');\n    }\n  }\n\n  return run(authClient, {\n    ...options,\n    flow: 'register'\n  });\n}\n","/* eslint-disable @typescript-eslint/no-non-null-assertion */\n/*!\n * Copyright (c) 2015-present, Okta, Inc. and/or its affiliates. All rights reserved.\n * The Okta software accompanied by this notice is provided pursuant to the Apache License, Version 2.0 (the \"License.\")\n *\n * You may obtain a copy of the License at http://www.apache.org/licenses/LICENSE-2.0.\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT\n * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * \n * See the License for the specific language governing permissions and limitations under the License.\n */\n\n\nimport { AuthenticatorData, AuthenticatorDataValues } from './Base/AuthenticatorData';\nimport { getAuthenticatorFromRemediation } from './util';\n\nexport type AuthenticatorEnrollmentDataValues =  AuthenticatorDataValues & {\n  phoneNumber?: string;\n  resend?: boolean; // resend is not a remediator value - revise when IdxResponse structure is updated\n}\nexport class AuthenticatorEnrollmentData extends AuthenticatorData<AuthenticatorEnrollmentDataValues> {\n  static remediationName = 'authenticator-enrollment-data';\n\n  mapAuthenticator() {\n    const authenticatorData = this.getAuthenticatorData();\n    const authenticatorFromRemediation = getAuthenticatorFromRemediation(this.remediation)!;\n    return { \n      id: authenticatorFromRemediation.form!.value\n        .find(({ name }) => name === 'id')!.value,\n      methodType: authenticatorData!.methodType,\n      phoneNumber: authenticatorData!.phoneNumber,\n    };\n  }\n\n  getInputAuthenticator(remediation) {\n    return [\n      { name: 'methodType', type: 'string' }, \n      { name: 'phoneNumber', label: 'Phone Number', type: 'string' }\n    ].map(item => {\n      const value = remediation.form.value.find(val => val.name === item.name);\n      return { ...value, ...item };\n    });\n  }\n\n  protected mapAuthenticatorDataFromValues(data?) {\n    // get mapped authenticator from base class\n    data = super.mapAuthenticatorDataFromValues(data);\n    // add phoneNumber to authenticator if it exists in values\n    const { phoneNumber } = this.values;\n    if (!data && !phoneNumber) {\n      return;\n    }\n\n    return { \n      ...(data && data), \n      ...(phoneNumber && { phoneNumber }) \n    };\n  }\n\n}\n","/* eslint-disable @typescript-eslint/no-non-null-assertion */\n/*!\n * Copyright (c) 2015-present, Okta, Inc. and/or its affiliates. All rights reserved.\n * The Okta software accompanied by this notice is provided pursuant to the Apache License, Version 2.0 (the \"License.\")\n *\n * You may obtain a copy of the License at http://www.apache.org/licenses/LICENSE-2.0.\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT\n * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * \n * See the License for the specific language governing permissions and limitations under the License.\n */\n\nimport { AuthenticatorData, AuthenticatorDataValues } from './Base/AuthenticatorData';\n\nexport type AuthenticatorVerificationDataValues = AuthenticatorDataValues;\n\nexport class AuthenticatorVerificationData extends AuthenticatorData<AuthenticatorVerificationDataValues> {\n  static remediationName = 'authenticator-verification-data';\n\n  mapAuthenticator() {\n    return this.getAuthenticatorData();\n  }\n\n  getInputAuthenticator() {\n    const authenticator = this.getAuthenticatorFromRemediation();\n    const methodType = authenticator.form!.value.find(({ name }) => name === 'methodType');\n    // if has methodType in form, let user select the methodType\n    if (methodType && methodType.options) {\n      return { \n        name: 'methodType', \n        type: 'string', \n        required: true, \n        options: methodType.options \n      };\n    }\n    // no methodType, then return form values\n    const inputs = [...authenticator.form!.value];\n    return inputs;\n  }\n\n  getValuesAfterProceed(): AuthenticatorVerificationDataValues {\n    this.values = super.getValuesAfterProceed();\n    let trimmedValues = Object.keys(this.values).filter(valueKey => valueKey !== 'authenticator');\n    return trimmedValues.reduce((values, valueKey) => ({...values, [valueKey]: this.values[valueKey]}), {});\n  }\n}\n","/* eslint-disable @typescript-eslint/no-non-null-assertion */\n/*!\n * Copyright (c) 2015-present, Okta, Inc. and/or its affiliates. All rights reserved.\n * The Okta software accompanied by this notice is provided pursuant to the Apache License, Version 2.0 (the \"License.\")\n *\n * You may obtain a copy of the License at http://www.apache.org/licenses/LICENSE-2.0.\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT\n * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * \n * See the License for the specific language governing permissions and limitations under the License.\n */\n\nimport { Remediator, RemediationValues } from './Remediator';\nimport { IdxRemediationValue, IdxRemediation, IdxAuthenticator } from '../../types/idx-js';\nimport { isAuthenticator } from '../../types/api';\nimport { compareAuthenticators } from '../../authenticator/util';\n\nexport type AuthenticatorDataValues = RemediationValues & {\n  methodType?: string;\n};\n\n// Base class - DO NOT expose static remediationName\nexport class AuthenticatorData<T extends AuthenticatorDataValues = AuthenticatorDataValues> extends Remediator<T> {\n  authenticator: IdxAuthenticator;\n\n  constructor(remediation: IdxRemediation, values: T = {} as T) {\n    super(remediation, values);\n\n    // set before other data calculation\n    this.authenticator = this.getAuthenticator()!;\n\n    this.formatAuthenticatorData();\n  }\n\n  protected formatAuthenticatorData() {\n    const authenticatorData = this.getAuthenticatorData();\n    if (authenticatorData) {\n      this.values.authenticatorsData = this.values.authenticatorsData!.map(data => {\n        if (compareAuthenticators(this.authenticator, data)) {\n          return this.mapAuthenticatorDataFromValues(data);\n        }\n        return data;\n      });\n    } else {\n      const data = this.mapAuthenticatorDataFromValues();\n      if (data) {\n        this.values.authenticatorsData!.push(data);\n      }\n    }\n  }\n\n  protected getAuthenticatorData() {\n    return this.values.authenticatorsData!\n      .find((data) => compareAuthenticators(this.authenticator, data));\n  }\n\n  canRemediate() {\n    return this.values.authenticatorsData!\n      .some(data => compareAuthenticators(this.authenticator, data));\n  }\n\n  protected mapAuthenticatorDataFromValues(authenticatorData?) {\n    // add methodType to authenticatorData if it exists in values\n    let { methodType, authenticator } = this.values;\n    if (!methodType && isAuthenticator(authenticator)) {\n     methodType = authenticator?.methodType;\n    }\n    \n    const { id, enrollmentId } = this.authenticator;\n    const data = { \n      id,\n      enrollmentId,\n      ...(authenticatorData && authenticatorData),\n      ...(methodType && { methodType }) \n    };\n\n    return data.methodType ? data : null;\n  }\n\n  protected getAuthenticatorFromRemediation(): IdxRemediationValue {\n    const authenticator = this.remediation.value!\n      .find(({ name }) => name === 'authenticator') as IdxRemediationValue;\n    return authenticator;\n  }\n\n  getValuesAfterProceed(): T {\n    this.values = super.getValuesAfterProceed();\n    // remove used authenticatorData\n    const authenticatorsData = this.values.authenticatorsData!\n      .filter(data => compareAuthenticators(this.authenticator, data) !== true);\n    return { ...this.values, authenticatorsData };\n  }\n}\n","/* eslint-disable @typescript-eslint/no-non-null-assertion */\n/*!\n * Copyright (c) 2015-present, Okta, Inc. and/or its affiliates. All rights reserved.\n * The Okta software accompanied by this notice is provided pursuant to the Apache License, Version 2.0 (the \"License.\")\n *\n * You may obtain a copy of the License at http://www.apache.org/licenses/LICENSE-2.0.\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT\n * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * \n * See the License for the specific language governing permissions and limitations under the License.\n */\n\n\n/* eslint-disable complexity */\nimport { OktaAuthIdxInterface, NextStep, IdxMessage, Authenticator, Input, RemediateOptions } from '../../types';\nimport { IdxAuthenticator, IdxRemediation, IdxContext } from '../../types/idx-js';\nimport { getAllValues, getRequiredValues, titleCase, getAuthenticatorFromRemediation } from '../util';\nimport { formatAuthenticator, compareAuthenticators } from '../../authenticator/util';\n\n// A map from IDX data values (server spec) to RemediationValues (client spec)\nexport type IdxToRemediationValueMap = Record<string, string[]>;\n\nexport interface RemediationValues {\n  stateHandle?: string;\n  authenticators?: (Authenticator | string)[];\n  authenticator?: string | Authenticator;\n  authenticatorsData?: Authenticator[];\n  resend?: boolean;\n}\n\nexport interface RemediatorConstructor {\n  remediationName: string;\n  new<T extends RemediationValues>(\n    remediation: IdxRemediation, \n    values?: T, \n    options?: RemediateOptions\n  ): any;\n}\n\n// Base class - DO NOT expose static remediationName\nexport class Remediator<T extends RemediationValues = RemediationValues> {\n  static remediationName: string;\n\n  remediation: IdxRemediation;\n  values: T;\n  options: RemediateOptions;\n  map?: IdxToRemediationValueMap;\n\n  constructor(\n    remediation: IdxRemediation, \n    values: T = {} as T, \n    options: RemediateOptions = {}\n  ) {\n    // assign fields to the instance\n    this.values = { ...values };\n    this.options = { ...options };\n    this.formatAuthenticators();\n    this.remediation = remediation;\n  }\n\n  private formatAuthenticators() {\n    this.values.authenticators = (this.values.authenticators || []) as Authenticator[];\n\n    // ensure authenticators are in the correct format\n    this.values.authenticators = this.values.authenticators.map(authenticator => {\n      return formatAuthenticator(authenticator);\n    });\n\n    // add authenticator (if any) to \"authenticators\"\n    if (this.values.authenticator) {\n      const authenticator = formatAuthenticator(this.values.authenticator);\n      const hasAuthenticatorInList = this.values.authenticators.some(existing => {\n        return compareAuthenticators(authenticator, existing);\n      });\n      if (!hasAuthenticatorInList) {\n        this.values.authenticators.push(authenticator);\n      }\n    }\n\n    // save non-key meta to \"authenticatorsData\" field\n    // authenticators will be removed after selection to avoid select-authenticator loop\n    this.values.authenticatorsData = this.values.authenticators.reduce((acc, authenticator) => {\n      if (typeof authenticator === 'object' && Object.keys(authenticator).length > 1) {\n        // save authenticator meta into authenticator data\n        acc.push(authenticator);\n      }\n      return acc;\n    }, this.values.authenticatorsData || []);\n  }\n\n  getName(): string {\n    return this.remediation.name;\n  }\n\n  // Override this method to provide custom check\n  /* eslint-disable-next-line no-unused-vars, @typescript-eslint/no-unused-vars */\n  canRemediate(context?: IdxContext): boolean {\n    const required = getRequiredValues(this.remediation);\n    const needed = required!.find((key) => !this.hasData(key));\n    if (needed) {\n      return false; // missing data for a required field\n    }\n    return true; // all required fields have available data\n  }\n\n  // returns an object for the entire remediation form, or just a part\n  getData(key?: string) {\n    if (!key) {\n      let allValues = getAllValues(this.remediation);\n      let res = allValues!.reduce((data, key) => {\n        data[key] = this.getData(key); // recursive\n        return data;\n      }, {});\n      return res;\n    }\n\n    // Map value by \"map${Property}\" function in each subClass\n    if (typeof this[`map${titleCase(key)}`] === 'function') {\n      const val = this[`map${titleCase(key)}`](\n        this.remediation.value!.find(({name}) => name === key)\n      );\n      if (val) {\n        return val;\n      }\n    }\n\n    // If a map is defined for this key, return the first aliased property that returns a truthy value\n    if (this.map && this.map[key]) {\n      const entry = this.map[key];\n      for (let i = 0; i < entry.length; i++) {\n        let val = this.values[entry[i]];\n        if (val) {\n          return val;\n        }\n      }\n    }\n\n    // fallback: return the value by key\n    return this.values[key];\n  }\n\n  hasData(\n    key: string // idx name\n  ): boolean \n  {\n    // no attempt to format, we want simple true/false\n    return !!this.getData(key);\n  }\n\n  getNextStep(_authClient: OktaAuthIdxInterface, _context?: IdxContext): NextStep {\n    const name = this.getName();\n    const inputs = this.getInputs();\n    const authenticator = this.getAuthenticator();\n    // TODO: remove type field in the next major version change\n    // https://oktainc.atlassian.net/browse/OKTA-431749\n    const type = authenticator?.type;\n    return { \n      name, \n      inputs, \n      ...(type && { type }),\n      ...(authenticator && { authenticator }),\n    };\n  }\n\n  // Get inputs for the next step\n  getInputs(): Input[] {\n    const inputs: Input[] = [];\n    const inputsFromRemediation = this.remediation.value || [];\n    inputsFromRemediation.forEach(inputFromRemediation => {\n      let input;\n      let { name, type, visible, messages } = inputFromRemediation;\n      if (visible === false) {\n        return; // Filter out invisible inputs, like stateHandle\n      }\n      if (typeof this[`getInput${titleCase(name)}`] === 'function') {\n        input = this[`getInput${titleCase(name)}`](inputFromRemediation);\n      } else if (type !== 'object') {\n        // handle general primitive types\n        let alias;\n        const aliases = (this.map ? this.map[name] : null) || [];\n        if (aliases.length === 1) {\n          alias = aliases[0];\n        } else {\n          // try find key from values\n          alias = aliases.find(name => Object.keys(this.values).includes(name));\n        }\n        if (alias) {\n          input = { ...inputFromRemediation, name: alias };\n        }\n      }\n      if (!input) {\n        input = inputFromRemediation;\n      }\n      if (Array.isArray(input)) {\n        input.forEach(i => inputs.push(i));\n      } else {\n        // guarantees field-level messages are passed back\n        if (messages) {\n          input.messages = messages;\n        }\n        inputs.push(input);\n      }\n    });\n    return inputs;\n  }\n\n  static getMessages(remediation: IdxRemediation): IdxMessage[] | undefined {\n    if (!remediation.value) {\n      return;\n    }\n    return remediation.value[0]?.form?.value.reduce((messages: IdxMessage[], field) => {\n      if (field.messages) {\n        messages = [...messages, ...field.messages.value];\n      }\n      return messages;\n    }, []);\n  }\n\n  // Prepare values for the next remediation\n  // In general, remove used values from inputs for the current remediation\n  // Override this method if special cases need be handled\n  getValuesAfterProceed(): T {\n    const inputsFromRemediation = this.remediation.value || []; // \"raw\" inputs from server response\n    const inputsFromRemediator = this.getInputs(); // \"aliased\" inputs from SDK remediator\n    const inputs = [\n      ...inputsFromRemediation,\n      ...inputsFromRemediator\n    ];\n    // scrub all values related to this remediation\n    for (const input of inputs) {\n      delete this.values[input.name];\n    }\n    return this.values;\n  }\n\n  protected getAuthenticator(): IdxAuthenticator | undefined {\n    // relatesTo value may be an authenticator or an authenticatorEnrollment\n    const relatesTo = this.remediation.relatesTo?.value;\n    if (!relatesTo) {\n      return;\n    }\n\n    const authenticatorFromRemediation = getAuthenticatorFromRemediation(this.remediation);\n    if (!authenticatorFromRemediation) {\n      // Hopefully value is an authenticator\n      return relatesTo;\n    }\n\n    // If relatesTo is an authenticatorEnrollment, the id is actually the enrollmentId\n    // Let's get the correct authenticator id from the form value\n    const id = authenticatorFromRemediation.form!.value\n      .find(({ name }) => name === 'id')!.value as string;\n    const enrollmentId = authenticatorFromRemediation.form!.value\n      .find(({ name }) => name === 'enrollmentId')?.value as string;\n\n    return {\n      ...relatesTo,\n      id,\n      enrollmentId\n    };\n  }\n}\n","/* eslint-disable @typescript-eslint/no-non-null-assertion */\n/*!\n * Copyright (c) 2015-present, Okta, Inc. and/or its affiliates. All rights reserved.\n * The Okta software accompanied by this notice is provided pursuant to the Apache License, Version 2.0 (the \"License.\")\n *\n * You may obtain a copy of the License at http://www.apache.org/licenses/LICENSE-2.0.\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT\n * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * \n * See the License for the specific language governing permissions and limitations under the License.\n */\n\n\nimport { Remediator, RemediationValues } from './Remediator';\nimport { getAuthenticatorFromRemediation } from '../util';\nimport { IdxRemediationValue, IdxContext, IdxOption } from '../../types/idx-js';\nimport { Authenticator, isAuthenticator } from '../../types/api';\nimport { compareAuthenticators, findMatchedOption} from '../../authenticator/util';\n\nexport type SelectAuthenticatorValues = RemediationValues & {\n  authenticator?: string | Authenticator;\n};\n\n// Base class - DO NOT expose static remediationName\nexport class SelectAuthenticator<T extends SelectAuthenticatorValues = SelectAuthenticatorValues>\n  extends Remediator<T> {\n  selectedAuthenticator?: Authenticator;\n  selectedOption?: any;\n\n  // Find matched authenticator in provided order\n  findMatchedOption(authenticators, options) {\n    let option: IdxOption | undefined;\n    for (let authenticator of authenticators) {\n      option = options\n        .find(({ relatesTo }) => relatesTo.key && relatesTo.key === authenticator.key);\n      if (option) {\n        break;\n      }\n    }\n    return option;\n  }\n\n  /* eslint complexity:[0,9] */\n  canRemediate(context?: IdxContext) {\n    const { authenticators, authenticator } = this.values;\n    const authenticatorFromRemediation = getAuthenticatorFromRemediation(this.remediation);\n    const { options } = authenticatorFromRemediation;\n    // Let users select authenticator if no input is provided\n    if (!authenticators || !authenticators.length) {\n      return false;\n    }\n\n    // Authenticator is explicitly specified by id\n    if (isAuthenticator(authenticator) && authenticator.id) {\n      return true;\n    }\n\n    // Proceed with provided authenticators\n    const matchedOption = this.findMatchedOption(authenticators, options!);\n    if (matchedOption) {\n      // Don't select current authenticator (OKTA-612939)\n      const isCurrentAuthenticator = context?.currentAuthenticator\n        && context?.currentAuthenticator.value.id === matchedOption.relatesTo?.id;\n      const isCurrentAuthenticatorEnrollment = context?.currentAuthenticatorEnrollment\n        && context?.currentAuthenticatorEnrollment.value.id === matchedOption.relatesTo?.id;\n      return !isCurrentAuthenticator && !isCurrentAuthenticatorEnrollment;\n    }\n    \n    return false;\n  }\n\n  mapAuthenticator(remediationValue: IdxRemediationValue) {\n    const { authenticators, authenticator } = this.values;\n\n    // Authenticator is explicitly specified by id\n    if (isAuthenticator(authenticator) && authenticator.id) {\n      this.selectedAuthenticator = authenticator; // track the selected authenticator\n      return authenticator;\n    }\n\n    const { options } = remediationValue;\n    const selectedOption = findMatchedOption(authenticators, options);\n    this.selectedAuthenticator = selectedOption.relatesTo; // track the selected authenticator\n    this.selectedOption = selectedOption;\n    return {\n      id: selectedOption?.value.form.value.find(({ name }) => name === 'id').value\n    };\n  }\n\n  getInputAuthenticator(remediation) {\n    const options = remediation.options.map(({ label, relatesTo }) => {\n      return {\n        label,\n        value: relatesTo.key\n      };\n    });\n    return { name: 'authenticator', type: 'string', options };\n  }\n\n  getValuesAfterProceed(): T {\n    this.values = super.getValuesAfterProceed();\n    // remove used authenticators\n    const authenticators = (this.values.authenticators as Authenticator[])\n      .filter(authenticator => {\n        return compareAuthenticators(authenticator, this.selectedAuthenticator) !== true;\n      });\n    return { ...this.values, authenticators };\n  }\n\n}\n","import { Authenticator, Credentials } from './Authenticator';\n\nexport interface VerificationCodeValues {\n  verificationCode?: string;\n  otp?: string;\n  credentials?: Credentials;\n}\n\ninterface VerificationCodeCredentials extends Credentials {\n  passcode: string;\n}\n\n// general authenticator to handle \"verificationCode\" input\n// it can be used for \"email\", \"phone\", \"google authenticator\"\n// a new authenticator class should be created if special cases need to be handled\nexport class VerificationCodeAuthenticator extends Authenticator<VerificationCodeValues> {\n  canVerify(values: VerificationCodeValues) {\n    return !!(values.credentials ||values.verificationCode || values.otp);\n  }\n\n  mapCredentials(values): VerificationCodeCredentials | Credentials | undefined {\n    const { credentials, verificationCode, otp } = values;\n    if (!credentials && !verificationCode && !otp) {\n      return;\n    }\n    return credentials || { passcode: verificationCode || otp };\n  }\n\n  getInputs(idxRemediationValue) {\n    return {\n      ...idxRemediationValue.form?.value[0],\n      name: 'verificationCode',\n      type: 'string',\n      required: idxRemediationValue.required\n    };\n  }\n}\n","import { Credentials } from './Authenticator';\nimport { VerificationCodeAuthenticator } from './VerificationCodeAuthenticator';\n\ninterface TotpCredentials extends Credentials {\n  totp: string;\n}\n\nexport class OktaVerifyTotp extends VerificationCodeAuthenticator {\n  mapCredentials(values): TotpCredentials | undefined {\n    const { verificationCode } = values;\n    if (!verificationCode) {\n      return;\n    }\n    return { totp: verificationCode };\n  }\n}\n","import { Authenticator, Credentials } from './Authenticator';\n\nexport interface SecurityQuestionEnrollValues {\n  questionKey?: string;\n  question?: string;\n  answer?: string;\n  credentials?: Credentials;\n}\n\nexport class SecurityQuestionEnrollment extends Authenticator<SecurityQuestionEnrollValues> {\n  canVerify(values: SecurityQuestionEnrollValues) {\n    const { credentials } = values;\n    if (credentials && credentials.questionKey && credentials.answer) {\n      return true;\n    }\n    const { questionKey, question, answer } = values;\n    return !!(questionKey && answer) || !!(question && answer);\n  }\n\n  mapCredentials(values: SecurityQuestionEnrollValues): Credentials | undefined {\n    const { questionKey, question, answer } = values;\n    if (!answer || (!questionKey && !question)) {\n      return;\n    }\n    return {\n      questionKey: question ? 'custom' : questionKey,\n      question,\n      answer\n    };\n  }\n\n  getInputs() {\n    return [\n      { name: 'questionKey', type: 'string', required: true },\n      { name: 'question', type: 'string', label: 'Create a security question' },\n      { name: 'answer', type: 'string', label: 'Answer', required: true },\n    ];\n  }\n}\n","/* eslint-disable @typescript-eslint/no-non-null-assertion */\nimport { Authenticator, Credentials } from './Authenticator';\n\nexport interface SecurityQuestionVerificationValues {\n  answer?: string;\n  credentials?: Credentials;\n}\n\nexport class SecurityQuestionVerification extends Authenticator<SecurityQuestionVerificationValues> {\n  canVerify(values: SecurityQuestionVerificationValues) {\n    const { credentials } = values;\n    if (credentials && credentials.answer) {\n      return true;\n    }\n    const { answer } = values;\n    return !!answer;\n  }\n\n  mapCredentials(values: SecurityQuestionVerificationValues): Credentials | undefined {\n    const { answer } = values;\n    if (!answer) {\n      return;\n    }\n    return {\n      questionKey: this.meta.contextualData!.enrolledQuestion!.questionKey,\n      answer\n    };\n  }\n\n  getInputs() {\n    return [\n      { name: 'answer', type: 'string', label: 'Answer', required: true }\n    ];\n  }\n}\n","import { Authenticator, Credentials } from './Authenticator';\n\nexport interface WebauthnEnrollValues {\n  clientData?: string;\n  attestation?: string;\n  credentials?: Credentials;\n}\n\nexport class WebauthnEnrollment extends Authenticator<WebauthnEnrollValues> {\n  canVerify(values: WebauthnEnrollValues) {\n    const { credentials } = values;\n    const obj = credentials || values;\n    const { clientData, attestation } = obj;\n    return !!(clientData && attestation);\n  }\n\n  mapCredentials(values: WebauthnEnrollValues): Credentials | undefined {\n    const { credentials, clientData, attestation } = values;\n    if (!credentials && !clientData && !attestation) {\n      return;\n    }\n    return credentials || ({\n      clientData,\n      attestation\n    });\n  }\n\n  getInputs() {\n    return [\n      { name: 'clientData', type: 'string', required: true, visible: false, label: 'Client Data' },\n      { name: 'attestation', type: 'string', required: true, visible: false, label: 'Attestation' },\n    ];\n  }\n}\n","import { Authenticator, Credentials } from './Authenticator';\n\nexport interface WebauthnVerificationValues {\n  clientData?: string;\n  authenticatorData?: string;\n  signatureData?: string;\n  credentials?: Credentials;\n}\n\nexport class WebauthnVerification extends Authenticator<WebauthnVerificationValues> {\n  canVerify(values: WebauthnVerificationValues) {\n    const { credentials } = values;\n    const obj = credentials || values;\n    const { clientData, authenticatorData, signatureData } = obj;\n    return !!(clientData && authenticatorData && signatureData);\n  }\n\n  mapCredentials(values: WebauthnVerificationValues): Credentials | undefined {\n    const { credentials, authenticatorData, clientData, signatureData } = values;\n    if (!credentials && !authenticatorData && !clientData && !signatureData) {\n      return;\n    }\n    return credentials || ({\n      authenticatorData,\n      clientData,\n      signatureData\n    });\n  }\n\n  getInputs() {\n    return [\n      { name: 'authenticatorData', type: 'string', label: 'Authenticator Data', required: true, visible: false },\n      { name: 'clientData', type: 'string', label: 'Client Data', required: true, visible: false },\n      { name: 'signatureData', type: 'string', label: 'Signature Data', required: true, visible: false },\n    ];\n  }\n}\n","/*!\n * Copyright (c) 2015-present, Okta, Inc. and/or its affiliates. All rights reserved.\n * The Okta software accompanied by this notice is provided pursuant to the Apache License, Version 2.0 (the \"License.\")\n *\n * You may obtain a copy of the License at http://www.apache.org/licenses/LICENSE-2.0.\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT\n * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * \n * See the License for the specific language governing permissions and limitations under the License.\n */\n\n\nimport { Remediator, RemediationValues } from './Remediator';\nimport { getAuthenticator, Authenticator, AuthenticatorValues } from '../../authenticator';\nimport { IdxRemediation, IdxContext } from '../../types/idx-js';\nimport { OktaAuthIdxInterface, NextStep } from '../../types';\n\nexport type VerifyAuthenticatorValues = AuthenticatorValues & RemediationValues;\n\n// Base class - DO NOT expose static remediationName\nexport class VerifyAuthenticator<T extends VerifyAuthenticatorValues = VerifyAuthenticatorValues>\n  extends Remediator<T> {\n\n  authenticator: Authenticator<VerifyAuthenticatorValues>;\n\n  constructor(remediation: IdxRemediation, values: T = {} as T) {\n    super(remediation, values);\n    this.authenticator = getAuthenticator(remediation);\n  }\n\n  getNextStep(authClient: OktaAuthIdxInterface, context?: IdxContext): NextStep {\n    const nextStep = super.getNextStep(authClient, context);\n    const authenticatorEnrollments = context?.authenticatorEnrollments?.value;\n\n    return {\n      ...nextStep,\n      authenticatorEnrollments\n    };\n  }\n\n  canRemediate() {\n    return this.authenticator.canVerify(this.values);\n  }\n\n  mapCredentials() {\n    return this.authenticator.mapCredentials(this.values);\n  }\n\n  getInputCredentials(input) {\n    return this.authenticator.getInputs(input);\n  }\n\n  getValuesAfterProceed(): T {\n    this.values = super.getValuesAfterProceed();\n    let trimmedValues = Object.keys(this.values).filter(valueKey => valueKey !== 'credentials');\n    return trimmedValues.reduce((values, valueKey) => ({...values, [valueKey]: this.values[valueKey]}), {} as T);\n  }\n}\n","import { OktaVerifyTotp } from './OktaVerifyTotp';\nimport { Authenticator } from './Authenticator';\nimport { VerificationCodeAuthenticator } from './VerificationCodeAuthenticator';\nimport { OktaPassword } from './OktaPassword';\nimport { SecurityQuestionEnrollment } from './SecurityQuestionEnrollment';\nimport { SecurityQuestionVerification } from './SecurityQuestionVerification';\nimport { WebauthnEnrollment } from './WebauthnEnrollment';\nimport { WebauthnVerification } from './WebauthnVerification';\nimport { IdxAuthenticator, IdxRemediation } from '../types/idx-js';\nimport { AuthenticatorKey } from '../types';\n\n/* eslint complexity:[0,8] */\nexport function getAuthenticator(remediation: IdxRemediation): Authenticator<any> {\n  const relatesTo = remediation.relatesTo;\n  const value = relatesTo?.value || {} as IdxAuthenticator;\n  switch (value.key) {\n    case AuthenticatorKey.OKTA_PASSWORD:\n      return new OktaPassword(value);\n    case AuthenticatorKey.SECURITY_QUESTION:\n      if (value.contextualData?.enrolledQuestion) {\n        return new SecurityQuestionVerification(value);\n      } else {\n        return new SecurityQuestionEnrollment(value);\n      }\n    case AuthenticatorKey.OKTA_VERIFY:\n      return new OktaVerifyTotp(value);\n    case AuthenticatorKey.WEBAUTHN:\n      if (value.contextualData?.challengeData) {\n        return new WebauthnVerification(value);\n      } else {\n        return new WebauthnEnrollment(value);\n      }\n    default:\n      return new VerificationCodeAuthenticator(value);\n  }\n}\n","/*!\n * Copyright (c) 2015-present, Okta, Inc. and/or its affiliates. All rights reserved.\n * The Okta software accompanied by this notice is provided pursuant to the Apache License, Version 2.0 (the \"License.\")\n *\n * You may obtain a copy of the License at http://www.apache.org/licenses/LICENSE-2.0.\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT\n * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * \n * See the License for the specific language governing permissions and limitations under the License.\n */\n\nimport { VerifyAuthenticator, VerifyAuthenticatorValues } from './Base/VerifyAuthenticator';\n\nexport type ChallengeAuthenticatorValues = VerifyAuthenticatorValues;\n\nexport class ChallengeAuthenticator extends VerifyAuthenticator<ChallengeAuthenticatorValues> {\n  static remediationName = 'challenge-authenticator';\n}\n","/*!\n * Copyright (c) 2015-present, Okta, Inc. and/or its affiliates. All rights reserved.\n * The Okta software accompanied by this notice is provided pursuant to the Apache License, Version 2.0 (the \"License.\")\n *\n * You may obtain a copy of the License at http://www.apache.org/licenses/LICENSE-2.0.\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT\n * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * \n * See the License for the specific language governing permissions and limitations under the License.\n */\n\nimport { EnrollPoll } from './EnrollPoll';\n\nexport class ChallengePoll extends EnrollPoll{\n  static remediationName = 'challenge-poll';\n\n  canRemediate() {\n    return !!this.values.startPolling || this.options.step === 'challenge-poll';\n  }\n}\n","/*!\n * Copyright (c) 2015-present, Okta, Inc. and/or its affiliates. All rights reserved.\n * The Okta software accompanied by this notice is provided pursuant to the Apache License, Version 2.0 (the \"License.\")\n *\n * You may obtain a copy of the License at http://www.apache.org/licenses/LICENSE-2.0.\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT\n * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * \n * See the License for the specific language governing permissions and limitations under the License.\n */\n\n\nimport { VerifyAuthenticator, VerifyAuthenticatorValues } from './Base/VerifyAuthenticator';\n\nexport type EnrollAuthenticatorValues = VerifyAuthenticatorValues;\n\nexport class EnrollAuthenticator extends VerifyAuthenticator<EnrollAuthenticatorValues> {\n  static remediationName = 'enroll-authenticator';\n}\n","/*!\n * Copyright (c) 2015-present, Okta, Inc. and/or its affiliates. All rights reserved.\n * The Okta software accompanied by this notice is provided pursuant to the Apache License, Version 2.0 (the \"License.\")\n *\n * You may obtain a copy of the License at http://www.apache.org/licenses/LICENSE-2.0.\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT\n * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * \n * See the License for the specific language governing permissions and limitations under the License.\n */\n\n\nimport { Remediator, RemediationValues } from './Base/Remediator';\nimport { NextStep, OktaAuthIdxInterface } from '../types';\nimport { IdxContext } from '../types/idx-js';\n\nexport interface EnrollPollValues extends RemediationValues {\n  startPolling?: boolean;\n}\n\nexport class EnrollPoll extends Remediator<EnrollPollValues> {\n  static remediationName = 'enroll-poll';\n\n  canRemediate() {\n    return !!this.values.startPolling || this.options.step === 'enroll-poll';\n  }\n\n  getNextStep(authClient: OktaAuthIdxInterface, context?: IdxContext): NextStep {\n    const common = super.getNextStep(authClient, context);\n    let authenticator = this.getAuthenticator();\n    if (!authenticator && context?.currentAuthenticator) {\n      authenticator = context.currentAuthenticator.value;\n    }\n    return {\n      ...common,\n      authenticator,\n      poll: {\n        required: true,\n        refresh: this.remediation.refresh\n      },\n    };\n  }\n\n  getValuesAfterProceed(): EnrollPollValues {\n    let trimmedValues = Object.keys(this.values).filter(valueKey => valueKey !== 'startPolling');\n    return trimmedValues.reduce((values, valueKey) => ({...values, [valueKey]: this.values[valueKey]}), {});\n  }\n}\n","/* eslint-disable @typescript-eslint/no-non-null-assertion */\n/*!\n * Copyright (c) 2015-present, Okta, Inc. and/or its affiliates. All rights reserved.\n * The Okta software accompanied by this notice is provided pursuant to the Apache License, Version 2.0 (the \"License.\")\n *\n * You may obtain a copy of the License at http://www.apache.org/licenses/LICENSE-2.0.\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT\n * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * \n * See the License for the specific language governing permissions and limitations under the License.\n */\n\n\nimport { IdxRemediation, IdxRemediationValue, IdxAuthenticator } from '../types/idx-js';\nimport { RemediateOptions } from '../types';\nimport { Remediator, RemediationValues } from './Base/Remediator';\nimport { Authenticator, Credentials, OktaPassword } from '../authenticator';\n\nexport interface EnrollProfileValues extends RemediationValues {\n  firstName?: string;\n  lastName?: string;\n  email?: string;\n  credentials?: Credentials;\n  password?: string;\n  passcode?: string;\n}\n\nexport class EnrollProfile extends Remediator<EnrollProfileValues> {\n  static remediationName = 'enroll-profile';\n\n  authenticator: Authenticator<any> | null = null;\n\n  constructor(\n    remediation: IdxRemediation,\n    values: EnrollProfileValues = {},\n    options: RemediateOptions = {}\n  ) {\n    super(remediation, values, options);\n\n    // credentials are only required when Profile Enrollment policy requires them\n    // if credentials are included in the remediation, they are considered required\n    // otherwise it will be omitted\n    const credentials = this.getCredentialsFromRemediation();\n    if (credentials) {\n      this.authenticator = this.authenticator = new OktaPassword({} as IdxAuthenticator);\n    }\n  }\n\n  canRemediate() {\n    // ensure credentials can be verified, if required\n    if (this.authenticator && !this.authenticator.canVerify(this.values)) {\n      return false;\n    }\n\n    const userProfileFromValues = this.getData().userProfile;\n    if (!userProfileFromValues) {\n      return false;\n    }\n    // eslint-disable-next-line max-len\n    const userProfileFromRemediation = this.remediation.value!.find(({ name }) => name === 'userProfile') as IdxRemediationValue;\n    return userProfileFromRemediation.form!.value.reduce((canRemediate, curr) => {\n      if (curr.required) {\n        canRemediate = canRemediate && !!userProfileFromValues[curr.name];\n      }\n      return canRemediate;\n    }, true);\n  }\n\n  getCredentialsFromRemediation () {\n    return this.remediation.value!.find(({ name }) => name === 'credentials');\n  }\n\n  mapUserProfile({form: { value: profileAttributes }}) {\n    const attributeNames = profileAttributes.map(({name}) => name);\n    const data = attributeNames.reduce((attributeValues, attributeName) => (\n      this.values[attributeName] ? {\n      ...attributeValues,\n      [attributeName]: this.values[attributeName]\n    } : attributeValues), {});\n    if (Object.keys(data).length === 0) {\n      return;\n    }\n    return data;\n  }\n\n  mapCredentials() {\n    const val = this.authenticator && this.authenticator.mapCredentials(this.values);\n    if (!val) {\n      return;\n    }\n    return val;\n  }\n\n  getInputUserProfile(input) {\n    return [...input.form.value];\n  }\n\n  getInputCredentials(input) {\n    return [...input.form.value];\n  }\n\n  getErrorMessages(errorRemediation) {\n    return errorRemediation.value[0].form.value.reduce((errors, field) => {\n      if (field.messages) {\n        errors.push(field.messages.value[0].message);\n      }\n      return errors;\n    }, []);\n  }\n}","/*!\n * Copyright (c) 2021-present, Okta, Inc. and/or its affiliates. All rights reserved.\n * The Okta software accompanied by this notice is provided pursuant to the Apache License, Version 2.0 (the \"License.\")\n *\n * You may obtain a copy of the License at http://www.apache.org/licenses/LICENSE-2.0.\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT\n * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * \n * See the License for the specific language governing permissions and limitations under the License.\n */\n\n\nimport { Remediator, RemediationValues } from './Base/Remediator';\nimport { IdxContext } from '../types/idx-js';\nimport { OktaAuthIdxInterface } from '../types';\n\n\nexport type EnrollmentChannelDataValues = RemediationValues & {\n  email?: string;\n  phoneNumber?: string;\n};\n\nexport class EnrollmentChannelData extends Remediator<EnrollmentChannelDataValues> {\n  static remediationName = 'enrollment-channel-data';\n\n  getInputEmail() {\n    return [\n      { name: 'email', type: 'string', required: true, label: 'Email' },\n    ];\n  }\n\n  getInputPhoneNumber() {\n    return [\n      { name: 'phoneNumber', type: 'string', required: true, label: 'Phone Number' },\n    ];\n  }\n\n  canRemediate() {\n    return Boolean(this.values.email || this.values.phoneNumber);\n  }\n\n  getNextStep(authClient: OktaAuthIdxInterface, context: IdxContext) {\n    const common = super.getNextStep(authClient, context);\n    const authenticator = context.currentAuthenticator.value;\n    return {\n      ...common,\n      authenticator,\n    };\n  }\n\n  getData() {\n    return {\n      stateHandle: this.values.stateHandle,\n      email: this.values.email,\n      phoneNumber: this.values.phoneNumber\n    };\n  }\n\n  getValuesAfterProceed(): EnrollmentChannelDataValues {\n    let trimmedValues = Object.keys(this.values).filter(valueKey => !['email', 'phoneNumber'].includes(valueKey));\n    return trimmedValues.reduce((values, valueKey) => ({...values, [valueKey]: this.values[valueKey]}), {});\n  }\n}\n","/* eslint-disable complexity */\nimport { AuthSdkError } from '../../../errors';\nimport { Input } from '../../types';\n\nexport function unwrapFormValue(remediation): Input { \n  if (Array.isArray(remediation)) {\n    return remediation\n      .map(item => {\n        if (typeof item === 'string' || typeof item === 'number' || typeof item === 'boolean') {\n          return item;\n        }\n        return unwrapFormValue(item);\n      }) as any;\n  }\n\n  const res = {};\n  for (const [key, value] of Object.entries(remediation)) {\n    if (value === null || typeof value === 'undefined') {\n      continue;\n    }\n\n    if (typeof value === 'object') {\n      const formKeys = Object.keys(value as object);\n      // detect patterns like:\n      // value -> form -> value | form -> value\n      if (['value', 'form'].includes(key) \n        && formKeys.length === 1 \n        && ['value', 'form'].includes(formKeys[0])\n      ) {\n        // unwrap nested form\n        const unwrappedForm = unwrapFormValue(value);\n        Object.entries(unwrappedForm).forEach(([key, value]) => {\n          res[key] = value;\n        });\n      } else {\n        // dfs\n        res[key] = unwrapFormValue(value);\n      }\n    } else {\n      // handle primitive value\n      res[key] = value;\n    }\n  }\n\n  return res as Input;\n}\n\n// only check if value is required for now\n// TODO: support SDK layer type based input validation\nexport function hasValidInputValue(input, values) {\n  const fn = (input, values, requiredTracker) => {\n    const { name, value, type, options, required } = input;\n    const isRequired = required || requiredTracker;\n\n    // handle nested value - all required fields should be avaiable in values \n    if (Array.isArray(value)) {\n      return value.reduce((acc, item) => {\n        return acc && fn(item, values[name], isRequired); // recursive call\n      }, true);\n    }\n\n    // handle options field\n    // 1. object type options - check if each object field is required and value can be found from the selectedOption\n    // 2. primitive options - required field is avaiable from top level\n    // 3. unknown format - pass to backend for validation\n    if (options) {\n      // object type options\n      if (type === 'object') {\n        const selectedOption = values[name];\n        if (!selectedOption) {\n          return false;\n        }\n        if (!selectedOption.id) {\n          // unknown option format, pass to backend for validation\n          return true;\n        }\n        const optionSchema = options.find((option) => {\n          const idSchema = option.value.find(({ name }) => name === 'id' );\n          return idSchema.value === selectedOption.id;\n        });\n        if (!optionSchema) {\n          return false;\n        }\n        return optionSchema.value\n          .filter(({ required }) => !!required)\n          .reduce((acc, { name }) => {\n            return acc && !!selectedOption[name];\n          }, true);\n      }\n\n      // primitive options, not required - always valid\n      if (required === false) {\n        return true;\n      }\n\n      // primitive options, required - check if value is available\n      if (required === true) {\n        return !!values[name];\n      }\n\n      // unknown options, throw\n      throw new AuthSdkError(`Unknown options type, ${JSON.stringify(input)}`);\n    }\n\n    // base case\n    if (!isRequired) {\n      return true;\n    }\n      \n    return !!(values && values[name]);\n  };\n\n  return fn(input, values, false);\n}\n","import { OktaAuthIdxInterface, IdxContext, NextStep, Input } from '../../types';\nimport { Remediator } from '../Base/Remediator';\nimport { unwrapFormValue } from './util';\n\nexport class GenericRemediator extends Remediator {\n  canRemediate(): boolean {\n    // only handle remediations that are able to submit form (xhr)\n    if (typeof this.remediation.action !== 'function') {\n      return false;\n    }\n\n    // DO NOT REMOVE - bring it back when enable client side validation for GenericRemediator - OKTA-512003\n    // const inputs = this.getInputs();\n    // const res = inputs.reduce((acc, input) => {\n    //   return acc && hasValidInputValue(input, this.values);\n    // }, true);\n    // return res;\n\n    if (this.remediation.name === 'poll' || this.remediation.name.endsWith('-poll')) {\n      return true;\n    }\n\n    if (this.options.step) {\n      return true;\n    }\n    \n    // disable auto proceed for unknown remediations\n    return false;\n  }\n\n  getData() {\n    const data = this.getInputs().reduce((acc, { name }) => {\n      acc[name] = this.values[name];\n      return acc;\n    }, {});\n    return data;\n  }\n\n  getNextStep(authClient: OktaAuthIdxInterface, _context?: IdxContext): NextStep {\n    const name = this.getName();\n    const inputs = this.getInputs();\n    \n    /* eslint-disable no-unused-vars, @typescript-eslint/no-unused-vars */\n    // excludes transformed fields\n    const { \n      // http metas have been transformed to action\n      href, \n      method, \n      rel, \n      accepts, \n      produces, \n      // value has been transform to inputs\n      value,\n      // will be transformed to a function that resolves IdxTransaction\n      action,\n      ...rest \n    } = this.remediation;\n    /* eslint-enable no-unused-vars, @typescript-eslint/no-unused-vars */\n\n    // step to handle form submission\n    if (action) {\n      return { \n        ...rest,\n        ...(!!inputs.length && { inputs }),\n        action: async (params?) => {\n          return authClient.idx.proceed({\n            step: name,\n            ...params\n          });\n        }\n      };\n    }\n\n    // return whole remediation data for other steps, eg \"redirect-idp\"\n    return { ...this.remediation } as NextStep;\n    \n  }\n\n  getInputs(): Input[] {\n    return (this.remediation.value || [])\n      .filter(({ name }) => name !== 'stateHandle')\n      .map(unwrapFormValue)\n      .map(input => {\n        // use string as default input type\n        input.type = input.type || 'string';\n        return input;\n      });\n  }\n\n}\n","/*!\n * Copyright (c) 2015-present, Okta, Inc. and/or its affiliates. All rights reserved.\n * The Okta software accompanied by this notice is provided pursuant to the Apache License, Version 2.0 (the \"License.\")\n *\n * You may obtain a copy of the License at http://www.apache.org/licenses/LICENSE-2.0.\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT\n * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * \n * See the License for the specific language governing permissions and limitations under the License.\n */\n\n\nimport { Credentials } from '../authenticator';\nimport { Remediator, RemediationValues } from './Base/Remediator';\n\nexport interface IdentifyValues extends RemediationValues {\n  username?: string;\n  password?: string;\n  credentials?: Credentials;\n  rememberMe?: boolean;\n}\n\nexport class Identify extends Remediator<IdentifyValues> {\n  static remediationName = 'identify';\n\n  map = {\n    'identifier': ['username']\n  };\n\n  canRemediate(): boolean {\n    const { identifier } = this.getData();\n    return !!identifier;\n  }\n\n  mapCredentials() {\n    const { credentials, password } = this.values;\n    if (!credentials && !password) {\n      return;\n    }\n    return credentials || { passcode: password };\n  }\n\n  getInputCredentials(input) {\n    return {\n      ...input.form.value[0],\n      name: 'password',\n      required: input.required\n    };\n  }\n\n}\n","/*!\n * Copyright (c) 2015-present, Okta, Inc. and/or its affiliates. All rights reserved.\n * The Okta software accompanied by this notice is provided pursuant to the Apache License, Version 2.0 (the \"License.\")\n *\n * You may obtain a copy of the License at http://www.apache.org/licenses/LICENSE-2.0.\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT\n * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * \n * See the License for the specific language governing permissions and limitations under the License.\n */\n\n\nimport { Remediator, RemediationValues } from './Base/Remediator';\n\nexport interface ReEnrollAuthenticatorValues extends RemediationValues {\n  newPassword?: string;\n}\n\nexport class ReEnrollAuthenticator extends Remediator<ReEnrollAuthenticatorValues> {\n  static remediationName = 'reenroll-authenticator';\n\n  mapCredentials() {\n    const { newPassword } = this.values;\n    if (!newPassword) {\n      return;\n    }\n    return { \n      passcode: newPassword,\n    };\n  }\n\n  getInputCredentials(input) {\n    // eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n    const challengeType = this.getAuthenticator()!.type;\n    const name = challengeType === 'password' ? 'newPassword' : 'verificationCode';\n    return {\n      ...input.form.value[0],\n      name\n    };\n  }\n\n}\n","/*!\n * Copyright (c) 2015-present, Okta, Inc. and/or its affiliates. All rights reserved.\n * The Okta software accompanied by this notice is provided pursuant to the Apache License, Version 2.0 (the \"License.\")\n *\n * You may obtain a copy of the License at http://www.apache.org/licenses/LICENSE-2.0.\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT\n * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * \n * See the License for the specific language governing permissions and limitations under the License.\n */\n\n\nimport { ReEnrollAuthenticator } from './ReEnrollAuthenticator';\n\nexport class ReEnrollAuthenticatorWarning extends ReEnrollAuthenticator {\n  static remediationName = 'reenroll-authenticator-warning';\n}\n","/*!\n * Copyright (c) 2015-present, Okta, Inc. and/or its affiliates. All rights reserved.\n * The Okta software accompanied by this notice is provided pursuant to the Apache License, Version 2.0 (the \"License.\")\n *\n * You may obtain a copy of the License at http://www.apache.org/licenses/LICENSE-2.0.\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT\n * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * \n * See the License for the specific language governing permissions and limitations under the License.\n */\n\n\nimport { Remediator } from './Base/Remediator';\n\nexport class RedirectIdp extends Remediator {\n  static remediationName = 'redirect-idp';\n\n  canRemediate() {\n    return false;\n  }\n\n  getNextStep() {\n    const { name, type, idp, href } = this.remediation;\n    return {\n      name,\n      type,\n      idp,\n      href\n    };\n  }\n\n}\n","/*!\n * Copyright (c) 2015-present, Okta, Inc. and/or its affiliates. All rights reserved.\n * The Okta software accompanied by this notice is provided pursuant to the Apache License, Version 2.0 (the \"License.\")\n *\n * You may obtain a copy of the License at http://www.apache.org/licenses/LICENSE-2.0.\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT\n * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * \n * See the License for the specific language governing permissions and limitations under the License.\n */\n\n\nimport { VerifyAuthenticator, VerifyAuthenticatorValues } from './Base/VerifyAuthenticator';\n\nexport type ResetAuthenticatorValues = VerifyAuthenticatorValues;\n\nexport class ResetAuthenticator extends VerifyAuthenticator<ResetAuthenticatorValues> {\n  static remediationName = 'reset-authenticator';\n}\n","/*!\n * Copyright (c) 2015-present, Okta, Inc. and/or its affiliates. All rights reserved.\n * The Okta software accompanied by this notice is provided pursuant to the Apache License, Version 2.0 (the \"License.\")\n *\n * You may obtain a copy of the License at http://www.apache.org/licenses/LICENSE-2.0.\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT\n * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * \n * See the License for the specific language governing permissions and limitations under the License.\n */\n\n\nimport { SelectAuthenticator, SelectAuthenticatorValues } from './Base/SelectAuthenticator';\nimport { getAuthenticatorFromRemediation } from './util';\nimport { IdxRemediation } from '../types/idx-js';\nimport { AuthenticatorKey, Authenticator, RemediateOptions } from '../types';\n\nexport type SelectAuthenticatorAuthenticateValues = SelectAuthenticatorValues & {\n  password?: string;\n};\n\nexport class SelectAuthenticatorAuthenticate extends SelectAuthenticator<SelectAuthenticatorAuthenticateValues> {\n  static remediationName = 'select-authenticator-authenticate';\n\n  constructor(\n    remediation: IdxRemediation, \n    values: SelectAuthenticatorValues = {}, \n    options: RemediateOptions = {}\n  ) {\n    super(remediation, values, options);\n\n    // Preset password authenticator to trigger recover action\n    const isRecoveryFlow = this.options.flow === 'recoverPassword';\n    const hasPasswordInOptions = getAuthenticatorFromRemediation(remediation)\n      .options?.some(({ relatesTo }) => relatesTo?.key === AuthenticatorKey.OKTA_PASSWORD);\n    if (hasPasswordInOptions && (isRecoveryFlow || this.values.password)) {\n      this.values.authenticators = [\n        ...this.values.authenticators || [],\n        { key: AuthenticatorKey.OKTA_PASSWORD }\n      ] as Authenticator[];\n    }\n  }\n}\n","/*!\n * Copyright (c) 2015-present, Okta, Inc. and/or its affiliates. All rights reserved.\n * The Okta software accompanied by this notice is provided pursuant to the Apache License, Version 2.0 (the \"License.\")\n *\n * You may obtain a copy of the License at http://www.apache.org/licenses/LICENSE-2.0.\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT\n * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * \n * See the License for the specific language governing permissions and limitations under the License.\n */\n\n\nimport { SelectAuthenticator, SelectAuthenticatorValues } from './Base/SelectAuthenticator';\n\nexport type SelectAuthenticatorEnrollValues = SelectAuthenticatorValues;\n\nexport class SelectAuthenticatorEnroll extends SelectAuthenticator<SelectAuthenticatorEnrollValues> {\n  static remediationName = 'select-authenticator-enroll';\n}\n","/*!\n * Copyright (c) 2015-present, Okta, Inc. and/or its affiliates. All rights reserved.\n * The Okta software accompanied by this notice is provided pursuant to the Apache License, Version 2.0 (the \"License.\")\n *\n * You may obtain a copy of the License at http://www.apache.org/licenses/LICENSE-2.0.\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT\n * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * \n * See the License for the specific language governing permissions and limitations under the License.\n */\n\n\nimport { SelectAuthenticator, SelectAuthenticatorValues } from './Base/SelectAuthenticator';\nimport { Authenticator } from '../types';\nimport { IdxRemediationValue } from '../types/idx-js';\n\n\nexport type SelectAuthenticatorUnlockAccountValues = SelectAuthenticatorValues & {\n  identifier?: string;\n  methodType?: string;\n};\n\nexport class SelectAuthenticatorUnlockAccount extends SelectAuthenticator<SelectAuthenticatorUnlockAccountValues> {\n  static remediationName = 'select-authenticator-unlock-account';\n  authenticator?: Authenticator;\n\n  map = {\n    identifier: ['username']\n  };\n\n  canRemediate() {\n    const identifier = this.getData('identifier');\n    return !!identifier && super.canRemediate();\n  }\n\n  mapAuthenticator(remediationValue: IdxRemediationValue) {\n    const authenticatorMap = super.mapAuthenticator(remediationValue);\n    const methodTypeOption = this.selectedOption?.value.form.value.find(({ name }) => name === 'methodType');\n\n    // defaults to 'manually defined' value\n    // 2nd: option may have pre-defined value, like stateHandle\n    // 3rd: if only a single OV option is available, default to that option\n    const methodTypeValue = this.values.methodType ||\n      methodTypeOption?.value as string || methodTypeOption?.options?.[0]?.value as string;\n\n    if (methodTypeValue) {\n      return {\n        ...authenticatorMap,\n        methodType: methodTypeValue\n      };\n    }\n\n    return authenticatorMap;\n  }\n\n  getInputUsername () {\n    return { name: 'username', type: 'string' };\n  }\n\n}\n","/*!\n * Copyright (c) 2015-present, Okta, Inc. and/or its affiliates. All rights reserved.\n * The Okta software accompanied by this notice is provided pursuant to the Apache License, Version 2.0 (the \"License.\")\n *\n * You may obtain a copy of the License at http://www.apache.org/licenses/LICENSE-2.0.\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT\n * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * \n * See the License for the specific language governing permissions and limitations under the License.\n */\n\n\nimport { Remediator, RemediationValues } from './Base/Remediator';\n\n// eslint-disable-next-line @typescript-eslint/no-empty-interface\nexport interface SelectEnrollProfileValues extends RemediationValues {}\n\nexport class SelectEnrollProfile extends Remediator<SelectEnrollProfileValues> {\n  static remediationName = 'select-enroll-profile';\n\n  canRemediate() {\n    return true;\n  }\n}\n","/*!\n * Copyright (c) 2021-present, Okta, Inc. and/or its affiliates. All rights reserved.\n * The Okta software accompanied by this notice is provided pursuant to the Apache License, Version 2.0 (the \"License.\")\n *\n * You may obtain a copy of the License at http://www.apache.org/licenses/LICENSE-2.0.\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT\n * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * \n * See the License for the specific language governing permissions and limitations under the License.\n */\n\n\nimport { Remediator, RemediationValues } from './Base/Remediator';\nimport { IdxRemediationValueForm, IdxContext } from '../types/idx-js';\nimport { Authenticator, OktaAuthIdxInterface } from '../types/api';\n\n\nexport type SelectEnrollmentChannelValues = RemediationValues & {\n  channel?: string;\n};\n\nexport class SelectEnrollmentChannel extends Remediator<SelectEnrollmentChannelValues> {\n  static remediationName = 'select-enrollment-channel';\n\n  canRemediate() {\n    if (this.values.channel) {\n      return true;\n    }\n\n    if (this.values.authenticator) {\n      const { id, channel } = this.values.authenticator as Authenticator;\n      if (!!id && !!channel) {\n        return true;\n      }\n    }\n\n    return false;\n  }\n\n  getNextStep(authClient: OktaAuthIdxInterface, context: IdxContext) {\n    const common = super.getNextStep(authClient, context);\n    const authenticator = context.currentAuthenticator.value;\n    return {\n      ...common,\n      authenticator,\n    };\n  }\n\n  getData() {\n    // eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n    const remediationValue = this.remediation!.value![0].value as IdxRemediationValueForm;\n    return {\n      authenticator: {\n        id: remediationValue.form.value[0].value,\n        channel: (this.values.authenticator as Authenticator)?.channel || this.values.channel,\n      },\n      stateHandle: this.values.stateHandle,\n\n    };\n  }\n\n  getValuesAfterProceed(): SelectEnrollmentChannelValues {\n    this.values = super.getValuesAfterProceed();\n    delete this.values.authenticators;    // required to prevent infinite loops from auto-remediating via values\n    const filterKey = this.values.channel ? 'channel' : 'authenticator';\n    let trimmedValues = Object.keys(this.values).filter(valueKey => valueKey !== filterKey);\n    return trimmedValues.reduce((values, valueKey) => ({...values, [valueKey]: this.values[valueKey]}), {});\n  }\n}\n","/*!\n * Copyright (c) 2015-present, Okta, Inc. and/or its affiliates. All rights reserved.\n * The Okta software accompanied by this notice is provided pursuant to the Apache License, Version 2.0 (the \"License.\")\n *\n * You may obtain a copy of the License at http://www.apache.org/licenses/LICENSE-2.0.\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT\n * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * \n * See the License for the specific language governing permissions and limitations under the License.\n */\n\n\nimport { Remediator, RemediationValues } from './Base/Remediator';\n\nexport interface SkipValues extends RemediationValues {\n  skip?: boolean;\n}\n\nexport class Skip extends Remediator<SkipValues> {\n  static remediationName = 'skip';\n\n  canRemediate() {\n    return !!this.values.skip || this.options.step === 'skip';\n  }\n\n}\n","/*!\n * Copyright (c) 2015-present, Okta, Inc. and/or its affiliates. All rights reserved.\n * The Okta software accompanied by this notice is provided pursuant to the Apache License, Version 2.0 (the \"License.\")\n *\n * You may obtain a copy of the License at http://www.apache.org/licenses/LICENSE-2.0.\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT\n * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * \n * See the License for the specific language governing permissions and limitations under the License.\n */\n\nimport { IdxRemediation, IdxRemediationValue } from '../types/idx-js';\n\nexport function getAllValues(idxRemediation: IdxRemediation) {\n  return idxRemediation.value?.map(r => r.name);\n}\n\nexport function getRequiredValues(idxRemediation: IdxRemediation) {\n  return idxRemediation.value?.reduce((required, cur) => {\n    if (cur.required) {\n      required.push(cur.name as never);\n    }\n    return required;\n  }, []);\n}\n\nexport function titleCase(str: string) {\n  return str.charAt(0).toUpperCase() + str.substring(1);\n}\n\nexport function getAuthenticatorFromRemediation(\n  remediation: IdxRemediation\n): IdxRemediationValue {\n  // eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n  return remediation.value!.find(({ name }) => name === 'authenticator') as IdxRemediationValue;\n}\n","/*!\n * Copyright (c) 2015-present, Okta, Inc. and/or its affiliates. All rights reserved.\n * The Okta software accompanied by this notice is provided pursuant to the Apache License, Version 2.0 (the \"License.\")\n *\n * You may obtain a copy of the License at http://www.apache.org/licenses/LICENSE-2.0.\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT\n * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * \n * See the License for the specific language governing permissions and limitations under the License.\n */\n\n\n/* eslint-disable max-statements, max-depth, complexity */\nimport { AuthSdkError } from '../errors';\nimport { RemediationValues } from './remediators';\nimport { OktaAuthIdxInterface, RemediateOptions, RemediationResponse } from './types';\nimport { \n  IdxResponse,\n  IdxActionParams, \n} from './types/idx-js';\nimport {\n  isTerminalResponse,\n  filterValuesForRemediation,\n  getRemediator,\n  getNextStep,\n  handleFailedResponse\n} from './util';\n\nexport interface RemediateActionWithOptionalParams {\n  name: string;\n  params?: IdxActionParams;\n}\n\nexport type RemediateAction = string | RemediateActionWithOptionalParams;\n\n\nfunction getActionFromValues(values: RemediationValues, idxResponse: IdxResponse): string | undefined {\n  // Currently support resend actions only\n  return Object.keys(idxResponse.actions).find(action => !!values.resend && action.includes('-resend'));\n}\n\nfunction removeActionFromValues(values: RemediationValues): RemediationValues {\n  // Currently support resend actions only\n  return {\n    ...values,\n    resend: undefined\n  };\n}\n\nfunction removeActionFromOptions(options: RemediateOptions, actionName: string): RemediateOptions {\n  let actions = options.actions || [];\n  actions = actions.filter(entry => {\n    if (typeof entry === 'string') {\n      return entry !== actionName;\n    }\n    return entry.name !== actionName;\n  });\n\n  return { ...options, actions };\n}\n\n// This function is called recursively until it reaches success or cannot be remediated\nexport async function remediate(\n  authClient: OktaAuthIdxInterface,\n  idxResponse: IdxResponse,\n  values: RemediationValues,\n  options: RemediateOptions\n): Promise<RemediationResponse> {\n  let { neededToProceed, interactionCode } = idxResponse;\n  const { flow } = options;\n\n  // If the response contains an interaction code, there is no need to remediate\n  if (interactionCode) {\n    return { idxResponse };\n  }\n\n  const remediator = getRemediator(idxResponse, values, options);\n\n  // Try actions in idxResponse first\n  const actionFromValues = getActionFromValues(values, idxResponse);\n  const actionFromOptions = options.actions || [];\n  const actions = [\n    ...actionFromOptions,\n    ...(actionFromValues && [actionFromValues] || []),\n  ];\n  if (actions) {\n    for (let action of actions) {\n      // Action can either be specified as a string, or as an object with name and optional params\n      let params: IdxActionParams = {};\n      if (typeof action !== 'string') {\n        params = action.params || {};\n        action = action.name;\n      }\n      let valuesWithoutExecutedAction = removeActionFromValues(values);\n      let optionsWithoutExecutedAction = removeActionFromOptions(options, action);\n\n      if (typeof idxResponse.actions[action] === 'function') {\n        idxResponse = await idxResponse.actions[action](params);\n        if (idxResponse.requestDidSucceed === false) {\n          return handleFailedResponse(authClient, idxResponse, options);\n        }\n        if (action === 'cancel') {\n          return { idxResponse, canceled: true };\n        }\n        return remediate(\n          authClient, \n          idxResponse, \n          valuesWithoutExecutedAction, \n          optionsWithoutExecutedAction\n        ); // recursive call\n      }\n\n      // search for action in remediation list\n      const remediationAction = neededToProceed.find(({ name }) => name === action);\n      if (remediationAction) {\n        idxResponse = await idxResponse.proceed(action, params);\n        if (idxResponse.requestDidSucceed === false) {\n          return handleFailedResponse(authClient, idxResponse, options);\n        }\n        return remediate(authClient, idxResponse, values, optionsWithoutExecutedAction); // recursive call\n      }\n    }\n  }\n\n  // Do not attempt to remediate if response is in terminal state\n  const terminal = isTerminalResponse(idxResponse);\n  if (terminal) {\n    return { idxResponse, terminal };\n  }\n\n  if (!remediator) {\n    // With options.step, remediator is not required\n    if (options.step) {\n      values = filterValuesForRemediation(idxResponse, options.step, values); // include only requested values\n      idxResponse = await idxResponse.proceed(options.step, values);\n      if (idxResponse.requestDidSucceed === false) {\n        return handleFailedResponse(authClient, idxResponse, options);\n      }\n      return { idxResponse };\n    }\n\n    // With default flow, remediator is not required\n    if (flow === 'default') {\n      return { idxResponse };\n    }\n    throw new AuthSdkError(`\n      No remediation can match current flow, check policy settings in your org.\n      Remediations: [${neededToProceed.reduce((acc, curr) => acc ? acc + ' ,' + curr.name : curr.name, '')}]\n    `);\n  }\n\n  // Return next step to the caller\n  if (!remediator.canRemediate()) {\n    const nextStep = getNextStep(authClient, remediator, idxResponse);\n    return {\n      idxResponse,\n      nextStep,\n    };\n  }\n\n  const name = remediator.getName();\n  const data = remediator.getData();\n\n  idxResponse = await idxResponse.proceed(name, data);\n  if (idxResponse.requestDidSucceed === false) {\n    return handleFailedResponse(authClient, idxResponse, options);\n  }\n  // We may want to trim the values bag for the next remediation\n  // Let the remediator decide what the values should be (default to current values)\n  values = remediator.getValuesAfterProceed();\n  options = { ...options, step: undefined }; // do not re-use the step\n\n  // generic remediator should not auto proceed in pending status\n  // return nextStep directly\n  if (options.useGenericRemediator && !idxResponse.interactionCode && !isTerminalResponse(idxResponse)) {\n    // eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n    const gr = getRemediator(idxResponse, values, options)!;\n    const nextStep = getNextStep(authClient, gr, idxResponse);\n    return {\n      idxResponse,\n      nextStep,\n    };\n  }\n  \n  return remediate(authClient, idxResponse, values, options); // recursive call\n\n}\n","/* eslint-disable @typescript-eslint/no-non-null-assertion */\n/*!\n * Copyright (c) 2015-present, Okta, Inc. and/or its affiliates. All rights reserved.\n * The Okta software accompanied by this notice is provided pursuant to the Apache License, Version 2.0 (the \"License.\")\n *\n * You may obtain a copy of the License at http://www.apache.org/licenses/LICENSE-2.0.\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT\n * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * \n * See the License for the specific language governing permissions and limitations under the License.\n */\n\n\n/* eslint-disable max-statements, complexity, max-depth */\nimport { interact } from './interact';\nimport { introspect } from './introspect';\nimport { remediate } from './remediate';\nimport { RemediationValues } from './remediators/Base/Remediator';\nimport { \n  OktaAuthIdxInterface,\n  IdxStatus,\n  IdxTransaction,\n  IdxFeature,\n  NextStep,\n  RunOptions,\n  IdxTransactionMeta,\n} from './types';\nimport { IdxMessage, IdxResponse } from './types/idx-js';\nimport { getSavedTransactionMeta, saveTransactionMeta } from './transactionMeta';\nimport {\n  getAvailableSteps,\n  getEnabledFeatures,\n  getMessagesFromResponse,\n  isTerminalResponse,\n  getFlowSpecification\n} from './util';\nimport { Tokens } from '../oidc/types';\nimport { APIError } from '../errors/types';\ndeclare interface RunData {\n  options: RunOptions;\n  values: RemediationValues;\n  status?: IdxStatus;\n  tokens?: Tokens;\n  nextStep?: NextStep;\n  messages?: IdxMessage[];\n  error?: APIError | IdxResponse;\n  meta?: IdxTransactionMeta;\n  enabledFeatures?: IdxFeature[];\n  availableSteps?: NextStep[];\n  idxResponse?: IdxResponse;\n  canceled?: boolean;\n  interactionCode?: string;\n  shouldSaveResponse?: boolean;\n  shouldClearTransaction?: boolean;\n  clearSharedStorage?: boolean;\n  terminal?: boolean;\n}\n\nfunction initializeValues(options: RunOptions) {\n  // remove known options, everything else is assumed to be a value\n  const knownOptions = [\n    'flow', \n    'remediators', \n    'actions', \n    'withCredentials', \n    'step',\n    'useGenericRemediator',\n    'exchangeCodeForTokens',\n  ];\n  const values = { ...options };\n  knownOptions.forEach(option => {\n    delete values[option];\n  });\n  return values;\n}\n\nfunction initializeData(authClient: OktaAuthIdxInterface, data: RunData): RunData {\n  let { options } = data;\n  options = {\n    ...authClient.options.idx,\n    ...options\n  };\n  let {\n    flow,\n    withCredentials,\n    remediators,\n    actions,\n  } = options;\n\n  const status = IdxStatus.PENDING;\n\n  // certain options can be set by the flow specification\n  flow = flow || authClient.idx.getFlow?.() || 'default';\n  if (flow) {\n    authClient.idx.setFlow?.(flow);\n    const flowSpec = getFlowSpecification(authClient, flow);\n    // Favor option values over flow spec\n    withCredentials = (typeof withCredentials !== 'undefined') ? withCredentials : flowSpec.withCredentials;\n    remediators = remediators || flowSpec.remediators;\n    actions = actions || flowSpec.actions;\n  }\n\n  return { \n    ...data,\n    options: { \n      ...options, \n      flow, \n      withCredentials, \n      remediators, \n      actions,\n    },\n    status\n  };\n}\n\nasync function getDataFromIntrospect(authClient: OktaAuthIdxInterface, data: RunData): Promise<RunData> {\n  const { options } = data;\n  const {\n    stateHandle,\n    withCredentials,\n    version,\n    state,\n    scopes,\n    recoveryToken,\n    activationToken,\n    maxAge,\n    acrValues,\n    nonce,\n    useGenericRemediator,\n  } = options;\n\n  let idxResponse;\n  let meta = getSavedTransactionMeta(authClient, { state, recoveryToken, activationToken }); // may be undefined\n\n  if (stateHandle) {\n    idxResponse = await introspect(authClient, { withCredentials, version, stateHandle, useGenericRemediator });\n  } else {\n    let interactionHandle = meta?.interactionHandle; // may be undefined\n    if (!interactionHandle) {\n      // start a new transaction\n      authClient.transactionManager.clear();\n      const interactResponse = await interact(authClient, {\n        withCredentials,\n        state,\n        scopes,\n        activationToken,\n        recoveryToken,\n        maxAge,\n        acrValues,\n        nonce,\n      }); \n      interactionHandle = interactResponse.interactionHandle;\n      meta = interactResponse.meta;\n    }\n  \n    // Introspect to get idx response\n    idxResponse = await introspect(authClient, { withCredentials, version, interactionHandle, useGenericRemediator });\n  }\n  return { ...data, idxResponse, meta };\n}\n\nasync function getDataFromRemediate(authClient: OktaAuthIdxInterface, data: RunData): Promise<RunData> {\n  let {\n    idxResponse,\n    options,\n    values\n  } = data;\n\n  const {\n    autoRemediate,\n    remediators,\n    actions,\n    flow,\n    step,\n    useGenericRemediator,\n  } = options;\n  \n  const shouldRemediate = (autoRemediate !== false && (remediators || actions || step));\n  if (!shouldRemediate) {\n    return data;\n  }\n\n  values = { \n    ...values, \n    stateHandle: idxResponse!.rawIdxState.stateHandle \n  };\n\n  // Can we handle the remediations?\n  const { \n    idxResponse: idxResponseFromRemediation, \n    nextStep,\n    canceled,\n  } = await remediate(\n    authClient,\n    idxResponse!, \n    values, \n    {\n      remediators,\n      actions,\n      flow,\n      step,\n      useGenericRemediator,\n    }\n  );\n  idxResponse = idxResponseFromRemediation;\n\n  return { ...data, idxResponse, nextStep, canceled };\n}\n\nasync function getTokens(authClient: OktaAuthIdxInterface, data: RunData): Promise<Tokens> {\n  let { meta, idxResponse } = data;\n  const { interactionCode } = idxResponse as IdxResponse;\n  const {\n    clientId,\n    codeVerifier,\n    ignoreSignature,\n    redirectUri,\n    urls,\n    scopes,\n  } = meta as IdxTransactionMeta;\n  const tokenResponse = await authClient.token.exchangeCodeForTokens({\n    interactionCode,\n    clientId,\n    codeVerifier,\n    ignoreSignature,\n    redirectUri,\n    scopes\n  }, urls);\n  return tokenResponse.tokens;\n}\n\nasync function finalizeData(authClient: OktaAuthIdxInterface, data: RunData): Promise<RunData> {\n  let {\n    options,\n    idxResponse,\n    canceled,\n    status,\n  } = data;\n  const { exchangeCodeForTokens } = options;\n  let shouldSaveResponse = false;\n  let shouldClearTransaction = false;\n  let clearSharedStorage = true;\n  let interactionCode;\n  let tokens;\n  let enabledFeatures;\n  let availableSteps;\n  let messages;\n  let terminal;\n\n  if (idxResponse) {\n    shouldSaveResponse = !!(idxResponse.requestDidSucceed || idxResponse.stepUp);\n    enabledFeatures = getEnabledFeatures(idxResponse);\n    availableSteps = getAvailableSteps(authClient, idxResponse, options.useGenericRemediator);\n    messages = getMessagesFromResponse(idxResponse, options);\n    terminal = isTerminalResponse(idxResponse);\n  }\n\n  if (terminal) {\n    status = IdxStatus.TERMINAL;\n\n    // In most cases a terminal response should not clear transaction data. The user should cancel or skip to continue.\n    // A terminal \"success\" is a non-error response with no further actions available.\n    // In these narrow cases, saved transaction data should be cleared.\n    // One example of a terminal success is when the email verify flow is continued in another tab\n    const hasActions = Object.keys(idxResponse!.actions).length > 0;\n    const hasErrors = !!messages.find(msg => msg.class === 'ERROR');\n    const isTerminalSuccess = !hasActions && !hasErrors && idxResponse!.requestDidSucceed === true;\n    if (isTerminalSuccess) {\n      shouldClearTransaction = true;\n    } else {\n      // save response if there are actions available (ignore messages)\n      shouldSaveResponse = !!hasActions;\n    }\n    // leave shared storage intact so the transaction can be continued in another tab\n    clearSharedStorage = false;\n  } else if (canceled) {\n    status = IdxStatus.CANCELED;\n    shouldClearTransaction = true;\n  } else if (idxResponse?.interactionCode) { \n    interactionCode = idxResponse.interactionCode;\n    if (exchangeCodeForTokens === false) {\n      status = IdxStatus.SUCCESS;\n      shouldClearTransaction = false;\n    } else {\n      tokens = await getTokens(authClient, data);\n      status = IdxStatus.SUCCESS;\n      shouldClearTransaction = true;\n    }\n  }\n  return {\n    ...data,\n    status,\n    interactionCode,\n    tokens,\n    shouldSaveResponse,\n    shouldClearTransaction,\n    clearSharedStorage,\n    enabledFeatures,\n    availableSteps,\n    messages,\n    terminal\n  };\n}\n\nexport async function run(\n  authClient: OktaAuthIdxInterface, \n  options: RunOptions = {},\n): Promise<IdxTransaction> {\n  let data: RunData = {\n    options,\n    values: initializeValues(options)\n  };\n\n  data = initializeData(authClient, data);\n  data = await getDataFromIntrospect(authClient, data);\n  data = await getDataFromRemediate(authClient, data);\n  data = await finalizeData(authClient, data);\n\n  const {\n    idxResponse,\n    meta,\n    shouldSaveResponse,\n    shouldClearTransaction,\n    clearSharedStorage,\n    status,\n    enabledFeatures,\n    availableSteps,\n    tokens,\n    nextStep,\n    messages,\n    error,\n    interactionCode\n  } = data;\n\n  if (shouldClearTransaction) {\n    authClient.transactionManager.clear({ clearSharedStorage });\n  }\n  else {\n    // ensures state is saved to sessionStorage\n    saveTransactionMeta(authClient, { ...meta });\n\n    if (shouldSaveResponse) {\n      // Save intermediate idx response in storage to reduce introspect call\n      const { rawIdxState: rawIdxResponse, requestDidSucceed } = idxResponse!;\n      authClient.transactionManager.saveIdxResponse({\n        rawIdxResponse,\n        requestDidSucceed,\n        stateHandle: idxResponse!.context?.stateHandle,\n        interactionHandle: meta?.interactionHandle\n      });\n    }\n  }\n  \n  // copy all fields from idxResponse which are needed by the widget\n  const { actions, context, neededToProceed, proceed, rawIdxState, requestDidSucceed, stepUp } = idxResponse || {};\n  return {\n    status: status!,\n    ...(meta && { meta }),\n    ...(enabledFeatures && { enabledFeatures }),\n    ...(availableSteps && { availableSteps }),\n    ...(tokens && { tokens }),\n    ...(nextStep && { nextStep }),\n    ...(messages && messages.length && { messages }),\n    ...(error && { error }),\n    ...(stepUp && { stepUp }),\n    interactionCode, // if options.exchangeCodeForTokens is false\n\n    // from idx-js\n    actions: actions!,\n    context: context!,\n    neededToProceed: neededToProceed!,\n    proceed: proceed!,\n    rawIdxState: rawIdxState!,\n    requestDidSucceed\n  };\n}\n","/*!\n * Copyright (c) 2015-present, Okta, Inc. and/or its affiliates. All rights reserved.\n * The Okta software accompanied by this notice is provided pursuant to the Apache License, Version 2.0 (the \"License.\")\n *\n * You may obtain a copy of the License at http://www.apache.org/licenses/LICENSE-2.0.\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT\n * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * \n * See the License for the specific language governing permissions and limitations under the License.\n */\n\n\nimport { run } from './run';\nimport { OktaAuthIdxInterface, IdxTransaction, StartOptions } from './types';\n\nexport async function startTransaction(\n  authClient: OktaAuthIdxInterface, \n  options: StartOptions = {}\n): Promise<IdxTransaction> {\n  // Clear IDX response cache and saved transaction meta (if any)\n  authClient.transactionManager.clear();\n\n  return run(authClient, {\n    exchangeCodeForTokens: false,\n    ...options\n  });\n}\n","import { CookieOptions, StorageManagerOptions, StorageOptions, StorageUtil } from '../storage/types';\nimport {  IdxTransactionMeta } from './types';\nimport { SavedObject } from '../storage';\nimport { IDX_RESPONSE_STORAGE_NAME } from '../constants';\nimport { createCoreStorageManager } from '../core/storage';\nimport { IdxResponseStorage } from './types/storage';\nimport { isBrowser } from '../features';\nimport { warn } from '../util';\nimport AuthSdkError from '../errors/AuthSdkError';\n\nexport function createIdxStorageManager<M extends IdxTransactionMeta>()\n{\n  const CoreStorageManager = createCoreStorageManager<M>();\n  return class IdxStorageManager extends CoreStorageManager\n  {\n    constructor(storageManagerOptions: StorageManagerOptions, cookieOptions: CookieOptions, storageUtil: StorageUtil) {\n      super(storageManagerOptions, cookieOptions, storageUtil);\n    }\n\n    // intermediate idxResponse\n    // store for network traffic optimazation purpose\n    // TODO: revisit in auth-js 6.0 epic JIRA: OKTA-399791\n    getIdxResponseStorage(options?: StorageOptions): IdxResponseStorage | null {\n      let storage;\n      if (isBrowser()) {\n        // on browser side only use memory storage \n        try {\n          storage = this.storageUtil.getStorageByType('memory', options);\n        } catch (e) {\n          // it's ok to miss response storage\n          // eslint-disable-next-line max-len\n          warn('No response storage found, you may want to provide custom implementation for intermediate idx responses to optimize the network traffic');\n        }\n      } else {\n        // on server side re-use transaction custom storage\n        const transactionStorage = this.getTransactionStorage(options);\n        if (transactionStorage) {\n          storage = {\n            getItem: (key) => {\n              const transaction = transactionStorage.getStorage();\n              if (transaction && transaction[key]) {\n                return transaction[key];\n              }\n              return null;\n            },\n            setItem: (key, val) => {\n              const transaction = transactionStorage.getStorage();\n              if (!transaction) {\n                throw new AuthSdkError('Transaction has been cleared, failed to save idxState');\n              }\n              transaction[key] = val;\n              transactionStorage.setStorage(transaction);\n            },\n            removeItem: (key) => {\n              const transaction = transactionStorage.getStorage();\n              if (!transaction) {\n                return;\n              }\n              delete transaction[key];\n              transactionStorage.setStorage(transaction);\n            }\n          };\n        }\n      }\n\n      if (!storage) {\n        return null;\n      }\n\n      return new SavedObject(storage, IDX_RESPONSE_STORAGE_NAME);\n    }\n  };\n}\n","/* eslint-disable @typescript-eslint/no-non-null-assertion */\n/*!\n * Copyright (c) 2021, Okta, Inc. and/or its affiliates. All rights reserved.\n * The Okta software accompanied by this notice is provided pursuant to the Apache License, Version 2.0 (the \"License.\")\n *\n * You may obtain a copy of the License at http://www.apache.org/licenses/LICENSE-2.0.\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT\n * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n *\n * See the License for the specific language governing permissions and limitations under the License.\n */\n\nimport { OktaAuthIdxInterface, IdxTransactionMeta, IdxTransactionMetaOptions } from './types';\nimport { removeNils, warn } from '../util';\nimport { createOAuthMeta, PKCETransactionMeta } from '../oidc';\n\n// Calculate new values\nexport async function createTransactionMeta(\n  authClient: OktaAuthIdxInterface,\n  options: IdxTransactionMetaOptions = {}\n): Promise<IdxTransactionMeta> {\n  const tokenParams = await authClient.token.prepareTokenParams(options);\n  const pkceMeta = createOAuthMeta(authClient, tokenParams) as PKCETransactionMeta;\n  let {\n    flow = 'default',\n    withCredentials = true,\n    activationToken = undefined,\n    recoveryToken = undefined,\n    maxAge = undefined,\n    acrValues = undefined,\n  } = { ...authClient.options, ...options }; // local options override SDK options\n\n  const meta: IdxTransactionMeta = {\n    ...pkceMeta,\n    flow,\n    withCredentials,\n    activationToken,\n    recoveryToken,\n    maxAge,\n    acrValues\n  };\n  return meta;\n}\n\nexport function hasSavedInteractionHandle(\n  authClient: OktaAuthIdxInterface,\n  options?: IdxTransactionMetaOptions\n): boolean {\n  const savedMeta = getSavedTransactionMeta(authClient, options);\n  if (savedMeta?.interactionHandle) {\n    return true;\n  }\n  return false;\n}\n\n// Returns the saved transaction meta, if it exists and is valid\nexport function getSavedTransactionMeta(\n  authClient: OktaAuthIdxInterface,\n  options?: IdxTransactionMetaOptions\n): IdxTransactionMeta | undefined {\n  options = removeNils(options);\n  options = { ...authClient.options, ...options }; // local options override SDK options\n  let savedMeta;\n  try {\n    savedMeta = authClient.transactionManager.load(options) as IdxTransactionMeta;\n  } catch (e) {\n    // ignore errors here\n  }\n\n  if (!savedMeta) {\n    return;\n  }\n\n  if (isTransactionMetaValid(savedMeta, options)) {\n    return savedMeta;\n  }\n\n  // existing meta is not valid for this configuration\n  // this is common when changing configuration in local development environment\n  // in a production environment, this may indicate that two apps are sharing a storage key\n  warn('Saved transaction meta does not match the current configuration. ' + \n    'This may indicate that two apps are sharing a storage key.');\n\n}\n\nexport async function getTransactionMeta(\n  authClient: OktaAuthIdxInterface,\n  options?: IdxTransactionMetaOptions\n): Promise<IdxTransactionMeta> {\n  options = removeNils(options);\n  options = { ...authClient.options, ...options }; // local options override SDK options\n  // Load existing transaction meta from storage\n  const validExistingMeta = getSavedTransactionMeta(authClient, options);\n  if (validExistingMeta) {\n    return validExistingMeta;\n  }\n  // No existing? Create new transaction meta.\n  return createTransactionMeta(authClient, options);\n}\n\nexport function saveTransactionMeta (authClient: OktaAuthIdxInterface, meta): void {\n  authClient.transactionManager.save(meta, { muteWarning: true });\n}\n\nexport function clearTransactionMeta (authClient: OktaAuthIdxInterface): void {\n  authClient.transactionManager.clear();\n}\n\nexport function isTransactionMetaValid (meta, options: IdxTransactionMetaOptions  = {}): boolean {\n  // Validate against certain options. If these exist in options, they must match in meta\n  const keys = [\n    'issuer',\n    'clientId',\n    'redirectUri',\n    'state',\n    'codeChallenge',\n    'codeChallengeMethod',\n    'activationToken',\n    'recoveryToken'\n  ];\n  if (isTransactionMetaValidForOptions(meta, options, keys) === false) {\n    return false;\n  }\n\n  // Validate configured flow\n  const { flow } = options;\n  if (isTransactionMetaValidForFlow(meta, flow) === false) {\n    return false;\n  }\n\n  return true;\n}\n\nexport function isTransactionMetaValidForFlow(meta, flow) {\n  // Specific flows should not share transaction data\n  const shouldValidateFlow = flow && flow !== 'default' && flow !== 'proceed';\n  if (shouldValidateFlow) {\n    if (flow !== meta.flow) {\n      // The flow has changed; abandon the old transaction\n      return false;\n    }\n  }\n  return true;\n}\n\nexport function isTransactionMetaValidForOptions(meta, options, keys) {\n  // returns false if values in meta do not match options\n  // if the option does not have a value for a specific key, it is ignored\n  const mismatch = keys.some(key => {\n    const value = options[key];\n    if (value && value !== meta[key]) {\n      return true;\n    }\n  });\n  return !mismatch;\n}\n","/*!\n * Copyright (c) 2021-present, Okta, Inc. and/or its affiliates. All rights reserved.\n * The Okta software accompanied by this notice is provided pursuant to the Apache License, Version 2.0 (the \"License.\")\n *\n * You may obtain a copy of the License at http://www.apache.org/licenses/LICENSE-2.0.\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT\n * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n *\n * See the License for the specific language governing permissions and limitations under the License.\n */\n\nimport { APIError } from '../../errors/types';\nimport {\n  OktaAuthOAuthInterface,\n  MinimalOktaOAuthInterface,\n  Tokens,\n  TransactionManagerConstructor,\n  TransactionManagerInterface\n} from '../../oidc/types';\nimport { FlowIdentifier } from './FlowIdentifier';\nimport {\n  IdxActions,\n  IdxAuthenticator,\n  IdxContext,\n  IdxForm,\n  IdxMessage,\n  IdxOption,\n  IdxRemediation,\n  IdxResponse,\n  RawIdxResponse,\n  IdxActionParams,\n  IdpConfig,\n  IdxToPersist,\n  ChallengeData,\n  ActivationData,\n} from './idx-js';\nimport {\n  AccountUnlockOptions,\n  AuthenticationOptions,\n  CancelOptions,\n  InteractOptions,\n  IntrospectOptions,\n  OktaAuthIdxOptions,\n  PasswordRecoveryOptions,\n  ProceedOptions,\n  RegistrationOptions,\n  StartOptions,\n  IdxTransactionMetaOptions\n} from './options';\nimport { IdxTransactionMeta } from './meta';\nimport { IdxStorageManagerInterface, SavedIdxResponse } from './storage';\nimport type {\n  WebauthnEnrollValues,\n  WebauthnVerificationValues\n} from '../authenticator';\nimport { OktaAuthConstructor, FingerprintAPI } from '../../base/types';\n\nexport enum IdxStatus {\n  SUCCESS = 'SUCCESS',\n  PENDING = 'PENDING',\n  FAILURE = 'FAILURE',\n  TERMINAL = 'TERMINAL',\n  CANCELED = 'CANCELED',\n}\n\nexport enum AuthenticatorKey {\n  OKTA_PASSWORD = 'okta_password',\n  OKTA_EMAIL = 'okta_email',\n  PHONE_NUMBER = 'phone_number',\n  GOOGLE_AUTHENTICATOR = 'google_otp',\n  SECURITY_QUESTION = 'security_question',\n  OKTA_VERIFY = 'okta_verify',\n  WEBAUTHN = 'webauthn',\n}\n\nexport type Input = {\n  name: string;\n  key?: string;\n  type?: string;\n  label?: string;\n  value?: string | {form: IdxForm} | Input[];\n  minLength?: number;\n  maxLength?: number;\n  secret?: boolean;\n  required?: boolean;\n  options?: IdxOption[];\n  mutable?: boolean;\n  visible?: boolean;\n  customLabel?: boolean\n}\n\n\nexport interface IdxPollOptions {\n  required?: boolean;\n  refresh?: number;\n}\n\nexport type NextStep = {\n  name: string;\n  authenticator?: IdxAuthenticator;\n  canSkip?: boolean;\n  canResend?: boolean;\n  inputs?: Input[];\n  poll?: IdxPollOptions;\n  authenticatorEnrollments?: IdxAuthenticator[];\n  // eslint-disable-next-line no-use-before-define\n  action?: (params?: IdxActionParams) => Promise<IdxTransaction>;\n  idp?: IdpConfig;\n  href?: string;\n  relatesTo?: {\n    type?: string;\n    value: IdxAuthenticator;\n  };\n  refresh?: number;\n}\n\nexport enum IdxFeature {\n  PASSWORD_RECOVERY = 'recover-password',\n  REGISTRATION = 'enroll-profile',\n  SOCIAL_IDP = 'redirect-idp',\n  ACCOUNT_UNLOCK = 'unlock-account',\n}\n\n\nexport interface IdxTransaction {\n  status: IdxStatus;\n  tokens?: Tokens;\n  nextStep?: NextStep;\n  messages?: IdxMessage[];\n  error?: APIError | IdxResponse;\n  meta?: IdxTransactionMeta;\n  enabledFeatures?: IdxFeature[];\n  availableSteps?: NextStep[];\n  requestDidSucceed?: boolean;\n  stepUp?: boolean;\n  \n  // from idx-js, used by signin widget\n  proceed: (remediationName: string, params: unknown) => Promise<IdxResponse>;\n  neededToProceed: IdxRemediation[];\n  rawIdxState: RawIdxResponse;\n  interactionCode?: string;\n  actions: IdxActions;\n  context: IdxContext;\n}\n\n\nexport type Authenticator = {\n  id?: string;\n  key?: string;\n  methodType?: string;\n  phoneNumber?: string;\n  channel?: string;\n};\n\nexport function isAuthenticator(obj: any): obj is Authenticator {\n  return obj && (obj.key || obj.id);\n}\n\nexport interface RemediationResponse {\n  idxResponse: IdxResponse;\n  nextStep?: NextStep;\n  messages?: IdxMessage[];\n  terminal?: boolean;\n  canceled?: boolean;\n}\n\nexport interface InteractResponse {\n  state?: string;\n  interactionHandle: string;\n  meta: IdxTransactionMeta;\n}\n\nexport interface EmailVerifyCallbackResponse {\n  state: string;\n  otp: string;\n}\n\nexport interface MinimalIdxAPI {\n  // lowest level api\n  makeIdxResponse: (rawIdxResponse: RawIdxResponse, toPersist: IdxToPersist, requestDidSucceed: boolean) => IdxResponse;\n\n  // flow control\n  start: (options?: StartOptions) => Promise<IdxTransaction>;\n  canProceed(options?: ProceedOptions): boolean;\n  proceed: (options?: ProceedOptions) => Promise<IdxTransaction>;\n\n  // call `start` instead of `startTransaction`. `startTransaction` will be removed in next major version (7.0)\n  startTransaction: (options?: StartOptions) => Promise<IdxTransaction>;\n\n  // transaction meta\n  getSavedTransactionMeta: (options?: IdxTransactionMetaOptions) => IdxTransactionMeta | undefined;\n  createTransactionMeta: (options?: IdxTransactionMetaOptions) => Promise<IdxTransactionMeta>;\n  getTransactionMeta: (options?: IdxTransactionMetaOptions) => Promise<IdxTransactionMeta>;\n  saveTransactionMeta: (meta: unknown) => void;\n  clearTransactionMeta: () => void;\n  isTransactionMetaValid: (meta: unknown) => boolean;\n}\n\nexport interface IdxAPI {\n  // lowest level api\n  interact: (options?: InteractOptions) => Promise<InteractResponse>;\n  introspect: (options?: IntrospectOptions) => Promise<IdxResponse>;\n  makeIdxResponse: (rawIdxResponse: RawIdxResponse, toPersist: IdxToPersist, requestDidSucceed: boolean) => IdxResponse;\n\n  // flow entrypoints\n  authenticate: (options?: AuthenticationOptions) => Promise<IdxTransaction>;\n  register: (options?: RegistrationOptions) => Promise<IdxTransaction>;\n  recoverPassword: (options?: PasswordRecoveryOptions) => Promise<IdxTransaction>;\n  unlockAccount: (options?: AccountUnlockOptions) => Promise<IdxTransaction>;\n  poll: (options?: IdxPollOptions) => Promise<IdxTransaction>;\n\n  // flow control\n  start: (options?: StartOptions) => Promise<IdxTransaction>;\n  canProceed(options?: ProceedOptions): boolean;\n  proceed: (options?: ProceedOptions) => Promise<IdxTransaction>;\n  cancel: (options?: CancelOptions) => Promise<IdxTransaction>;\n  getFlow(): FlowIdentifier | undefined;\n  setFlow(flow: FlowIdentifier): void;\n\n  // call `start` instead of `startTransaction`. `startTransaction` will be removed in next major version (7.0)\n  startTransaction: (options?: StartOptions) => Promise<IdxTransaction>;\n\n  // redirect callbacks\n  isInteractionRequired: (hashOrSearch?: string) => boolean;\n  isInteractionRequiredError: (error: Error) => boolean; \n  handleInteractionCodeRedirect: (url: string) => Promise<void>;\n  isEmailVerifyCallback: (search: string) => boolean;\n  parseEmailVerifyCallback: (search: string) => EmailVerifyCallbackResponse;\n  handleEmailVerifyCallback: (search: string) => Promise<IdxTransaction | undefined>;\n  isEmailVerifyCallbackError: (error: Error) => boolean;\n\n  // transaction meta\n  getSavedTransactionMeta: (options?: IdxTransactionMetaOptions) => IdxTransactionMeta | undefined;\n  createTransactionMeta: (options?: IdxTransactionMetaOptions) => Promise<IdxTransactionMeta>;\n  getTransactionMeta: (options?: IdxTransactionMetaOptions) => Promise<IdxTransactionMeta>;\n  saveTransactionMeta: (meta: unknown) => void;\n  clearTransactionMeta: () => void;\n  isTransactionMetaValid: (meta: unknown) => boolean;\n}\n\nexport interface IdxTransactionManagerInterface extends TransactionManagerInterface {\n  saveIdxResponse(data: SavedIdxResponse): void;\n  loadIdxResponse(options?: IntrospectOptions): SavedIdxResponse | null;\n  clearIdxResponse(): void;\n}\n\nexport type IdxTransactionManagerConstructor = TransactionManagerConstructor<IdxTransactionManagerInterface>;\n\nexport interface WebauthnAPI {\n  getAssertion(credential: PublicKeyCredential): WebauthnVerificationValues;\n  getAttestation(credential: PublicKeyCredential): WebauthnEnrollValues;\n  buildCredentialRequestOptions(\n    challengeData: ChallengeData, authenticatorEnrollments: IdxAuthenticator[]\n  ): CredentialRequestOptions;\n  buildCredentialCreationOptions(\n    activationData: ActivationData, authenticatorEnrollments: IdxAuthenticator[]\n  ): CredentialCreationOptions;\n}\n\n\nexport interface OktaAuthIdxInterface\n<\n  M extends IdxTransactionMeta = IdxTransactionMeta,\n  S extends IdxStorageManagerInterface<M> = IdxStorageManagerInterface<M>,\n  O extends OktaAuthIdxOptions = OktaAuthIdxOptions,\n  TM extends IdxTransactionManagerInterface = IdxTransactionManagerInterface\n>\n  extends OktaAuthOAuthInterface<M, S, O, TM>\n{\n  idx: IdxAPI;\n  fingerprint: FingerprintAPI;\n}\n\nexport interface MinimalOktaAuthIdxInterface\n<\n  M extends IdxTransactionMeta = IdxTransactionMeta,\n  S extends IdxStorageManagerInterface<M> = IdxStorageManagerInterface<M>,\n  O extends OktaAuthIdxOptions = OktaAuthIdxOptions,\n  TM extends IdxTransactionManagerInterface = IdxTransactionManagerInterface\n>\n  extends MinimalOktaOAuthInterface<M, S, O, TM>\n{\n  idx: MinimalIdxAPI;\n  fingerprint: FingerprintAPI;\n}\n\nexport interface OktaAuthIdxConstructor\n<\n  I extends MinimalOktaAuthIdxInterface = OktaAuthIdxInterface\n>\n extends OktaAuthConstructor<I>\n{\n  new(...args: any[]): I;\n  webauthn: WebauthnAPI;\n}\n","/* eslint-disable no-use-before-define */\n/*!\n * Copyright (c) 2015-present, Okta, Inc. and/or its affiliates. All rights reserved.\n * The Okta software accompanied by this notice is provided pursuant to the Apache License, Version 2.0 (the \"License.\")\n *\n * You may obtain a copy of the License at http://www.apache.org/licenses/LICENSE-2.0.\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT\n * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * \n * See the License for the specific language governing permissions and limitations under the License.\n */\n\nimport { Input } from './api';\n\n\n// TODO: remove when idx-js provides type information\n\nexport interface ChallengeData {\n  challenge: string; \n  userVerification: string; \n  extensions?: {\n    appid: string;\n  };\n}\nexport interface ActivationData {\n  challenge: string;\n  rp: {\n    name: string;\n  };\n  user: {\n    id: string;\n    name: string;\n    displayName: string;\n  };\n  pubKeyCredParams: {\n    type: string;\n    alg: number;\n  }[];\n  attestation?: string;\n  authenticatorSelection?: {\n    userVerification?: string;\n    authenticatorAttachment?: string;\n    requireResidentKey?: boolean;\n    residentKey?: string;\n  };\n  excludeCredentials?: {\n    id: string;\n    type: string;\n  }[];\n}\nexport interface IdxAuthenticatorMethod {\n  type: string;\n}\nexport interface IdxAuthenticator {\n  displayName: string;\n  id: string;\n  key: string;\n  methods: IdxAuthenticatorMethod[];\n  type: string;\n  settings?: {\n    complexity?: unknown;\n    age?: unknown;\n  };\n  contextualData?: {\n    enrolledQuestion?: {\n      question: string;\n      questionKey: string;\n    };\n    qrcode?: { \n      href: string; \n      method: string; \n      type: string; \n    };\n    sharedSecret?: string;\n    questions?: {\n      questionKey: string;\n      question: string;\n    }[];\n    questionKeys?: string[];\n    selectedChannel?: string;\n    activationData?: ActivationData;\n    challengeData?: ChallengeData;\n  };\n  credentialId?: string;\n  enrollmentId?: string;\n  profile?: Record<string, unknown>;\n  resend?: Record<string, unknown>;\n  poll?: Record<string, unknown>;\n  recover?: Record<string, unknown>;\n  deviceKnown?: boolean;\n  nickname?: string;\n}\n\nexport interface IdxForm {\n  value: IdxRemediationValue[];\n}\n\nexport interface IdxOption {\n  value: string | {form: IdxForm} | Input[];\n  label: string;\n  relatesTo?: IdxAuthenticator;\n}\n\nexport interface IdpConfig {\n  id: string;\n  name: string;\n}\n\nexport interface IdxRemediationValueForm {\n  form: IdxForm;\n}\n\nexport interface IdxRemediationValue {\n  name: string;\n  type?: string;\n  required?: boolean;\n  secret?: boolean;\n  visible?: boolean;\n  mutable?: boolean;\n  value?: string | IdxRemediationValueForm;\n  label?: string;\n  form?: IdxForm;\n  options?: IdxOption[];\n  messages?: IdxMessages;\n  minLength?: number;\n  maxLength?: number;\n  relatesTo?: {\n    type?: string;\n    value: IdxAuthenticator;\n  };\n}\n\nexport interface IdxRemediation {\n  name: string;\n  label?: string;\n  value?: IdxRemediationValue[];\n  relatesTo?: {\n    type?: string;\n    value: IdxAuthenticator;\n  };\n  idp?: IdpConfig;\n  href?: string;\n  method?: string;\n  type?: string;\n  accepts?: string;\n  produces?: string;\n  refresh?: number;\n  rel?: string[];\n  action?: (payload?: IdxActionParams) => Promise<IdxResponse>;\n}\n\nexport interface IdxContext {\n  version: string;\n  stateHandle: string;\n  expiresAt: string;\n  intent: string;\n  currentAuthenticator: {\n    type: string;\n    value: IdxAuthenticator;\n  };\n  currentAuthenticatorEnrollment: {\n    type: string;\n    value: IdxAuthenticator;\n  };\n  authenticators: {\n    type: string;\n    value: IdxAuthenticator[];\n  };\n  authenticatorEnrollments: {\n    type: string;\n    value: IdxAuthenticator[];\n  };\n  enrollmentAuthenticator: {\n    type: string;\n    value: IdxAuthenticator;\n  };\n  user?: {\n    type: string;\n    value: Record<string, unknown>;\n  };\n  uiDisplay?: IdxContextUIDisplay\n  app: {\n    type: string;\n    value: Record<string, unknown>;\n  };\n  messages?: IdxMessages;\n  success?: IdxRemediation;\n  failure?: IdxRemediation;\n}\n\nexport interface IdxContextUIDisplay {\n  type: string;\n  value: {\n    label?: string;\n    buttonLabel?: string;\n  }\n}\n\nexport interface IdxMessage {\n  message: string;\n  class: string;\n  i18n: {\n    key: string;\n    params?: unknown[];\n  };\n}\n\nexport interface IdxMessages {\n  type: 'array';\n  value: IdxMessage[];\n}\n\n// JSON response from the server\nexport interface RawIdxResponse {\n  version: string;\n  stateHandle: string;\n  intent?: string;\n  expiresAt?: string;\n  remediation?: {\n    type: 'array';\n    value: IdxRemediation[];\n  };\n  messages?: IdxMessages;\n  success?: boolean;\n  successWithInteractionCode?: IdxRemediation;\n  currentAuthenticator?: {\n    type: string;\n    value: IdxAuthenticator;\n  };\n  currentAuthenticatorEnrollment?: {\n    type: string;\n    value: IdxAuthenticator;\n  };\n}\n\nexport function isRawIdxResponse(obj: any): obj is RawIdxResponse {\n  return obj && obj.version;\n}\n\nexport interface IdxActionParams {\n  [key: string]: string | boolean | number | object;\n}\n\nexport interface IdxActions {\n  [key: string]: (params?: IdxActionParams) => Promise<IdxResponse>;\n}\n\nexport interface IdxToPersist {\n  interactionHandle?: string;\n  withCredentials?: boolean;\n}\n\nexport interface IdxActionFunction {\n  (params: IdxActionParams): Promise<IdxResponse>;\n  neededParams?: Array<Array<IdxRemediationValue>>;\n}\n\nexport interface IdxResponse {\n  proceed: (remediationName: string, params: unknown) => Promise<IdxResponse>;\n  neededToProceed: IdxRemediation[];\n  rawIdxState: RawIdxResponse;\n  interactionCode?: string;\n  actions: IdxActions;\n  toPersist: IdxToPersist;\n  context?: IdxContext;\n  requestDidSucceed?: boolean;\n  stepUp?: boolean;\n}\n\nexport function isIdxResponse(obj: any): obj is IdxResponse {\n  return obj && isRawIdxResponse(obj.rawIdxState);\n}\n","/*!\n * Copyright (c) 2015-present, Okta, Inc. and/or its affiliates. All rights reserved.\n * The Okta software accompanied by this notice is provided pursuant to the Apache License, Version 2.0 (the \"License.\")\n *\n * You may obtain a copy of the License at http://www.apache.org/licenses/LICENSE-2.0.\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT\n * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * \n * See the License for the specific language governing permissions and limitations under the License.\n */\n\n\nimport { run } from './run';\nimport { hasSavedInteractionHandle } from './transactionMeta';\nimport { startTransaction } from './startTransaction';\nimport { AuthSdkError } from '../errors';\nimport { \n  OktaAuthIdxInterface, \n  AccountUnlockOptions, \n  IdxTransaction,\n  IdxFeature,\n} from './types';\n\nexport async function unlockAccount(\n  authClient: OktaAuthIdxInterface, options: AccountUnlockOptions = {}\n): Promise<IdxTransaction> {\n  options.flow = 'unlockAccount';\n\n  // Only check at the beginning of the transaction\n  if (!hasSavedInteractionHandle(authClient)) {\n    const { enabledFeatures } = await startTransaction(authClient, { ...options, autoRemediate: false });\n    if (enabledFeatures && !enabledFeatures.includes(IdxFeature.ACCOUNT_UNLOCK)) {\n      throw new AuthSdkError(\n        'Self Service Account Unlock is not supported based on your current org configuration.'\n      );\n    }\n  }\n\n  return run(authClient, { ...options });\n}\n","import { warn, split2 } from '../util';\nimport { RemediationValues, Remediator, RemediatorConstructor } from './remediators';\nimport { GenericRemediator } from './remediators/GenericRemediator';\nimport {\n  OktaAuthIdxInterface,\n  IdxFeature,\n  NextStep,\n  RemediateOptions,\n  RemediationResponse,\n  RunOptions,\n  FlowIdentifier,\n  FlowSpecification\n} from './types';\nimport { IdxMessage, IdxRemediation, IdxRemediationValue, IdxResponse } from './types/idx-js';\n\ntype GetFlowSpecification = (\n  oktaAuth: OktaAuthIdxInterface,\n  flow: FlowIdentifier\n) => FlowSpecification;\n\nconst ctx: {\n  remediators: Record<string, RemediatorConstructor>,\n  getFlowSpecification: GetFlowSpecification,\n} = {\n  // default values to be used by minimal IDX API\n  remediators: {},\n  getFlowSpecification: function(_oktaAuth: OktaAuthIdxInterface, _flow: FlowIdentifier = 'default') {\n    return {\n      remediators: {}\n    } as FlowSpecification;\n  }\n};\n\n// should be set in createIdxAPI() factory\nexport function setRemediatorsCtx(newCtx: Partial<typeof ctx>) {\n  Object.assign(ctx, newCtx);\n}\n\nexport function getFlowSpecification(oktaAuth: OktaAuthIdxInterface, flow: FlowIdentifier = 'default') {\n  return ctx.getFlowSpecification(oktaAuth, flow);\n}\n\nexport function isTerminalResponse(idxResponse: IdxResponse) {\n  const { neededToProceed, interactionCode } = idxResponse;\n  return !neededToProceed.length && !interactionCode;\n}\n\nexport function canSkipFn(idxResponse: IdxResponse) {\n  return idxResponse.neededToProceed.some(({ name }) => name === 'skip');\n}\n\nexport function canResendFn(idxResponse: IdxResponse) {\n  return Object.keys(idxResponse.actions).some(actionName => actionName.includes('resend'));\n}\n\nexport function getMessagesFromIdxRemediationValue(\n  value?: IdxRemediationValue[]\n): IdxMessage[] | undefined {\n  if (!value || !Array.isArray(value)) {\n    return;\n  }\n  return value.reduce((messages, value) => {\n    if (value.messages) {\n      messages = [...messages, ...value.messages.value] as never;\n    }\n    if (value.form) {\n      const messagesFromForm = getMessagesFromIdxRemediationValue(value.form.value) || [];\n      messages = [...messages, ...messagesFromForm] as never;\n    } \n    if (value.options) {\n      let optionValues = [];\n      value.options.forEach(option => {\n        if (!option.value || typeof option.value === 'string') {\n          return;\n        }\n        optionValues = [...optionValues, option.value] as never;\n      });\n      const messagesFromOptions = getMessagesFromIdxRemediationValue(optionValues) || [];\n      messages = [...messages, ...messagesFromOptions] as never;\n    }\n    return messages;\n  }, []);\n}\n\nexport function getMessagesFromResponse(idxResponse: IdxResponse, options: RunOptions): IdxMessage[] {\n  let messages: IdxMessage[] = [];\n  const { rawIdxState, neededToProceed } = idxResponse;\n\n  // Handle global messages\n  const globalMessages = rawIdxState.messages?.value.map(message => message);\n  if (globalMessages) {\n    messages = [...messages, ...globalMessages] as never;\n  }\n\n  // Handle field messages for current flow\n  // Preserve existing logic for general cases, remove in the next major version\n  // Follow ion response format for top level messages when useGenericRemediator is true\n  if (!options.useGenericRemediator) {\n    for (let remediation of neededToProceed) {\n      const fieldMessages = getMessagesFromIdxRemediationValue(remediation.value);\n      if (fieldMessages) {\n        messages = [...messages, ...fieldMessages] as never;\n      }\n    }\n  }\n\n  // API may return identical error on same field, filter by i18n key\n  const seen = {};\n  messages = messages.reduce((filtered, message) => {\n    const key = message.i18n?.key;\n    if (key && seen[key] && message.message === seen[key].message) {\n      return filtered;\n    }\n    seen[key] = message;\n    filtered = [...filtered, message] as never;\n    return filtered;\n  }, []);\n\n  return messages;\n}\n\n\nexport function getEnabledFeatures(idxResponse: IdxResponse): IdxFeature[] {\n  const res = [];\n  const { actions, neededToProceed } = idxResponse;\n\n  if (actions['currentAuthenticator-recover']) {\n    res.push(IdxFeature.PASSWORD_RECOVERY as never);\n  }\n\n  if (neededToProceed.some(({ name }) => name === 'select-enroll-profile')) {\n    res.push(IdxFeature.REGISTRATION as never);\n  }\n\n  if (neededToProceed.some(({ name }) => name === 'redirect-idp')) {\n    res.push(IdxFeature.SOCIAL_IDP as never);\n  }\n\n  if (neededToProceed.some(({ name }) => name === 'unlock-account')) {\n    res.push(IdxFeature.ACCOUNT_UNLOCK as never);\n  }\n\n  return res;\n}\n\nexport function getAvailableSteps(\n  authClient: OktaAuthIdxInterface, \n  idxResponse: IdxResponse, \n  useGenericRemediator?: boolean\n): NextStep[] {\n  const res: NextStep[] = [];\n\n  const remediatorMap: Record<string, RemediatorConstructor> = Object.values(ctx.remediators)\n    .reduce((map, remediatorClass) => {\n      // Only add concrete subclasses to the map\n      if (remediatorClass.remediationName) {\n        map[remediatorClass.remediationName] = remediatorClass;\n      }\n      return map;\n    }, {});\n\n  for (let remediation of idxResponse.neededToProceed) {\n    const T = getRemediatorClass(remediation, { useGenericRemediator, remediators: remediatorMap });\n    if (T) {\n      const remediator: Remediator = new T(remediation);\n      res.push (remediator.getNextStep(authClient, idxResponse.context) as never);\n    }\n  }\n\n  for (const [name] of Object.entries((idxResponse.actions || {}))) {\n    let stepObj = {\n      name, \n      action: async (params?) => {\n        return authClient.idx.proceed({ \n          actions: [{ name, params }] \n        });\n      }\n    };\n    if (name.startsWith('currentAuthenticator')) {\n      const [part1, part2] = split2(name, '-');\n      const actionObj = idxResponse.rawIdxState[part1].value[part2];\n      /* eslint-disable no-unused-vars, @typescript-eslint/no-unused-vars */\n      const {\n        href, \n        method, \n        rel, \n        accepts, \n        produces, \n        ...rest\n      } = actionObj;\n      /* eslint-enable no-unused-vars, @typescript-eslint/no-unused-vars */\n      const value = actionObj.value?.filter(item => item.name !== 'stateHandle');\n      stepObj = { \n        ...rest,  \n        ...(value && { value }),\n        ...stepObj,\n      };\n    }\n    res.push(stepObj);\n  }\n\n  return res;\n}\n\nexport function filterValuesForRemediation(\n  idxResponse: IdxResponse,\n  remediationName: string,\n  values: RemediationValues\n): RemediationValues {\n  const remediations = idxResponse.neededToProceed || [];\n  const remediation = remediations.find(r => r.name === remediationName);\n  if (!remediation) {\n    // step was specified, but remediation was not found. This is unexpected!\n    warn(`filterValuesForRemediation: \"${remediationName}\" did not match any remediations`);\n    return values;\n  }\n\n  // eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n  const valuesForRemediation = remediation.value!.reduce((res, entry) => {\n    const { name, value } = entry;\n    if (name === 'stateHandle') {\n      res[name] = value; // use the stateHandle value in the remediation\n    } else {\n      res[name] = values[name]; // use the value provided by the caller\n    }\n    return res;\n  }, {});\n  return valuesForRemediation;\n}\n\nfunction getRemediatorClass(remediation: IdxRemediation, options: RemediateOptions) {\n  const { useGenericRemediator, remediators } = options;\n  \n  if (!remediation) {\n    return undefined;\n  }\n\n  if (useGenericRemediator) {\n    return GenericRemediator;\n  }\n\n  // eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n  return remediators![remediation.name];\n}\n\n// Return first match idxRemediation in allowed remediators\n// eslint-disable-next-line complexity\nexport function getRemediator(\n  idxResponse: IdxResponse,\n  values: RemediationValues,\n  options: RemediateOptions,\n): Remediator | undefined {\n  // eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n  const remediators = options.remediators!;\n  const useGenericRemediator = options.useGenericRemediator;\n  const {neededToProceed: idxRemediations, context} = idxResponse;\n\n  let remediator: Remediator;\n  // remediation name specified by caller - fast-track remediator lookup \n  if (options.step) {\n    // eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n    const remediation = idxRemediations.find(({ name }) => name === options.step)!;\n    if (remediation) {\n      const T = getRemediatorClass(remediation, options);\n      return T ? new T(remediation, values, options) : undefined;\n    } else {\n      // step was specified, but remediation was not found. This is unexpected!\n      warn(`step \"${options.step}\" did not match any remediations`);\n      return;\n    }\n  }\n\n  const remediatorCandidates: Remediator[] = [];\n  if (useGenericRemediator) {\n    // always pick the first remediation for when use GenericRemediator\n    remediatorCandidates.push(new GenericRemediator(idxRemediations[0], values, options));\n  } else {\n    for (let remediation of idxRemediations) {\n      const isRemeditionInFlow = Object.keys(remediators as object).includes(remediation.name);\n      if (!isRemeditionInFlow) {\n        continue;\n      }\n\n      // eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n      const T = getRemediatorClass(remediation, options)!;\n      remediator = new T(remediation, values, options);\n      if (remediator.canRemediate(context)) {\n        // found the remediator\n        return remediator;\n      }\n      // remediator cannot handle the current values\n      // maybe return for next step\n      remediatorCandidates.push(remediator);  \n    }\n  }\n  \n  return remediatorCandidates[0];\n}\n\n\nexport function getNextStep(\n  authClient: OktaAuthIdxInterface, remediator: Remediator, idxResponse: IdxResponse\n): NextStep {\n  const nextStep = remediator.getNextStep(authClient, idxResponse.context);\n  const canSkip = canSkipFn(idxResponse);\n  const canResend = canResendFn(idxResponse);\n  return {\n    ...nextStep,\n    ...(canSkip && {canSkip}),\n    ...(canResend && {canResend}),\n  };\n}\n\nexport function handleFailedResponse(\n  authClient: OktaAuthIdxInterface,\n  idxResponse: IdxResponse,\n  options = {}\n): RemediationResponse {\n  const terminal = isTerminalResponse(idxResponse);\n  const messages = getMessagesFromResponse(idxResponse, options);\n  if (terminal) {\n    return { idxResponse, terminal, messages };\n  } else {\n    const remediator = getRemediator(idxResponse, {}, options);\n    const nextStep = remediator && getNextStep(authClient, remediator, idxResponse);\n    return {\n      idxResponse,\n      messages,\n      ...(nextStep && { nextStep }),\n    };\n  }\n  \n}\n","/*!\n * Copyright (c) 2015-present, Okta, Inc. and/or its affiliates. All rights reserved.\n * The Okta software accompanied by this notice is provided pursuant to the Apache License, Version 2.0 (the \"License.\")\n *\n * You may obtain a copy of the License at http://www.apache.org/licenses/LICENSE-2.0.\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT\n * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n *\n * See the License for the specific language governing permissions and limitations under the License.\n */\n\nimport { base64UrlToBuffer, bufferToBase64Url } from '../crypto/base64';\nimport {\n  ActivationData,\n  ChallengeData,\n  IdxAuthenticator,\n} from './types';\n\n\n// Get known credentials from list of enrolled authenticators\nconst getEnrolledCredentials = (authenticatorEnrollments: IdxAuthenticator[] = []) => {\n  const credentials: PublicKeyCredentialDescriptor[] = [];\n  authenticatorEnrollments.forEach((enrollement) => {\n    if (enrollement.key === 'webauthn') {\n      credentials.push({\n        type: 'public-key',\n        id: base64UrlToBuffer(enrollement.credentialId),\n      });\n    }\n  });\n  return credentials;\n};\n\n// Build options for navigator.credentials.create\n// https://developer.mozilla.org/en-US/docs/Web/API/CredentialsContainer/create\nexport const buildCredentialCreationOptions = (\n  activationData: ActivationData, authenticatorEnrollments: IdxAuthenticator[]\n) => {\n  return {\n    publicKey: {\n      rp: activationData.rp,\n      user: {\n        id: base64UrlToBuffer(activationData.user.id),\n        name: activationData.user.name,\n        displayName: activationData.user.displayName\n      },\n      challenge: base64UrlToBuffer(activationData.challenge),\n      pubKeyCredParams: activationData.pubKeyCredParams,\n      attestation: activationData.attestation,\n      authenticatorSelection: activationData.authenticatorSelection,\n      excludeCredentials: getEnrolledCredentials(authenticatorEnrollments),\n    }\n  } as CredentialCreationOptions;\n};\n\n\n// Build options for navigator.credentials.get\n// https://developer.mozilla.org/en-US/docs/Web/API/CredentialsContainer/get\nexport const buildCredentialRequestOptions = (\n  challengeData: ChallengeData, authenticatorEnrollments: IdxAuthenticator[]\n) => {\n  return {\n    publicKey: {\n      challenge: base64UrlToBuffer(challengeData.challenge),\n      userVerification: challengeData.userVerification,\n      allowCredentials: getEnrolledCredentials(authenticatorEnrollments),\n    }\n  } as CredentialRequestOptions;\n};\n\n// Build attestation for webauthn enroll\n// https://developer.mozilla.org/en-US/docs/Web/API/AuthenticatorAttestationResponse\nexport const getAttestation = (credential: PublicKeyCredential) => {\n  const response = credential.response as AuthenticatorAttestationResponse;\n  const id = credential.id;\n  const clientData = bufferToBase64Url(response.clientDataJSON);\n  const attestation = bufferToBase64Url(response.attestationObject);\n  return {\n    id,\n    clientData,\n    attestation\n  };\n};\n\n// Build assertion for webauthn verification\n// https://developer.mozilla.org/en-US/docs/Web/API/AuthenticatorAssertionResponse\nexport const getAssertion = (credential: PublicKeyCredential) => {\n  const response = credential.response as AuthenticatorAssertionResponse;\n  const id = credential.id;\n  const clientData = bufferToBase64Url(response.clientDataJSON);\n  const authenticatorData = bufferToBase64Url(response.authenticatorData);\n  const signatureData = bufferToBase64Url(response.signature);\n  return {\n    id,\n    clientData,\n    authenticatorData,\n    signatureData\n  };\n};\n","/*!\n * Copyright (c) 2015-present, Okta, Inc. and/or its affiliates. All rights reserved.\n * The Okta software accompanied by this notice is provided pursuant to the Apache License, Version 2.0 (the \"License.\")\n *\n * You may obtain a copy of the License at http://www.apache.org/licenses/LICENSE-2.0.\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT\n * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n *\n * See the License for the specific language governing permissions and limitations under the License.\n */\n\nexport default class SdkClock {\n  localOffset: number;\n\n  constructor(localOffset) {\n    // Calculated local clock offset from server time (in milliseconds). Can be positive or negative.\n    this.localOffset = parseInt(localOffset || 0);\n  }\n\n  // factory method. Create an instance of a clock from current context.\n  static create(/* sdk, options */): SdkClock {\n    // TODO: calculate localOffset\n    var localOffset = 0;\n    return new SdkClock(localOffset);\n  }\n\n  // Return the current time (in seconds)\n  now() {\n    var now = (Date.now() + this.localOffset) / 1000;\n    return now;\n  }\n}\n","/*!\n * Copyright (c) 2015-present, Okta, Inc. and/or its affiliates. All rights reserved.\n * The Okta software accompanied by this notice is provided pursuant to the Apache License, Version 2.0 (the \"License.\")\n *\n * You may obtain a copy of the License at http://www.apache.org/licenses/LICENSE-2.0.\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT\n * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n *\n * See the License for the specific language governing permissions and limitations under the License.\n *\n */\nimport { removeNils, clone } from '../util';\nimport { AuthSdkError } from '../errors';\nimport { validateToken  } from '../oidc/util';\nimport { isLocalhost, isIE11OrLess } from '../features';\nimport SdkClock from '../clock';\nimport {\n  Token, \n  Tokens, \n  TokenType, \n  TokenManagerOptions, \n  isIDToken, \n  isAccessToken,\n  isRefreshToken,\n  TokenManagerErrorEventHandler,\n  TokenManagerSetStorageEventHandler,\n  TokenManagerRenewEventHandler,\n  TokenManagerEventHandler,\n  TokenManagerInterface,\n  RefreshToken,\n  AccessTokenCallback,\n  IDTokenCallback,\n  RefreshTokenCallback,\n  EVENT_RENEWED,\n  EVENT_ADDED,\n  EVENT_ERROR,\n  EVENT_EXPIRED,\n  EVENT_REMOVED,\n  EVENT_SET_STORAGE,\n  TokenManagerAnyEventHandler,\n  TokenManagerAnyEvent,\n  OktaAuthOAuthInterface\n} from './types';\nimport { REFRESH_TOKEN_STORAGE_KEY, TOKEN_STORAGE_NAME } from '../constants';\nimport { EventEmitter } from '../base/types';\nimport { StorageOptions, StorageProvider, StorageType } from '../storage/types';\n\nconst DEFAULT_OPTIONS = {\n  // TODO: remove in next major version - OKTA-473815\n  autoRenew: true,\n  autoRemove: true,\n  syncStorage: true,\n  // --- //\n  clearPendingRemoveTokens: true,\n  storage: undefined, // will use value from storageManager config\n  expireEarlySeconds: 30,\n  storageKey: TOKEN_STORAGE_NAME\n};\n\ninterface TokenManagerState {\n  expireTimeouts: Record<string, unknown>;\n  renewPromise: Promise<Token | undefined> | null;\n  started?: boolean;\n}\nfunction defaultState(): TokenManagerState {\n  return {\n    expireTimeouts: {},\n    renewPromise: null\n  };\n}\nexport class TokenManager implements TokenManagerInterface {\n  private sdk: OktaAuthOAuthInterface;\n  private clock: SdkClock;\n  private emitter: EventEmitter;\n  private storage: StorageProvider;\n  private state: TokenManagerState;\n  private options: TokenManagerOptions;\n\n  on(event: typeof EVENT_RENEWED, handler: TokenManagerRenewEventHandler, context?: object): void;\n  on(event: typeof EVENT_ERROR, handler: TokenManagerErrorEventHandler, context?: object): void;\n  on(event: typeof EVENT_SET_STORAGE, handler: TokenManagerSetStorageEventHandler, context?: object): void;\n  on(event: typeof EVENT_EXPIRED | typeof EVENT_ADDED | typeof EVENT_REMOVED, \n    handler: TokenManagerEventHandler, context?: object): void;\n  on(event: TokenManagerAnyEvent, handler: TokenManagerAnyEventHandler, context?: object): void {\n    if (context) {\n      this.emitter.on(event, handler, context);\n    } else {\n      this.emitter.on(event, handler);\n    }\n  }\n\n  off(event: typeof EVENT_RENEWED, handler?: TokenManagerRenewEventHandler): void;\n  off(event: typeof EVENT_ERROR, handler?: TokenManagerErrorEventHandler): void;\n  off(event: typeof EVENT_SET_STORAGE, handler?: TokenManagerSetStorageEventHandler): void;\n  off(event: typeof EVENT_EXPIRED | typeof EVENT_ADDED | typeof EVENT_REMOVED, \n    handler?: TokenManagerEventHandler): void;\n  off(event: TokenManagerAnyEvent, handler?: TokenManagerAnyEventHandler): void {\n    if (handler) {\n      this.emitter.off(event, handler);\n    } else {\n      this.emitter.off(event);\n    }\n  }\n\n  // eslint-disable-next-line complexity\n  constructor(sdk: OktaAuthOAuthInterface, options: TokenManagerOptions = {}) {\n    this.sdk = sdk;\n    this.emitter = (sdk as any).emitter;\n    if (!this.emitter) {\n      throw new AuthSdkError('Emitter should be initialized before TokenManager');\n    }\n    \n    options = Object.assign({}, DEFAULT_OPTIONS, removeNils(options));\n    if (!isLocalhost()) {\n      options.expireEarlySeconds = DEFAULT_OPTIONS.expireEarlySeconds;\n    }\n\n    this.options = options;\n\n    const storageOptions: StorageOptions = removeNils({\n      storageKey: options.storageKey,\n      secure: options.secure,\n    });\n    if (typeof options.storage === 'object') {\n      // A custom storage provider must implement getItem(key) and setItem(key, val)\n      storageOptions.storageProvider = options.storage;\n    } else if (options.storage) {\n      storageOptions.storageType = options.storage as StorageType;\n    }\n\n    this.storage = sdk.storageManager.getTokenStorage({...storageOptions, useSeparateCookies: true});\n    this.clock = SdkClock.create(/* sdk, options */);\n    this.state = defaultState();\n  }\n\n  start() {\n    if (this.options.clearPendingRemoveTokens) {\n      this.clearPendingRemoveTokens();\n    }\n    this.setExpireEventTimeoutAll();\n    this.state.started = true;\n  }\n  \n  stop() {\n    this.clearExpireEventTimeoutAll();\n    this.state.started = false;\n  }\n\n  isStarted() {\n    return !!this.state.started;\n  }\n\n  getOptions(): TokenManagerOptions {\n    return clone(this.options);\n  }\n  \n  getExpireTime(token) {\n    const expireEarlySeconds = this.options.expireEarlySeconds || 0;\n    var expireTime = token.expiresAt - expireEarlySeconds;\n    return expireTime;\n  }\n  \n  hasExpired(token) {\n    var expireTime = this.getExpireTime(token);\n    return expireTime <= this.clock.now();\n  }\n  \n  emitExpired(key, token) {\n    this.emitter.emit(EVENT_EXPIRED, key, token);\n  }\n  \n  emitRenewed(key, freshToken, oldToken) {\n    this.emitter.emit(EVENT_RENEWED, key, freshToken, oldToken);\n  }\n  \n  emitAdded(key, token) {\n    this.emitter.emit(EVENT_ADDED, key, token);\n  }\n  \n  emitRemoved(key, token?) {\n    this.emitter.emit(EVENT_REMOVED, key, token);\n  }\n  \n  emitError(error) {\n    this.emitter.emit(EVENT_ERROR, error);\n  }\n  \n  clearExpireEventTimeout(key) {\n    clearTimeout(this.state.expireTimeouts[key] as any);\n    delete this.state.expireTimeouts[key];\n  \n    // Remove the renew promise (if it exists)\n    this.state.renewPromise = null;\n  }\n  \n  clearExpireEventTimeoutAll() {\n    var expireTimeouts = this.state.expireTimeouts;\n    for (var key in expireTimeouts) {\n      if (!Object.prototype.hasOwnProperty.call(expireTimeouts, key)) {\n        continue;\n      }\n      this.clearExpireEventTimeout(key);\n    }\n  }\n  \n  setExpireEventTimeout(key, token) {\n    if (isRefreshToken(token)) {\n      return;\n    }\n\n    var expireTime = this.getExpireTime(token);\n    var expireEventWait = Math.max(expireTime - this.clock.now(), 0) * 1000;\n  \n    // Clear any existing timeout\n    this.clearExpireEventTimeout(key);\n  \n    var expireEventTimeout = setTimeout(() => {\n      this.emitExpired(key, token);\n    }, expireEventWait);\n  \n    // Add a new timeout\n    this.state.expireTimeouts[key] = expireEventTimeout;\n  }\n  \n  setExpireEventTimeoutAll() {\n    var tokenStorage = this.storage.getStorage();\n    for(var key in tokenStorage) {\n      if (!Object.prototype.hasOwnProperty.call(tokenStorage, key)) {\n        continue;\n      }\n      var token = tokenStorage[key];\n      this.setExpireEventTimeout(key, token);\n    }\n  }\n  \n  // reset timeouts to setup autoRenew for tokens from other document context (tabs)\n  resetExpireEventTimeoutAll() {\n    this.clearExpireEventTimeoutAll();\n    this.setExpireEventTimeoutAll();\n  }\n  \n  add(key, token: Token) {\n    var tokenStorage = this.storage.getStorage();\n    validateToken(token);\n    tokenStorage[key] = token;\n    this.storage.setStorage(tokenStorage);\n    this.emitSetStorageEvent();\n    this.emitAdded(key, token);\n    this.setExpireEventTimeout(key, token);\n  }\n  \n  getSync(key): Token | undefined {\n    var tokenStorage = this.storage.getStorage();\n    return tokenStorage[key];\n  }\n  \n  async get(key): Promise<Token | undefined> {\n    return this.getSync(key);\n  }\n  \n  getTokensSync(): Tokens {\n    const tokens = {} as Tokens;\n    const tokenStorage = this.storage.getStorage();\n    Object.keys(tokenStorage).forEach(key => {\n      const token = tokenStorage[key];\n      if (isAccessToken(token)) {\n        tokens.accessToken = token;\n      } else if (isIDToken(token)) {\n        tokens.idToken = token;\n      } else if (isRefreshToken(token)) { \n        tokens.refreshToken = token;\n      }\n    });\n    return tokens;\n  }\n  \n  async getTokens(): Promise<Tokens> {\n    return this.getTokensSync();\n  }\n\n  getStorageKeyByType(type: TokenType): string {\n    const tokenStorage = this.storage.getStorage();\n    const key = Object.keys(tokenStorage).filter(key => {\n      const token = tokenStorage[key];\n      return (isAccessToken(token) && type === 'accessToken') \n        || (isIDToken(token) && type === 'idToken')\n        || (isRefreshToken(token) && type === 'refreshToken');\n    })[0];\n    return key;\n  }\n\n  private getTokenType(token: Token): TokenType {\n    if (isAccessToken(token)) {\n      return 'accessToken';\n    }\n    if (isIDToken(token)) {\n      return 'idToken';\n    }\n    if(isRefreshToken(token)) {\n      return 'refreshToken';\n    }\n    throw new AuthSdkError('Unknown token type');\n  }\n\n  // for synchronization of LocalStorage cross tabs for IE11\n  private emitSetStorageEvent() {\n    if (isIE11OrLess()) {\n      const storage = this.storage.getStorage();\n      this.emitter.emit(EVENT_SET_STORAGE, storage);\n    }\n  }\n\n  // used in `SyncStorageService` for synchronization of LocalStorage cross tabs for IE11\n  public getStorage() {\n    return this.storage;\n  }\n\n  setTokens(\n    tokens: Tokens,\n    // TODO: callbacks can be removed in the next major version OKTA-407224\n    accessTokenCb?: AccessTokenCallback, \n    idTokenCb?: IDTokenCallback,\n    refreshTokenCb?: RefreshTokenCallback\n  ): void {\n    const handleTokenCallback = (key, token) => {\n      const type = this.getTokenType(token);\n      if (type === 'accessToken') {\n        accessTokenCb && accessTokenCb(key, token);\n      } else if (type === 'idToken') {\n        idTokenCb && idTokenCb(key, token);\n      } else if (type === 'refreshToken') {\n        refreshTokenCb && refreshTokenCb(key, token);\n      }\n    };\n    const handleAdded = (key, token) => {\n      this.emitAdded(key, token);\n      this.setExpireEventTimeout(key, token);\n      handleTokenCallback(key, token);\n    };\n    const handleRenewed = (key, token, oldToken) => {\n      this.emitRenewed(key, token, oldToken);\n      this.clearExpireEventTimeout(key);\n      this.setExpireEventTimeout(key, token);\n      handleTokenCallback(key, token);\n    };\n    const handleRemoved = (key, token) => {\n      this.clearExpireEventTimeout(key);\n      this.emitRemoved(key, token);\n      handleTokenCallback(key, token);\n    };\n    \n    const types: TokenType[] = ['idToken', 'accessToken', 'refreshToken'];\n    const existingTokens = this.getTokensSync();\n\n    // valid tokens\n    types.forEach((type) => {\n      const token = tokens[type];\n      if (token) {\n        validateToken(token, type);\n      }\n    });\n  \n    // add token to storage\n    const storage = types.reduce((storage, type) => {\n      const token = tokens[type];\n      if (token) {\n        const storageKey = this.getStorageKeyByType(type) || type;\n        storage[storageKey] = token;\n      }\n      return storage;\n    }, {});\n    this.storage.setStorage(storage);\n    this.emitSetStorageEvent();\n\n    // emit event and start expiration timer\n    types.forEach(type => {\n      const newToken = tokens[type];\n      const existingToken = existingTokens[type];\n      const storageKey = this.getStorageKeyByType(type) || type;\n      if (newToken && existingToken) { // renew\n        // call handleRemoved first, since it clears timers\n        handleRemoved(storageKey, existingToken);\n        handleAdded(storageKey, newToken);\n        handleRenewed(storageKey, newToken, existingToken);\n      } else if (newToken) { // add\n        handleAdded(storageKey, newToken);\n      } else if (existingToken) { //remove\n        handleRemoved(storageKey, existingToken);\n      }\n    });\n  }\n  \n  remove(key) {\n    // Clear any listener for this token\n    this.clearExpireEventTimeout(key);\n  \n    var tokenStorage = this.storage.getStorage();\n    var removedToken = tokenStorage[key];\n    delete tokenStorage[key];\n    this.storage.setStorage(tokenStorage);\n    this.emitSetStorageEvent();\n  \n    this.emitRemoved(key, removedToken);\n  }\n  \n  // TODO: this methods is redundant and can be removed in the next major version OKTA-407224\n  async renewToken(token) {\n    return this.sdk.token?.renew(token);\n  }\n  // TODO: this methods is redundant and can be removed in the next major version OKTA-407224\n  validateToken(token: Token) {\n    return validateToken(token);\n  }\n\n  // TODO: renew method should take no param, change in the next major version OKTA-407224\n  renew(key): Promise<Token | undefined> {\n    // Multiple callers may receive the same promise. They will all resolve or reject from the same request.\n    if (this.state.renewPromise) {\n      return this.state.renewPromise;\n    }\n\n    try {\n      var token = this.getSync(key);\n      let shouldRenew = token !== undefined;\n      // explicitly check if key='accessToken' because token keys are not guaranteed (long story, features dragons)\n      if (!token && key === 'accessToken') {\n        // attempt token renewal if refresh token is present (improves consistency of autoRenew)\n        const refreshKey = this.getStorageKeyByType('refreshToken');\n        const refreshToken = this.getSync(refreshKey);\n        shouldRenew = refreshToken !== undefined;\n      }\n\n      if (!shouldRenew) {\n        throw new AuthSdkError('The tokenManager has no token for the key: ' + key);\n      }\n    }\n    catch (err) {\n      this.emitError(err);\n      return Promise.reject(err);\n    }\n\n    // Remove existing autoRenew timeout\n    this.clearExpireEventTimeout(key);\n  \n    // A refresh token means a replace instead of renewal\n    // Store the renew promise state, to avoid renewing again\n    const renewPromise = this.state.renewPromise = this.sdk.token.renewTokens()\n      .then(tokens => {\n        this.setTokens(tokens);\n\n        // return accessToken in case where access token doesn't exist\n        // but refresh token exists\n        if (!token && key === 'accessToken') {\n          const accessToken = tokens['accessToken'];\n          this.emitRenewed(key, accessToken, null);\n          return accessToken;\n        }\n\n        // resolve token based on the key\n        const tokenType = this.getTokenType(token!);\n        return tokens[tokenType];\n      })\n      .catch(err => {\n        // If renew fails, remove token from storage and emit error\n        this.remove(key);\n        err.tokenKey = key;\n        this.emitError(err);\n        throw err;\n      })\n      .finally(() => {\n        // Remove existing promise key\n        this.state.renewPromise = null;\n      });\n  \n    return renewPromise;\n  }\n  \n  clear() {\n    const tokens = this.getTokensSync();\n    this.clearExpireEventTimeoutAll();\n    this.storage.clearStorage();\n    this.emitSetStorageEvent();\n\n    Object.keys(tokens).forEach(key => {\n      this.emitRemoved(key, tokens[key]);\n    });\n  }\n\n  clearPendingRemoveTokens() {\n    const tokenStorage = this.storage.getStorage();\n    const removedTokens = {};\n    Object.keys(tokenStorage).forEach(key => {\n      if (tokenStorage[key].pendingRemove) {\n        removedTokens[key] = tokenStorage[key];\n        delete tokenStorage[key];\n      }\n    });\n    this.storage.setStorage(tokenStorage);\n    this.emitSetStorageEvent();\n    Object.keys(removedTokens).forEach(key => {\n      this.clearExpireEventTimeout(key);\n      this.emitRemoved(key, removedTokens[key]);\n    });\n  }\n\n  updateRefreshToken(token: RefreshToken) {\n    const key = this.getStorageKeyByType('refreshToken') || REFRESH_TOKEN_STORAGE_KEY;\n\n    // do not emit any event\n    var tokenStorage = this.storage.getStorage();\n    validateToken(token);\n    tokenStorage[key] = token;\n    this.storage.setStorage(tokenStorage);\n    this.emitSetStorageEvent();\n  }\n\n  removeRefreshToken () {\n    const key = this.getStorageKeyByType('refreshToken') || REFRESH_TOKEN_STORAGE_KEY;\n    this.remove(key);\n  }\n\n  addPendingRemoveFlags() {\n    const tokens = this.getTokensSync();\n    Object.keys(tokens).forEach(key => {\n      tokens[key].pendingRemove = true;\n    });\n    this.setTokens(tokens);\n  }\n  \n}\n","import { OAuthStorageManagerInterface, OAuthTransactionMeta, isTransactionMeta } from '../types';\n\nconst MAX_ENTRY_LIFETIME = 30 * 60 * 1000; // 30 minutes\n\nexport function pruneSharedStorage<M extends OAuthTransactionMeta>(storageManager: OAuthStorageManagerInterface<M>) {\n  const sharedStorage = storageManager.getSharedTansactionStorage();\n  const entries = sharedStorage.getStorage();\n  Object.keys(entries).forEach(state => {\n    const entry = entries[state];\n    const age = Date.now() - entry.dateCreated;\n    if (age > MAX_ENTRY_LIFETIME) {\n      delete entries[state];\n    }\n  });\n  sharedStorage.setStorage(entries);\n}\n\nexport function saveTransactionToSharedStorage<M extends OAuthTransactionMeta>(\n  storageManager: OAuthStorageManagerInterface<M>, state: string, meta: M\n) {\n  const sharedStorage = storageManager.getSharedTansactionStorage();\n  const entries = sharedStorage.getStorage();\n  entries[state] = {\n    dateCreated: Date.now(),\n    transaction: meta\n  };\n  sharedStorage.setStorage(entries);\n}\n\n\nexport function loadTransactionFromSharedStorage<M extends OAuthTransactionMeta>(\n  storageManager: OAuthStorageManagerInterface<M>, state: string\n) {\n  const sharedStorage = storageManager.getSharedTansactionStorage();\n  const entries = sharedStorage.getStorage();\n  const entry = entries[state];\n  if (entry && entry.transaction && isTransactionMeta(entry.transaction)) {\n    return entry.transaction;\n  }\n  return null;\n}\n\nexport function clearTransactionFromSharedStorage<M extends OAuthTransactionMeta>(\n  storageManager: OAuthStorageManagerInterface<M>, state: string\n) {\n  const sharedStorage = storageManager.getSharedTansactionStorage();\n  const entries = sharedStorage.getStorage();\n  delete entries[state];\n  sharedStorage.setStorage(entries);\n}\n","/*!\n * Copyright (c) 2015-present, Okta, Inc. and/or its affiliates. All rights reserved.\n * The Okta software accompanied by this notice is provided pursuant to the Apache License, Version 2.0 (the \"License.\")\n *\n * You may obtain a copy of the License at http://www.apache.org/licenses/LICENSE-2.0.\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT\n * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * \n * See the License for the specific language governing permissions and limitations under the License.\n */\n\nimport { StorageProvider } from '../storage/types';\nimport {\n  TransactionMeta,\n  isTransactionMeta,\n  TransactionMetaOptions,\n  TransactionManagerOptions,\n  OAuthTransactionMeta,\n  OAuthStorageManagerInterface,\n  ClearTransactionMetaOptions,\n  TransactionManagerInterface,\n  PKCETransactionMeta\n} from './types';\nimport { warn } from '../util';\nimport {\n  clearTransactionFromSharedStorage,\n  loadTransactionFromSharedStorage,\n  pruneSharedStorage,\n  saveTransactionToSharedStorage\n} from './util/sharedStorage';\n\n\nexport function createTransactionManager\n<\n  M extends OAuthTransactionMeta = PKCETransactionMeta,\n  S extends OAuthStorageManagerInterface<M> = OAuthStorageManagerInterface<M>\n>\n()\n{\n  return class TransactionManager implements TransactionManagerInterface\n  {\n    options: TransactionManagerOptions;\n    storageManager: S;\n    enableSharedStorage: boolean;\n    saveLastResponse: boolean;\n\n    constructor(options: TransactionManagerOptions) {\n      // eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n      this.storageManager = options.storageManager! as S;\n      this.enableSharedStorage = options.enableSharedStorage === false ? false : true;\n      this.saveLastResponse = options.saveLastResponse === false ? false : true;\n      this.options = options;\n    }\n\n    // eslint-disable-next-line complexity\n    clear(options: ClearTransactionMetaOptions = {}) {\n      const transactionStorage: StorageProvider = this.storageManager.getTransactionStorage();\n      const meta = transactionStorage.getStorage();\n\n      // Clear primary storage (by default, sessionStorage on browser)\n      transactionStorage.clearStorage();\n\n      // Usually we want to also clear shared storage unless another tab may need it to continue/complete a flow\n      if (this.enableSharedStorage && options.clearSharedStorage !== false) {\n        const state = options.state || meta?.state;\n        if (state) {\n          clearTransactionFromSharedStorage(this.storageManager, state);\n        }\n      }\n    }\n\n    // eslint-disable-next-line complexity\n    save(meta: M, options: TransactionMetaOptions = {}) {\n      // There must be only one transaction executing at a time.\n      // Before saving, check to see if a transaction is already stored.\n      // An existing transaction indicates a concurrency/race/overlap condition\n\n      let storage: StorageProvider = this.storageManager.getTransactionStorage();\n      const obj = storage.getStorage();\n      // oie process may need to update transaction in the middle of process for tracking purpose\n      // false alarm might be caused \n      // TODO: revisit for a better solution, https://oktainc.atlassian.net/browse/OKTA-430919\n      if (isTransactionMeta(obj) && !options.muteWarning) {\n        // eslint-disable-next-line max-len\n        warn('a saved auth transaction exists in storage. This may indicate another auth flow is already in progress.');\n      }\n\n      storage.setStorage(meta);\n\n      // Shared storage allows continuation of transaction in another tab\n      if (this.enableSharedStorage && meta.state) {\n        saveTransactionToSharedStorage(this.storageManager, meta.state, meta);\n      }\n    }\n\n    exists(options: TransactionMetaOptions = {}): boolean {\n      try {\n        const meta = this.load(options);\n        return !!meta;\n      } catch {\n        return false;\n      }\n    }\n\n    // load transaction meta from storage\n    // eslint-disable-next-line complexity,max-statements\n    load(options: TransactionMetaOptions = {}): TransactionMeta | null {\n\n      let meta: TransactionMeta;\n\n      // If state was passed, try loading transaction data from shared storage\n      if (this.enableSharedStorage && options.state) {\n        pruneSharedStorage(this.storageManager); // prune before load\n        meta = loadTransactionFromSharedStorage(this.storageManager, options.state);\n        if (isTransactionMeta(meta)) {\n          return meta;\n        }\n      }\n\n      let storage: StorageProvider = this.storageManager.getTransactionStorage();\n      meta = storage.getStorage();\n      if (isTransactionMeta(meta)) {\n        // if we have meta in the new location, there is no need to go further\n        return meta;\n      }\n\n      return null;\n    }\n\n  };\n}\n","/*!\n * Copyright (c) 2015-present, Okta, Inc. and/or its affiliates. All rights reserved.\n * The Okta software accompanied by this notice is provided pursuant to the Apache License, Version 2.0 (the \"License.\")\n *\n * You may obtain a copy of the License at http://www.apache.org/licenses/LICENSE-2.0.\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT\n * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n *\n * See the License for the specific language governing permissions and limitations under the License.\n *\n */\nimport { AuthSdkError } from '../errors';\nimport { JWTObject } from './types';\nimport { base64UrlToString } from '../crypto';\n\nexport function decodeToken(token: string): JWTObject {\n  var jwt = token.split('.');\n  var decodedToken: JWTObject;\n\n  try {\n    decodedToken = {\n      header: JSON.parse(base64UrlToString(jwt[0])),\n      payload: JSON.parse(base64UrlToString(jwt[1])),\n      signature: jwt[2]\n    };\n  } catch (e) {\n    throw new AuthSdkError('Malformed token');\n  }\n\n  return decodedToken;\n}\n","// References:\n// https://www.w3.org/TR/WebCryptoAPI/#concepts-key-storage\n// https://datatracker.ietf.org/doc/html/rfc9449\n\nimport {\n  webcrypto,\n  stringToBase64Url,\n  stringToBuffer,\n  bufferToBase64Url,\n  base64ToBase64Url,\n  btoa\n} from '../crypto';\nimport { AuthSdkError, OAuthError, WWWAuthError, isOAuthError, isWWWAuthError } from '../errors';\nimport { Tokens } from './types';\n\nexport interface DPoPClaims {\n  htm: string;\n  htu: string;\n  iat: number;\n  jti: string;\n  nonce?: string;\n  ath?: string;\n}\n\nexport interface DPoPProofParams {\n  keyPair: CryptoKeyPair;\n  url: string;\n  method: string;\n  nonce?: string;\n  accessToken?: string;\n}\n\nexport type ResourceDPoPProofParams = Omit<DPoPProofParams, 'keyPair' | 'nonce'>;\ntype DPoPProofTokenRequestParams = Omit<DPoPProofParams, 'accessToken'>;\n\nconst INDEXEDDB_NAME = 'OktaAuthJs';\nconst DB_KEY = 'DPoPKeys';\n\nexport function isDPoPNonceError(obj: any): obj is OAuthError | WWWAuthError {\n  return (\n    (isOAuthError(obj) || isWWWAuthError(obj)) &&\n    obj.errorCode === 'use_dpop_nonce'\n  );\n}\n\n/////////// crypto ///////////\n\nexport async function createJwt(header: object, claims: object, signingKey: CryptoKey): Promise<string> {\n  const head = stringToBase64Url(JSON.stringify(header));\n  const body = stringToBase64Url(JSON.stringify(claims));\n  const signature = await webcrypto.subtle.sign(\n    { name: signingKey.algorithm.name }, signingKey, stringToBuffer(`${head}.${body}`)\n  );\n  return `${head}.${body}.${base64ToBase64Url(bufferToBase64Url(signature))}`;\n}\n\nexport function cryptoRandomValue (byteLen = 32) {\n  return [...webcrypto.getRandomValues(new Uint8Array(byteLen))].map(v => v.toString(16)).join('');\n}\n\nexport async function generateKeyPair (): Promise<CryptoKeyPair> {\n  const algorithm = {\n    name: 'RSASSA-PKCS1-v1_5',\n    hash: 'SHA-256',\n    modulusLength: 2048,\n    publicExponent: new Uint8Array([0x01, 0x00, 0x01]),\n  };\n\n  // The \"false\" here makes it non-exportable\n  // https://caniuse.com/mdn-api_subtlecrypto_generatekey\n  return webcrypto.subtle.generateKey(algorithm, false, ['sign', 'verify']);\n}\n\nasync function hashAccessToken (accessToken: string): Promise<string> {\n  const buffer = new TextEncoder().encode(accessToken);\n  const hash = await webcrypto.subtle.digest('SHA-256', buffer);\n\n  return btoa(String.fromCharCode.apply(null, new Uint8Array(hash) as unknown as number[]))\n    .replace(/\\+/g, '-').replace(/\\//g, '_').replace(/=+$/, '');\n}\n\n/////////// indexeddb / keystore ///////////\n\n\n// https://developer.mozilla.org/en-US/docs/Web/API/IDBObjectStore#instance_methods\n// add additional methods as needed\nexport type StoreMethod = 'get' | 'add' | 'delete' | 'clear';\n\n// convenience abstraction for exposing IDBObjectStore instance\nfunction keyStore (): Promise<IDBObjectStore> {\n  return new Promise((resolve, reject) => {\n    try {\n      const indexedDB = window.indexedDB;\n      const req = indexedDB.open(INDEXEDDB_NAME, 1);\n\n      req.onerror = function () {\n        reject(req.error!);\n      };\n\n      req.onupgradeneeded = function () {\n        const db = req.result;\n        db.createObjectStore(DB_KEY);\n      };\n\n      req.onsuccess = function () {\n        const db = req.result;\n        const tx = db.transaction(DB_KEY, 'readwrite');\n\n        tx.onerror = function () {\n          reject(tx.error!);\n        };\n\n        const store = tx.objectStore(DB_KEY);\n\n        resolve(store);\n\n        tx.oncomplete = function () {\n          db.close();\n        };\n      };\n    }\n    catch (err) {\n      reject(err);\n    }\n  });\n}\n\n// convenience abstraction for wrapping IDBObjectStore methods in promises\nasync function invokeStoreMethod (method: StoreMethod, ...args: any[]): Promise<IDBRequest> {\n  const store = await keyStore();\n  return new Promise((resolve, reject) => {\n    // https://github.com/microsoft/TypeScript/issues/49700\n    // https://github.com/microsoft/TypeScript/issues/49802\n    // @ts-expect-error ts(2556)\n    const req = store[method](...args);\n    req.onsuccess = function () {\n      resolve(req);\n    };\n    req.onerror = function () {\n      reject(req.error);\n    };\n  });\n}\n\nasync function storeKeyPair (pairId: string, keyPair: CryptoKeyPair) {\n  await invokeStoreMethod('add', keyPair, pairId);\n  return keyPair;\n}\n\n// attempts to find keyPair stored at given key, otherwise throws\nexport async function findKeyPair (pairId?: string): Promise<CryptoKeyPair> {\n  if (pairId) {\n    const req = await invokeStoreMethod('get', pairId);\n    if (req.result) {\n      return req.result;\n    }\n  }\n\n  // defaults to throwing unless keyPair is found\n  throw new AuthSdkError(`Unable to locate dpop key pair required for refresh${pairId ? ` (${pairId})` : ''}`);\n}\n\nexport async function clearDPoPKeyPair (pairId: string): Promise<void> {\n  await invokeStoreMethod('delete', pairId);\n}\n\nexport async function clearAllDPoPKeyPairs (): Promise<void> {\n  await invokeStoreMethod('clear');\n}\n\n// generates a crypto (non-extractable) private key pair and writes it to indexeddb, returns key (id)\nexport async function createDPoPKeyPair (): Promise<{keyPair: CryptoKeyPair, keyPairId: string}> {\n  const keyPairId = cryptoRandomValue(4);\n  const keyPair = await generateKeyPair();\n  await storeKeyPair(keyPairId, keyPair);\n  return { keyPair, keyPairId };\n}\n\n// will clear PK from storage if certain token conditions are met\n/* eslint max-len: [2, 132], complexity: [2, 12] */\nexport async function clearDPoPKeyPairAfterRevoke (revokedToken: 'access' | 'refresh', tokens: Tokens): Promise<void> {\n  let shouldClear = false;\n\n  const { accessToken, refreshToken } = tokens;\n\n  // revoking access token and refresh token doesn't exist\n  if (revokedToken === 'access' && accessToken && accessToken.tokenType === 'DPoP' && !refreshToken) {\n    shouldClear = true;\n  }\n\n  // revoking refresh token and access token doesn't exist\n  if (revokedToken === 'refresh' && refreshToken && !accessToken) {\n    shouldClear = true;\n  }\n\n  const pairId = accessToken?.dpopPairId ?? refreshToken?.dpopPairId;\n  if (shouldClear && pairId) {\n    await clearDPoPKeyPair(pairId);\n  }\n}\n\n/////////// proof generation methods ///////////\n\nexport async function generateDPoPProof ({ keyPair, url, method, nonce, accessToken }: DPoPProofParams): Promise<string> {\n  const { kty, crv, e, n, x, y } = await webcrypto.subtle.exportKey('jwk', keyPair.publicKey);\n  const header = {\n    alg: 'RS256',\n    typ: 'dpop+jwt',\n    jwk: { kty, crv, e, n, x, y }\n  };\n\n  const claims: DPoPClaims = {\n    htm: method,\n    htu: url,\n    iat: Math.floor(Date.now() / 1000),\n    jti: cryptoRandomValue(),\n  };\n\n  if (nonce) {\n    claims.nonce = nonce;\n  }\n\n  // encode access token\n  if (accessToken) {\n    claims.ath = await hashAccessToken(accessToken);\n  }\n\n  return createJwt(header, claims, keyPair.privateKey);\n}\n\n/* eslint max-len: [2, 132] */\nexport async function generateDPoPForTokenRequest ({ keyPair, url, method, nonce }: DPoPProofTokenRequestParams): Promise<string> {\n  const params: DPoPProofParams = { keyPair, url, method };\n  if (nonce) {\n    params.nonce = nonce;\n  }\n\n  return generateDPoPProof(params);\n}\n","/* eslint-disable @typescript-eslint/no-non-null-assertion */\n/*!\n * Copyright (c) 2015-present, Okta, Inc. and/or its affiliates. All rights reserved.\n * The Okta software accompanied by this notice is provided pursuant to the Apache License, Version 2.0 (the \"License.\")\n *\n * You may obtain a copy of the License at http://www.apache.org/licenses/LICENSE-2.0.\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT\n * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * \n * See the License for the specific language governing permissions and limitations under the License.\n */\n\n\nimport { isString, removeNils, toQueryString } from '../../util';\nimport { AuthSdkError } from '../../errors';\nimport { OAuthParams, TokenParams } from '../types';\n\nexport function convertTokenParamsToOAuthParams(tokenParams: TokenParams) {\n  // Quick validation\n  if (!tokenParams.clientId) {\n    throw new AuthSdkError('A clientId must be specified in the OktaAuth constructor to get a token');\n  }\n\n  if (isString(tokenParams.responseType) && tokenParams.responseType.indexOf(' ') !== -1) {\n    throw new AuthSdkError('Multiple OAuth responseTypes must be defined as an array');\n  }\n\n  // Convert our params to their actual OAuth equivalents\n  var oauthParams: OAuthParams = {\n    'client_id': tokenParams.clientId,\n    'code_challenge': tokenParams.codeChallenge,\n    'code_challenge_method': tokenParams.codeChallengeMethod,\n    'display': tokenParams.display,\n    'idp': tokenParams.idp,\n    'idp_scope': tokenParams.idpScope,\n    'login_hint': tokenParams.loginHint,\n    'max_age': tokenParams.maxAge,\n    'nonce': tokenParams.nonce,\n    'prompt': tokenParams.prompt,\n    'redirect_uri': tokenParams.redirectUri,\n    'response_mode': tokenParams.responseMode,\n    'response_type': tokenParams.responseType,\n    'sessionToken': tokenParams.sessionToken,\n    'state': tokenParams.state,\n    'acr_values': tokenParams.acrValues,\n    'enroll_amr_values': tokenParams.enrollAmrValues,\n  };\n  oauthParams = removeNils(oauthParams) as OAuthParams;\n\n  ['idp_scope', 'response_type', 'enroll_amr_values'].forEach(function (mayBeArray) {\n    if (Array.isArray(oauthParams[mayBeArray])) {\n      oauthParams[mayBeArray] = oauthParams[mayBeArray].join(' ');\n    }\n  });\n\n  if (tokenParams.responseType!.indexOf('id_token') !== -1 &&\n    tokenParams.scopes!.indexOf('openid') === -1) {\n    throw new AuthSdkError('openid scope must be specified in the scopes argument when requesting an id_token');\n  } else if (tokenParams.scopes) {\n    oauthParams.scope = tokenParams.scopes!.join(' ');\n  }\n\n  return oauthParams;\n}\n\nexport function buildAuthorizeParams(tokenParams: TokenParams) {\n  var oauthQueryParams = convertTokenParamsToOAuthParams(tokenParams);\n  return toQueryString({ \n    ...oauthQueryParams, \n    ...(tokenParams.extraParams && { ...tokenParams.extraParams })\n  });\n}\n","/*!\n * Copyright (c) 2015-present, Okta, Inc. and/or its affiliates. All rights reserved.\n * The Okta software accompanied by this notice is provided pursuant to the Apache License, Version 2.0 (the \"License.\")\n *\n * You may obtain a copy of the License at http://www.apache.org/licenses/LICENSE-2.0.\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT\n * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * \n * See the License for the specific language governing permissions and limitations under the License.\n */\n\n\nimport { AuthSdkError, AuthApiError } from '../../errors';\nimport { CustomUrls, OAuthParams, OAuthResponse, RefreshToken, TokenParams } from '../types';\nimport { removeNils, toQueryString } from '../../util';\nimport { httpRequest, OktaAuthHttpInterface } from '../../http';\nimport { generateDPoPForTokenRequest, isDPoPNonceError } from '../dpop';\n\nexport interface TokenEndpointParams extends TokenParams {\n  dpopKeyPair?: CryptoKeyPair;\n}\n\ninterface TokenRequestParams {\n  url: string;\n  data: any;\n  dpopKeyPair?: CryptoKeyPair;\n  nonce?: string;\n}\n\nfunction validateOptions(options: TokenEndpointParams) {\n  // Quick validation\n  if (!options.clientId) {\n    throw new AuthSdkError('A clientId must be specified in the OktaAuth constructor to get a token');\n  }\n\n  if (!options.redirectUri) {\n    throw new AuthSdkError('The redirectUri passed to /authorize must also be passed to /token');\n  }\n\n  if (!options.authorizationCode && !options.interactionCode) {\n    throw new AuthSdkError('An authorization code (returned from /authorize) must be passed to /token');\n  }\n\n  if (!options.codeVerifier) {\n    throw new AuthSdkError('The \"codeVerifier\" (generated and saved by your app) must be passed to /token');\n  }\n}\n\nfunction getPostData(sdk, options: TokenParams): string {\n  // Convert Token params to OAuth params, sent to the /token endpoint\n  var params: OAuthParams = removeNils({\n    'client_id': options.clientId,\n    'redirect_uri': options.redirectUri,\n    'grant_type': options.interactionCode ? 'interaction_code' : 'authorization_code',\n    'code_verifier': options.codeVerifier\n  });\n\n  if (options.interactionCode) {\n    params['interaction_code'] = options.interactionCode;\n  } else if (options.authorizationCode) {\n    params.code = options.authorizationCode;\n  }\n\n  const { clientSecret } = sdk.options;\n  if (clientSecret) {\n    params['client_secret'] = clientSecret;\n  }\n\n  // Encode as URL string\n  return toQueryString(params).slice(1);\n}\n\n/* eslint complexity: [2, 10] */\nasync function makeTokenRequest (sdk, { url, data, nonce, dpopKeyPair }: TokenRequestParams): Promise<OAuthResponse> {\n  const method = 'POST';\n  const headers: any = {\n    'Content-Type': 'application/x-www-form-urlencoded',\n  };\n\n  if (sdk.options.dpop) {\n    if (!dpopKeyPair) {\n      throw new AuthSdkError('DPoP is configured but no key pair was provided');\n    }\n\n    const proof = await generateDPoPForTokenRequest({ url, method, nonce, keyPair: dpopKeyPair });\n    headers.DPoP = proof;\n  }\n\n  try {\n    const resp = await httpRequest(sdk, {\n      url,\n      method,\n      args: data,\n      headers\n    });\n    return resp;\n  }\n  catch (err) {\n    if (isDPoPNonceError(err) && !nonce) {\n      const dpopNonce = err.resp?.headers['dpop-nonce'];\n      if (!dpopNonce) {\n        // throws error is dpop-nonce header cannot be found, prevents infinite loop\n        throw new AuthApiError(\n          {errorSummary: 'No `dpop-nonce` header found when required'},\n          err.resp ?? undefined    // yay ts\n        );\n      }\n      return makeTokenRequest(sdk, { url, data, dpopKeyPair, nonce: dpopNonce });\n    }\n    throw err;\n  }\n}\n\n// exchange authorization code for an access token\nexport async function postToTokenEndpoint(sdk, options: TokenEndpointParams, urls: CustomUrls): Promise<OAuthResponse> {\n  validateOptions(options);\n  var data = getPostData(sdk, options);\n\n  const params: TokenRequestParams = {\n    url: urls.tokenUrl!,\n    data,\n    dpopKeyPair: options?.dpopKeyPair\n  };\n\n  return makeTokenRequest(sdk, params);\n}\n\nexport async function postRefreshToken(\n  sdk: OktaAuthHttpInterface,\n  options: TokenEndpointParams,\n  refreshToken: RefreshToken\n): Promise<OAuthResponse> {\n  const data = Object.entries({\n    client_id: options.clientId, // eslint-disable-line camelcase\n    grant_type: 'refresh_token', // eslint-disable-line camelcase\n    scope: refreshToken.scopes.join(' '),\n    refresh_token: refreshToken.refreshToken, // eslint-disable-line camelcase\n  }).map(function ([name, value]) {\n    // eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n    return name + '=' + encodeURIComponent(value!);\n  }).join('&');\n\n  let url = refreshToken.tokenUrl;\n  if (options.extraParams && Object.keys(options.extraParams).length >= 1) {\n    url += toQueryString(options.extraParams);\n  }\n\n  const params: TokenRequestParams = {\n    url,\n    data,\n    dpopKeyPair: options?.dpopKeyPair\n  };\n\n  return makeTokenRequest(sdk, params);\n}\n","/*!\n * Copyright (c) 2015-present, Okta, Inc. and/or its affiliates. All rights reserved.\n * The Okta software accompanied by this notice is provided pursuant to the Apache License, Version 2.0 (the \"License.\")\n *\n * You may obtain a copy of the License at http://www.apache.org/licenses/LICENSE-2.0.\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT\n * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n *\n * See the License for the specific language governing permissions and limitations under the License.\n *\n */\nimport { get } from '../../http';\nimport { find } from '../../util';\nimport { OktaAuthOAuthInterface, WellKnownResponse } from '../types';\nimport AuthSdkError from '../../errors/AuthSdkError';\n\nexport function getWellKnown(sdk: OktaAuthOAuthInterface, issuer?: string): Promise<WellKnownResponse> {\n  var authServerUri = (issuer || sdk.options.issuer);\n  return get(sdk, authServerUri + '/.well-known/openid-configuration', {\n    cacheResponse: true\n  });\n}\n\nexport function getKey(sdk: OktaAuthOAuthInterface, issuer: string, kid: string): Promise<string> {\n  var httpCache = sdk.storageManager.getHttpCache(sdk.options.cookies);\n\n  return getWellKnown(sdk, issuer)\n  .then(function(wellKnown) {\n    var jwksUri = wellKnown['jwks_uri'];\n\n    // Check our kid against the cached version (if it exists and isn't expired)\n    var cacheContents = httpCache.getStorage();\n    var cachedResponse = cacheContents[jwksUri];\n    if (cachedResponse && Date.now()/1000 < cachedResponse.expiresAt) {\n      var cachedKey = find(cachedResponse.response.keys, {\n        kid: kid\n      });\n\n      if (cachedKey) {\n        return cachedKey;\n      }\n    }\n\n    // Remove cache for the key\n    httpCache.clearStorage(jwksUri);\n\n    // Pull the latest keys if the key wasn't in the cache\n    return get(sdk, jwksUri, {\n      cacheResponse: true\n    })\n    .then(function(res) {\n      var key = find(res.keys, {\n        kid: kid\n      });\n\n      if (key) {\n        return key;\n      }\n\n      throw new AuthSdkError('The key id, ' + kid + ', was not found in the server\\'s keys');\n    });\n  });\n}\n","/* eslint-disable @typescript-eslint/no-non-null-assertion */\n/* eslint-disable max-len */\n/*!\n * Copyright (c) 2015-present, Okta, Inc. and/or its affiliates. All rights reserved.\n * The Okta software accompanied by this notice is provided pursuant to the Apache License, Version 2.0 (the \"License.\")\n *\n * You may obtain a copy of the License at http://www.apache.org/licenses/LICENSE-2.0.\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT\n * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n *\n * See the License for the specific language governing permissions and limitations under the License.\n *\n */\nimport { CustomUrls, OAuthResponse, OAuthResponseType, OktaAuthOAuthInterface, TokenParams, TokenResponse } from './types';\nimport { getOAuthUrls, getDefaultTokenParams } from './util';\nimport { clone } from '../util';\nimport { postToTokenEndpoint, TokenEndpointParams } from './endpoints/token';\nimport { handleOAuthResponse } from './handleOAuthResponse';\nimport { createDPoPKeyPair, findKeyPair } from './dpop';\n\n// codeVerifier is required. May pass either an authorizationCode or interactionCode\nexport async function exchangeCodeForTokens(sdk: OktaAuthOAuthInterface, tokenParams: TokenParams, urls?: CustomUrls): Promise<TokenResponse> {\n  urls = urls || getOAuthUrls(sdk, tokenParams);\n  // build params using defaults + options\n  tokenParams = Object.assign({}, getDefaultTokenParams(sdk), clone(tokenParams));\n\n  const {\n    authorizationCode,\n    interactionCode,\n    codeVerifier,\n    clientId,\n    redirectUri,\n    scopes,\n    ignoreSignature,\n    state,\n    acrValues,\n    dpop,\n    dpopPairId,\n    extraParams\n  } = tokenParams;\n\n  // postToTokenEndpoint() params\n  const getTokenOptions: TokenEndpointParams = {\n    clientId,\n    redirectUri,\n    authorizationCode,\n    interactionCode,\n    codeVerifier,\n    dpop,\n  };\n\n  // `handleOAuthResponse` hanadles responses from both `/authorize` and `/token` endpoints\n  // Here we modify the response from `/token` so that it more closely matches a response from `/authorize`\n  // `responseType` is used to validate that the expected tokens were returned\n  const responseType: OAuthResponseType[] = ['token']; // an accessToken will always be returned\n  if (scopes!.indexOf('openid') !== -1) {\n    responseType.push('id_token'); // an idToken will be returned if \"openid\" is in the scopes\n  }\n  // handleOAuthResponse() params\n  const handleResponseOptions: TokenParams = {\n    clientId,\n    redirectUri,\n    scopes,\n    responseType,\n    ignoreSignature,\n    acrValues,\n    extraParams\n  };\n\n  try {\n    if (dpop) {\n      // token refresh, KP should already exist\n      if (dpopPairId) {\n        const keyPair = await findKeyPair(dpopPairId);\n        getTokenOptions.dpopKeyPair = keyPair;\n        handleResponseOptions.dpop = dpop;\n        handleResponseOptions.dpopPairId = dpopPairId;\n      }\n      else {\n        const { keyPair, keyPairId } = await createDPoPKeyPair();\n        getTokenOptions.dpopKeyPair = keyPair;\n        handleResponseOptions.dpop = dpop;\n        handleResponseOptions.dpopPairId = keyPairId;\n      }\n    }\n\n    const oauthResponse: OAuthResponse = await postToTokenEndpoint(sdk, getTokenOptions, urls);\n\n    const tokenResponse: TokenResponse = await handleOAuthResponse(sdk, handleResponseOptions, oauthResponse, urls!);\n    tokenResponse.code = authorizationCode;\n    tokenResponse.state = state!;\n    return tokenResponse;\n  }\n  finally {\n    sdk.transactionManager.clear();\n  }\n}\n","/* eslint-disable @typescript-eslint/no-non-null-assertion */\n/*!\n * Copyright (c) 2015-present, Okta, Inc. and/or its affiliates. All rights reserved.\n * The Okta software accompanied by this notice is provided pursuant to the Apache License, Version 2.0 (the \"License.\")\n *\n * You may obtain a copy of the License at http://www.apache.org/licenses/LICENSE-2.0.\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT\n * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n *\n * See the License for the specific language governing permissions and limitations under the License.\n *\n */\nimport { OktaAuthOAuthInterface, EnrollAuthenticatorOptions } from './types';\nimport { clone } from '../util';\nimport { prepareEnrollAuthenticatorParams, createEnrollAuthenticatorMeta } from './util';\nimport { buildAuthorizeParams } from './endpoints/authorize';\n\nexport function enrollAuthenticator(\n  sdk: OktaAuthOAuthInterface, \n  options: EnrollAuthenticatorOptions\n): void {\n  options = clone(options) || {};\n\n  const params = prepareEnrollAuthenticatorParams(sdk, options);\n  const meta = createEnrollAuthenticatorMeta(sdk, params);\n  const requestUrl = meta.urls.authorizeUrl + buildAuthorizeParams(params);\n  sdk.transactionManager.save(meta);\n  if (sdk.options.setLocation) {\n    sdk.options.setLocation(requestUrl);\n  } else {\n    window.location.assign(requestUrl);\n  }\n}\n","/*!\n * Copyright (c) 2015-present, Okta, Inc. and/or its affiliates. All rights reserved.\n * The Okta software accompanied by this notice is provided pursuant to the Apache License, Version 2.0 (the \"License.\")\n *\n * You may obtain a copy of the License at http://www.apache.org/licenses/LICENSE-2.0.\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT\n * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n *\n * See the License for the specific language governing permissions and limitations under the License.\n *\n */\n\nimport { PromiseQueue } from '../../util';\nimport { decodeToken } from '../decodeToken';\nimport { exchangeCodeForTokens } from '../exchangeCodeForTokens';\nimport { getUserInfo } from '../getUserInfo';\nimport { getWithoutPrompt } from '../getWithoutPrompt';\nimport { getWithPopup } from '../getWithPopup';\nimport { getWithRedirect } from '../getWithRedirect';\nimport { parseFromUrl } from '../parseFromUrl';\nimport { renewToken } from '../renewToken';\nimport { renewTokens } from '../renewTokens';\nimport { renewTokensWithRefresh } from '../renewTokensWithRefresh';\nimport { revokeToken } from '../revokeToken';\nimport { oidcIntrospect } from '../introspect';\nimport {\n  AccessToken,\n  CustomUserClaims,\n  GetWithRedirectFunction,\n  IDToken,\n  OktaAuthOAuthInterface,\n  ParseFromUrlInterface,\n  TokenAPI,\n  UserClaims,\n  Endpoints,\n} from '../types';\nimport { isLoginRedirect, prepareTokenParams } from '../util';\nimport { verifyToken } from '../verifyToken';\nimport { enrollAuthenticator } from '../enrollAuthenticator';\n\n// Factory\nexport function createTokenAPI(sdk: OktaAuthOAuthInterface, queue: PromiseQueue): TokenAPI {\n  const useQueue = (method) => {\n    return PromiseQueue.prototype.push.bind(queue, method, null);\n  };\n\n  const getWithRedirectFn = useQueue(getWithRedirect.bind(null, sdk)) as GetWithRedirectFunction;\n\n  // eslint-disable-next-line max-len\n  const parseFromUrlFn = useQueue(parseFromUrl.bind(null, sdk)) as ParseFromUrlInterface;\n  const parseFromUrlApi: ParseFromUrlInterface = Object.assign(parseFromUrlFn, {\n    // This is exposed so we can mock getting window.history in our tests\n    _getHistory: function() {\n      return window.history;\n    },\n\n    // This is exposed so we can mock getting window.location in our tests\n    _getLocation: function() {\n      return window.location;\n    },\n\n    // This is exposed so we can mock getting window.document in our tests\n    _getDocument: function() {\n      return window.document;\n    }\n  });\n\n  const token: TokenAPI ={\n    prepareTokenParams: prepareTokenParams.bind(null, sdk),\n    exchangeCodeForTokens: exchangeCodeForTokens.bind(null, sdk),\n    getWithoutPrompt: getWithoutPrompt.bind(null, sdk),\n    getWithPopup: getWithPopup.bind(null, sdk),\n    getWithRedirect: getWithRedirectFn,\n    parseFromUrl: parseFromUrlApi,\n    decode: decodeToken,\n    revoke: revokeToken.bind(null, sdk),\n    renew: renewToken.bind(null, sdk),\n    renewTokensWithRefresh: renewTokensWithRefresh.bind(null, sdk),\n    renewTokens: renewTokens.bind(null, sdk),\n    getUserInfo: <C extends CustomUserClaims = CustomUserClaims>(\n      accessTokenObject: AccessToken,\n      idTokenObject: IDToken\n    ): Promise<UserClaims<C>> => {\n      return getUserInfo(sdk, accessTokenObject, idTokenObject);\n    },\n    verify: verifyToken.bind(null, sdk),\n    isLoginRedirect: isLoginRedirect.bind(null, sdk),\n    introspect: oidcIntrospect.bind(null, sdk),\n  };\n\n  // Wrap certain async token API methods using PromiseQueue to avoid issues with concurrency\n  // 'getWithRedirect' and 'parseFromUrl' are already wrapped\n  const toWrap = [\n    'getWithoutPrompt',\n    'getWithPopup',\n    'revoke',\n    'renew',\n    'renewTokensWithRefresh',\n    'renewTokens'\n  ];\n  toWrap.forEach(key => {\n    token[key] = useQueue(token[key]);\n  });\n\n  return token;\n}\n\nexport function createEndpoints(sdk: OktaAuthOAuthInterface): Endpoints {\n  return {\n    authorize: {\n      enrollAuthenticator: enrollAuthenticator.bind(null, sdk),\n    }\n  };\n}\n","import { StorageManagerConstructor } from '../../storage/types';\nimport { OktaAuthConstructor, OktaAuthOptionsConstructor } from '../../base/types';\n\nimport { createOktaAuthBase } from '../../base';\nimport { mixinStorage } from '../../storage/mixin';\nimport { mixinSession } from '../../session/mixin';\nimport { mixinHttp } from '../../http/mixin';\nimport { mixinOAuth } from '../mixin';\nimport {\n  OAuthTransactionMeta,\n  OktaAuthOAuthInterface,\n  OktaAuthOAuthOptions,\n  OAuthStorageManagerInterface,\n  PKCETransactionMeta,\n  TransactionManagerConstructor,\n  TransactionManagerInterface\n} from '../types';\n\nexport function createOktaAuthOAuth\n<\n  M extends OAuthTransactionMeta = PKCETransactionMeta,\n  S extends OAuthStorageManagerInterface<M> = OAuthStorageManagerInterface<M>,\n  O extends OktaAuthOAuthOptions = OktaAuthOAuthOptions,\n  TM extends TransactionManagerInterface = TransactionManagerInterface\n>\n(\n  StorageManagerConstructor: StorageManagerConstructor<S>,\n  OptionsConstructor: OktaAuthOptionsConstructor<O>,\n  TransactionManagerConstructor: TransactionManagerConstructor<TM>\n):  OktaAuthConstructor<OktaAuthOAuthInterface<M, S, O, TM>>\n{\n  const Base = createOktaAuthBase(OptionsConstructor);\n  const WithStorage = mixinStorage<S, O>(Base, StorageManagerConstructor);\n  const WithHttp = mixinHttp<S, O>(WithStorage);\n  const WithSession = mixinSession<S, O>(WithHttp);\n  const WithOAuth = mixinOAuth<M, S, O, TM>(WithSession, TransactionManagerConstructor);\n  return WithOAuth;\n}\n","\n/* global document */\n/* eslint-disable complexity, max-statements */\n/*!\n * Copyright (c) 2015-present, Okta, Inc. and/or its affiliates. All rights reserved.\n * The Okta software accompanied by this notice is provided pursuant to the Apache License, Version 2.0 (the \"License.\")\n *\n * You may obtain a copy of the License at http://www.apache.org/licenses/LICENSE-2.0.\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT\n * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n *\n * See the License for the specific language governing permissions and limitations under the License.\n *\n */\nimport {\n  getOAuthUrls,\n  loadFrame,\n  addPostMessageListener\n} from './util';\n\nimport AuthSdkError from '../errors/AuthSdkError';\n\nimport {\n  OktaAuthOAuthInterface,\n  TokenParams,\n  PopupParams,\n  OAuthResponse,\n} from './types';\n\nimport { prepareTokenParams } from './util/prepareTokenParams';\nimport { buildAuthorizeParams } from './endpoints/authorize';\nimport { handleOAuthResponse } from './handleOAuthResponse';\n/*\n * Retrieve an idToken from an Okta or a third party idp\n *\n * Two main flows:\n *\n *  1) Exchange a sessionToken for a token\n *\n *    Required:\n *      clientId: passed via the OktaAuth constructor or into getToken\n *      sessionToken: 'yourtoken'\n *\n *    Optional:\n *      redirectUri: defaults to window.location.href\n *      scopes: defaults to ['openid', 'email']\n *\n *    Forced:\n *      prompt: 'none'\n *      responseMode: 'okta_post_message'\n *      display: undefined\n *\n *  2) Get a token from an idp\n *\n *    Required:\n *      clientId: passed via the OktaAuth constructor or into getToken\n *\n *    Optional:\n *      redirectUri: defaults to window.location.href\n *      scopes: defaults to ['openid', 'email']\n *      idp: defaults to Okta as an idp\n *      prompt: no default. Pass 'none' to throw an error if user is not signed in\n *\n *    Forced:\n *      display: 'popup'\n *\n *  Only common optional params shown. Any OAuth parameters not explicitly forced are available to override\n *\n * @param {Object} oauthOptions\n * @param {String} [oauthOptions.clientId] ID of this client\n * @param {String} [oauthOptions.redirectUri] URI that the iframe or popup will go to once authenticated\n * @param {String[]} [oauthOptions.scopes] OAuth 2.0 scopes to request (openid must be specified)\n * @param {String} [oauthOptions.idp] ID of an external IdP to use for user authentication\n * @param {String} [oauthOptions.sessionToken] Bootstrap Session Token returned by the Okta Authentication API\n * @param {String} [oauthOptions.prompt] Determines whether the Okta login will be displayed on failure.\n *                                       Use 'none' to prevent this behavior\n *\n * @param {Object} options\n * @param {Integer} [options.timeout] Time in ms before the flow is automatically terminated. Defaults to 120000\n * @param {String} [options.popupTitle] Title dispayed in the popup.\n *                                      Defaults to 'External Identity Provider User Authentication'\n */\nexport function getToken(sdk: OktaAuthOAuthInterface, options: TokenParams & PopupParams) {\n  if (arguments.length > 2) {\n    return Promise.reject(new AuthSdkError('As of version 3.0, \"getToken\" takes only a single set of options'));\n  }\n\n  options = options || {};\n\n  // window object cannot be serialized, save for later use\n  // TODO: move popup related params into a separate options object\n  const popupWindow = options.popupWindow;\n  options.popupWindow = undefined;\n\n  return prepareTokenParams(sdk, options)\n    .then(function (tokenParams: TokenParams) {\n\n      // Start overriding any options that don't make sense\n      var sessionTokenOverrides = {\n        prompt: 'none',\n        responseMode: 'okta_post_message',\n        display: null\n      };\n\n      var idpOverrides = {\n        display: 'popup'\n      };\n\n      if (options.sessionToken) {\n        Object.assign(tokenParams, sessionTokenOverrides);\n      } else if (options.idp) {\n        Object.assign(tokenParams, idpOverrides);\n      }\n\n      // Use the query params to build the authorize url\n      var requestUrl,\n        endpoint,\n        urls;\n\n      // Get authorizeUrl and issuer\n      urls = getOAuthUrls(sdk, tokenParams);\n      endpoint = options.codeVerifier ? urls.tokenUrl : urls.authorizeUrl;\n      requestUrl = endpoint + buildAuthorizeParams(tokenParams);\n\n      // Determine the flow type\n      var flowType;\n      if (tokenParams.sessionToken || tokenParams.display === null) {\n        flowType = 'IFRAME';\n      } else if (tokenParams.display === 'popup') {\n        flowType = 'POPUP';\n      } else {\n        flowType = 'IMPLICIT';\n      }\n\n      // Execute the flow type\n      switch (flowType) {\n        case 'IFRAME':\n          var iframePromise = addPostMessageListener(sdk, options.timeout, tokenParams.state);\n          var iframeEl = loadFrame(requestUrl);\n          return iframePromise\n            .then(function (res) {\n              return handleOAuthResponse(sdk, tokenParams, res as OAuthResponse, urls);\n            })\n            .finally(function () {\n              if (document.body.contains(iframeEl)) {\n                iframeEl.parentElement?.removeChild(iframeEl);\n              }\n            });\n\n        case 'POPUP':\n          var oauthPromise; // resolves with OAuth response\n\n          // Add listener on postMessage before window creation, so\n          // postMessage isn't triggered before we're listening\n          if (tokenParams.responseMode === 'okta_post_message') {\n            if (!sdk.features.isPopupPostMessageSupported()) {\n              throw new AuthSdkError('This browser doesn\\'t have full postMessage support');\n            }\n            oauthPromise = addPostMessageListener(sdk, options.timeout, tokenParams.state);\n          }\n\n          // Redirect for authorization\n          // popupWindown can be null when popup is blocked\n          if (popupWindow) { \n            popupWindow.location.assign(requestUrl);\n          }\n\n          // The popup may be closed without receiving an OAuth response. Setup a poller to monitor the window.\n          var popupPromise = new Promise(function (resolve, reject) {\n            var closePoller = setInterval(function () {\n              if (!popupWindow || popupWindow.closed) {\n                clearInterval(closePoller);\n                reject(new AuthSdkError('Unable to parse OAuth flow response'));\n              }\n            }, 100);\n\n            // Proxy the OAuth promise results\n            oauthPromise\n              .then(function (res) {\n                clearInterval(closePoller);\n                resolve(res);\n              })\n              .catch(function (err) {\n                clearInterval(closePoller);\n                reject(err);\n              });\n          });\n\n          return popupPromise\n            .then(function (res) {\n              return handleOAuthResponse(sdk, tokenParams, res as OAuthResponse, urls);\n            })\n            .finally(function () {\n              if (popupWindow && !popupWindow.closed) {\n                popupWindow.close();\n              }\n            });\n\n        default:\n          throw new AuthSdkError('The full page redirect flow is not supported');\n      }\n    });\n}","/* eslint-disable complexity */\n/*!\n * Copyright (c) 2015-present, Okta, Inc. and/or its affiliates. All rights reserved.\n * The Okta software accompanied by this notice is provided pursuant to the Apache License, Version 2.0 (the \"License.\")\n *\n * You may obtain a copy of the License at http://www.apache.org/licenses/LICENSE-2.0.\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT\n * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n *\n * See the License for the specific language governing permissions and limitations under the License.\n *\n */\nimport { AuthSdkError, OAuthError, WWWAuthError, AuthApiError } from '../errors';\nimport { httpRequest } from '../http';\nimport { AccessToken, IDToken, UserClaims, isAccessToken, isIDToken, CustomUserClaims } from './types';\n\nexport async function getUserInfo<T extends CustomUserClaims = CustomUserClaims>(\n  sdk, accessTokenObject: AccessToken,\n  idTokenObject: IDToken\n): Promise<UserClaims<T>> {\n  // If token objects were not passed, attempt to read from the TokenManager\n  if (!accessTokenObject) {\n    accessTokenObject = (await sdk.tokenManager.getTokens()).accessToken as AccessToken;\n  }\n  if (!idTokenObject) {\n    idTokenObject = (await sdk.tokenManager.getTokens()).idToken as IDToken;\n  }\n\n  if (!accessTokenObject || !isAccessToken(accessTokenObject)) {\n    return Promise.reject(new AuthSdkError('getUserInfo requires an access token object'));\n  }\n\n  if (!idTokenObject || !isIDToken(idTokenObject)) {\n    return Promise.reject(new AuthSdkError('getUserInfo requires an ID token object'));\n  }\n\n  const options: any = {\n    url: accessTokenObject.userinfoUrl,\n    method: 'GET',\n    accessToken: accessTokenObject.accessToken\n  };\n\n  if (sdk.options.dpop) {\n    const headers = await sdk.getDPoPAuthorizationHeaders({...options, accessToken: accessTokenObject });\n    options.headers = headers;\n    delete options.accessToken;      // unset to prevent overriding Auth header with Bearer Token\n  }\n\n  return httpRequest(sdk, options)\n    .then(userInfo => {\n      // Only return the userinfo response if subjects match to mitigate token substitution attacks\n      if (userInfo.sub === idTokenObject.claims.sub) {\n        return userInfo;\n      }\n      return Promise.reject(new AuthSdkError('getUserInfo request was rejected due to token mismatch'));\n    })\n    .catch(function (err) {\n      // throw OAuthError to avoid breaking change (when dpop is not being used)\n      if (err instanceof WWWAuthError && !sdk.options.dpop) {\n        const { error, errorDescription } = err;\n        throw new OAuthError(error, errorDescription);\n      }\n\n      // throw OAuthError to avoid breaking change (when dpop is not being used)\n      if (!sdk.options.dpop) {\n        let e = err;\n        if (err instanceof AuthApiError && err?.meta?.wwwAuthHeader) {\n          e = WWWAuthError.parseHeader(err.meta.wwwAuthHeader as string);\n        }\n\n        if (e instanceof WWWAuthError) {\n          const { error, errorDescription } = e;\n          throw new OAuthError(error, errorDescription);\n        }\n      }\n\n      throw err;\n    });\n}\n","/*!\n * Copyright (c) 2015-present, Okta, Inc. and/or its affiliates. All rights reserved.\n * The Okta software accompanied by this notice is provided pursuant to the Apache License, Version 2.0 (the \"License.\")\n *\n * You may obtain a copy of the License at http://www.apache.org/licenses/LICENSE-2.0.\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT\n * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n *\n * See the License for the specific language governing permissions and limitations under the License.\n *\n */\nimport { AuthSdkError } from '../errors';\nimport { OktaAuthOAuthInterface, TokenParams, TokenResponse } from './types';\nimport { clone } from '../util';\nimport { getToken } from './getToken';\nimport { loadPopup } from './util';\n\nexport function getWithPopup(sdk: OktaAuthOAuthInterface, options: TokenParams): Promise<TokenResponse> {\n  if (arguments.length > 2) {\n    return Promise.reject(new AuthSdkError('As of version 3.0, \"getWithPopup\" takes only a single set of options'));\n  }\n\n  // some browsers (safari, firefox) block popup if it's initialed from an async process\n  // here we create the popup window immediately after user interaction\n  // then redirect to the /authorize endpoint when the requestUrl is available\n  const popupWindow = loadPopup('/', options);\n  options = clone(options) || {};\n  Object.assign(options, {\n    display: 'popup',\n    responseMode: 'okta_post_message',\n    popupWindow\n  });\n  return getToken(sdk, options);\n}\n","/* eslint-disable @typescript-eslint/no-non-null-assertion */\n/*!\n * Copyright (c) 2015-present, Okta, Inc. and/or its affiliates. All rights reserved.\n * The Okta software accompanied by this notice is provided pursuant to the Apache License, Version 2.0 (the \"License.\")\n *\n * You may obtain a copy of the License at http://www.apache.org/licenses/LICENSE-2.0.\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT\n * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n *\n * See the License for the specific language governing permissions and limitations under the License.\n *\n */\nimport { AuthSdkError } from '../errors';\nimport { OktaAuthOAuthInterface, TokenParams } from './types';\nimport { clone } from '../util';\nimport { prepareTokenParams, createOAuthMeta } from './util';\nimport { buildAuthorizeParams } from './endpoints/authorize';\n\nexport async function getWithRedirect(sdk: OktaAuthOAuthInterface, options?: TokenParams): Promise<void> {\n  if (arguments.length > 2) {\n    return Promise.reject(new AuthSdkError('As of version 3.0, \"getWithRedirect\" takes only a single set of options'));\n  }\n\n  options = clone(options) || {};\n\n  const tokenParams = await prepareTokenParams(sdk, options);\n  const meta = createOAuthMeta(sdk, tokenParams);\n  const requestUrl = meta.urls.authorizeUrl + buildAuthorizeParams(tokenParams);\n  sdk.transactionManager.save(meta);\n  if (sdk.options.setLocation) {\n    sdk.options.setLocation(requestUrl);\n  } else {\n    window.location.assign(requestUrl);\n  }\n}\n","/*!\n * Copyright (c) 2015-present, Okta, Inc. and/or its affiliates. All rights reserved.\n * The Okta software accompanied by this notice is provided pursuant to the Apache License, Version 2.0 (the \"License.\")\n *\n * You may obtain a copy of the License at http://www.apache.org/licenses/LICENSE-2.0.\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT\n * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n *\n * See the License for the specific language governing permissions and limitations under the License.\n *\n */\nimport { AuthSdkError } from '../errors';\nimport { OktaAuthOAuthInterface, TokenParams, TokenResponse } from './types';\nimport { clone } from '../util';\nimport { getToken } from './getToken';\n\nexport function getWithoutPrompt(sdk: OktaAuthOAuthInterface, options: TokenParams): Promise<TokenResponse> {\n  if (arguments.length > 2) {\n    return Promise.reject(new AuthSdkError('As of version 3.0, \"getWithoutPrompt\" takes only a single set of options'));\n  }\n  \n  options = clone(options) || {};\n  Object.assign(options, {\n    prompt: 'none',\n    responseMode: 'okta_post_message',\n    display: null\n  });\n  return getToken(sdk, options);\n}\n\n","/* eslint-disable @typescript-eslint/no-non-null-assertion */\n\n/* eslint-disable complexity, max-statements */\n/*!\n * Copyright (c) 2015-present, Okta, Inc. and/or its affiliates. All rights reserved.\n * The Okta software accompanied by this notice is provided pursuant to the Apache License, Version 2.0 (the \"License.\")\n *\n * You may obtain a copy of the License at http://www.apache.org/licenses/LICENSE-2.0.\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT\n * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n *\n * See the License for the specific language governing permissions and limitations under the License.\n *\n */\nimport { clone } from '../util';\nimport {\n  getOAuthUrls,\n} from './util/oauth';\nimport { AuthSdkError, OAuthError } from '../errors';\nimport {\n  OktaAuthOAuthInterface,\n  TokenVerifyParams,\n  IDToken,\n  OAuthResponse,\n  TokenParams,\n  TokenResponse,\n  CustomUrls,\n  Tokens,\n} from './types';\nimport { verifyToken } from './verifyToken';\nimport { getDefaultTokenParams } from './util';\n\nfunction validateResponse(res: OAuthResponse, oauthParams: TokenParams) {\n  if (res['error'] && res['error_description']) {\n    throw new OAuthError(res['error'], res['error_description']);\n  }\n\n  if (res.state !== oauthParams.state) {\n    throw new AuthSdkError('OAuth flow response state doesn\\'t match request state');\n  }\n\n  // https://datatracker.ietf.org/doc/html/rfc9449#token-response\n  // \"A token_type of DPoP MUST be included in the access token response to signal to the client\"\n  if (oauthParams.dpop && res.token_type !== 'DPoP') {\n    throw new AuthSdkError('Unable to parse OAuth flow response: DPoP was configured but \"token_type\" was not DPoP');\n  }\n}\n\nexport async function handleOAuthResponse(\n  sdk: OktaAuthOAuthInterface,\n  tokenParams: TokenParams,\n  res: OAuthResponse,\n  urls?: CustomUrls\n): Promise<TokenResponse> {\n  const pkce = sdk.options.pkce !== false;\n\n\n  // The result contains an authorization_code and PKCE is enabled \n  // `exchangeCodeForTokens` will call /token then call `handleOauthResponse` recursively with the result\n  if (pkce && (res.code || res.interaction_code)) {\n    return sdk.token.exchangeCodeForTokens(Object.assign({}, tokenParams, {\n      authorizationCode: res.code,\n      interactionCode: res.interaction_code\n    }), urls);\n  }\n\n  tokenParams = tokenParams || getDefaultTokenParams(sdk);\n  urls = urls || getOAuthUrls(sdk, tokenParams);\n\n  let responseType = tokenParams.responseType || [];\n  if (!Array.isArray(responseType) && responseType !== 'none') {\n    responseType = [responseType];\n  }\n\n  let scopes;\n  if (res.scope) {\n    scopes = res.scope.split(' ');\n  } else {\n    scopes = clone(tokenParams.scopes);\n  }\n  const clientId = tokenParams.clientId || sdk.options.clientId;\n\n  // Handling the result from implicit flow or PKCE token exchange\n  validateResponse(res, tokenParams);\n\n  const tokenDict = {} as Tokens;\n  const expiresIn = res.expires_in;\n  const tokenType = res.token_type;\n  const accessToken = res.access_token;\n  const idToken = res.id_token;\n  const refreshToken = res.refresh_token;\n  const now = Math.floor(Date.now()/1000);\n\n  if (accessToken) {\n    const accessJwt = sdk.token.decode(accessToken);\n    tokenDict.accessToken = {\n      accessToken: accessToken,\n      claims: accessJwt.payload,\n      expiresAt: Number(expiresIn) + now,\n      tokenType: tokenType!,\n      scopes: scopes,\n      authorizeUrl: urls.authorizeUrl!,\n      userinfoUrl: urls.userinfoUrl!\n    };\n\n    if (tokenParams.dpopPairId) {\n      tokenDict.accessToken.dpopPairId = tokenParams.dpopPairId;\n    }\n\n    if (tokenParams.extraParams) {\n      tokenDict.accessToken.extraParams = tokenParams.extraParams;\n    }\n  }\n\n  if (refreshToken) {\n    tokenDict.refreshToken = {\n      refreshToken: refreshToken,\n      // should not be used, this is the accessToken expire time\n      // TODO: remove \"expiresAt\" in the next major version OKTA-407224\n      expiresAt: Number(expiresIn) + now, \n      scopes: scopes,\n      tokenUrl: urls.tokenUrl!,\n      authorizeUrl: urls.authorizeUrl!,\n      issuer: urls.issuer!,\n    };\n\n    if (tokenParams.dpopPairId) {\n      tokenDict.refreshToken.dpopPairId = tokenParams.dpopPairId;\n    }\n\n    if (tokenParams.extraParams) {\n      tokenDict.refreshToken.extraParams = tokenParams.extraParams;\n    }\n  }\n\n  if (idToken) {\n    const idJwt = sdk.token.decode(idToken);\n    const idTokenObj: IDToken = {\n      idToken: idToken,\n      claims: idJwt.payload,\n      expiresAt: idJwt.payload.exp! - idJwt.payload.iat! + now, // adjusting expiresAt to be in local time\n      scopes: scopes,\n      authorizeUrl: urls.authorizeUrl!,\n      issuer: urls.issuer!,\n      clientId: clientId!\n    };\n\n    if (tokenParams.extraParams) {\n      idTokenObj.extraParams = tokenParams.extraParams;\n    }\n\n    const validationParams: TokenVerifyParams = {\n      clientId: clientId!,\n      issuer: urls.issuer!,\n      nonce: tokenParams.nonce,\n      accessToken: accessToken,\n      acrValues: tokenParams.acrValues\n    };\n\n    if (tokenParams.ignoreSignature !== undefined) {\n      validationParams.ignoreSignature = tokenParams.ignoreSignature;\n    }\n\n    await verifyToken(sdk, idTokenObj, validationParams);\n    tokenDict.idToken = idTokenObj;\n  }\n\n  // Validate received tokens against requested response types \n  if (responseType.indexOf('token') !== -1 && !tokenDict.accessToken) {\n    // eslint-disable-next-line max-len\n    throw new AuthSdkError('Unable to parse OAuth flow response: response type \"token\" was requested but \"access_token\" was not returned.');\n  }\n  if (responseType.indexOf('id_token') !== -1 && !tokenDict.idToken) {\n    // eslint-disable-next-line max-len\n    throw new AuthSdkError('Unable to parse OAuth flow response: response type \"id_token\" was requested but \"id_token\" was not returned.');\n  }\n\n  return {\n    tokens: tokenDict,\n    state: res.state!,\n    code: res.code,\n    responseType\n  };\n  \n}","/*!\n * Copyright (c) 2015-present, Okta, Inc. and/or its affiliates. All rights reserved.\n * The Okta software accompanied by this notice is provided pursuant to the Apache License, Version 2.0 (the \"License.\")\n *\n * You may obtain a copy of the License at http://www.apache.org/licenses/LICENSE-2.0.\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT\n * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n *\n * See the License for the specific language governing permissions and limitations under the License.\n *\n */\n\nimport { AuthSdkError } from '../errors';\nimport { getWellKnown } from './endpoints/well-known';\nimport { post } from '../http';\nimport { toQueryString } from '../util';\nimport { btoa } from '../crypto';\nimport { Token, TokenKind } from './types';\n\nconst hintMap = {\n  accessToken: 'access_token',\n  idToken: 'id_token',\n  refreshToken: 'refresh_token'\n};\n\n/* eslint complexity: [2, 9] */\nexport async function oidcIntrospect (sdk, kind: TokenKind, token?: Token) {\n  let issuer: string;\n  let clientId: string = sdk.options.clientId;\n  let clientSecret: string | undefined = sdk.options.clientSecret;\n\n  if (!token) {\n    token = sdk.tokenManager.getTokens()[kind];\n  }\n\n  if (!token) {\n    throw new AuthSdkError(`unable to find ${kind} in storage or fn params`);\n  }\n\n  if (kind !== TokenKind.ACCESS) {\n    issuer = (token as any)?.issuer;\n  }\n  else {\n    issuer = (token as any)?.claims?.iss;\n  }\n  issuer = issuer || sdk.options.issuer;\n\n  if (!clientId) {\n    throw new AuthSdkError('A clientId must be specified in the OktaAuth constructor to introspect a token');\n  }\n  if (!issuer) {\n    throw new AuthSdkError('Unable to find issuer');\n  }\n\n  const { introspection_endpoint: introspectUrl }  = await getWellKnown(sdk, issuer);\n  const authHeader = clientSecret ? btoa(`${clientId}:${clientSecret}`) : btoa(clientId);\n  const args = toQueryString({\n    // eslint-disable-next-line camelcase\n    token_type_hint: hintMap[kind],\n    token: token[kind]    // extract raw token string from token object\n  }).slice(1);\n  return post(sdk, introspectUrl, args, {\n    headers: {\n      'Content-Type': 'application/x-www-form-urlencoded',\n      'Authorization': 'Basic ' + authHeader\n    }\n  });\n}\n","import { httpRequest, RequestOptions } from '../../http';\nimport { OktaAuthConstructor } from '../../base/types';\nimport { \n  PromiseQueue,\n  isFunction\n} from '../../util';\nimport { CryptoAPI } from '../../crypto/types';\nimport * as crypto from '../../crypto';\nimport {\n  AccessToken,\n  CustomUserClaims,\n  IDToken,\n  IsAuthenticatedOptions,\n  OAuthResponseType,\n  OAuthStorageManagerInterface,\n  OAuthTransactionMeta,\n  OktaAuthOAuthInterface,\n  OktaAuthOAuthOptions,\n  PkceAPI,\n  PKCETransactionMeta,\n  RefreshToken,\n  SigninWithRedirectOptions,\n  SignoutOptions,\n  SignoutRedirectUrlOptions,\n  TokenAPI,\n  TransactionManagerInterface,\n  TransactionManagerConstructor,\n  UserClaims,\n  Endpoints,\n  DPoPRequest,\n  DPoPHeaders\n} from '../types';\nimport PKCE from '../util/pkce';\nimport { createEndpoints, createTokenAPI } from '../factory/api';\nimport { TokenManager } from '../TokenManager';\nimport { getOAuthUrls, isLoginRedirect, hasResponseType } from '../util';\nimport { \n  generateDPoPProof,\n  clearDPoPKeyPair,\n  clearAllDPoPKeyPairs,\n  clearDPoPKeyPairAfterRevoke,\n  findKeyPair,\n  isDPoPNonceError\n} from '../dpop';\nimport { AuthSdkError, WWWAuthError } from '../../errors';\n\nimport { OktaAuthSessionInterface } from '../../session/types';\nimport { provideOriginalUri } from './node';\nexport function mixinOAuth\n<\n  M extends OAuthTransactionMeta = PKCETransactionMeta,\n  S extends OAuthStorageManagerInterface<M> = OAuthStorageManagerInterface<M>,\n  O extends OktaAuthOAuthOptions = OktaAuthOAuthOptions,\n  TM extends TransactionManagerInterface = TransactionManagerInterface,\n  TBase extends OktaAuthConstructor<OktaAuthSessionInterface<S, O>>\n    = OktaAuthConstructor<OktaAuthSessionInterface<S, O>>\n>\n(\n  Base: TBase,\n  TransactionManagerConstructor: TransactionManagerConstructor<TM>,\n): TBase & OktaAuthConstructor<OktaAuthOAuthInterface<M, S, O, TM>>\n{\n  const WithOriginalUri = provideOriginalUri(Base);\n  return class OktaAuthOAuth extends WithOriginalUri\n  implements OktaAuthOAuthInterface<M, S, O, TM>\n  {\n    static crypto: CryptoAPI = crypto;\n    token: TokenAPI;\n    tokenManager: TokenManager;\n    transactionManager: TM;\n    pkce: PkceAPI;\n    endpoints: Endpoints;\n\n    _pending: { handleLogin: boolean };\n    _tokenQueue: PromiseQueue;\n    \n    constructor(...args: any[]) {\n      super(...args);\n\n      this.transactionManager = new TransactionManagerConstructor(Object.assign({\n        storageManager: this.storageManager,\n      }, this.options.transactionManager));\n  \n      this.pkce = {\n        DEFAULT_CODE_CHALLENGE_METHOD: PKCE.DEFAULT_CODE_CHALLENGE_METHOD,\n        generateVerifier: PKCE.generateVerifier,\n        computeChallenge: PKCE.computeChallenge\n      };\n  \n      this._pending = { handleLogin: false };\n\n      this._tokenQueue = new PromiseQueue();\n\n      this.token = createTokenAPI(this, this._tokenQueue);\n\n      // TokenManager\n      this.tokenManager = new TokenManager(this, this.options.tokenManager);\n\n      this.endpoints = createEndpoints(this);\n    }\n\n    // inherited from subclass\n    clearStorage(): void {\n      super.clearStorage();\n      \n      // Clear all local tokens\n      this.tokenManager.clear();\n    }\n\n    // Returns true if both accessToken and idToken are not expired\n    // If `autoRenew` option is set, will attempt to renew expired tokens before returning.\n    // eslint-disable-next-line complexity\n    async isAuthenticated(options: IsAuthenticatedOptions = {}): Promise<boolean> {\n      // TODO: remove dependency on tokenManager options in next major version - OKTA-473815\n      const { autoRenew, autoRemove } = this.tokenManager.getOptions();\n\n      const shouldRenew = options.onExpiredToken ? options.onExpiredToken === 'renew' : autoRenew;\n      const shouldRemove = options.onExpiredToken ? options.onExpiredToken === 'remove' : autoRemove;\n\n      let { accessToken } = this.tokenManager.getTokensSync();\n      if (accessToken && this.tokenManager.hasExpired(accessToken)) {\n        accessToken = undefined;\n        if (shouldRenew) {\n          try {\n            accessToken = await this.tokenManager.renew('accessToken') as AccessToken;\n          } catch {\n            // Renew errors will emit an \"error\" event \n          }\n        } else if (shouldRemove) {\n          this.tokenManager.remove('accessToken');\n        }\n      }\n\n      let { idToken } = this.tokenManager.getTokensSync();\n      if (idToken && this.tokenManager.hasExpired(idToken)) {\n        idToken = undefined;\n        if (shouldRenew) {\n          try {\n            idToken = await this.tokenManager.renew('idToken') as IDToken;\n          } catch {\n            // Renew errors will emit an \"error\" event \n          }\n        } else if (shouldRemove) {\n          this.tokenManager.remove('idToken');\n        }\n      }\n\n      return !!(accessToken && idToken);\n    }\n\n\n    async signInWithRedirect(opts: SigninWithRedirectOptions = {}) {\n      const { originalUri, ...additionalParams } = opts;\n      if(this._pending.handleLogin) { \n        // Don't trigger second round\n        return;\n      }\n\n      this._pending.handleLogin = true;\n      try {\n        // Trigger default signIn redirect flow\n        if (originalUri) {\n          this.setOriginalUri(originalUri);\n        }\n        const params = Object.assign({\n          // TODO: remove this line when default scopes are changed OKTA-343294\n          scopes: this.options.scopes || ['openid', 'email', 'profile']\n        }, additionalParams);\n        await this.token.getWithRedirect(params);\n      } finally {\n        this._pending.handleLogin = false;\n      }\n    }\n\n    async getUser<T extends CustomUserClaims = CustomUserClaims>(): Promise<UserClaims<T>> {\n      const { idToken, accessToken } = this.tokenManager.getTokensSync();\n      return this.token.getUserInfo(accessToken, idToken);\n    }\n  \n    getIdToken(): string | undefined {\n      const { idToken } = this.tokenManager.getTokensSync();\n      return idToken ? idToken.idToken : undefined;\n    }\n  \n    getAccessToken(): string | undefined {\n      const { accessToken } = this.tokenManager.getTokensSync();\n      return accessToken ? accessToken.accessToken : undefined;\n    }\n  \n    getRefreshToken(): string | undefined {\n      const { refreshToken } = this.tokenManager.getTokensSync();\n      return refreshToken ? refreshToken.refreshToken : undefined;\n    }\n\n    async getOrRenewAccessToken(): Promise<string | null> {\n      const { accessToken } = this.tokenManager.getTokensSync();\n      if (accessToken && !this.tokenManager.hasExpired(accessToken)) {\n        return accessToken.accessToken;\n      }\n      try {\n        const key = this.tokenManager.getStorageKeyByType('accessToken');\n        const token = await this.tokenManager.renew(key ?? 'accessToken');\n        return (token as AccessToken)?.accessToken ?? null;\n      }\n      catch (err) {\n        this.emitter.emit('error', err);\n        return null;\n      }\n    }\n  \n    /**\n     * Store parsed tokens from redirect url\n     */\n    async storeTokensFromRedirect(): Promise<void> {\n      const { tokens, responseType } = await this.token.parseFromUrl();\n      if (responseType !== 'none') {\n        this.tokenManager.setTokens(tokens);\n      }\n    }\n  \n    isLoginRedirect(): boolean {\n      return isLoginRedirect(this);\n    }\n\n    isPKCE(): boolean {\n      return !!this.options.pkce;\n    }\n\n    hasResponseType(responseType: OAuthResponseType): boolean {\n      return hasResponseType(responseType, this.options);\n    }\n  \n    isAuthorizationCodeFlow(): boolean {\n      return this.hasResponseType('code');\n    }\n\n    // Escape hatch method to make arbitrary OKTA API call\n    async invokeApiMethod(options: RequestOptions): Promise<unknown> {\n      if (!options.accessToken) {\n        const accessToken = (await this.tokenManager.getTokens()).accessToken as AccessToken;\n        options.accessToken = accessToken?.accessToken;\n      }\n      return httpRequest(this, options);\n    }\n    \n    // Revokes the access token for the application session\n    async revokeAccessToken(accessToken?: AccessToken): Promise<unknown> {\n      if (!accessToken) {\n        const tokens = await this.tokenManager.getTokens();\n        accessToken = tokens.accessToken;\n        const accessTokenKey = this.tokenManager.getStorageKeyByType('accessToken');\n        this.tokenManager.remove(accessTokenKey);\n\n        if (this.options.dpop) {\n          await clearDPoPKeyPairAfterRevoke('access', tokens);\n        }\n      }\n      // Access token may have been removed. In this case, we will silently succeed.\n      if (!accessToken) {\n        return Promise.resolve(null);\n      }\n      return this.token.revoke(accessToken);\n    }\n\n    // Revokes the refresh token for the application session\n    async revokeRefreshToken(refreshToken?: RefreshToken): Promise<unknown> {\n      if (!refreshToken) {\n        const tokens = await this.tokenManager.getTokens();\n        refreshToken = tokens.refreshToken;\n        const refreshTokenKey = this.tokenManager.getStorageKeyByType('refreshToken');\n        this.tokenManager.remove(refreshTokenKey);\n\n        if (this.options.dpop) {\n          await clearDPoPKeyPairAfterRevoke('refresh', tokens);\n        }\n      }\n      // Refresh token may have been removed. In this case, we will silently succeed.\n      if (!refreshToken) {\n        return Promise.resolve(null);\n      }\n      return this.token.revoke(refreshToken);\n    }\n\n    getSignOutRedirectUrl(options: SignoutRedirectUrlOptions = {}) {\n      let {\n        idToken,\n        postLogoutRedirectUri,\n        state,\n      } = options;\n      if (!idToken) {\n        idToken = this.tokenManager.getTokensSync().idToken as IDToken;\n      }\n      if (!idToken) {\n        return '';\n      }\n      if (postLogoutRedirectUri === undefined) {\n        postLogoutRedirectUri = this.options.postLogoutRedirectUri;\n      }\n\n      const logoutUrl = getOAuthUrls(this).logoutUrl;\n      const idTokenHint = idToken.idToken; // a string\n      let logoutUri = logoutUrl + '?id_token_hint=' + encodeURIComponent(idTokenHint);\n      if (postLogoutRedirectUri) {\n        logoutUri += '&post_logout_redirect_uri=' + encodeURIComponent(postLogoutRedirectUri);\n      } \n      // State allows option parameters to be passed to logout redirect uri\n      if (state) {\n        logoutUri += '&state=' + encodeURIComponent(state);\n      }\n\n      return logoutUri;\n    }\n\n    // Revokes refreshToken or accessToken, clears all local tokens, then redirects to Okta to end the SSO session.\n    // eslint-disable-next-line complexity, max-statements\n    async signOut(options?: SignoutOptions): Promise<boolean> {\n      options = Object.assign({}, options);\n    \n      // postLogoutRedirectUri must be whitelisted in Okta Admin UI\n      const defaultUri = window.location.origin;\n      const currentUri = window.location.href;\n      // Fix for issue/1410 - allow for no postLogoutRedirectUri to be passed, resulting in /logout default behavior\n      //    \"If no Okta session exists, this endpoint has no effect and the browser is redirected immediately to the\n      //    Okta sign-in page or the post_logout_redirect_uri (if specified).\"\n      // - https://developer.okta.com/docs/reference/api/oidc/#logout\n      const postLogoutRedirectUri = options.postLogoutRedirectUri === null ? null :\n        (options.postLogoutRedirectUri\n        || this.options.postLogoutRedirectUri\n        || defaultUri);\n      const state = options?.state;\n      \n    \n      let accessToken = options.accessToken;\n      let refreshToken = options.refreshToken;\n      const revokeAccessToken = options.revokeAccessToken !== false;\n      const revokeRefreshToken = options.revokeRefreshToken !== false;\n    \n      if (revokeRefreshToken && typeof refreshToken === 'undefined') {\n        refreshToken = this.tokenManager.getTokensSync().refreshToken as RefreshToken;\n      }\n\n      if (revokeAccessToken && typeof accessToken === 'undefined') {\n        accessToken = this.tokenManager.getTokensSync().accessToken as AccessToken;\n      }\n    \n      if (!options.idToken) {\n        options.idToken = this.tokenManager.getTokensSync().idToken as IDToken;\n      }\n\n      if (revokeRefreshToken && refreshToken) {\n        await this.revokeRefreshToken(refreshToken);\n      }\n\n      if (revokeAccessToken && accessToken) {\n        await this.revokeAccessToken(accessToken);\n      }\n\n      const dpopPairId = accessToken?.dpopPairId ?? refreshToken?.dpopPairId;\n      if (this.options.dpop && dpopPairId) {\n        await clearDPoPKeyPair(dpopPairId);\n      }\n\n      const logoutUri = this.getSignOutRedirectUrl({ ...options, postLogoutRedirectUri });\n      // No logoutUri? This can happen if the storage was cleared.\n      // Fallback to XHR signOut, then simulate a redirect to the post logout uri\n      if (!logoutUri) {\n        // local tokens are cleared once session is closed\n        const sessionClosed = await this.closeSession();   // can throw if the user cannot be signed out\n        const redirectUri = new URL(postLogoutRedirectUri || defaultUri); // during fallback, redirectUri cannot be null\n        if (state) {\n          redirectUri.searchParams.append('state', state);\n        }\n        if (postLogoutRedirectUri === currentUri) {\n          // window.location.reload(); // force a hard reload if URI is not changing\n          window.location.href = redirectUri.href;\n        } else {\n          window.location.assign(redirectUri.href);\n        }\n        return sessionClosed;\n      } else {\n        if (options.clearTokensBeforeRedirect) {\n          // Clear all local tokens\n          this.tokenManager.clear();\n        } else {\n          this.tokenManager.addPendingRemoveFlags();\n        }\n        // Flow ends with logout redirect\n        window.location.assign(logoutUri);\n        return true;\n      }\n    }\n\n    async getDPoPAuthorizationHeaders (params: DPoPRequest): Promise<DPoPHeaders> {\n      if (!this.options.dpop) {\n        throw new AuthSdkError('DPoP is not configured for this client instance');\n      }\n\n      let { accessToken } = params;\n      if (!accessToken) {\n        accessToken = (this.tokenManager.getTokensSync()).accessToken;\n      }\n\n      if (!accessToken) {\n        throw new AuthSdkError('AccessToken is required to generate a DPoP Proof');\n      }\n\n      const keyPair = await findKeyPair(accessToken?.dpopPairId);\n      const proof = await generateDPoPProof({...params, keyPair, accessToken: accessToken.accessToken});\n      return {\n        Authorization: `DPoP ${accessToken.accessToken}`,\n        Dpop: proof\n      };\n    }\n\n    async clearDPoPStorage (clearAll=false): Promise<void> {\n      if (clearAll) {\n        return clearAllDPoPKeyPairs();\n      }\n\n      const tokens = await this.tokenManager.getTokens();\n      const keyPair = tokens.accessToken?.dpopPairId || tokens.refreshToken?.dpopPairId;\n\n      if (keyPair) {\n        await clearDPoPKeyPair(keyPair);\n      }\n    }\n\n    parseUseDPoPNonceError (headers: HeadersInit): string | null {\n      const wwwAuth = WWWAuthError.getWWWAuthenticateHeader(headers);\n      const wwwErr = WWWAuthError.parseHeader(wwwAuth ?? '');\n      if (isDPoPNonceError(wwwErr)) {\n        let nonce: string | null = null;\n        if (isFunction((headers as Headers)?.get)) {\n          nonce = (headers as Headers).get('DPoP-Nonce');\n        }\n        nonce = nonce ?? headers['dpop-nonce'] ?? headers['DPoP-Nonce'];\n        return nonce;\n      }\n\n      return null;\n    }\n  };\n\n}\n","import { REFERRER_PATH_STORAGE_KEY } from '../../constants';\nimport browserStorage from '../../browser/browserStorage';\nimport { OktaAuthStorageInterface } from '../../storage';\nimport { OktaAuthConstructor } from '../../base';\nimport {\n  OAuthStorageManagerInterface,\n  OAuthTransactionMeta,\n  OktaAuthOAuthOptions,\n  OriginalUriApi,\n  PKCETransactionMeta,\n} from '../types';\n\nexport function provideOriginalUri\n<\n  M extends OAuthTransactionMeta = PKCETransactionMeta,\n  S extends OAuthStorageManagerInterface<M> = OAuthStorageManagerInterface<M>,\n  O extends OktaAuthOAuthOptions = OktaAuthOAuthOptions,\n  TBase extends OktaAuthConstructor<OktaAuthStorageInterface<S, O>>\n    = OktaAuthConstructor<OktaAuthStorageInterface<S, O>> \n>\n(BaseClass: TBase) {\n  return class WithOriginalUri extends BaseClass implements OriginalUriApi {\n    setOriginalUri(originalUri: string, state?: string): void {\n      // always store in session storage\n      const sessionStorage = browserStorage.getSessionStorage();\n      sessionStorage.setItem(REFERRER_PATH_STORAGE_KEY, originalUri);\n  \n      // to support multi-tab flows, set a state in constructor or pass as param\n      state = state || this.options.state;\n      if (state) {\n        const sharedStorage = this.storageManager.getOriginalUriStorage();\n        sharedStorage.setItem(state, originalUri);\n      }\n    }\n  \n    getOriginalUri(state?: string): string | undefined {\n      // Prefer shared storage (if state is available)\n      state = state || this.options.state;\n      if (state) {\n        const sharedStorage = this.storageManager.getOriginalUriStorage();\n        const originalUri = sharedStorage.getItem(state);\n        if (originalUri) {\n          return originalUri;\n        }\n      }\n  \n      // Try to load from session storage\n      const storage = browserStorage.getSessionStorage();\n      return storage ? storage.getItem(REFERRER_PATH_STORAGE_KEY) || undefined : undefined;\n    }\n  \n    removeOriginalUri(state?: string): void {\n      // Remove from sessionStorage\n      const storage = browserStorage.getSessionStorage();\n      storage.removeItem(REFERRER_PATH_STORAGE_KEY);\n  \n      // Also remove from shared storage\n      state = state || this.options.state;\n      if (state) {\n        const sharedStorage = this.storageManager.getOriginalUriStorage();\n        sharedStorage.removeItem && sharedStorage.removeItem(state);\n      }\n    }\n  };\n}\n","export const enableSharedStorage = true;\n","/*!\n * Copyright (c) 2015-present, Okta, Inc. and/or its affiliates. All rights reserved.\n * The Okta software accompanied by this notice is provided pursuant to the Apache License, Version 2.0 (the \"License.\")\n *\n * You may obtain a copy of the License at http://www.apache.org/licenses/LICENSE-2.0.\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT\n * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * \n * See the License for the specific language governing permissions and limitations under the License.\n */\n\nimport { DEFAULT_MAX_CLOCK_SKEW } from '../../constants';\nimport { removeTrailingSlash, toAbsoluteUrl } from '../../util/url';\nimport { isBrowser } from '../../features';\nimport { createHttpOptionsConstructor } from '../../http/options';\nimport {\n  OAuthResponseMode,\n  OAuthResponseType,\n  OktaAuthOAuthInterface,\n  OktaAuthOAuthOptions,\n  SetLocationFunction,\n  TokenManagerOptions,\n  TransactionManagerOptions\n} from '../types';\nimport { enableSharedStorage } from './node';\nimport AuthSdkError from '../../errors/AuthSdkError';\n\nfunction assertValidConfig(args) {\n  args = args || {};\n\n  var scopes = args.scopes;\n  if (scopes && !Array.isArray(scopes)) {\n    throw new AuthSdkError('scopes must be a array of strings. ' +\n      'Required usage: new OktaAuth({scopes: [\"openid\", \"email\"]})');\n  }\n\n  // eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n  var issuer = args.issuer!;\n  if (!issuer) {\n    throw new AuthSdkError('No issuer passed to constructor. ' + \n      'Required usage: new OktaAuth({issuer: \"https://{yourOktaDomain}.com/oauth2/{authServerId}\"})');\n  }\n\n  var isUrlRegex = new RegExp('^http?s?://.+');\n  if (!isUrlRegex.test(issuer)) {\n    throw new AuthSdkError('Issuer must be a valid URL. ' + \n      'Required usage: new OktaAuth({issuer: \"https://{yourOktaDomain}.com/oauth2/{authServerId}\"})');\n  }\n\n  if (issuer.indexOf('-admin.okta') !== -1) {\n    throw new AuthSdkError('Issuer URL passed to constructor contains \"-admin\" in subdomain. ' +\n      'Required usage: new OktaAuth({issuer: \"https://{yourOktaDomain}.com})');\n  }\n}\n\nexport function createOAuthOptionsConstructor() {\n  const HttpOptionsConstructor = createHttpOptionsConstructor();\n  return class OAuthOptionsConstructor\n    extends HttpOptionsConstructor\n    implements Required<OktaAuthOAuthOptions>\n  {\n    // CustomUrls\n    issuer: string;\n    authorizeUrl: string;\n    userinfoUrl: string;\n    tokenUrl: string;\n    revokeUrl: string;\n    logoutUrl: string;\n    \n    // TokenParams\n    pkce: boolean;\n    clientId: string;\n    redirectUri: string;\n    responseType: OAuthResponseType | OAuthResponseType[];\n    responseMode: OAuthResponseMode;\n    state: string;\n    scopes: string[];\n    ignoreSignature: boolean;\n    codeChallenge: string;\n    codeChallengeMethod: string;\n    acrValues: string;\n    maxAge: string | number;\n    dpop: boolean;\n\n    // Additional options\n    tokenManager: TokenManagerOptions;\n    postLogoutRedirectUri: string;\n    restoreOriginalUri: (oktaAuth: OktaAuthOAuthInterface, originalUri?: string) => Promise<void>;\n    transactionManager: TransactionManagerOptions;\n\n    // For server-side web applications ONLY!\n    clientSecret: string;\n    setLocation: SetLocationFunction;\n\n    // Workaround for bad client time/clock\n    ignoreLifetime: boolean;\n    maxClockSkew: number;\n\n\n    // eslint-disable-next-line max-statements\n    constructor(options: any) {\n      super(options);\n      \n      assertValidConfig(options);\n      \n      this.issuer = removeTrailingSlash(options.issuer);\n      this.tokenUrl = removeTrailingSlash(options.tokenUrl);\n      this.authorizeUrl = removeTrailingSlash(options.authorizeUrl);\n      this.userinfoUrl = removeTrailingSlash(options.userinfoUrl);\n      this.revokeUrl = removeTrailingSlash(options.revokeUrl);\n      this.logoutUrl = removeTrailingSlash(options.logoutUrl);\n\n      this.pkce = options.pkce === false ? false : true; // PKCE defaults to true\n      this.clientId = options.clientId;\n      this.redirectUri = options.redirectUri;\n      if (isBrowser()) {\n        this.redirectUri = toAbsoluteUrl(options.redirectUri, window.location.origin); // allow relative URIs\n      }\n      this.responseType = options.responseType;\n      this.responseMode = options.responseMode;\n      this.state = options.state;\n      this.scopes = options.scopes;\n      // Give the developer the ability to disable token signature validation.\n      this.ignoreSignature = !!options.ignoreSignature;\n      this.codeChallenge = options.codeChallenge;\n      this.codeChallengeMethod = options.codeChallengeMethod;\n      this.acrValues = options.acrValues;\n      this.maxAge = options.maxAge;\n      this.dpop = options.dpop === true; // dpop defaults to false\n\n      this.tokenManager = options.tokenManager;\n      this.postLogoutRedirectUri = options.postLogoutRedirectUri;\n      this.restoreOriginalUri = options.restoreOriginalUri;\n      this.transactionManager = { enableSharedStorage, ...options.transactionManager };\n      \n      this.clientSecret = options.clientSecret;\n      this.setLocation = options.setLocation;\n      \n      // As some end user's devices can have their date \n      // and time incorrectly set, allow for the disabling\n      // of the jwt liftetime validation\n      this.ignoreLifetime = !!options.ignoreLifetime;\n\n      // Digital clocks will drift over time, so the server\n      // can misalign with the time reported by the browser.\n      // The maxClockSkew allows relaxing the time-based\n      // validation of tokens (in seconds, not milliseconds).\n      // It currently defaults to 300, because 5 min is the\n      // default maximum tolerance allowed by Kerberos.\n      // (https://technet.microsoft.com/en-us/library/cc976357.aspx)\n      if (!options.maxClockSkew && options.maxClockSkew !== 0) {\n        this.maxClockSkew = DEFAULT_MAX_CLOCK_SKEW;\n      } else {\n        this.maxClockSkew = options.maxClockSkew;\n      }\n\n    }\n  };\n}\n","/* eslint-disable complexity */\n/*!\n * Copyright (c) 2015-present, Okta, Inc. and/or its affiliates. All rights reserved.\n * The Okta software accompanied by this notice is provided pursuant to the Apache License, Version 2.0 (the \"License.\")\n *\n * You may obtain a copy of the License at http://www.apache.org/licenses/LICENSE-2.0.\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT\n * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n *\n * See the License for the specific language governing permissions and limitations under the License.\n *\n */\nimport { AuthSdkError } from '../errors';\nimport { isInteractionRequiredError, urlParamsToObject } from './util';\nimport {\n  ParseFromUrlOptions,\n  TokenResponse,\n  CustomUrls,\n  TransactionMeta,\n  OAuthResponse\n} from './types';\nimport { isString } from '../util';\nimport { handleOAuthResponse } from './handleOAuthResponse';\n\nfunction removeHash(sdk) {\n  var nativeHistory = sdk.token.parseFromUrl._getHistory();\n  var nativeDoc = sdk.token.parseFromUrl._getDocument();\n  var nativeLoc = sdk.token.parseFromUrl._getLocation();\n  if (nativeHistory && nativeHistory.replaceState) {\n    nativeHistory.replaceState(null, nativeDoc.title, nativeLoc.pathname + nativeLoc.search);\n  } else {\n    nativeLoc.hash = '';\n  }\n}\n\nfunction removeSearch(sdk) {\n  var nativeHistory = sdk.token.parseFromUrl._getHistory();\n  var nativeDoc = sdk.token.parseFromUrl._getDocument();\n  var nativeLoc = sdk.token.parseFromUrl._getLocation();\n  if (nativeHistory && nativeHistory.replaceState) {\n    nativeHistory.replaceState(null, nativeDoc.title, nativeLoc.pathname + nativeLoc.hash);\n  } else {\n    nativeLoc.search = '';\n  }\n}\n\nexport function getResponseMode(sdk): 'query' | 'fragment' {\n  // https://openid.net/specs/openid-connect-core-1_0.html#Authentication\n  var defaultResponseMode = sdk.options.pkce ? 'query' : 'fragment';\n  var responseMode = sdk.options.responseMode || defaultResponseMode;\n  return responseMode;\n}\n\nexport function parseOAuthResponseFromUrl(sdk, options: string | ParseFromUrlOptions): OAuthResponse {\n  options = options || {};\n  if (isString(options)) {\n    options = { url: options } as ParseFromUrlOptions;\n  } else {\n    options = options as ParseFromUrlOptions;\n  }\n\n  var url = options.url;\n  var responseMode = options.responseMode || getResponseMode(sdk);\n  var nativeLoc = sdk.token.parseFromUrl._getLocation();\n  var paramStr;\n\n  if (responseMode === 'query') {\n    paramStr = url ? url.substring(url.indexOf('?')) : nativeLoc.search;\n  } else {\n    paramStr = url ? url.substring(url.indexOf('#')) : nativeLoc.hash;\n  }\n\n  if (!paramStr) {\n    throw new AuthSdkError('Unable to parse a token from the url');\n  }\n\n  return urlParamsToObject(paramStr);\n}\n\nexport function cleanOAuthResponseFromUrl(sdk, options: ParseFromUrlOptions) {\n  // Clean hash or search from the url\n  const responseMode = options.responseMode || getResponseMode(sdk);\n  responseMode === 'query' ? removeSearch(sdk) : removeHash(sdk);\n}\n\nexport async function parseFromUrl(sdk, options?: string | ParseFromUrlOptions): Promise<TokenResponse> {\n  options = options || {};\n  if (isString(options)) {\n    options = { url: options } as ParseFromUrlOptions;\n  } else {\n    options = options as ParseFromUrlOptions;\n  }\n\n  const res: OAuthResponse = parseOAuthResponseFromUrl(sdk, options);\n  const state = res.state;\n  const oauthParams: TransactionMeta = sdk.transactionManager.load({\n    state\n  });\n  if (!oauthParams) {\n    if (sdk.options.pkce) {\n      // eslint-disable-next-line max-len\n      throw new AuthSdkError('Could not load PKCE codeVerifier from storage. This may indicate the auth flow has already completed or multiple auth flows are executing concurrently.', undefined);\n    }\n    throw new AuthSdkError('Unable to retrieve OAuth redirect params from storage');\n  }\n  const urls: CustomUrls = oauthParams.urls as CustomUrls;\n  delete oauthParams.urls;\n\n  if (!options.url) {\n    // Clean hash or search from the url\n    cleanOAuthResponseFromUrl(sdk, options);\n  }\n\n  return handleOAuthResponse(sdk, oauthParams, res, urls)\n    .catch(err => {\n      if (!isInteractionRequiredError(err)) {\n        sdk.transactionManager.clear({\n          state\n        });\n      }\n      throw err;\n    })\n    .then(res => {\n      sdk.transactionManager.clear({\n        state\n      });\n      return res;\n    });\n\n}\n","/*!\n * Copyright (c) 2015-present, Okta, Inc. and/or its affiliates. All rights reserved.\n * The Okta software accompanied by this notice is provided pursuant to the Apache License, Version 2.0 (the \"License.\")\n *\n * You may obtain a copy of the License at http://www.apache.org/licenses/LICENSE-2.0.\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT\n * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n *\n * See the License for the specific language governing permissions and limitations under the License.\n *\n */\nimport { AuthSdkError } from '../errors';\nimport { OktaAuthOAuthInterface, Token, Tokens, isAccessToken, AccessToken, IDToken, isIDToken } from './types';\nimport { getWithoutPrompt } from './getWithoutPrompt';\nimport { renewTokensWithRefresh } from './renewTokensWithRefresh';\n\nfunction throwInvalidTokenError() {\n  throw new AuthSdkError(\n    'Renew must be passed a token with an array of scopes and an accessToken or idToken'\n  );\n}\n\n// Multiple tokens may have come back. Return only the token which was requested.\nfunction getSingleToken(originalToken: Token, tokens: Tokens) {\n  if (isIDToken(originalToken)) {\n    return tokens.idToken;\n  }\n  if (isAccessToken(originalToken)) {\n    return tokens.accessToken;\n  }\n  throwInvalidTokenError();\n}\n\n// If we have a refresh token, renew using that, otherwise getWithoutPrompt\nexport async function renewToken(sdk: OktaAuthOAuthInterface, token: Token): Promise<Token | undefined> {\n  if (!isIDToken(token) && !isAccessToken(token)) {\n    throwInvalidTokenError();\n  }\n\n  let tokens = sdk.tokenManager.getTokensSync();\n  if (tokens.refreshToken) {\n    tokens = await renewTokensWithRefresh(sdk, {\n      scopes: token.scopes,\n    }, tokens.refreshToken);\n    return getSingleToken(token, tokens);\n  }\n\n  var responseType;\n  if (sdk.options.pkce) {\n    responseType = 'code';\n  } else if (isAccessToken(token)) {\n    responseType = 'token';\n  } else {\n    responseType = 'id_token';\n  }\n\n  const { scopes, authorizeUrl, userinfoUrl, issuer, dpopPairId, extraParams } = token as (AccessToken & IDToken);\n  return getWithoutPrompt(sdk, {\n    responseType,\n    scopes,\n    authorizeUrl,\n    userinfoUrl,\n    issuer,\n    dpopPairId,\n    extraParams\n  })\n    .then(function (res) {\n      return getSingleToken(token, res.tokens);\n    });\n}\n","/*!\n * Copyright (c) 2015-present, Okta, Inc. and/or its affiliates. All rights reserved.\n * The Okta software accompanied by this notice is provided pursuant to the Apache License, Version 2.0 (the \"License.\")\n *\n * You may obtain a copy of the License at http://www.apache.org/licenses/LICENSE-2.0.\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT\n * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n *\n * See the License for the specific language governing permissions and limitations under the License.\n *\n */\nimport { AuthSdkError } from '../errors';\nimport { RenewTokensParams, Tokens } from './types';\nimport { getWithoutPrompt } from './getWithoutPrompt';\nimport { renewTokensWithRefresh } from './renewTokensWithRefresh';\nimport { getDefaultTokenParams } from './util';\n\n// If we have a refresh token, renew using that, otherwise getWithoutPrompt\n// eslint-disable-next-line complexity\nexport async function renewTokens(sdk, options?: RenewTokensParams): Promise<Tokens> {\n  const tokens = options?.tokens ?? sdk.tokenManager.getTokensSync();\n  if (tokens.refreshToken) {\n    return renewTokensWithRefresh(sdk, options || {}, tokens.refreshToken);\n  }\n\n  if (!tokens.accessToken && !tokens.idToken) {\n    throw new AuthSdkError('renewTokens() was called but there is no existing token');\n  }\n\n  const accessToken = tokens.accessToken || {};\n  const idToken = tokens.idToken || {};\n  const scopes = accessToken.scopes || idToken.scopes;\n  if (!scopes) {\n    throw new AuthSdkError('renewTokens: invalid tokens: could not read scopes');\n  }\n  const authorizeUrl = accessToken.authorizeUrl || idToken.authorizeUrl;\n  if (!authorizeUrl) {\n    throw new AuthSdkError('renewTokens: invalid tokens: could not read authorizeUrl');\n  }\n  const userinfoUrl = accessToken.userinfoUrl || sdk.options.userinfoUrl;\n  const issuer = idToken.issuer || sdk.options.issuer;\n  const dpopPairId = accessToken?.dpopPairId;\n  const extraParams = accessToken?.extraParams || idToken?.extraParams;\n\n  // Get tokens using the SSO cookie\n  options = Object.assign({\n    scopes,\n    authorizeUrl,\n    userinfoUrl,\n    issuer,\n    dpopPairId,\n    extraParams\n  }, options);\n\n  if (sdk.options.pkce) {\n    options.responseType = 'code';\n  } else {\n    const { responseType } = getDefaultTokenParams(sdk);\n    options.responseType = responseType;\n  }\n\n  return getWithoutPrompt(sdk, options)\n    .then(res => res.tokens);\n    \n}\n","/*!\n * Copyright (c) 2015-present, Okta, Inc. and/or its affiliates. All rights reserved.\n * The Okta software accompanied by this notice is provided pursuant to the Apache License, Version 2.0 (the \"License.\")\n *\n * You may obtain a copy of the License at http://www.apache.org/licenses/LICENSE-2.0.\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT\n * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n *\n * See the License for the specific language governing permissions and limitations under the License.\n *\n */\nimport { AuthSdkError } from '../errors';\nimport { getOAuthUrls } from './util/oauth';\nimport { isSameRefreshToken } from './util/refreshToken';\nimport { OktaAuthOAuthInterface, TokenParams, RefreshToken, Tokens } from './types';\nimport { handleOAuthResponse } from './handleOAuthResponse';\nimport { TokenEndpointParams, postRefreshToken } from './endpoints/token';\nimport { findKeyPair } from './dpop';\nimport { isRefreshTokenInvalidError } from './util/errors';\n\n/* eslint complexity:[0,8] */\nexport async function renewTokensWithRefresh(\n  sdk: OktaAuthOAuthInterface,\n  tokenParams: TokenParams,\n  refreshTokenObject: RefreshToken\n): Promise<Tokens> {\n  const { clientId, dpop } = sdk.options;\n  if (!clientId) {\n    throw new AuthSdkError('A clientId must be specified in the OktaAuth constructor to renew tokens');\n  }\n\n  try {\n    const renewTokenParams: TokenParams = Object.assign({}, tokenParams, { clientId });\n\n    if (refreshTokenObject.extraParams) {\n      renewTokenParams.extraParams = refreshTokenObject.extraParams;\n    }\n\n    const endpointParams: TokenEndpointParams = {...renewTokenParams};\n\n    if (dpop) {\n      const keyPair = await findKeyPair(refreshTokenObject?.dpopPairId);    // will throw if KP cannot be found\n      endpointParams.dpopKeyPair = keyPair;\n      renewTokenParams.dpop = dpop;\n      renewTokenParams.dpopPairId = refreshTokenObject.dpopPairId;\n    }\n\n    const tokenResponse = await postRefreshToken(sdk, endpointParams, refreshTokenObject);\n    const urls = getOAuthUrls(sdk, tokenParams);\n    const { tokens } = await handleOAuthResponse(sdk, renewTokenParams, tokenResponse, urls);\n\n    // Support rotating refresh tokens\n    const { refreshToken } = tokens;\n    if (refreshToken && !isSameRefreshToken(refreshToken, refreshTokenObject)) {\n      sdk.tokenManager.updateRefreshToken(refreshToken);\n    }\n\n    return tokens;\n  }\n  catch (err) {\n    if (isRefreshTokenInvalidError(err)) {\n      // if the refresh token is invalid, remove it from storage\n      sdk.tokenManager.removeRefreshToken();\n    }\n    throw err;\n  }\n}\n","/*!\n * Copyright (c) 2015-present, Okta, Inc. and/or its affiliates. All rights reserved.\n * The Okta software accompanied by this notice is provided pursuant to the Apache License, Version 2.0 (the \"License.\")\n *\n * You may obtain a copy of the License at http://www.apache.org/licenses/LICENSE-2.0.\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT\n * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n *\n * See the License for the specific language governing permissions and limitations under the License.\n *\n */\n\n/* eslint complexity:[0,8] */\nimport { post } from '../http';\nimport { toQueryString } from '../util';\nimport {\n  getOAuthUrls,\n} from './util/oauth';\nimport { btoa } from '../crypto';\nimport AuthSdkError from '../errors/AuthSdkError';\nimport {\n  OktaAuthOAuthInterface,\n  RevocableToken,\n  AccessToken,\n  RefreshToken\n} from './types';\n\n// refresh tokens have precedence to be revoked if no token is specified\nexport async function revokeToken(sdk: OktaAuthOAuthInterface, token: RevocableToken): Promise<any> {\n  let accessToken = '';\n  let refreshToken = '';\n  if (token) { \n      accessToken = (token as AccessToken).accessToken;\n      refreshToken = (token as RefreshToken).refreshToken;  \n  }\n  if(!accessToken && !refreshToken) { \n    throw new AuthSdkError('A valid access or refresh token object is required');\n  }\n  var clientId = sdk.options.clientId;\n  var clientSecret = sdk.options.clientSecret;\n  if (!clientId) {\n    throw new AuthSdkError('A clientId must be specified in the OktaAuth constructor to revoke a token');\n  }\n  // eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n  var revokeUrl = getOAuthUrls(sdk).revokeUrl!;\n  var args = toQueryString({\n    // eslint-disable-next-line camelcase\n    token_type_hint: refreshToken ? 'refresh_token' : 'access_token', \n    token: refreshToken || accessToken,\n  }).slice(1);\n  var creds = clientSecret ? btoa(`${clientId}:${clientSecret}`) : btoa(clientId);\n  return post(sdk, revokeUrl, args, {\n    headers: {\n      'Content-Type': 'application/x-www-form-urlencoded',\n      'Authorization': 'Basic ' + creds\n    }\n  });\n}\n","import {\n  CookieOptions,\n  StorageManagerOptions,\n  StorageOptions,\n  StorageUtil\n} from '../storage/types';\nimport { BaseStorageManager, logServerSideMemoryStorageWarning } from '../storage/BaseStorageManager';\nimport { TransactionStorage, OAuthTransactionMeta, OAuthStorageManagerInterface, PKCETransactionMeta } from './types';\nimport { SavedObject } from '../storage';\nimport { ORIGINAL_URI_STORAGE_NAME, SHARED_TRANSACTION_STORAGE_NAME, TRANSACTION_STORAGE_NAME } from '../constants';\n\n\nexport function createOAuthStorageManager<M extends OAuthTransactionMeta = PKCETransactionMeta>()\n{\n  return class OAuthStorageManager\n    extends BaseStorageManager\n    implements OAuthStorageManagerInterface<M>\n  {\n    constructor(storageManagerOptions: StorageManagerOptions, cookieOptions: CookieOptions, storageUtil: StorageUtil) {\n      super(storageManagerOptions, cookieOptions, storageUtil);\n    }\n\n    getTransactionStorage(options?: StorageOptions): TransactionStorage<M> {\n      options = this.getOptionsForSection('transaction', options);\n      logServerSideMemoryStorageWarning(options);\n      const storage = this.getStorage(options);\n      const storageKey = options.storageKey || TRANSACTION_STORAGE_NAME;\n      return new SavedObject(storage, storageKey);\n    }\n\n    getSharedTansactionStorage(options?: StorageOptions): TransactionStorage<M> {\n      options = this.getOptionsForSection('shared-transaction', options);\n      logServerSideMemoryStorageWarning(options);\n      const storage = this.getStorage(options);\n      const storageKey = options.storageKey || SHARED_TRANSACTION_STORAGE_NAME;\n      return new SavedObject(storage, storageKey);\n    }\n\n    getOriginalUriStorage(options?: StorageOptions): TransactionStorage<M> {\n      options = this.getOptionsForSection('original-uri', options);\n      logServerSideMemoryStorageWarning(options);\n      const storage = this.getStorage(options);\n      const storageKey = options.storageKey || ORIGINAL_URI_STORAGE_NAME;\n      return new SavedObject(storage, storageKey);\n    }\n  };\n\n}\n","/*!\n * Copyright (c) 2015-present, Okta, Inc. and/or its affiliates. All rights reserved.\n * The Okta software accompanied by this notice is provided pursuant to the Apache License, Version 2.0 (the \"License.\")\n *\n * You may obtain a copy of the License at http://www.apache.org/licenses/LICENSE-2.0.\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT\n * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n *\n * See the License for the specific language governing permissions and limitations under the License.\n */\n\nimport { UserClaims } from './UserClaims';\n\nexport interface AbstractToken {\n  expiresAt: number;\n  authorizeUrl: string;\n  scopes: string[];\n  pendingRemove?: boolean;\n  extraParams?: Record<string, string>;\n}\n\nexport interface AccessToken extends AbstractToken {\n  accessToken: string;\n  claims: UserClaims;\n  tokenType: string;\n  userinfoUrl: string;\n  dpopPairId?: string;\n}\n\nexport interface RefreshToken extends AbstractToken {\n  refreshToken: string;\n  tokenUrl: string;\n  issuer: string;\n  dpopPairId?: string;\n}\n\nexport interface IDToken extends AbstractToken {\n  idToken: string;\n  claims: UserClaims;\n  issuer: string;\n  clientId: string;\n}\n\nexport type Token = AccessToken | IDToken | RefreshToken;\nexport type RevocableToken = AccessToken | RefreshToken;\n\nexport type TokenType = 'accessToken' | 'idToken' | 'refreshToken';\nexport enum TokenKind {\n  ACCESS = 'accessToken',\n  ID = 'idToken',\n  REFRESH = 'refreshToken',\n}\n\nexport function isToken(obj: any): obj is Token {\n  if (obj &&\n      (obj.accessToken || obj.idToken || obj.refreshToken) &&\n      Array.isArray(obj.scopes)) {\n    return true;\n  }\n  return false;\n}\n\nexport function isAccessToken(obj: any): obj is AccessToken {\n  return obj && obj.accessToken;\n}\n\nexport function isIDToken(obj: any): obj is IDToken {\n  return obj && obj.idToken;\n}\n\nexport function isRefreshToken(obj: any): obj is RefreshToken {\n  return obj && obj.refreshToken;\n}\n\nexport interface Tokens {\n  accessToken?: AccessToken;\n  idToken?: IDToken;\n  refreshToken?: RefreshToken;\n}\n","/* eslint-disable max-len */\nimport { StorageProvider } from '../../storage/types';\nimport { TokenManagerOptions } from './options';\nimport { AccessToken, IDToken, RefreshToken, Token, Tokens, TokenType } from './Token';\n\nexport interface TokenManagerError {\n  errorSummary: string;\n  errorCode: string;\n  message: string;\n  name: string;\n  tokenKey: string;\n}\n\nexport declare type AccessTokenCallback = (key: string, token: AccessToken) => void;\nexport declare type IDTokenCallback = (key: string, token: IDToken) => void;\nexport declare type RefreshTokenCallback = (key: string, token: RefreshToken) => void;\n\nexport const EVENT_EXPIRED = 'expired';\nexport const EVENT_RENEWED = 'renewed';\nexport const EVENT_ADDED = 'added';\nexport const EVENT_REMOVED = 'removed';\nexport const EVENT_ERROR = 'error';\nexport const EVENT_SET_STORAGE = 'set_storage';\n\nexport declare type TokenManagerErrorEventHandler = (error: TokenManagerError) => void;\nexport declare type TokenManagerEventHandler = (key: string, token: Token) => void;\nexport declare type TokenManagerRenewEventHandler = (key: string, token: Token, oldtoken: Token) => void;\nexport declare type TokenManagerSetStorageEventHandler = (storage: Tokens) => void;\n\nexport declare type TokenManagerAnyEventHandler = TokenManagerErrorEventHandler | TokenManagerRenewEventHandler | TokenManagerSetStorageEventHandler | TokenManagerEventHandler;\nexport declare type TokenManagerAnyEvent = typeof EVENT_RENEWED | typeof EVENT_ERROR | typeof EVENT_SET_STORAGE | typeof EVENT_EXPIRED | typeof EVENT_ADDED | typeof EVENT_REMOVED;\n\n// only add methods needed internally\nexport interface TokenManagerInterface {\n  on(event: typeof EVENT_RENEWED, handler: TokenManagerRenewEventHandler, context?: object): void;\n  on(event: typeof EVENT_ERROR, handler: TokenManagerErrorEventHandler, context?: object): void;\n  on(event: typeof EVENT_SET_STORAGE, handler: TokenManagerSetStorageEventHandler, context?: object): void;\n  on(event: typeof EVENT_EXPIRED | typeof EVENT_ADDED | typeof EVENT_REMOVED, handler: TokenManagerEventHandler, context?: object): void;\n\n  off(event: typeof EVENT_RENEWED, handler?: TokenManagerRenewEventHandler): void;\n  off(event: typeof EVENT_ERROR, handler?: TokenManagerErrorEventHandler): void;\n  off(event: typeof EVENT_SET_STORAGE, handler?: TokenManagerSetStorageEventHandler): void;\n  off(event: typeof EVENT_EXPIRED | typeof EVENT_ADDED | typeof EVENT_REMOVED, handler?: TokenManagerEventHandler): void;\n\n  clear(): void;\n  setExpireEventTimeout(key: string, token: Token): void;\n  clearExpireEventTimeout(key: string): void;\n  clearExpireEventTimeoutAll(): void;\n  emitAdded(key: string, token: Token): void;\n  emitError(error: Error): void;\n  emitRemoved(key: string, token: Token): void;\n  emitRenewed(key: string, token: Token, oldToken?: Token): void;\n  renew(key: string): Promise<Token | undefined>;\n  remove(key: string): void;\n  hasExpired(token: Token): boolean;\n  getExpireTime(token: Token): number;\n\n  get(key): Promise<Token | undefined>;\n  getSync(key): Token | undefined;\n  getTokens(): Promise<Tokens>;\n  getTokensSync(): Tokens;\n  setTokens({ accessToken, idToken, refreshToken }: Tokens, accessTokenCb?: AccessTokenCallback, idTokenCb?: IDTokenCallback, refreshTokenCb?: RefreshTokenCallback): void;\n  getStorageKeyByType(type: TokenType): string;\n  add(key: any, token: Token): void;\n  updateRefreshToken(token: RefreshToken);\n  removeRefreshToken(): void;\n  clearPendingRemoveTokens(): void;\n\n  getOptions(): TokenManagerOptions;\n  getStorage(): StorageProvider;\n\n  start();\n  stop();\n  isStarted(): boolean;\n}\n","/*!\n * Copyright (c) 2015-present, Okta, Inc. and/or its affiliates. All rights reserved.\n * The Okta software accompanied by this notice is provided pursuant to the Apache License, Version 2.0 (the \"License.\")\n *\n * You may obtain a copy of the License at http://www.apache.org/licenses/LICENSE-2.0.\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT\n * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * \n * See the License for the specific language governing permissions and limitations under the License.\n */\n\n\nimport { IdxTransactionMeta } from '../../idx/types/meta';\nimport { OAuthTransactionMeta, PKCETransactionMeta } from './meta';\nimport { OAuthStorageManagerInterface } from './storage';\n\nexport interface TransactionManagerOptions\n{\n  storageManager?: OAuthStorageManagerInterface;\n  enableSharedStorage?: boolean; // default true\n  saveNonceCookie?: boolean; // default true\n  saveStateCookie?: boolean; // default true\n  saveParamsCookie?: boolean; // default true\n  saveLastResponse?: boolean; // default true\n}\n\n\nexport type CustomAuthTransactionMeta = Record<string, string | undefined>;\n\nexport type TransactionMeta =\n  IdxTransactionMeta |\n  PKCETransactionMeta |\n  OAuthTransactionMeta |\n  CustomAuthTransactionMeta;\n\n\nfunction isObjectWithProperties(obj) {\n  if (!obj || typeof obj !== 'object' || Object.values(obj).length === 0) {\n    return false;\n  }\n  return true;\n}\n\nexport function isOAuthTransactionMeta(obj: any): obj is OAuthTransactionMeta {\n  if (!isObjectWithProperties(obj)) {\n    return false;\n  }\n  return !!obj.redirectUri || !!obj.responseType;\n}\n\nexport function isPKCETransactionMeta(obj: any): obj is PKCETransactionMeta {\n  if (!isOAuthTransactionMeta(obj)) {\n    return false;\n  }\n  return !!(obj as any).codeVerifier;\n}\n\nexport function isIdxTransactionMeta(obj: any): obj is IdxTransactionMeta {\n  if (!isPKCETransactionMeta(obj)) {\n    return false;\n  }\n  return !!(obj as any).interactionHandle;\n}\n\nexport function isCustomAuthTransactionMeta(obj: any): obj is CustomAuthTransactionMeta {\n  if (!isObjectWithProperties(obj)) {\n    return false;\n  }\n  const isAllStringValues = Object.values(obj).find((value) => (typeof value !== 'string')) === undefined;\n  return isAllStringValues;\n}\n\nexport function isTransactionMeta(obj: any): obj is TransactionMeta {\n  if (isOAuthTransactionMeta(obj) || isCustomAuthTransactionMeta(obj)) {\n    return true;\n  }\n  return false;\n}\n","/*!\n * Copyright (c) 2015-present, Okta, Inc. and/or its affiliates. All rights reserved.\n * The Okta software accompanied by this notice is provided pursuant to the Apache License, Version 2.0 (the \"License.\")\n *\n * You may obtain a copy of the License at http://www.apache.org/licenses/LICENSE-2.0.\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT\n * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n *\n * See the License for the specific language governing permissions and limitations under the License.\n *\n */\n/* global window, document */\n/* eslint-disable complexity, max-statements */\nimport { AuthSdkError } from '../../errors';\nimport { OktaAuthOAuthInterface } from '../types';\n\nexport function addListener(eventTarget, name, fn) {\n  if (eventTarget.addEventListener) {\n    eventTarget.addEventListener(name, fn);\n  } else {\n    eventTarget.attachEvent('on' + name, fn);\n  }\n}\n\nexport function removeListener(eventTarget, name, fn) {\n  if (eventTarget.removeEventListener) {\n    eventTarget.removeEventListener(name, fn);\n  } else {\n    eventTarget.detachEvent('on' + name, fn);\n  }\n}\n\nexport function loadFrame(src) {\n  var iframe = document.createElement('iframe');\n  iframe.style.display = 'none';\n  iframe.src = src;\n\n  return document.body.appendChild(iframe);\n}\n\nexport function loadPopup(src, options) {\n  var title = options.popupTitle || 'External Identity Provider User Authentication';\n  var appearance = 'toolbar=no, scrollbars=yes, resizable=yes, ' +\n    'top=100, left=500, width=600, height=600';\n  return window.open(src, title, appearance);\n}\n\nexport function addPostMessageListener(sdk: OktaAuthOAuthInterface, timeout, state) {\n  var responseHandler;\n  var timeoutId;\n  var msgReceivedOrTimeout = new Promise(function (resolve, reject) {\n\n    responseHandler = function responseHandler(e) {\n      if (!e.data || e.data.state !== state) {\n        // A message not meant for us\n        return;\n      }\n\n      // Configuration mismatch between saved token and current app instance\n      // This may happen if apps with different issuers are running on the same host url\n      // If they share the same storage key, they may read and write tokens in the same location.\n      // Common when developing against http://localhost\n      if (e.origin !== sdk.getIssuerOrigin()) {\n        return reject(new AuthSdkError('The request does not match client configuration'));\n      }\n      resolve(e.data);\n    };\n\n    addListener(window, 'message', responseHandler);\n\n    timeoutId = setTimeout(function () {\n      reject(new AuthSdkError('OAuth flow timed out'));\n    }, timeout || 120000);\n  });\n\n  return msgReceivedOrTimeout\n    .finally(function () {\n      clearTimeout(timeoutId);\n      removeListener(window, 'message', responseHandler);\n    });\n}\n","\n/* global window */\n/*!\n * Copyright (c) 2015-present, Okta, Inc. and/or its affiliates. All rights reserved.\n * The Okta software accompanied by this notice is provided pursuant to the Apache License, Version 2.0 (the \"License.\")\n *\n * You may obtain a copy of the License at http://www.apache.org/licenses/LICENSE-2.0.\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT\n * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n *\n * See the License for the specific language governing permissions and limitations under the License.\n *\n */\nimport { generateState } from './oauth';\nimport { OktaAuthOAuthInterface, TokenParams } from '../types';\nimport { isBrowser } from '../../features';\nimport { removeNils } from '../../util';\n\nexport function getDefaultEnrollAuthenticatorParams(sdk: OktaAuthOAuthInterface): TokenParams {\n  const {\n    clientId,\n    redirectUri,\n    responseMode,\n    state,\n  } = sdk.options;\n  const defaultRedirectUri = isBrowser() ? window.location.href : undefined;\n  return removeNils({\n    clientId,\n    redirectUri: redirectUri || defaultRedirectUri,\n    responseMode,\n    state: state || generateState(),\n    responseType: 'none',\n    prompt: 'enroll_authenticator',\n  });\n}","\n/* global window */\n/*!\n * Copyright (c) 2015-present, Okta, Inc. and/or its affiliates. All rights reserved.\n * The Okta software accompanied by this notice is provided pursuant to the Apache License, Version 2.0 (the \"License.\")\n *\n * You may obtain a copy of the License at http://www.apache.org/licenses/LICENSE-2.0.\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT\n * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n *\n * See the License for the specific language governing permissions and limitations under the License.\n *\n */\nimport { generateNonce, generateState } from './oauth';\nimport { OktaAuthOAuthInterface, TokenParams } from '../types';\nimport { isBrowser } from '../../features';\nimport { removeNils } from '../../util';\n\nexport function getDefaultTokenParams(sdk: OktaAuthOAuthInterface): TokenParams {\n  const {\n    pkce,\n    clientId,\n    redirectUri,\n    responseType,\n    responseMode,\n    scopes,\n    acrValues,\n    maxAge,\n    state,\n    ignoreSignature,\n    dpop\n  } = sdk.options;\n  const defaultRedirectUri = isBrowser() ? window.location.href : undefined;\n  return removeNils({\n    pkce,\n    clientId,\n    redirectUri: redirectUri || defaultRedirectUri,\n    responseType: responseType || ['token', 'id_token'],\n    responseMode,\n    state: state || generateState(),\n    nonce: generateNonce(),\n    scopes: scopes || ['openid', 'email'],\n    acrValues,\n    maxAge,\n    ignoreSignature,\n    dpop,\n  });\n}","/* eslint-disable @typescript-eslint/no-non-null-assertion */\nimport { OAuthTransactionMeta, OktaAuthOAuthInterface, EnrollAuthenticatorOptions } from '../types';\nimport { getOAuthUrls } from './oauth';\n\nexport function createEnrollAuthenticatorMeta(\n  sdk: OktaAuthOAuthInterface, \n  params: EnrollAuthenticatorOptions\n): OAuthTransactionMeta {\n  const issuer = sdk.options.issuer!;\n  const urls = getOAuthUrls(sdk, params);\n  const oauthMeta: OAuthTransactionMeta = {\n    issuer,\n    urls,\n    clientId: params.clientId!,\n    redirectUri: params.redirectUri!,\n    responseType: params.responseType!,\n    responseMode: params.responseMode!,\n    state: params.state!,\n    acrValues: params.acrValues,\n    enrollAmrValues: params.enrollAmrValues,\n  };\n\n  return oauthMeta;\n}\n","/*!\n * Copyright (c) 2015-present, Okta, Inc. and/or its affiliates. All rights reserved.\n * The Okta software accompanied by this notice is provided pursuant to the Apache License, Version 2.0 (the \"License.\")\n *\n * You may obtain a copy of the License at http://www.apache.org/licenses/LICENSE-2.0.\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT\n * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * \n * See the License for the specific language governing permissions and limitations under the License.\n */\n\n\nimport { OktaAuthOAuthInterface } from '../types';\nimport { OAuthError, AuthApiError, isOAuthError } from '../../errors';\n\nexport function isInteractionRequiredError(error: Error) {\n  if (error.name !== 'OAuthError') {\n    return false;\n  }\n  const oauthError = error as OAuthError;\n  return (oauthError.errorCode === 'interaction_required');\n}\n\nexport function isAuthorizationCodeError(sdk: OktaAuthOAuthInterface, error: Error) {\n  if (error.name !== 'AuthApiError') {\n    return false;\n  }\n  const authApiError = error as AuthApiError;\n  // xhr property doesn't seem to match XMLHttpRequest type\n  const errorResponse = authApiError.xhr as unknown as Record<string, unknown>;\n  const responseJSON = errorResponse?.responseJSON as Record<string, unknown>;\n  return sdk.options.pkce && (responseJSON?.error as string === 'invalid_grant');\n}\n\nexport function isRefreshTokenInvalidError(error: unknown): boolean {\n  // error: {\"error\":\"invalid_grant\",\"error_description\":\"The refresh token is invalid or expired.\"}\n  return isOAuthError(error) &&\n    error.errorCode === 'invalid_grant' &&\n    error.errorSummary === 'The refresh token is invalid or expired.';\n}\n","/*!\n * Copyright (c) 2015-present, Okta, Inc. and/or its affiliates. All rights reserved.\n * The Okta software accompanied by this notice is provided pursuant to the Apache License, Version 2.0 (the \"License.\")\n *\n * You may obtain a copy of the License at http://www.apache.org/licenses/LICENSE-2.0.\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT\n * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n *\n * See the License for the specific language governing permissions and limitations under the License.\n *\n */\n/* global window */\n/* eslint-disable complexity, max-statements */\nimport { OktaAuthOAuthOptions, OktaAuthOAuthInterface, OAuthResponseType } from '../types';\n\nexport function hasTokensInHash(hash: string): boolean {\n  return /((id|access)_token=)/i.test(hash);\n}\n\n// authorization_code\nexport function hasAuthorizationCode(hashOrSearch: string): boolean {\n  return /(code=)/i.test(hashOrSearch);\n}\n\n// interaction_code\nexport function hasInteractionCode(hashOrSearch: string): boolean {\n  return /(interaction_code=)/i.test(hashOrSearch);\n}\n\nexport function hasErrorInUrl(hashOrSearch: string): boolean {\n  return /(error=)/i.test(hashOrSearch) || /(error_description)/i.test(hashOrSearch);\n}\n\nexport function isRedirectUri(uri: string, sdk: OktaAuthOAuthInterface): boolean {\n  var authParams = sdk.options;\n  if (!uri || !authParams.redirectUri) {\n    return false;\n  }\n  return uri.indexOf(authParams.redirectUri) === 0;\n}\n\nexport function isCodeFlow(options: OktaAuthOAuthOptions) {\n  return options.pkce || options.responseType === 'code' || options.responseMode === 'query';\n}\n\nexport function hasResponseType(responseType: OAuthResponseType, options: OktaAuthOAuthOptions): boolean {\n  let hasResponseType = false;\n  if (Array.isArray(options.responseType) && options.responseType.length) {\n    hasResponseType = options.responseType.indexOf(responseType) >= 0;\n  } else {\n    hasResponseType = options.responseType === responseType;\n  }\n  return hasResponseType;\n}\n\nexport function getHashOrSearch(options: OktaAuthOAuthOptions) {\n  var codeFlow = isCodeFlow(options);\n  var useQuery = codeFlow && options.responseMode !== 'fragment';\n  return useQuery ? window.location.search : window.location.hash;\n}\n\n/**\n * Check if tokens or a code have been passed back into the url, which happens in\n * the OIDC (including social auth IDP) redirect flow.\n */\nexport function isLoginRedirect (sdk: OktaAuthOAuthInterface) {\n  // First check, is this a redirect URI?\n  if (!isRedirectUri(window.location.href, sdk)){\n    return false;\n  }\n\n  // The location contains either a code, token, or an error + error_description\n  var codeFlow = isCodeFlow(sdk.options);\n  var hashOrSearch = getHashOrSearch(sdk.options);\n\n  if (hasErrorInUrl(hashOrSearch)) {\n    return true;\n  }\n\n  if (codeFlow) {\n    var hasCode =  hasAuthorizationCode(hashOrSearch) || hasInteractionCode(hashOrSearch);\n    return hasCode;\n  }\n\n  // implicit flow, will always be hash fragment\n  return hasTokensInHash(window.location.hash);\n}\n\n/**\n * Check if error=interaction_required has been passed back in the url, which happens in\n * the social auth IDP redirect flow.\n */\nexport function isInteractionRequired (sdk: OktaAuthOAuthInterface, hashOrSearch?: string) {\n  if (!hashOrSearch) { // web only\n    // First check, is this a redirect URI?\n    if (!isLoginRedirect(sdk)){\n      return false;\n    }\n  \n    hashOrSearch = getHashOrSearch(sdk.options);\n  }\n  return /(error=interaction_required)/i.test(hashOrSearch);\n}","/*!\n * Copyright (c) 2015-present, Okta, Inc. and/or its affiliates. All rights reserved.\n * The Okta software accompanied by this notice is provided pursuant to the Apache License, Version 2.0 (the \"License.\")\n *\n * You may obtain a copy of the License at http://www.apache.org/licenses/LICENSE-2.0.\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT\n * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n *\n * See the License for the specific language governing permissions and limitations under the License.\n *\n */\n/* eslint-disable complexity, max-statements */\nimport { genRandomString, removeTrailingSlash } from '../../util';\nimport AuthSdkError from '../../errors/AuthSdkError';\nimport { OktaAuthOAuthInterface, CustomUrls } from '../types';\n\nexport function generateState() {\n  return genRandomString(64);\n}\n\nexport function generateNonce() {\n  return genRandomString(64);\n}\n\nfunction getIssuer(sdk: OktaAuthOAuthInterface, options: CustomUrls = {}) {\n  const issuer = removeTrailingSlash(options.issuer) || sdk.options.issuer;\n  return issuer;\n}\n\nexport function getOAuthBaseUrl(sdk: OktaAuthOAuthInterface, options: CustomUrls = {}) {\n  const issuer = getIssuer(sdk, options);\n  const baseUrl = issuer.indexOf('/oauth2') > 0 ? issuer : issuer + '/oauth2';\n  return baseUrl;\n}\n\nexport function getOAuthDomain(sdk: OktaAuthOAuthInterface, options: CustomUrls = {}) {\n  const issuer = getIssuer(sdk, options);\n  const domain = issuer.split('/oauth2')[0];\n  return domain;\n}\n\nexport function getOAuthUrls(sdk: OktaAuthOAuthInterface, options?: CustomUrls): CustomUrls {\n  if (arguments.length > 2) {\n    throw new AuthSdkError('As of version 3.0, \"getOAuthUrls\" takes only a single set of options');\n  }\n  options = options || {};\n\n  // Get user-supplied arguments\n  var authorizeUrl = removeTrailingSlash(options.authorizeUrl) || sdk.options.authorizeUrl;\n  var issuer = getIssuer(sdk, options);\n  var userinfoUrl = removeTrailingSlash(options.userinfoUrl) || sdk.options.userinfoUrl;\n  var tokenUrl = removeTrailingSlash(options.tokenUrl) || sdk.options.tokenUrl;\n  var logoutUrl = removeTrailingSlash(options.logoutUrl) || sdk.options.logoutUrl;\n  var revokeUrl = removeTrailingSlash(options.revokeUrl) || sdk.options.revokeUrl;\n\n  var baseUrl = getOAuthBaseUrl(sdk, options);\n\n  authorizeUrl = authorizeUrl || baseUrl + '/v1/authorize';\n  userinfoUrl = userinfoUrl || baseUrl + '/v1/userinfo';\n  tokenUrl = tokenUrl || baseUrl + '/v1/token';\n  revokeUrl = revokeUrl || baseUrl + '/v1/revoke';\n  logoutUrl = logoutUrl || baseUrl + '/v1/logout';\n\n  return {\n    issuer: issuer,\n    authorizeUrl: authorizeUrl,\n    userinfoUrl: userinfoUrl,\n    tokenUrl: tokenUrl,\n    revokeUrl: revokeUrl,\n    logoutUrl: logoutUrl\n  };\n}\n","/* eslint-disable @typescript-eslint/no-non-null-assertion */\nimport { OAuthTransactionMeta, OktaAuthOAuthInterface, PKCETransactionMeta, TokenParams } from '../types';\nimport { getOAuthUrls } from './oauth';\n\nexport function createOAuthMeta(\n  sdk: OktaAuthOAuthInterface, \n  tokenParams: TokenParams\n): OAuthTransactionMeta | PKCETransactionMeta {\n  const issuer = sdk.options.issuer!;\n  const urls = getOAuthUrls(sdk, tokenParams);\n  const oauthMeta: OAuthTransactionMeta = {\n    issuer,\n    urls,\n    clientId: tokenParams.clientId!,\n    redirectUri: tokenParams.redirectUri!,\n    responseType: tokenParams.responseType!,\n    responseMode: tokenParams.responseMode!,\n    scopes: tokenParams.scopes!,\n    state: tokenParams.state!,\n    nonce: tokenParams.nonce!,\n    ignoreSignature: tokenParams.ignoreSignature!,\n    acrValues: tokenParams.acrValues,\n    extraParams: tokenParams.extraParams\n  };\n\n  if (tokenParams.pkce === false) {\n    // Implicit flow or authorization_code without PKCE\n    return oauthMeta;\n  }\n\n  const pkceMeta: PKCETransactionMeta = {\n    ...oauthMeta,\n    codeVerifier: tokenParams.codeVerifier!,\n    codeChallengeMethod: tokenParams.codeChallengeMethod!,\n    codeChallenge: tokenParams.codeChallenge!,\n  };\n\n  return pkceMeta;\n}\n","/*!\n * Copyright (c) 2019-present, Okta, Inc. and/or its affiliates. All rights reserved.\n * The Okta software accompanied by this notice is provided pursuant to the Apache License, Version 2.0 (the \"License.\")\n *\n * You may obtain a copy of the License at http://www.apache.org/licenses/LICENSE-2.0.\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT\n * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n *\n * See the License for the specific language governing permissions and limitations under the License.\n *\n */\n\n /* eslint-disable complexity, max-statements */\nimport { stringToBase64Url, webcrypto } from '../../crypto';\nimport { MIN_VERIFIER_LENGTH, MAX_VERIFIER_LENGTH, DEFAULT_CODE_CHALLENGE_METHOD } from '../../constants';\n\nfunction dec2hex (dec) {\n  return ('0' + dec.toString(16)).substr(-2);\n}\n\nfunction getRandomString(length) {\n  var a = new Uint8Array(Math.ceil(length / 2));\n  webcrypto.getRandomValues(a);\n  var str = Array.from(a, dec2hex).join('');\n  return str.slice(0, length);\n}\n\nfunction generateVerifier(prefix?: string): string {\n  var verifier = prefix || '';\n  if (verifier.length < MIN_VERIFIER_LENGTH) {\n    verifier = verifier + getRandomString(MIN_VERIFIER_LENGTH - verifier.length);\n  }\n  return encodeURIComponent(verifier).slice(0, MAX_VERIFIER_LENGTH);\n}\n\nfunction computeChallenge(str: string): PromiseLike<any> {  \n  var buffer = new TextEncoder().encode(str);\n  return webcrypto.subtle.digest('SHA-256', buffer).then(function(arrayBuffer) {\n    var hash = String.fromCharCode.apply(null, new Uint8Array(arrayBuffer) as unknown as number[]);\n    var b64u = stringToBase64Url(hash); // url-safe base64 variant\n    return b64u;\n  });\n}\n\nexport default {\n  DEFAULT_CODE_CHALLENGE_METHOD,\n  generateVerifier,\n  computeChallenge\n};\n","/* eslint-disable complexity */\n/*!\n * Copyright (c) 2015-present, Okta, Inc. and/or its affiliates. All rights reserved.\n * The Okta software accompanied by this notice is provided pursuant to the Apache License, Version 2.0 (the \"License.\")\n *\n * You may obtain a copy of the License at http://www.apache.org/licenses/LICENSE-2.0.\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT\n * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n *\n * See the License for the specific language governing permissions and limitations under the License.\n *\n */\nimport { AuthSdkError } from '../../errors';\nimport { OktaAuthOAuthInterface, EnrollAuthenticatorOptions } from '../types';\nimport { getDefaultEnrollAuthenticatorParams } from './defaultEnrollAuthenticatorParams';\n\nfunction prepareParams(\n  params: EnrollAuthenticatorOptions\n): EnrollAuthenticatorOptions {\n  params = {\n    ...params,\n    // forced params:\n    responseType: 'none',\n    prompt: 'enroll_authenticator',\n    maxAge: 0,\n  };\n\n  if (!params.enrollAmrValues) {\n    throw new AuthSdkError('enroll_amr_values must be specified');\n  }\n  if (!params.acrValues) {\n    // `acr_values` is required and should equal 'urn:okta:2fa:any:ifpossible'\n    // But this can be changed in future\n    throw new AuthSdkError('acr_values must be specified');\n  }\n\n  // `scope`, `nonce` must be omitted\n  delete params.scopes;\n  delete params.nonce;\n\n  return params;\n}\n\n// Prepares params for a call to /authorize\nexport function prepareEnrollAuthenticatorParams(\n  sdk: OktaAuthOAuthInterface,\n  options: EnrollAuthenticatorOptions\n): EnrollAuthenticatorOptions {\n  return prepareParams({\n    ...getDefaultEnrollAuthenticatorParams(sdk),\n    ...options\n  });\n}\n","/* eslint-disable complexity */\n/*!\n * Copyright (c) 2015-present, Okta, Inc. and/or its affiliates. All rights reserved.\n * The Okta software accompanied by this notice is provided pursuant to the Apache License, Version 2.0 (the \"License.\")\n *\n * You may obtain a copy of the License at http://www.apache.org/licenses/LICENSE-2.0.\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT\n * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n *\n * See the License for the specific language governing permissions and limitations under the License.\n *\n */\nimport { getWellKnown } from '../endpoints/well-known';\nimport { AuthSdkError } from '../../errors';\nimport { OktaAuthOAuthInterface, TokenParams } from '../types';\nimport { getDefaultTokenParams } from './defaultTokenParams';\nimport { DEFAULT_CODE_CHALLENGE_METHOD } from '../../constants';\nimport PKCE from './pkce';\nimport { OktaAuthBaseInterface } from '../../base/types';\n\nexport function assertPKCESupport(sdk: OktaAuthBaseInterface) {\n  if (!sdk.features.isPKCESupported()) {\n    var errorMessage = 'PKCE requires a modern browser with encryption support running in a secure context.';\n    if (!sdk.features.isHTTPS()) {\n      // eslint-disable-next-line max-len\n      errorMessage += '\\nThe current page is not being served with HTTPS protocol. PKCE requires secure HTTPS protocol.';\n    }\n    if (!sdk.features.hasTextEncoder()) {\n      // eslint-disable-next-line max-len\n      errorMessage += '\\n\"TextEncoder\" is not defined. To use PKCE, you may need to include a polyfill/shim for this browser.';\n    }\n    throw new AuthSdkError(errorMessage);\n  }\n}\n\nexport async function validateCodeChallengeMethod(sdk: OktaAuthOAuthInterface, codeChallengeMethod?: string) {\n  // set default code challenge method, if none provided\n  codeChallengeMethod = codeChallengeMethod || sdk.options.codeChallengeMethod || DEFAULT_CODE_CHALLENGE_METHOD;\n\n  // validate against .well-known/openid-configuration\n  const wellKnownResponse = await getWellKnown(sdk);\n  var methods = wellKnownResponse['code_challenge_methods_supported'] || [];\n  if (methods.indexOf(codeChallengeMethod) === -1) {\n    throw new AuthSdkError('Invalid code_challenge_method');\n  }\n  return codeChallengeMethod;\n}\n\nexport async function preparePKCE(\n  sdk: OktaAuthOAuthInterface, \n  tokenParams: TokenParams\n): Promise<TokenParams> {\n  let {\n    codeVerifier,\n    codeChallenge,\n    codeChallengeMethod\n  } = tokenParams;\n\n  // PKCE calculations can be avoided by passing a codeChallenge\n  codeChallenge = codeChallenge || sdk.options.codeChallenge;\n  if (!codeChallenge) {\n    assertPKCESupport(sdk);\n    codeVerifier = codeVerifier || PKCE.generateVerifier();\n    codeChallenge = await PKCE.computeChallenge(codeVerifier);\n  }\n  codeChallengeMethod = await validateCodeChallengeMethod(sdk, codeChallengeMethod);\n\n  // Clone/copy the params. Set PKCE values\n  tokenParams = {\n    ...tokenParams,\n    responseType: 'code', // responseType is forced\n    codeVerifier,\n    codeChallenge,\n    codeChallengeMethod\n  };\n\n  return tokenParams;\n}\n\n// Prepares params for a call to /authorize or /token\nexport async function prepareTokenParams(\n  sdk: OktaAuthOAuthInterface,\n  tokenParams: TokenParams = {}\n): Promise<TokenParams> {\n  // build params using defaults + options\n  const defaults = getDefaultTokenParams(sdk);\n  tokenParams = { ...defaults, ...tokenParams };\n\n  if (tokenParams.dpop && !sdk.features.isDPoPSupported()) {\n    throw new AuthSdkError('DPoP has been configured, but is not supported by browser');\n  }\n\n  if (tokenParams.pkce === false) {\n    // Implicit flow or authorization_code without PKCE\n    return tokenParams;\n  }\n\n  return preparePKCE(sdk, tokenParams);\n}","import { RefreshToken } from '../types';\nimport { isAuthApiError } from '../../errors';\n\nexport function isSameRefreshToken(a: RefreshToken, b: RefreshToken) {\n  return (a.refreshToken === b.refreshToken);\n}\n\nexport function isRefreshTokenError(err: Error) {\n  if (!isAuthApiError(err)) {\n    return false;\n  }\n\n  if (!err.xhr || !err.xhr.responseJSON) {\n    return false;\n  }\n\n  const { responseJSON } = err.xhr;\n  if (responseJSON.error === 'invalid_grant') {\n    return true;\n  }\n\n  return false;\n}","/*!\n * Copyright (c) 2015-present, Okta, Inc. and/or its affiliates. All rights reserved.\n * The Okta software accompanied by this notice is provided pursuant to the Apache License, Version 2.0 (the \"License.\")\n *\n * You may obtain a copy of the License at http://www.apache.org/licenses/LICENSE-2.0.\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT\n * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n *\n * See the License for the specific language governing permissions and limitations under the License.\n *\n */\n/* eslint-disable complexity, max-statements */\n\nexport function urlParamsToObject(hashOrSearch: string) {\n  // Predefine regexs for parsing hash\n  var plus2space = /\\+/g;\n  var paramSplit = /([^&=]+)=?([^&]*)/g;\n  var fragment = hashOrSearch || '';\n\n  // Some hash based routers will automatically add a / character after the hash\n  if (fragment.charAt(0) === '#' && fragment.charAt(1) === '/') {\n    fragment = fragment.substring(2);\n  }\n\n  // Remove the leading # or ?\n  if (fragment.charAt(0) === '#' || fragment.charAt(0) === '?') {\n    fragment = fragment.substring(1);\n  }\n\n\n  var obj = {};\n\n  // Loop until we have no more params\n  var param;\n  while (true) { // eslint-disable-line no-constant-condition\n    param = paramSplit.exec(fragment);\n    if (!param) { break; }\n\n    var key = param[1];\n    var value = param[2];\n\n    // id_token should remain base64url encoded\n    if (key === 'id_token' || key === 'access_token' || key === 'code') {\n      obj[key] = value;\n    } else {\n      obj[key] = decodeURIComponent(value.replace(plus2space, ' '));\n    }\n  }\n  return obj;\n}\n","/* eslint-disable @typescript-eslint/no-non-null-assertion */\n/*!\n * Copyright (c) 2015-present, Okta, Inc. and/or its affiliates. All rights reserved.\n * The Okta software accompanied by this notice is provided pursuant to the Apache License, Version 2.0 (the \"License.\")\n *\n * You may obtain a copy of the License at http://www.apache.org/licenses/LICENSE-2.0.\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT\n * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n *\n * See the License for the specific language governing permissions and limitations under the License.\n *\n */\n/* eslint-disable complexity, max-statements */\n\nimport AuthSdkError from '../../errors/AuthSdkError';\nimport { OktaAuthOAuthInterface, TokenVerifyParams, UserClaims } from '../../oidc/types';\n\nexport function validateClaims(sdk: OktaAuthOAuthInterface, claims: UserClaims, validationParams: TokenVerifyParams) {\n  const aud = validationParams.clientId;\n  const iss = validationParams.issuer;\n  const nonce = validationParams.nonce;\n  const acr = validationParams.acrValues;\n\n  if (!claims || !iss || !aud) {\n    throw new AuthSdkError('The jwt, iss, and aud arguments are all required');\n  }\n\n  if (nonce && claims.nonce !== nonce) {\n    throw new AuthSdkError('OAuth flow response nonce doesn\\'t match request nonce');\n  }\n\n  const now = Math.floor(Date.now()/1000);\n\n  if (claims.iss !== iss) {\n    throw new AuthSdkError('The issuer [' + claims.iss + '] ' +\n      'does not match [' + iss + ']');\n  }\n\n  if ((Array.isArray(claims.aud) && claims.aud.indexOf(aud) < 0) ||\n    (!Array.isArray(claims.aud) && claims.aud !== aud))\n  {\n    throw new AuthSdkError('The audience [' + claims.aud + '] ' +\n      'does not match [' + aud + ']');\n  }\n\n  if (acr && claims.acr !== acr) {\n    throw new AuthSdkError('The acr [' + claims.acr + '] ' +\n      'does not match acr_values [' + acr + ']');\n  }\n\n  if (claims.iat! > claims.exp!) {\n    throw new AuthSdkError('The JWT expired before it was issued');\n  }\n\n  if (!sdk.options.ignoreLifetime) {\n    if ((now - sdk.options.maxClockSkew!) > claims.exp!) {\n      throw new AuthSdkError('The JWT expired and is no longer valid');\n    }\n\n    if (claims.iat! > (now + sdk.options.maxClockSkew!)) {\n      throw new AuthSdkError('The JWT was issued in the future');\n    }\n  }\n}\n","/* eslint-disable complexity */\n\nimport { AuthSdkError } from '../../errors';\nimport { isAccessToken, isIDToken, isRefreshToken, Token, TokenType } from '../../oidc/types';\n\nexport function validateToken(token: Token, type?: TokenType) {\n  if (!isIDToken(token) && !isAccessToken(token) && !isRefreshToken(token)) {\n    throw new AuthSdkError(\n      'Token must be an Object with scopes, expiresAt, and one of: an idToken, accessToken, or refreshToken property'\n    );\n  }\n  \n  if (type === 'accessToken' && !isAccessToken(token)) {\n    throw new AuthSdkError('invalid accessToken');\n  } \n  if (type === 'idToken' && !isIDToken(token)) {\n    throw new AuthSdkError('invalid idToken');\n  }\n\n  if (type === 'refreshToken' && !isRefreshToken(token)) {\n    throw new AuthSdkError('invalid refreshToken');\n  }\n}","/* eslint-disable max-len */\n/* eslint-disable complexity */\n/*!\n * Copyright (c) 2015-present, Okta, Inc. and/or its affiliates. All rights reserved.\n * The Okta software accompanied by this notice is provided pursuant to the Apache License, Version 2.0 (the \"License.\")\n *\n * You may obtain a copy of the License at http://www.apache.org/licenses/LICENSE-2.0.\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT\n * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n *\n * See the License for the specific language governing permissions and limitations under the License.\n *\n */\nimport { getWellKnown, getKey } from './endpoints/well-known';\nimport { validateClaims } from './util';\nimport { AuthSdkError } from '../errors';\nimport { IDToken, OktaAuthOAuthInterface, TokenVerifyParams } from '../oidc/types';\nimport { decodeToken } from './decodeToken';\nimport * as sdkCrypto from '../crypto';\n\n// Verify the id token\nexport async function verifyToken(sdk: OktaAuthOAuthInterface, token: IDToken, validationParams: TokenVerifyParams): Promise<IDToken> {\n  if (!token || !token.idToken) {\n    throw new AuthSdkError('Only idTokens may be verified');\n  }\n\n  // Decode the Jwt object (may throw)\n  const jwt = decodeToken(token.idToken);\n\n  // The configured issuer may point to a frontend proxy.\n  // Get the \"real\" issuer from .well-known/openid-configuration\n  const configuredIssuer = validationParams?.issuer || sdk.options.issuer;\n  const { issuer } = await getWellKnown(sdk, configuredIssuer);\n\n  const validationOptions: TokenVerifyParams = Object.assign({\n    // base options, can be overridden by params\n    clientId: sdk.options.clientId,\n    ignoreSignature: sdk.options.ignoreSignature\n  }, validationParams, {\n    // final options, cannot be overridden\n    issuer\n  });\n\n  // Standard claim validation (may throw)\n  validateClaims(sdk, jwt.payload, validationOptions);\n\n  // If the browser doesn't support native crypto or we choose not\n  // to verify the signature, bail early\n  if (validationOptions.ignoreSignature == true || !sdk.features.isTokenVerifySupported()) {\n    return token;\n  }\n\n  // eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n  const key = await getKey(sdk, token.issuer, jwt.header.kid!);\n  const valid = await sdkCrypto.verifyToken(token.idToken, key);\n  if (!valid) {\n    throw new AuthSdkError('The token signature is not valid');\n  }\n  if (validationParams && validationParams.accessToken && token.claims.at_hash) {\n    const hash = await sdkCrypto.getOidcHash(validationParams.accessToken);\n    if (hash !== token.claims.at_hash) {\n      throw new AuthSdkError('Token hash verification failed');\n    }\n  }\n  return token;\n}\n","/*!\n * Copyright (c) 2015-present, Okta, Inc. and/or its affiliates. All rights reserved.\n * The Okta software accompanied by this notice is provided pursuant to the Apache License, Version 2.0 (the \"License.\")\n *\n * You may obtain a copy of the License at http://www.apache.org/licenses/LICENSE-2.0.\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT\n * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n *\n * See the License for the specific language governing permissions and limitations under the License.\n *\n */\n/* global window */\nimport { omit, getLink, toQueryString } from '../util';\nimport { get, post, httpRequest } from '../http';\n\nfunction sessionExists(sdk) {\n  return sdk.session.get()\n    .then(function(res) {\n      if (res.status === 'ACTIVE') {\n        return true;\n      }\n      return false;\n    })\n    .catch(function() {\n      return false;\n    });\n}\n\nfunction getSession(sdk) { \n  return get(sdk, '/api/v1/sessions/me', { withCredentials: true })\n  .then(function(session) {\n    var res = omit(session, '_links');\n\n    res.refresh = function() {\n      return post(sdk, getLink(session, 'refresh').href, {}, { withCredentials: true });\n    };\n\n    res.user = function() {\n      return get(sdk, getLink(session, 'user').href, { withCredentials: true });\n    };\n\n    return res;\n  })\n  .catch(function() {\n    // Return INACTIVE status on failure\n    return {status: 'INACTIVE'};\n  });\n}\n\nfunction closeSession(sdk) {\n  return httpRequest(sdk, {\n    url: sdk.getIssuerOrigin() + '/api/v1/sessions/me',\n    method: 'DELETE',\n    withCredentials: true\n  });\n}\n\nfunction refreshSession(sdk) {\n  return post(sdk, '/api/v1/sessions/me/lifecycle/refresh', {}, { withCredentials: true });\n}\n\nfunction setCookieAndRedirect(sdk, sessionToken, redirectUrl) {\n  redirectUrl = redirectUrl || window.location.href;\n  window.location.assign(sdk.getIssuerOrigin() + '/login/sessionCookieRedirect' +\n    toQueryString({\n      checkAccountSetupComplete: true,\n      token: sessionToken,\n      redirectUrl: redirectUrl\n    }));\n}\n\nexport {\n  sessionExists,\n  getSession,\n  closeSession,\n  refreshSession,\n  setCookieAndRedirect\n};\n","import { SessionAPI } from './types';\nimport { closeSession, getSession, refreshSession, sessionExists, setCookieAndRedirect } from './api';\nimport { OktaAuthBaseInterface } from '../base/types';\n\nexport function createSessionApi(sdk: OktaAuthBaseInterface): SessionAPI {\n  const session = {\n    close: closeSession.bind(null, sdk),\n    exists: sessionExists.bind(null, sdk),\n    get: getSession.bind(null, sdk),\n    refresh: refreshSession.bind(null, sdk),\n    setCookieAndRedirect: setCookieAndRedirect.bind(null, sdk)\n  };\n  return session;\n}\n","import { OktaAuthHttpInterface, OktaAuthHttpOptions } from '../http/types';\nimport { OktaAuthConstructor } from '../base/types';\nimport { createSessionApi } from './factory';\nimport {\n  OktaAuthSessionInterface, SessionAPI,\n} from './types';\nimport { StorageManagerInterface } from '../storage/types';\n\nexport function mixinSession\n<\n  S extends StorageManagerInterface = StorageManagerInterface,\n  O extends OktaAuthHttpOptions = OktaAuthHttpOptions,\n  TBase extends OktaAuthConstructor<OktaAuthHttpInterface<S, O>>\n    = OktaAuthConstructor<OktaAuthHttpInterface<S, O>>\n>\n(Base: TBase): TBase & OktaAuthConstructor<OktaAuthSessionInterface<S, O>>\n{\n  return class OktaAuthSession extends Base implements OktaAuthSessionInterface<S, O>\n  {\n    session: SessionAPI;\n\n    constructor(...args: any[]) {\n      super(...args);\n\n      this.session = createSessionApi(this);\n    }\n\n    // Ends the current Okta SSO session without redirecting to Okta.\n    closeSession(): Promise<boolean> {\n      return this.session.close() // DELETE /api/v1/sessions/me\n      .then(async () => {\n        // Clear all local tokens\n        this.clearStorage();\n        return true;\n      })\n      .catch(function(e) {\n        if (e.name === 'AuthApiError' && e.errorCode === 'E0000007') {\n          // Session does not exist or has already been closed\n          return false;\n        }\n        throw e;\n      });\n    }\n  };\n}\n","/*!\n * Copyright (c) 2015-present, Okta, Inc. and/or its affiliates. All rights reserved.\n * The Okta software accompanied by this notice is provided pursuant to the Apache License, Version 2.0 (the \"License.\")\n *\n * You may obtain a copy of the License at http://www.apache.org/licenses/LICENSE-2.0.\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT\n * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * \n * See the License for the specific language governing permissions and limitations under the License.\n */\n\n\n\nimport {\n  TOKEN_STORAGE_NAME,\n  CACHE_STORAGE_NAME,\n} from '../constants';\nimport {\n  StorageUtil,\n  StorageProvider,\n  StorageOptions,\n  CookieOptions,\n  StorageManagerOptions,\n  SimpleStorage,\n  StorageManagerInterface\n} from './types';\nimport { SavedObject } from './SavedObject';\nimport { isBrowser } from '../features';\nimport { warn } from '../util';\n\nexport function logServerSideMemoryStorageWarning(options: StorageOptions) {\n  if (!isBrowser() && !options.storageProvider && !options.storageKey) {\n    // eslint-disable-next-line max-len\n    warn('Memory storage can only support simple single user use case on server side, please provide custom storageProvider or storageKey if advanced scenarios need to be supported.');\n  }\n}\n\n\nexport class BaseStorageManager implements StorageManagerInterface {\n  storageManagerOptions: StorageManagerOptions;\n  cookieOptions: CookieOptions;\n  storageUtil: StorageUtil;\n\n  constructor(storageManagerOptions: StorageManagerOptions, cookieOptions: CookieOptions, storageUtil: StorageUtil) {\n    this.storageManagerOptions = storageManagerOptions;\n    this.cookieOptions = cookieOptions;\n    this.storageUtil = storageUtil;\n  }\n\n  // combines defaults in order\n  getOptionsForSection(sectionName: string, overrideOptions?: StorageOptions) {\n    return Object.assign({}, this.storageManagerOptions[sectionName], overrideOptions);\n  }\n \n  // generic method to get any available storage provider\n  // eslint-disable-next-line complexity\n  getStorage(options: StorageOptions): SimpleStorage {\n    options = Object.assign({}, this.cookieOptions, options); // set defaults\n\n    if (options.storageProvider) {\n      return options.storageProvider;\n    }\n\n    let { storageType, storageTypes } = options;\n\n    if(storageType === 'sessionStorage') {\n      options.sessionCookie = true;\n    }\n\n    // If both storageType and storageTypes are specified, then storageType will be used first\n    // If storageType cannot be used but it matches an entry in storageTypes, subsequent entries may be used as fallback\n    // if storageType does not match an entry in storageTypes then storageType is used with no fallback.\n    if (storageType && storageTypes) {\n      const idx = storageTypes.indexOf(storageType);\n      if (idx >= 0) {\n        storageTypes = storageTypes.slice(idx);\n        storageType = undefined;\n      }\n    }\n\n    if (!storageType) {\n      // eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n      storageType = this.storageUtil.findStorageType(storageTypes!);\n    }\n    return this.storageUtil.getStorageByType(storageType, options);\n  }\n\n  // access_token, id_token, refresh_token\n  getTokenStorage(options?: StorageOptions): StorageProvider {\n    options = this.getOptionsForSection('token', options);\n    logServerSideMemoryStorageWarning(options);\n    const storage = this.getStorage(options);\n    const storageKey = options.storageKey || TOKEN_STORAGE_NAME;\n    return new SavedObject(storage, storageKey);\n  }\n\n  // caches well-known response, among others\n  getHttpCache(options?: StorageOptions): StorageProvider {\n    options = this.getOptionsForSection('cache', options);\n    const storage = this.getStorage(options);\n    const storageKey = options.storageKey || CACHE_STORAGE_NAME;\n    return new SavedObject(storage, storageKey);\n  }\n\n}\n","/*!\n * Copyright (c) 2015-present, Okta, Inc. and/or its affiliates. All rights reserved.\n * The Okta software accompanied by this notice is provided pursuant to the Apache License, Version 2.0 (the \"License.\")\n *\n * You may obtain a copy of the License at http://www.apache.org/licenses/LICENSE-2.0.\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT\n * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n *\n * See the License for the specific language governing permissions and limitations under the License.\n *\n */\n\nimport AuthSdkError from '../errors/AuthSdkError';\nimport { StorageProvider, SimpleStorage } from './types';\n\n// formerly known as \"storageBuilder\". Represents an object saved under a key/name.\nexport class SavedObject implements StorageProvider {\n  storageProvider: SimpleStorage;\n  storageName: string;\n\n  constructor(storage: SimpleStorage, storageName: string) {\n    if (!storage) {\n      throw new AuthSdkError('\"storage\" is required');\n    }\n\n    if (typeof storageName !== 'string' || !storageName.length) {\n      throw new AuthSdkError('\"storageName\" is required');\n    }\n\n    this.storageName = storageName;\n    this.storageProvider = storage;\n  }\n\n  //\n  // SimpleStorage interface\n  //\n\n  getItem(key: string) {\n    return this.getStorage()[key];\n  }\n\n  setItem(key: string, value: any) {\n    return this.updateStorage(key, value);\n  }\n\n  removeItem(key: string) {\n    return this.clearStorage(key);\n  }\n\n  //\n  // StorageProvider interface\n  //\n\n  getStorage() {\n    var storageString = this.storageProvider.getItem(this.storageName);\n    storageString = storageString || '{}';\n    try {\n      return JSON.parse(storageString);\n    } catch(e) {\n      throw new AuthSdkError('Unable to parse storage string: ' + this.storageName);\n    }\n  }\n\n  setStorage(obj?: any) {\n    try {\n      var storageString = obj ? JSON.stringify(obj) : '{}';\n      this.storageProvider.setItem(this.storageName, storageString);\n    } catch(e) {\n      throw new AuthSdkError('Unable to set storage: ' + this.storageName);\n    }\n  }\n\n  clearStorage(key?: string) {\n    if (!key) {\n      // clear all\n      if (this.storageProvider.removeItem) {\n        this.storageProvider.removeItem(this.storageName);\n      } else {\n        this.setStorage();\n      }\n      return;\n    }\n\n    var obj = this.getStorage();\n    delete obj[key];\n    this.setStorage(obj);\n  }\n\n  updateStorage(key, value) {\n    var obj = this.getStorage();\n    obj[key] = value;\n    this.setStorage(obj);\n  }\n}\n","import { OktaAuthBaseInterface, OktaAuthConstructor } from '../base/types';\nimport {\n  OktaAuthStorageInterface,\n  OktaAuthStorageOptions,\n  StorageManagerConstructor,\n  StorageManagerInterface,\n} from './types';\n\nexport function mixinStorage\n<\n  S extends StorageManagerInterface = StorageManagerInterface,\n  O extends OktaAuthStorageOptions = OktaAuthStorageOptions,\n  TBase extends OktaAuthConstructor<OktaAuthBaseInterface<O>> = OktaAuthConstructor<OktaAuthBaseInterface<O>>\n>\n(\n  Base: TBase, StorageManager: StorageManagerConstructor<S>\n): TBase & OktaAuthConstructor<OktaAuthStorageInterface<S, O>>\n{\n  return class OktaAuthStorage extends Base implements OktaAuthStorageInterface<S, O>\n  {\n    storageManager: S;\n    constructor(...args: any[]) {\n      super(...args);\n      const { storageManager, cookies, storageUtil } = this.options;\n      this.storageManager = new StorageManager(storageManager!, cookies!, storageUtil!);\n    }\n    clearStorage(): void {\n      // override in subclass\n    }\n  };\n}\n","/*!\n * Copyright (c) 2015-present, Okta, Inc. and/or its affiliates. All rights reserved.\n * The Okta software accompanied by this notice is provided pursuant to the Apache License, Version 2.0 (the \"License.\")\n *\n * You may obtain a copy of the License at http://www.apache.org/licenses/LICENSE-2.0.\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT\n * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * \n * See the License for the specific language governing permissions and limitations under the License.\n */\n\n/* eslint-disable complexity */\nimport { StorageManagerOptions, StorageUtil, OktaAuthStorageOptions } from '../types';\nimport { warn } from '../../util';\n\nimport { default as browserStorage } from '../../browser/browserStorage';\n\nexport function getStorage(): StorageUtil {\n  const storageUtil = Object.assign({}, browserStorage, {\n    inMemoryStore: {} // create unique storage for this instance\n  });\n  return storageUtil;\n}\n\nexport const STORAGE_MANAGER_OPTIONS: StorageManagerOptions = {\n  token: {\n    storageTypes: [\n      'localStorage',\n      'sessionStorage',\n      'cookie'\n    ]\n  },\n  cache: {\n    storageTypes: [\n      'localStorage',\n      'sessionStorage',\n      'cookie'\n    ]\n  },\n  transaction: {\n    storageTypes: [\n      'sessionStorage',\n      'localStorage',\n      'cookie'\n    ]\n  },\n  'shared-transaction': {\n    storageTypes: [\n      'localStorage'\n    ]\n  },\n  'original-uri': {\n    storageTypes: [\n      'localStorage'\n    ]\n  }\n};\n\nexport function getCookieSettings(args: OktaAuthStorageOptions = {}, isHTTPS: boolean) {\n  // Secure cookies will be automatically used on a HTTPS connection\n  // Non-secure cookies will be automatically used on a HTTP connection\n  // secure option can override the automatic behavior\n  var cookieSettings = args.cookies || {};\n  if (typeof cookieSettings.secure === 'undefined') {\n    cookieSettings.secure = isHTTPS;\n  }\n  if (typeof cookieSettings.sameSite === 'undefined') {\n    cookieSettings.sameSite = cookieSettings.secure ? 'none' : 'lax';\n  }\n\n  // If secure=true, but the connection is not HTTPS, set secure=false.\n  if (cookieSettings.secure && !isHTTPS) {\n    // eslint-disable-next-line no-console\n    warn(\n      'The current page is not being served with the HTTPS protocol.\\n' +\n      'For security reasons, we strongly recommend using HTTPS.\\n' +\n      'If you cannot use HTTPS, set \"cookies.secure\" option to false.'\n    );\n    cookieSettings.secure = false;\n  }\n\n  // Chrome >= 80 will block cookies with SameSite=None unless they are also Secure\n  // If sameSite=none, but the connection is not HTTPS, set sameSite=lax.\n  if (cookieSettings.sameSite === 'none' && !cookieSettings.secure) {\n    cookieSettings.sameSite = 'lax';\n  }\n\n  return cookieSettings;\n}\n","/*!\n * Copyright (c) 2015-present, Okta, Inc. and/or its affiliates. All rights reserved.\n * The Okta software accompanied by this notice is provided pursuant to the Apache License, Version 2.0 (the \"License.\")\n *\n * You may obtain a copy of the License at http://www.apache.org/licenses/LICENSE-2.0.\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT\n * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * \n * See the License for the specific language governing permissions and limitations under the License.\n */\n\nimport { createBaseOptionsConstructor } from '../../base';\nimport { CookieOptions, OktaAuthStorageOptions, StorageManagerOptions, StorageUtil } from '../types';\nimport { getStorage, STORAGE_MANAGER_OPTIONS, getCookieSettings } from './node';\nimport { isHTTPS } from '../../features';\n\nexport function createStorageOptionsConstructor() {\n\n  const BaseOptionsConstructor = createBaseOptionsConstructor();\n  return class StorageOptionsConstructor extends BaseOptionsConstructor implements Required<OktaAuthStorageOptions> {\n    cookies: CookieOptions;\n    storageUtil: StorageUtil;\n    storageManager: StorageManagerOptions;\n    \n    constructor(args: any) {\n      super(args);\n      this.cookies = getCookieSettings(args, isHTTPS())!;\n      this.storageUtil = args.storageUtil || getStorage();\n      this.storageManager = { ...STORAGE_MANAGER_OPTIONS, ...args.storageManager };\n    }\n  };\n}\n","/*!\n * Copyright (c) 2015-present, Okta, Inc. and/or its affiliates. All rights reserved.\n * The Okta software accompanied by this notice is provided pursuant to the Apache License, Version 2.0 (the \"License.\")\n *\n * You may obtain a copy of the License at http://www.apache.org/licenses/LICENSE-2.0.\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT\n * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n *\n * See the License for the specific language governing permissions and limitations under the License.\n */\n\n// Implements a queue for synchronous or asynchronous methods\n// Methods will be wrapped in a promise and execute sequentially\n// This can be used to prevent concurrent calls to a single method or a set of methods\n\nimport { isPromise } from './types';\nimport { warn } from './console';\n\ninterface QueueItem {\n  method: () => void;\n  thisObject: object;\n  args: any[];\n  resolve: (value?: unknown) => void;\n  reject: (reason?: unknown) => void;\n}\n\ninterface PromiseQueueOptions {\n  quiet?: boolean; // if false, concurrrency warnings will not be logged\n}\nexport class PromiseQueue {\n  queue: QueueItem[];\n  running: boolean;\n  options: PromiseQueueOptions;\n\n  constructor(options: PromiseQueueOptions = { quiet: false }) {\n    this.queue = [];\n    this.running = false;\n    this.options = options;\n  }\n\n  // Returns a promise\n  // If the method is synchronous, it will resolve when the method completes\n  // If the method returns a promise, it will resolve (or reject) with the value from the method's promise\n  push(method: (...args: any) => any, thisObject: any, ...args: any[]) {\n    return new Promise((resolve, reject) => {\n      if (this.queue.length > 0) {\n        // There is at least one other pending call.\n        // The PromiseQueue will prevent these methods from running concurrently.\n        if (this.options.quiet !== false) {\n          warn(\n            'Async method is being called but another async method is already running. ' +\n            'The new method will be delayed until the previous method completes.'\n          );\n        }\n      }\n      this.queue.push({\n        method,\n        thisObject,\n        args,\n        resolve,\n        reject\n      });\n      this.run();\n    });\n  }\n\n  run() {\n    if (this.running) {\n      return;\n    }\n    if (this.queue.length === 0) {\n      return;\n    }\n    this.running = true;\n    // eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n    var queueItem = this.queue.shift()!;\n    var res = queueItem.method.apply(queueItem.thisObject, queueItem.args as never) as unknown;\n    if (isPromise(res)) {\n      (res as Promise<unknown>).then(queueItem.resolve, queueItem.reject).finally(() => {\n        this.running = false;\n        this.run();\n      });\n    } else {\n      queueItem.resolve(res);\n      this.running = false;\n      this.run();\n    }\n  }\n}\n","/*!\n * Copyright (c) 2015-present, Okta, Inc. and/or its affiliates. All rights reserved.\n * The Okta software accompanied by this notice is provided pursuant to the Apache License, Version 2.0 (the \"License.\")\n *\n * You may obtain a copy of the License at http://www.apache.org/licenses/LICENSE-2.0.\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT\n * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n *\n * See the License for the specific language governing permissions and limitations under the License.\n */\n/* global window */\n\nexport function getNativeConsole() {\n  if (typeof window !== 'undefined') {\n    return window.console;\n  } else if (typeof console !== 'undefined') {\n    return console;\n  } else {\n    return undefined;\n  }\n}\n\nexport function getConsole() {\n  var nativeConsole = getNativeConsole();\n  // eslint-disable-next-line @typescript-eslint/ban-ts-comment\n  // @ts-ignore\n  if (nativeConsole && nativeConsole.log) {\n    return nativeConsole;\n  }\n  return {\n    log: function() {},\n    warn: function() {},\n    group: function() {},\n    groupEnd: function() {}\n  };\n}\n\nexport function warn(text) {\n  /* eslint-disable no-console */\n  getConsole().warn('[okta-auth-sdk] WARN: ' + text);\n  /* eslint-enable */\n}\n\nexport function deprecate(text) {\n  /* eslint-disable no-console */\n  getConsole().warn('[okta-auth-sdk] DEPRECATION: ' + text);\n  /* eslint-enable */\n}\n\nexport function deprecateWrap(text, fn) {\n  return function() {\n    deprecate(text);\n    return fn.apply(null, arguments);\n  };\n}\n\n","/*!\n * Copyright (c) 2015-present, Okta, Inc. and/or its affiliates. All rights reserved.\n * The Okta software accompanied by this notice is provided pursuant to the Apache License, Version 2.0 (the \"License.\")\n *\n * You may obtain a copy of the License at http://www.apache.org/licenses/LICENSE-2.0.\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT\n * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n *\n * See the License for the specific language governing permissions and limitations under the License.\n */\n\nexport function isoToUTCString(str) {\n  var parts = str.match(/\\d+/g),\n      isoTime = Date.UTC(parts[0], parts[1] - 1, parts[2], parts[3], parts[4], parts[5]),\n      isoDate = new Date(isoTime);\n\n  return isoDate.toUTCString();\n}\n\nexport function genRandomString(length) {\n  var randomCharset = 'abcdefghijklnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ0123456789';\n  var random = '';\n  for (var c = 0, cl = randomCharset.length; c < length; ++c) {\n    random += randomCharset[Math.floor(Math.random() * cl)];\n  }\n  return random;\n}\n\nexport function delay(ms) {\n  return new Promise(function(resolve) {\n    setTimeout(resolve, ms);\n  });\n}\n\nexport function split2(str, delim) {\n  const parts = str.split(delim);\n  return [\n    parts[0], \n    parts.splice(1, parts.length).join(delim),\n  ];\n}\n","/*!\n * Copyright (c) 2015-present, Okta, Inc. and/or its affiliates. All rights reserved.\n * The Okta software accompanied by this notice is provided pursuant to the Apache License, Version 2.0 (the \"License.\")\n *\n * You may obtain a copy of the License at http://www.apache.org/licenses/LICENSE-2.0.\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT\n * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n *\n * See the License for the specific language governing permissions and limitations under the License.\n */\n\nexport function bind(fn, ctx) {\n  var additionalArgs = Array.prototype.slice.call(arguments, 2);\n  return function() {\n    var args = Array.prototype.slice.call(arguments);\n    args = additionalArgs.concat(args);\n    return fn.apply(ctx, args);\n  };\n}\n\n// TODO: replace all references with `Object.assign` then remove this function\nexport function extend() {\n  // First object will be modified!\n  var obj1 = arguments[0];\n  // Properties from other objects will be copied over\n  var objArray = [].slice.call(arguments, 1);\n  objArray.forEach(function(obj) {\n    for (var prop in obj) {\n      // copy over all properties with defined values\n      if (Object.prototype.hasOwnProperty.call(obj, prop) && obj[prop] !== undefined) {\n        obj1[prop] = obj[prop];\n      }\n    }\n  });\n  return obj1; // return the modified object\n}\n\nexport function removeNils(obj) {\n  var cleaned = {};\n  for (var prop in obj) {\n    if (Object.prototype.hasOwnProperty.call(obj, prop)) {\n      var value = obj[prop];\n      if (value !== null && value !== undefined) {\n        cleaned[prop] = value;\n      }\n    }\n  }\n  return cleaned;\n}\n\nexport function clone(obj) {\n  if (obj) {\n    var str = JSON.stringify(obj);\n    if (str) {\n      return JSON.parse(str);\n    }\n  }\n  return obj;\n}\n\n// Analogous to _.omit\nexport function omit(obj, ...props: any[]) {\n  // var props = Array.prototype.slice.call(arguments, 1);\n  var newobj = {};\n  for (var p in obj) {\n    if (Object.prototype.hasOwnProperty.call(obj, p) && props.indexOf(p) == -1) {\n      newobj[p] = obj[p];\n    }\n  }\n  return clone(newobj);\n}\n\nexport function find(collection, searchParams) {\n  var c = collection.length;\n  while (c--) {\n    var item = collection[c];\n    var found = true;\n    for (var prop in searchParams) {\n      if (!Object.prototype.hasOwnProperty.call(searchParams, prop)) {\n        continue;\n      }\n      if (item[prop] !== searchParams[prop]) {\n        found = false;\n        break;\n      }\n    }\n    if (found) {\n      return item;\n    }\n  }\n}\n\nexport function getLink(obj, linkName, altName?) {\n  if (!obj || !obj._links) {\n    return;\n  }\n\n  var link = clone(obj._links[linkName]);\n\n  // If a link has a name and we have an altName, return if they match\n  if (link && link.name && altName) {\n    if (link.name === altName) {\n      return link;\n    }\n  } else {\n    return link;\n  }\n}\n\n","/*!\n * Copyright (c) 2015-present, Okta, Inc. and/or its affiliates. All rights reserved.\n * The Okta software accompanied by this notice is provided pursuant to the Apache License, Version 2.0 (the \"License.\")\n *\n * You may obtain a copy of the License at http://www.apache.org/licenses/LICENSE-2.0.\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT\n * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n *\n * See the License for the specific language governing permissions and limitations under the License.\n */\n\nexport function isString(obj: any): obj is string {\n  return Object.prototype.toString.call(obj) === '[object String]';\n}\n\nexport function isObject(obj: any): obj is object {\n  return Object.prototype.toString.call(obj) === '[object Object]';\n}\n\nexport function isNumber(obj: any): obj is number {\n  return Object.prototype.toString.call(obj) === '[object Number]';\n}\n\nexport function isFunction(fn: any): fn is (...any: any[]) => any {\n  return !!fn && {}.toString.call(fn) === '[object Function]';\n}\n\nexport function isPromise(obj) {\n  return obj && obj.finally && (typeof obj.finally === 'function');\n}\n","/*!\n * Copyright (c) 2015-present, Okta, Inc. and/or its affiliates. All rights reserved.\n * The Okta software accompanied by this notice is provided pursuant to the Apache License, Version 2.0 (the \"License.\")\n *\n * You may obtain a copy of the License at http://www.apache.org/licenses/LICENSE-2.0.\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT\n * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n *\n * See the License for the specific language governing permissions and limitations under the License.\n */\n\nexport function isAbsoluteUrl(url) {\n  return /^[a-z][a-z0-9+.-]*:/i.test(url);\n}\n\nexport function toAbsoluteUrl(url = '', baseUrl) {\n  if (isAbsoluteUrl(url)) {\n    return url;\n  }\n  baseUrl = removeTrailingSlash(baseUrl);\n  return url[0] === '/' ? `${baseUrl}${url}` : `${baseUrl}/${url}`;\n}\n\nexport function toRelativeUrl(url = '', baseUrl) {\n  if (isAbsoluteUrl(url)) {\n    url = url.substring(baseUrl.length);\n  }\n\n  return url[0] === '/' ? url : `/${url}`;\n}\n\nexport function toQueryString(obj) {\n  var str = [];\n  if (obj !== null) {\n    for (var key in obj) {\n      if (Object.prototype.hasOwnProperty.call(obj, key) &&\n          obj[key] !== undefined &&\n          obj[key] !== null) {\n        str.push(key + '=' + encodeURIComponent(obj[key]) as never);\n      }\n    }\n  }\n  if (str.length) {\n    return '?' + str.join('&');\n  } else {\n    return '';\n  }\n}\n\nexport function removeTrailingSlash(path) {\n  if (!path) {\n    return;\n  }\n  // Remove any whitespace before or after string\n  var trimmed = path.replace(/^\\s+|\\s+$/gm,'');\n  // Remove trailing slash(es)\n  trimmed = trimmed.replace(/\\/+$/, '');\n\n  return trimmed;\n}\n","'use strict';\n\nclass CancelError extends Error {\n\tconstructor(reason) {\n\t\tsuper(reason || 'Promise was canceled');\n\t\tthis.name = 'CancelError';\n\t}\n\n\tget isCanceled() {\n\t\treturn true;\n\t}\n}\n\nclass PCancelable {\n\tstatic fn(userFn) {\n\t\treturn (...arguments_) => {\n\t\t\treturn new PCancelable((resolve, reject, onCancel) => {\n\t\t\t\targuments_.push(onCancel);\n\t\t\t\t// eslint-disable-next-line promise/prefer-await-to-then\n\t\t\t\tuserFn(...arguments_).then(resolve, reject);\n\t\t\t});\n\t\t};\n\t}\n\n\tconstructor(executor) {\n\t\tthis._cancelHandlers = [];\n\t\tthis._isPending = true;\n\t\tthis._isCanceled = false;\n\t\tthis._rejectOnCancel = true;\n\n\t\tthis._promise = new Promise((resolve, reject) => {\n\t\t\tthis._reject = reject;\n\n\t\t\tconst onResolve = value => {\n\t\t\t\tif (!this._isCanceled || !onCancel.shouldReject) {\n\t\t\t\t\tthis._isPending = false;\n\t\t\t\t\tresolve(value);\n\t\t\t\t}\n\t\t\t};\n\n\t\t\tconst onReject = error => {\n\t\t\t\tthis._isPending = false;\n\t\t\t\treject(error);\n\t\t\t};\n\n\t\t\tconst onCancel = handler => {\n\t\t\t\tif (!this._isPending) {\n\t\t\t\t\tthrow new Error('The `onCancel` handler was attached after the promise settled.');\n\t\t\t\t}\n\n\t\t\t\tthis._cancelHandlers.push(handler);\n\t\t\t};\n\n\t\t\tObject.defineProperties(onCancel, {\n\t\t\t\tshouldReject: {\n\t\t\t\t\tget: () => this._rejectOnCancel,\n\t\t\t\t\tset: boolean => {\n\t\t\t\t\t\tthis._rejectOnCancel = boolean;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t});\n\n\t\t\treturn executor(onResolve, onReject, onCancel);\n\t\t});\n\t}\n\n\tthen(onFulfilled, onRejected) {\n\t\t// eslint-disable-next-line promise/prefer-await-to-then\n\t\treturn this._promise.then(onFulfilled, onRejected);\n\t}\n\n\tcatch(onRejected) {\n\t\treturn this._promise.catch(onRejected);\n\t}\n\n\tfinally(onFinally) {\n\t\treturn this._promise.finally(onFinally);\n\t}\n\n\tcancel(reason) {\n\t\tif (!this._isPending || this._isCanceled) {\n\t\t\treturn;\n\t\t}\n\n\t\tthis._isCanceled = true;\n\n\t\tif (this._cancelHandlers.length > 0) {\n\t\t\ttry {\n\t\t\t\tfor (const handler of this._cancelHandlers) {\n\t\t\t\t\thandler();\n\t\t\t\t}\n\t\t\t} catch (error) {\n\t\t\t\tthis._reject(error);\n\t\t\t\treturn;\n\t\t\t}\n\t\t}\n\n\t\tif (this._rejectOnCancel) {\n\t\t\tthis._reject(new CancelError(reason));\n\t\t}\n\t}\n\n\tget isCanceled() {\n\t\treturn this._isCanceled;\n\t}\n}\n\nObject.setPrototypeOf(PCancelable.prototype, Promise.prototype);\n\nmodule.exports = PCancelable;\nmodule.exports.CancelError = CancelError;\n","var global = typeof self !== 'undefined' ? self : this;\nvar __self__ = (function () {\nfunction F() {\nthis.fetch = false;\nthis.DOMException = global.DOMException\n}\nF.prototype = global;\nreturn new F();\n})();\n(function(self) {\n\nvar irrelevant = (function (exports) {\n\n  var support = {\n    searchParams: 'URLSearchParams' in self,\n    iterable: 'Symbol' in self && 'iterator' in Symbol,\n    blob:\n      'FileReader' in self &&\n      'Blob' in self &&\n      (function() {\n        try {\n          new Blob();\n          return true\n        } catch (e) {\n          return false\n        }\n      })(),\n    formData: 'FormData' in self,\n    arrayBuffer: 'ArrayBuffer' in self\n  };\n\n  function isDataView(obj) {\n    return obj && DataView.prototype.isPrototypeOf(obj)\n  }\n\n  if (support.arrayBuffer) {\n    var viewClasses = [\n      '[object Int8Array]',\n      '[object Uint8Array]',\n      '[object Uint8ClampedArray]',\n      '[object Int16Array]',\n      '[object Uint16Array]',\n      '[object Int32Array]',\n      '[object Uint32Array]',\n      '[object Float32Array]',\n      '[object Float64Array]'\n    ];\n\n    var isArrayBufferView =\n      ArrayBuffer.isView ||\n      function(obj) {\n        return obj && viewClasses.indexOf(Object.prototype.toString.call(obj)) > -1\n      };\n  }\n\n  function normalizeName(name) {\n    if (typeof name !== 'string') {\n      name = String(name);\n    }\n    if (/[^a-z0-9\\-#$%&'*+.^_`|~]/i.test(name)) {\n      throw new TypeError('Invalid character in header field name')\n    }\n    return name.toLowerCase()\n  }\n\n  function normalizeValue(value) {\n    if (typeof value !== 'string') {\n      value = String(value);\n    }\n    return value\n  }\n\n  // Build a destructive iterator for the value list\n  function iteratorFor(items) {\n    var iterator = {\n      next: function() {\n        var value = items.shift();\n        return {done: value === undefined, value: value}\n      }\n    };\n\n    if (support.iterable) {\n      iterator[Symbol.iterator] = function() {\n        return iterator\n      };\n    }\n\n    return iterator\n  }\n\n  function Headers(headers) {\n    this.map = {};\n\n    if (headers instanceof Headers) {\n      headers.forEach(function(value, name) {\n        this.append(name, value);\n      }, this);\n    } else if (Array.isArray(headers)) {\n      headers.forEach(function(header) {\n        this.append(header[0], header[1]);\n      }, this);\n    } else if (headers) {\n      Object.getOwnPropertyNames(headers).forEach(function(name) {\n        this.append(name, headers[name]);\n      }, this);\n    }\n  }\n\n  Headers.prototype.append = function(name, value) {\n    name = normalizeName(name);\n    value = normalizeValue(value);\n    var oldValue = this.map[name];\n    this.map[name] = oldValue ? oldValue + ', ' + value : value;\n  };\n\n  Headers.prototype['delete'] = function(name) {\n    delete this.map[normalizeName(name)];\n  };\n\n  Headers.prototype.get = function(name) {\n    name = normalizeName(name);\n    return this.has(name) ? this.map[name] : null\n  };\n\n  Headers.prototype.has = function(name) {\n    return this.map.hasOwnProperty(normalizeName(name))\n  };\n\n  Headers.prototype.set = function(name, value) {\n    this.map[normalizeName(name)] = normalizeValue(value);\n  };\n\n  Headers.prototype.forEach = function(callback, thisArg) {\n    for (var name in this.map) {\n      if (this.map.hasOwnProperty(name)) {\n        callback.call(thisArg, this.map[name], name, this);\n      }\n    }\n  };\n\n  Headers.prototype.keys = function() {\n    var items = [];\n    this.forEach(function(value, name) {\n      items.push(name);\n    });\n    return iteratorFor(items)\n  };\n\n  Headers.prototype.values = function() {\n    var items = [];\n    this.forEach(function(value) {\n      items.push(value);\n    });\n    return iteratorFor(items)\n  };\n\n  Headers.prototype.entries = function() {\n    var items = [];\n    this.forEach(function(value, name) {\n      items.push([name, value]);\n    });\n    return iteratorFor(items)\n  };\n\n  if (support.iterable) {\n    Headers.prototype[Symbol.iterator] = Headers.prototype.entries;\n  }\n\n  function consumed(body) {\n    if (body.bodyUsed) {\n      return Promise.reject(new TypeError('Already read'))\n    }\n    body.bodyUsed = true;\n  }\n\n  function fileReaderReady(reader) {\n    return new Promise(function(resolve, reject) {\n      reader.onload = function() {\n        resolve(reader.result);\n      };\n      reader.onerror = function() {\n        reject(reader.error);\n      };\n    })\n  }\n\n  function readBlobAsArrayBuffer(blob) {\n    var reader = new FileReader();\n    var promise = fileReaderReady(reader);\n    reader.readAsArrayBuffer(blob);\n    return promise\n  }\n\n  function readBlobAsText(blob) {\n    var reader = new FileReader();\n    var promise = fileReaderReady(reader);\n    reader.readAsText(blob);\n    return promise\n  }\n\n  function readArrayBufferAsText(buf) {\n    var view = new Uint8Array(buf);\n    var chars = new Array(view.length);\n\n    for (var i = 0; i < view.length; i++) {\n      chars[i] = String.fromCharCode(view[i]);\n    }\n    return chars.join('')\n  }\n\n  function bufferClone(buf) {\n    if (buf.slice) {\n      return buf.slice(0)\n    } else {\n      var view = new Uint8Array(buf.byteLength);\n      view.set(new Uint8Array(buf));\n      return view.buffer\n    }\n  }\n\n  function Body() {\n    this.bodyUsed = false;\n\n    this._initBody = function(body) {\n      this._bodyInit = body;\n      if (!body) {\n        this._bodyText = '';\n      } else if (typeof body === 'string') {\n        this._bodyText = body;\n      } else if (support.blob && Blob.prototype.isPrototypeOf(body)) {\n        this._bodyBlob = body;\n      } else if (support.formData && FormData.prototype.isPrototypeOf(body)) {\n        this._bodyFormData = body;\n      } else if (support.searchParams && URLSearchParams.prototype.isPrototypeOf(body)) {\n        this._bodyText = body.toString();\n      } else if (support.arrayBuffer && support.blob && isDataView(body)) {\n        this._bodyArrayBuffer = bufferClone(body.buffer);\n        // IE 10-11 can't handle a DataView body.\n        this._bodyInit = new Blob([this._bodyArrayBuffer]);\n      } else if (support.arrayBuffer && (ArrayBuffer.prototype.isPrototypeOf(body) || isArrayBufferView(body))) {\n        this._bodyArrayBuffer = bufferClone(body);\n      } else {\n        this._bodyText = body = Object.prototype.toString.call(body);\n      }\n\n      if (!this.headers.get('content-type')) {\n        if (typeof body === 'string') {\n          this.headers.set('content-type', 'text/plain;charset=UTF-8');\n        } else if (this._bodyBlob && this._bodyBlob.type) {\n          this.headers.set('content-type', this._bodyBlob.type);\n        } else if (support.searchParams && URLSearchParams.prototype.isPrototypeOf(body)) {\n          this.headers.set('content-type', 'application/x-www-form-urlencoded;charset=UTF-8');\n        }\n      }\n    };\n\n    if (support.blob) {\n      this.blob = function() {\n        var rejected = consumed(this);\n        if (rejected) {\n          return rejected\n        }\n\n        if (this._bodyBlob) {\n          return Promise.resolve(this._bodyBlob)\n        } else if (this._bodyArrayBuffer) {\n          return Promise.resolve(new Blob([this._bodyArrayBuffer]))\n        } else if (this._bodyFormData) {\n          throw new Error('could not read FormData body as blob')\n        } else {\n          return Promise.resolve(new Blob([this._bodyText]))\n        }\n      };\n\n      this.arrayBuffer = function() {\n        if (this._bodyArrayBuffer) {\n          return consumed(this) || Promise.resolve(this._bodyArrayBuffer)\n        } else {\n          return this.blob().then(readBlobAsArrayBuffer)\n        }\n      };\n    }\n\n    this.text = function() {\n      var rejected = consumed(this);\n      if (rejected) {\n        return rejected\n      }\n\n      if (this._bodyBlob) {\n        return readBlobAsText(this._bodyBlob)\n      } else if (this._bodyArrayBuffer) {\n        return Promise.resolve(readArrayBufferAsText(this._bodyArrayBuffer))\n      } else if (this._bodyFormData) {\n        throw new Error('could not read FormData body as text')\n      } else {\n        return Promise.resolve(this._bodyText)\n      }\n    };\n\n    if (support.formData) {\n      this.formData = function() {\n        return this.text().then(decode)\n      };\n    }\n\n    this.json = function() {\n      return this.text().then(JSON.parse)\n    };\n\n    return this\n  }\n\n  // HTTP methods whose capitalization should be normalized\n  var methods = ['DELETE', 'GET', 'HEAD', 'OPTIONS', 'POST', 'PUT'];\n\n  function normalizeMethod(method) {\n    var upcased = method.toUpperCase();\n    return methods.indexOf(upcased) > -1 ? upcased : method\n  }\n\n  function Request(input, options) {\n    options = options || {};\n    var body = options.body;\n\n    if (input instanceof Request) {\n      if (input.bodyUsed) {\n        throw new TypeError('Already read')\n      }\n      this.url = input.url;\n      this.credentials = input.credentials;\n      if (!options.headers) {\n        this.headers = new Headers(input.headers);\n      }\n      this.method = input.method;\n      this.mode = input.mode;\n      this.signal = input.signal;\n      if (!body && input._bodyInit != null) {\n        body = input._bodyInit;\n        input.bodyUsed = true;\n      }\n    } else {\n      this.url = String(input);\n    }\n\n    this.credentials = options.credentials || this.credentials || 'same-origin';\n    if (options.headers || !this.headers) {\n      this.headers = new Headers(options.headers);\n    }\n    this.method = normalizeMethod(options.method || this.method || 'GET');\n    this.mode = options.mode || this.mode || null;\n    this.signal = options.signal || this.signal;\n    this.referrer = null;\n\n    if ((this.method === 'GET' || this.method === 'HEAD') && body) {\n      throw new TypeError('Body not allowed for GET or HEAD requests')\n    }\n    this._initBody(body);\n  }\n\n  Request.prototype.clone = function() {\n    return new Request(this, {body: this._bodyInit})\n  };\n\n  function decode(body) {\n    var form = new FormData();\n    body\n      .trim()\n      .split('&')\n      .forEach(function(bytes) {\n        if (bytes) {\n          var split = bytes.split('=');\n          var name = split.shift().replace(/\\+/g, ' ');\n          var value = split.join('=').replace(/\\+/g, ' ');\n          form.append(decodeURIComponent(name), decodeURIComponent(value));\n        }\n      });\n    return form\n  }\n\n  function parseHeaders(rawHeaders) {\n    var headers = new Headers();\n    // Replace instances of \\r\\n and \\n followed by at least one space or horizontal tab with a space\n    // https://tools.ietf.org/html/rfc7230#section-3.2\n    var preProcessedHeaders = rawHeaders.replace(/\\r?\\n[\\t ]+/g, ' ');\n    preProcessedHeaders.split(/\\r?\\n/).forEach(function(line) {\n      var parts = line.split(':');\n      var key = parts.shift().trim();\n      if (key) {\n        var value = parts.join(':').trim();\n        headers.append(key, value);\n      }\n    });\n    return headers\n  }\n\n  Body.call(Request.prototype);\n\n  function Response(bodyInit, options) {\n    if (!options) {\n      options = {};\n    }\n\n    this.type = 'default';\n    this.status = options.status === undefined ? 200 : options.status;\n    this.ok = this.status >= 200 && this.status < 300;\n    this.statusText = 'statusText' in options ? options.statusText : 'OK';\n    this.headers = new Headers(options.headers);\n    this.url = options.url || '';\n    this._initBody(bodyInit);\n  }\n\n  Body.call(Response.prototype);\n\n  Response.prototype.clone = function() {\n    return new Response(this._bodyInit, {\n      status: this.status,\n      statusText: this.statusText,\n      headers: new Headers(this.headers),\n      url: this.url\n    })\n  };\n\n  Response.error = function() {\n    var response = new Response(null, {status: 0, statusText: ''});\n    response.type = 'error';\n    return response\n  };\n\n  var redirectStatuses = [301, 302, 303, 307, 308];\n\n  Response.redirect = function(url, status) {\n    if (redirectStatuses.indexOf(status) === -1) {\n      throw new RangeError('Invalid status code')\n    }\n\n    return new Response(null, {status: status, headers: {location: url}})\n  };\n\n  exports.DOMException = self.DOMException;\n  try {\n    new exports.DOMException();\n  } catch (err) {\n    exports.DOMException = function(message, name) {\n      this.message = message;\n      this.name = name;\n      var error = Error(message);\n      this.stack = error.stack;\n    };\n    exports.DOMException.prototype = Object.create(Error.prototype);\n    exports.DOMException.prototype.constructor = exports.DOMException;\n  }\n\n  function fetch(input, init) {\n    return new Promise(function(resolve, reject) {\n      var request = new Request(input, init);\n\n      if (request.signal && request.signal.aborted) {\n        return reject(new exports.DOMException('Aborted', 'AbortError'))\n      }\n\n      var xhr = new XMLHttpRequest();\n\n      function abortXhr() {\n        xhr.abort();\n      }\n\n      xhr.onload = function() {\n        var options = {\n          status: xhr.status,\n          statusText: xhr.statusText,\n          headers: parseHeaders(xhr.getAllResponseHeaders() || '')\n        };\n        options.url = 'responseURL' in xhr ? xhr.responseURL : options.headers.get('X-Request-URL');\n        var body = 'response' in xhr ? xhr.response : xhr.responseText;\n        resolve(new Response(body, options));\n      };\n\n      xhr.onerror = function() {\n        reject(new TypeError('Network request failed'));\n      };\n\n      xhr.ontimeout = function() {\n        reject(new TypeError('Network request failed'));\n      };\n\n      xhr.onabort = function() {\n        reject(new exports.DOMException('Aborted', 'AbortError'));\n      };\n\n      xhr.open(request.method, request.url, true);\n\n      if (request.credentials === 'include') {\n        xhr.withCredentials = true;\n      } else if (request.credentials === 'omit') {\n        xhr.withCredentials = false;\n      }\n\n      if ('responseType' in xhr && support.blob) {\n        xhr.responseType = 'blob';\n      }\n\n      request.headers.forEach(function(value, name) {\n        xhr.setRequestHeader(name, value);\n      });\n\n      if (request.signal) {\n        request.signal.addEventListener('abort', abortXhr);\n\n        xhr.onreadystatechange = function() {\n          // DONE (success or failure)\n          if (xhr.readyState === 4) {\n            request.signal.removeEventListener('abort', abortXhr);\n          }\n        };\n      }\n\n      xhr.send(typeof request._bodyInit === 'undefined' ? null : request._bodyInit);\n    })\n  }\n\n  fetch.polyfill = true;\n\n  if (!self.fetch) {\n    self.fetch = fetch;\n    self.Headers = Headers;\n    self.Request = Request;\n    self.Response = Response;\n  }\n\n  exports.Headers = Headers;\n  exports.Request = Request;\n  exports.Response = Response;\n  exports.fetch = fetch;\n\n  Object.defineProperty(exports, '__esModule', { value: true });\n\n  return exports;\n\n})({});\n})(__self__);\n__self__.fetch.ponyfill = true;\n// Remove \"polyfill\" property added by whatwg-fetch\ndelete __self__.fetch.polyfill;\n// Choose between native implementation (global) or custom implementation (__self__)\n// var ctx = global.fetch ? global : __self__;\nvar ctx = __self__; // this line disable service worker support temporarily\nexports = ctx.fetch // To enable: import fetch from 'cross-fetch'\nexports.default = ctx.fetch // For TypeScript consumers without esModuleInterop.\nexports.fetch = ctx.fetch // To enable: import {fetch} from 'cross-fetch'\nexports.Headers = ctx.Headers\nexports.Request = ctx.Request\nexports.Response = ctx.Response\nmodule.exports = exports\n","function E () {\n  // Keep this empty so it's easier to inherit from\n  // (via https://github.com/lipsmack from https://github.com/scottcorgan/tiny-emitter/issues/3)\n}\n\nE.prototype = {\n  on: function (name, callback, ctx) {\n    var e = this.e || (this.e = {});\n\n    (e[name] || (e[name] = [])).push({\n      fn: callback,\n      ctx: ctx\n    });\n\n    return this;\n  },\n\n  once: function (name, callback, ctx) {\n    var self = this;\n    function listener () {\n      self.off(name, listener);\n      callback.apply(ctx, arguments);\n    };\n\n    listener._ = callback\n    return this.on(name, listener, ctx);\n  },\n\n  emit: function (name) {\n    var data = [].slice.call(arguments, 1);\n    var evtArr = ((this.e || (this.e = {}))[name] || []).slice();\n    var i = 0;\n    var len = evtArr.length;\n\n    for (i; i < len; i++) {\n      evtArr[i].fn.apply(evtArr[i].ctx, data);\n    }\n\n    return this;\n  },\n\n  off: function (name, callback) {\n    var e = this.e || (this.e = {});\n    var evts = e[name];\n    var liveEvents = [];\n\n    if (evts && callback) {\n      for (var i = 0, len = evts.length; i < len; i++) {\n        if (evts[i].fn !== callback && evts[i].fn._ !== callback)\n          liveEvents.push(evts[i]);\n      }\n    }\n\n    // Remove event from queue to prevent memory leak\n    // Suggested by https://github.com/lazd\n    // Ref: https://github.com/scottcorgan/tiny-emitter/commit/c6ebfaa9bc973b33d110a84a307742b7cf94c953#commitcomment-5024910\n\n    (liveEvents.length)\n      ? e[name] = liveEvents\n      : delete e[name];\n\n    return this;\n  }\n};\n\nmodule.exports = E;\n","function _assertThisInitialized(self) {\n  if (self === void 0) {\n    throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\");\n  }\n  return self;\n}\nmodule.exports = _assertThisInitialized, module.exports.__esModule = true, module.exports[\"default\"] = module.exports;","function _classCallCheck(instance, Constructor) {\n  if (!(instance instanceof Constructor)) {\n    throw new TypeError(\"Cannot call a class as a function\");\n  }\n}\nmodule.exports = _classCallCheck, module.exports.__esModule = true, module.exports[\"default\"] = module.exports;","var setPrototypeOf = require(\"./setPrototypeOf.js\");\nvar isNativeReflectConstruct = require(\"./isNativeReflectConstruct.js\");\nfunction _construct(Parent, args, Class) {\n  if (isNativeReflectConstruct()) {\n    module.exports = _construct = Reflect.construct.bind(), module.exports.__esModule = true, module.exports[\"default\"] = module.exports;\n  } else {\n    module.exports = _construct = function _construct(Parent, args, Class) {\n      var a = [null];\n      a.push.apply(a, args);\n      var Constructor = Function.bind.apply(Parent, a);\n      var instance = new Constructor();\n      if (Class) setPrototypeOf(instance, Class.prototype);\n      return instance;\n    }, module.exports.__esModule = true, module.exports[\"default\"] = module.exports;\n  }\n  return _construct.apply(null, arguments);\n}\nmodule.exports = _construct, module.exports.__esModule = true, module.exports[\"default\"] = module.exports;","function _defineProperties(target, props) {\n  for (var i = 0; i < props.length; i++) {\n    var descriptor = props[i];\n    descriptor.enumerable = descriptor.enumerable || false;\n    descriptor.configurable = true;\n    if (\"value\" in descriptor) descriptor.writable = true;\n    Object.defineProperty(target, descriptor.key, descriptor);\n  }\n}\nfunction _createClass(Constructor, protoProps, staticProps) {\n  if (protoProps) _defineProperties(Constructor.prototype, protoProps);\n  if (staticProps) _defineProperties(Constructor, staticProps);\n  Object.defineProperty(Constructor, \"prototype\", {\n    writable: false\n  });\n  return Constructor;\n}\nmodule.exports = _createClass, module.exports.__esModule = true, module.exports[\"default\"] = module.exports;","function _getPrototypeOf(o) {\n  module.exports = _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf.bind() : function _getPrototypeOf(o) {\n    return o.__proto__ || Object.getPrototypeOf(o);\n  }, module.exports.__esModule = true, module.exports[\"default\"] = module.exports;\n  return _getPrototypeOf(o);\n}\nmodule.exports = _getPrototypeOf, module.exports.__esModule = true, module.exports[\"default\"] = module.exports;","var setPrototypeOf = require(\"./setPrototypeOf.js\");\nfunction _inherits(subClass, superClass) {\n  if (typeof superClass !== \"function\" && superClass !== null) {\n    throw new TypeError(\"Super expression must either be null or a function\");\n  }\n  subClass.prototype = Object.create(superClass && superClass.prototype, {\n    constructor: {\n      value: subClass,\n      writable: true,\n      configurable: true\n    }\n  });\n  Object.defineProperty(subClass, \"prototype\", {\n    writable: false\n  });\n  if (superClass) setPrototypeOf(subClass, superClass);\n}\nmodule.exports = _inherits, module.exports.__esModule = true, module.exports[\"default\"] = module.exports;","function _isNativeFunction(fn) {\n  return Function.toString.call(fn).indexOf(\"[native code]\") !== -1;\n}\nmodule.exports = _isNativeFunction, module.exports.__esModule = true, module.exports[\"default\"] = module.exports;","function _isNativeReflectConstruct() {\n  if (typeof Reflect === \"undefined\" || !Reflect.construct) return false;\n  if (Reflect.construct.sham) return false;\n  if (typeof Proxy === \"function\") return true;\n  try {\n    Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {}));\n    return true;\n  } catch (e) {\n    return false;\n  }\n}\nmodule.exports = _isNativeReflectConstruct, module.exports.__esModule = true, module.exports[\"default\"] = module.exports;","var _typeof = require(\"./typeof.js\")[\"default\"];\nvar assertThisInitialized = require(\"./assertThisInitialized.js\");\nfunction _possibleConstructorReturn(self, call) {\n  if (call && (_typeof(call) === \"object\" || typeof call === \"function\")) {\n    return call;\n  } else if (call !== void 0) {\n    throw new TypeError(\"Derived constructors may only return object or undefined\");\n  }\n  return assertThisInitialized(self);\n}\nmodule.exports = _possibleConstructorReturn, module.exports.__esModule = true, module.exports[\"default\"] = module.exports;","var _typeof = require(\"./typeof.js\")[\"default\"];\nfunction _regeneratorRuntime() {\n  \"use strict\"; /*! regenerator-runtime -- Copyright (c) 2014-present, Facebook, Inc. -- license (MIT): https://github.com/facebook/regenerator/blob/main/LICENSE */\n  module.exports = _regeneratorRuntime = function _regeneratorRuntime() {\n    return exports;\n  }, module.exports.__esModule = true, module.exports[\"default\"] = module.exports;\n  var exports = {},\n    Op = Object.prototype,\n    hasOwn = Op.hasOwnProperty,\n    $Symbol = \"function\" == typeof Symbol ? Symbol : {},\n    iteratorSymbol = $Symbol.iterator || \"@@iterator\",\n    asyncIteratorSymbol = $Symbol.asyncIterator || \"@@asyncIterator\",\n    toStringTagSymbol = $Symbol.toStringTag || \"@@toStringTag\";\n  function define(obj, key, value) {\n    return Object.defineProperty(obj, key, {\n      value: value,\n      enumerable: !0,\n      configurable: !0,\n      writable: !0\n    }), obj[key];\n  }\n  try {\n    define({}, \"\");\n  } catch (err) {\n    define = function define(obj, key, value) {\n      return obj[key] = value;\n    };\n  }\n  function wrap(innerFn, outerFn, self, tryLocsList) {\n    var protoGenerator = outerFn && outerFn.prototype instanceof Generator ? outerFn : Generator,\n      generator = Object.create(protoGenerator.prototype),\n      context = new Context(tryLocsList || []);\n    return generator._invoke = function (innerFn, self, context) {\n      var state = \"suspendedStart\";\n      return function (method, arg) {\n        if (\"executing\" === state) throw new Error(\"Generator is already running\");\n        if (\"completed\" === state) {\n          if (\"throw\" === method) throw arg;\n          return doneResult();\n        }\n        for (context.method = method, context.arg = arg;;) {\n          var delegate = context.delegate;\n          if (delegate) {\n            var delegateResult = maybeInvokeDelegate(delegate, context);\n            if (delegateResult) {\n              if (delegateResult === ContinueSentinel) continue;\n              return delegateResult;\n            }\n          }\n          if (\"next\" === context.method) context.sent = context._sent = context.arg;else if (\"throw\" === context.method) {\n            if (\"suspendedStart\" === state) throw state = \"completed\", context.arg;\n            context.dispatchException(context.arg);\n          } else \"return\" === context.method && context.abrupt(\"return\", context.arg);\n          state = \"executing\";\n          var record = tryCatch(innerFn, self, context);\n          if (\"normal\" === record.type) {\n            if (state = context.done ? \"completed\" : \"suspendedYield\", record.arg === ContinueSentinel) continue;\n            return {\n              value: record.arg,\n              done: context.done\n            };\n          }\n          \"throw\" === record.type && (state = \"completed\", context.method = \"throw\", context.arg = record.arg);\n        }\n      };\n    }(innerFn, self, context), generator;\n  }\n  function tryCatch(fn, obj, arg) {\n    try {\n      return {\n        type: \"normal\",\n        arg: fn.call(obj, arg)\n      };\n    } catch (err) {\n      return {\n        type: \"throw\",\n        arg: err\n      };\n    }\n  }\n  exports.wrap = wrap;\n  var ContinueSentinel = {};\n  function Generator() {}\n  function GeneratorFunction() {}\n  function GeneratorFunctionPrototype() {}\n  var IteratorPrototype = {};\n  define(IteratorPrototype, iteratorSymbol, function () {\n    return this;\n  });\n  var getProto = Object.getPrototypeOf,\n    NativeIteratorPrototype = getProto && getProto(getProto(values([])));\n  NativeIteratorPrototype && NativeIteratorPrototype !== Op && hasOwn.call(NativeIteratorPrototype, iteratorSymbol) && (IteratorPrototype = NativeIteratorPrototype);\n  var Gp = GeneratorFunctionPrototype.prototype = Generator.prototype = Object.create(IteratorPrototype);\n  function defineIteratorMethods(prototype) {\n    [\"next\", \"throw\", \"return\"].forEach(function (method) {\n      define(prototype, method, function (arg) {\n        return this._invoke(method, arg);\n      });\n    });\n  }\n  function AsyncIterator(generator, PromiseImpl) {\n    function invoke(method, arg, resolve, reject) {\n      var record = tryCatch(generator[method], generator, arg);\n      if (\"throw\" !== record.type) {\n        var result = record.arg,\n          value = result.value;\n        return value && \"object\" == _typeof(value) && hasOwn.call(value, \"__await\") ? PromiseImpl.resolve(value.__await).then(function (value) {\n          invoke(\"next\", value, resolve, reject);\n        }, function (err) {\n          invoke(\"throw\", err, resolve, reject);\n        }) : PromiseImpl.resolve(value).then(function (unwrapped) {\n          result.value = unwrapped, resolve(result);\n        }, function (error) {\n          return invoke(\"throw\", error, resolve, reject);\n        });\n      }\n      reject(record.arg);\n    }\n    var previousPromise;\n    this._invoke = function (method, arg) {\n      function callInvokeWithMethodAndArg() {\n        return new PromiseImpl(function (resolve, reject) {\n          invoke(method, arg, resolve, reject);\n        });\n      }\n      return previousPromise = previousPromise ? previousPromise.then(callInvokeWithMethodAndArg, callInvokeWithMethodAndArg) : callInvokeWithMethodAndArg();\n    };\n  }\n  function maybeInvokeDelegate(delegate, context) {\n    var method = delegate.iterator[context.method];\n    if (undefined === method) {\n      if (context.delegate = null, \"throw\" === context.method) {\n        if (delegate.iterator[\"return\"] && (context.method = \"return\", context.arg = undefined, maybeInvokeDelegate(delegate, context), \"throw\" === context.method)) return ContinueSentinel;\n        context.method = \"throw\", context.arg = new TypeError(\"The iterator does not provide a 'throw' method\");\n      }\n      return ContinueSentinel;\n    }\n    var record = tryCatch(method, delegate.iterator, context.arg);\n    if (\"throw\" === record.type) return context.method = \"throw\", context.arg = record.arg, context.delegate = null, ContinueSentinel;\n    var info = record.arg;\n    return info ? info.done ? (context[delegate.resultName] = info.value, context.next = delegate.nextLoc, \"return\" !== context.method && (context.method = \"next\", context.arg = undefined), context.delegate = null, ContinueSentinel) : info : (context.method = \"throw\", context.arg = new TypeError(\"iterator result is not an object\"), context.delegate = null, ContinueSentinel);\n  }\n  function pushTryEntry(locs) {\n    var entry = {\n      tryLoc: locs[0]\n    };\n    1 in locs && (entry.catchLoc = locs[1]), 2 in locs && (entry.finallyLoc = locs[2], entry.afterLoc = locs[3]), this.tryEntries.push(entry);\n  }\n  function resetTryEntry(entry) {\n    var record = entry.completion || {};\n    record.type = \"normal\", delete record.arg, entry.completion = record;\n  }\n  function Context(tryLocsList) {\n    this.tryEntries = [{\n      tryLoc: \"root\"\n    }], tryLocsList.forEach(pushTryEntry, this), this.reset(!0);\n  }\n  function values(iterable) {\n    if (iterable) {\n      var iteratorMethod = iterable[iteratorSymbol];\n      if (iteratorMethod) return iteratorMethod.call(iterable);\n      if (\"function\" == typeof iterable.next) return iterable;\n      if (!isNaN(iterable.length)) {\n        var i = -1,\n          next = function next() {\n            for (; ++i < iterable.length;) {\n              if (hasOwn.call(iterable, i)) return next.value = iterable[i], next.done = !1, next;\n            }\n            return next.value = undefined, next.done = !0, next;\n          };\n        return next.next = next;\n      }\n    }\n    return {\n      next: doneResult\n    };\n  }\n  function doneResult() {\n    return {\n      value: undefined,\n      done: !0\n    };\n  }\n  return GeneratorFunction.prototype = GeneratorFunctionPrototype, define(Gp, \"constructor\", GeneratorFunctionPrototype), define(GeneratorFunctionPrototype, \"constructor\", GeneratorFunction), GeneratorFunction.displayName = define(GeneratorFunctionPrototype, toStringTagSymbol, \"GeneratorFunction\"), exports.isGeneratorFunction = function (genFun) {\n    var ctor = \"function\" == typeof genFun && genFun.constructor;\n    return !!ctor && (ctor === GeneratorFunction || \"GeneratorFunction\" === (ctor.displayName || ctor.name));\n  }, exports.mark = function (genFun) {\n    return Object.setPrototypeOf ? Object.setPrototypeOf(genFun, GeneratorFunctionPrototype) : (genFun.__proto__ = GeneratorFunctionPrototype, define(genFun, toStringTagSymbol, \"GeneratorFunction\")), genFun.prototype = Object.create(Gp), genFun;\n  }, exports.awrap = function (arg) {\n    return {\n      __await: arg\n    };\n  }, defineIteratorMethods(AsyncIterator.prototype), define(AsyncIterator.prototype, asyncIteratorSymbol, function () {\n    return this;\n  }), exports.AsyncIterator = AsyncIterator, exports.async = function (innerFn, outerFn, self, tryLocsList, PromiseImpl) {\n    void 0 === PromiseImpl && (PromiseImpl = Promise);\n    var iter = new AsyncIterator(wrap(innerFn, outerFn, self, tryLocsList), PromiseImpl);\n    return exports.isGeneratorFunction(outerFn) ? iter : iter.next().then(function (result) {\n      return result.done ? result.value : iter.next();\n    });\n  }, defineIteratorMethods(Gp), define(Gp, toStringTagSymbol, \"Generator\"), define(Gp, iteratorSymbol, function () {\n    return this;\n  }), define(Gp, \"toString\", function () {\n    return \"[object Generator]\";\n  }), exports.keys = function (object) {\n    var keys = [];\n    for (var key in object) {\n      keys.push(key);\n    }\n    return keys.reverse(), function next() {\n      for (; keys.length;) {\n        var key = keys.pop();\n        if (key in object) return next.value = key, next.done = !1, next;\n      }\n      return next.done = !0, next;\n    };\n  }, exports.values = values, Context.prototype = {\n    constructor: Context,\n    reset: function reset(skipTempReset) {\n      if (this.prev = 0, this.next = 0, this.sent = this._sent = undefined, this.done = !1, this.delegate = null, this.method = \"next\", this.arg = undefined, this.tryEntries.forEach(resetTryEntry), !skipTempReset) for (var name in this) {\n        \"t\" === name.charAt(0) && hasOwn.call(this, name) && !isNaN(+name.slice(1)) && (this[name] = undefined);\n      }\n    },\n    stop: function stop() {\n      this.done = !0;\n      var rootRecord = this.tryEntries[0].completion;\n      if (\"throw\" === rootRecord.type) throw rootRecord.arg;\n      return this.rval;\n    },\n    dispatchException: function dispatchException(exception) {\n      if (this.done) throw exception;\n      var context = this;\n      function handle(loc, caught) {\n        return record.type = \"throw\", record.arg = exception, context.next = loc, caught && (context.method = \"next\", context.arg = undefined), !!caught;\n      }\n      for (var i = this.tryEntries.length - 1; i >= 0; --i) {\n        var entry = this.tryEntries[i],\n          record = entry.completion;\n        if (\"root\" === entry.tryLoc) return handle(\"end\");\n        if (entry.tryLoc <= this.prev) {\n          var hasCatch = hasOwn.call(entry, \"catchLoc\"),\n            hasFinally = hasOwn.call(entry, \"finallyLoc\");\n          if (hasCatch && hasFinally) {\n            if (this.prev < entry.catchLoc) return handle(entry.catchLoc, !0);\n            if (this.prev < entry.finallyLoc) return handle(entry.finallyLoc);\n          } else if (hasCatch) {\n            if (this.prev < entry.catchLoc) return handle(entry.catchLoc, !0);\n          } else {\n            if (!hasFinally) throw new Error(\"try statement without catch or finally\");\n            if (this.prev < entry.finallyLoc) return handle(entry.finallyLoc);\n          }\n        }\n      }\n    },\n    abrupt: function abrupt(type, arg) {\n      for (var i = this.tryEntries.length - 1; i >= 0; --i) {\n        var entry = this.tryEntries[i];\n        if (entry.tryLoc <= this.prev && hasOwn.call(entry, \"finallyLoc\") && this.prev < entry.finallyLoc) {\n          var finallyEntry = entry;\n          break;\n        }\n      }\n      finallyEntry && (\"break\" === type || \"continue\" === type) && finallyEntry.tryLoc <= arg && arg <= finallyEntry.finallyLoc && (finallyEntry = null);\n      var record = finallyEntry ? finallyEntry.completion : {};\n      return record.type = type, record.arg = arg, finallyEntry ? (this.method = \"next\", this.next = finallyEntry.finallyLoc, ContinueSentinel) : this.complete(record);\n    },\n    complete: function complete(record, afterLoc) {\n      if (\"throw\" === record.type) throw record.arg;\n      return \"break\" === record.type || \"continue\" === record.type ? this.next = record.arg : \"return\" === record.type ? (this.rval = this.arg = record.arg, this.method = \"return\", this.next = \"end\") : \"normal\" === record.type && afterLoc && (this.next = afterLoc), ContinueSentinel;\n    },\n    finish: function finish(finallyLoc) {\n      for (var i = this.tryEntries.length - 1; i >= 0; --i) {\n        var entry = this.tryEntries[i];\n        if (entry.finallyLoc === finallyLoc) return this.complete(entry.completion, entry.afterLoc), resetTryEntry(entry), ContinueSentinel;\n      }\n    },\n    \"catch\": function _catch(tryLoc) {\n      for (var i = this.tryEntries.length - 1; i >= 0; --i) {\n        var entry = this.tryEntries[i];\n        if (entry.tryLoc === tryLoc) {\n          var record = entry.completion;\n          if (\"throw\" === record.type) {\n            var thrown = record.arg;\n            resetTryEntry(entry);\n          }\n          return thrown;\n        }\n      }\n      throw new Error(\"illegal catch attempt\");\n    },\n    delegateYield: function delegateYield(iterable, resultName, nextLoc) {\n      return this.delegate = {\n        iterator: values(iterable),\n        resultName: resultName,\n        nextLoc: nextLoc\n      }, \"next\" === this.method && (this.arg = undefined), ContinueSentinel;\n    }\n  }, exports;\n}\nmodule.exports = _regeneratorRuntime, module.exports.__esModule = true, module.exports[\"default\"] = module.exports;","function _setPrototypeOf(o, p) {\n  module.exports = _setPrototypeOf = Object.setPrototypeOf ? Object.setPrototypeOf.bind() : function _setPrototypeOf(o, p) {\n    o.__proto__ = p;\n    return o;\n  }, module.exports.__esModule = true, module.exports[\"default\"] = module.exports;\n  return _setPrototypeOf(o, p);\n}\nmodule.exports = _setPrototypeOf, module.exports.__esModule = true, module.exports[\"default\"] = module.exports;","function _typeof(obj) {\n  \"@babel/helpers - typeof\";\n\n  return (module.exports = _typeof = \"function\" == typeof Symbol && \"symbol\" == typeof Symbol.iterator ? function (obj) {\n    return typeof obj;\n  } : function (obj) {\n    return obj && \"function\" == typeof Symbol && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj;\n  }, module.exports.__esModule = true, module.exports[\"default\"] = module.exports), _typeof(obj);\n}\nmodule.exports = _typeof, module.exports.__esModule = true, module.exports[\"default\"] = module.exports;","var getPrototypeOf = require(\"./getPrototypeOf.js\");\nvar setPrototypeOf = require(\"./setPrototypeOf.js\");\nvar isNativeFunction = require(\"./isNativeFunction.js\");\nvar construct = require(\"./construct.js\");\nfunction _wrapNativeSuper(Class) {\n  var _cache = typeof Map === \"function\" ? new Map() : undefined;\n  module.exports = _wrapNativeSuper = function _wrapNativeSuper(Class) {\n    if (Class === null || !isNativeFunction(Class)) return Class;\n    if (typeof Class !== \"function\") {\n      throw new TypeError(\"Super expression must either be null or a function\");\n    }\n    if (typeof _cache !== \"undefined\") {\n      if (_cache.has(Class)) return _cache.get(Class);\n      _cache.set(Class, Wrapper);\n    }\n    function Wrapper() {\n      return construct(Class, arguments, getPrototypeOf(this).constructor);\n    }\n    Wrapper.prototype = Object.create(Class.prototype, {\n      constructor: {\n        value: Wrapper,\n        enumerable: false,\n        writable: true,\n        configurable: true\n      }\n    });\n    return setPrototypeOf(Wrapper, Class);\n  }, module.exports.__esModule = true, module.exports[\"default\"] = module.exports;\n  return _wrapNativeSuper(Class);\n}\nmodule.exports = _wrapNativeSuper, module.exports.__esModule = true, module.exports[\"default\"] = module.exports;","// TODO(Babel 8): Remove this file.\n\nvar runtime = require(\"../helpers/regeneratorRuntime\")();\nmodule.exports = runtime;\n\n// Copied from https://github.com/facebook/regenerator/blob/main/packages/runtime/runtime.js#L736=\ntry {\n  regeneratorRuntime = runtime;\n} catch (accidentalStrictMode) {\n  if (typeof globalThis === \"object\") {\n    globalThis.regeneratorRuntime = runtime;\n  } else {\n    Function(\"r\", \"regeneratorRuntime = r\")(runtime);\n  }\n}\n","export default function _arrayLikeToArray(arr, len) {\n  if (len == null || len > arr.length) len = arr.length;\n  for (var i = 0, arr2 = new Array(len); i < len; i++) {\n    arr2[i] = arr[i];\n  }\n  return arr2;\n}","export default function _assertThisInitialized(self) {\n  if (self === void 0) {\n    throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\");\n  }\n  return self;\n}","function asyncGeneratorStep(gen, resolve, reject, _next, _throw, key, arg) {\n  try {\n    var info = gen[key](arg);\n    var value = info.value;\n  } catch (error) {\n    reject(error);\n    return;\n  }\n  if (info.done) {\n    resolve(value);\n  } else {\n    Promise.resolve(value).then(_next, _throw);\n  }\n}\nexport default function _asyncToGenerator(fn) {\n  return function () {\n    var self = this,\n      args = arguments;\n    return new Promise(function (resolve, reject) {\n      var gen = fn.apply(self, args);\n      function _next(value) {\n        asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"next\", value);\n      }\n      function _throw(err) {\n        asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"throw\", err);\n      }\n      _next(undefined);\n    });\n  };\n}","export default function _classCallCheck(instance, Constructor) {\n  if (!(instance instanceof Constructor)) {\n    throw new TypeError(\"Cannot call a class as a function\");\n  }\n}","function _defineProperties(target, props) {\n  for (var i = 0; i < props.length; i++) {\n    var descriptor = props[i];\n    descriptor.enumerable = descriptor.enumerable || false;\n    descriptor.configurable = true;\n    if (\"value\" in descriptor) descriptor.writable = true;\n    Object.defineProperty(target, descriptor.key, descriptor);\n  }\n}\nexport default function _createClass(Constructor, protoProps, staticProps) {\n  if (protoProps) _defineProperties(Constructor.prototype, protoProps);\n  if (staticProps) _defineProperties(Constructor, staticProps);\n  Object.defineProperty(Constructor, \"prototype\", {\n    writable: false\n  });\n  return Constructor;\n}","export default function _defineProperty(obj, key, value) {\n  if (key in obj) {\n    Object.defineProperty(obj, key, {\n      value: value,\n      enumerable: true,\n      configurable: true,\n      writable: true\n    });\n  } else {\n    obj[key] = value;\n  }\n  return obj;\n}","import superPropBase from \"./superPropBase.js\";\nexport default function _get() {\n  if (typeof Reflect !== \"undefined\" && Reflect.get) {\n    _get = Reflect.get.bind();\n  } else {\n    _get = function _get(target, property, receiver) {\n      var base = superPropBase(target, property);\n      if (!base) return;\n      var desc = Object.getOwnPropertyDescriptor(base, property);\n      if (desc.get) {\n        return desc.get.call(arguments.length < 3 ? target : receiver);\n      }\n      return desc.value;\n    };\n  }\n  return _get.apply(this, arguments);\n}","import getPrototypeOf from \"./getPrototypeOf.js\";\nexport default function _superPropBase(object, property) {\n  while (!Object.prototype.hasOwnProperty.call(object, property)) {\n    object = getPrototypeOf(object);\n    if (object === null) break;\n  }\n  return object;\n}","export default function _getPrototypeOf(o) {\n  _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf.bind() : function _getPrototypeOf(o) {\n    return o.__proto__ || Object.getPrototypeOf(o);\n  };\n  return _getPrototypeOf(o);\n}","import setPrototypeOf from \"./setPrototypeOf.js\";\nexport default function _inherits(subClass, superClass) {\n  if (typeof superClass !== \"function\" && superClass !== null) {\n    throw new TypeError(\"Super expression must either be null or a function\");\n  }\n  subClass.prototype = Object.create(superClass && superClass.prototype, {\n    constructor: {\n      value: subClass,\n      writable: true,\n      configurable: true\n    }\n  });\n  Object.defineProperty(subClass, \"prototype\", {\n    writable: false\n  });\n  if (superClass) setPrototypeOf(subClass, superClass);\n}","import objectWithoutPropertiesLoose from \"./objectWithoutPropertiesLoose.js\";\nexport default function _objectWithoutProperties(source, excluded) {\n  if (source == null) return {};\n  var target = objectWithoutPropertiesLoose(source, excluded);\n  var key, i;\n  if (Object.getOwnPropertySymbols) {\n    var sourceSymbolKeys = Object.getOwnPropertySymbols(source);\n    for (i = 0; i < sourceSymbolKeys.length; i++) {\n      key = sourceSymbolKeys[i];\n      if (excluded.indexOf(key) >= 0) continue;\n      if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue;\n      target[key] = source[key];\n    }\n  }\n  return target;\n}","export default function _objectWithoutPropertiesLoose(source, excluded) {\n  if (source == null) return {};\n  var target = {};\n  var sourceKeys = Object.keys(source);\n  var key, i;\n  for (i = 0; i < sourceKeys.length; i++) {\n    key = sourceKeys[i];\n    if (excluded.indexOf(key) >= 0) continue;\n    target[key] = source[key];\n  }\n  return target;\n}","import _typeof from \"./typeof.js\";\nimport assertThisInitialized from \"./assertThisInitialized.js\";\nexport default function _possibleConstructorReturn(self, call) {\n  if (call && (_typeof(call) === \"object\" || typeof call === \"function\")) {\n    return call;\n  } else if (call !== void 0) {\n    throw new TypeError(\"Derived constructors may only return object or undefined\");\n  }\n  return assertThisInitialized(self);\n}","export default function _setPrototypeOf(o, p) {\n  _setPrototypeOf = Object.setPrototypeOf ? Object.setPrototypeOf.bind() : function _setPrototypeOf(o, p) {\n    o.__proto__ = p;\n    return o;\n  };\n  return _setPrototypeOf(o, p);\n}","import arrayWithHoles from \"./arrayWithHoles.js\";\nimport iterableToArrayLimit from \"./iterableToArrayLimit.js\";\nimport unsupportedIterableToArray from \"./unsupportedIterableToArray.js\";\nimport nonIterableRest from \"./nonIterableRest.js\";\nexport default function _slicedToArray(arr, i) {\n  return arrayWithHoles(arr) || iterableToArrayLimit(arr, i) || unsupportedIterableToArray(arr, i) || nonIterableRest();\n}","export default function _arrayWithHoles(arr) {\n  if (Array.isArray(arr)) return arr;\n}","export default function _iterableToArrayLimit(arr, i) {\n  var _i = arr == null ? null : typeof Symbol !== \"undefined\" && arr[Symbol.iterator] || arr[\"@@iterator\"];\n  if (_i == null) return;\n  var _arr = [];\n  var _n = true;\n  var _d = false;\n  var _s, _e;\n  try {\n    for (_i = _i.call(arr); !(_n = (_s = _i.next()).done); _n = true) {\n      _arr.push(_s.value);\n      if (i && _arr.length === i) break;\n    }\n  } catch (err) {\n    _d = true;\n    _e = err;\n  } finally {\n    try {\n      if (!_n && _i[\"return\"] != null) _i[\"return\"]();\n    } finally {\n      if (_d) throw _e;\n    }\n  }\n  return _arr;\n}","export default function _nonIterableRest() {\n  throw new TypeError(\"Invalid attempt to destructure non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n}","import arrayWithoutHoles from \"./arrayWithoutHoles.js\";\nimport iterableToArray from \"./iterableToArray.js\";\nimport unsupportedIterableToArray from \"./unsupportedIterableToArray.js\";\nimport nonIterableSpread from \"./nonIterableSpread.js\";\nexport default function _toConsumableArray(arr) {\n  return arrayWithoutHoles(arr) || iterableToArray(arr) || unsupportedIterableToArray(arr) || nonIterableSpread();\n}","import arrayLikeToArray from \"./arrayLikeToArray.js\";\nexport default function _arrayWithoutHoles(arr) {\n  if (Array.isArray(arr)) return arrayLikeToArray(arr);\n}","export default function _iterableToArray(iter) {\n  if (typeof Symbol !== \"undefined\" && iter[Symbol.iterator] != null || iter[\"@@iterator\"] != null) return Array.from(iter);\n}","export default function _nonIterableSpread() {\n  throw new TypeError(\"Invalid attempt to spread non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n}","export default function _typeof(obj) {\n  \"@babel/helpers - typeof\";\n\n  return _typeof = \"function\" == typeof Symbol && \"symbol\" == typeof Symbol.iterator ? function (obj) {\n    return typeof obj;\n  } : function (obj) {\n    return obj && \"function\" == typeof Symbol && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj;\n  }, _typeof(obj);\n}","import arrayLikeToArray from \"./arrayLikeToArray.js\";\nexport default function _unsupportedIterableToArray(o, minLen) {\n  if (!o) return;\n  if (typeof o === \"string\") return arrayLikeToArray(o, minLen);\n  var n = Object.prototype.toString.call(o).slice(8, -1);\n  if (n === \"Object\" && o.constructor) n = o.constructor.name;\n  if (n === \"Map\" || n === \"Set\") return Array.from(o);\n  if (n === \"Arguments\" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return arrayLikeToArray(o, minLen);\n}","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tvar cachedModule = __webpack_module_cache__[moduleId];\n\tif (cachedModule !== undefined) {\n\t\treturn cachedModule.exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\t// no module.id needed\n\t\t// no module.loaded needed\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n","// getDefaultExport function for compatibility with non-harmony modules\n__webpack_require__.n = function(module) {\n\tvar getter = module && module.__esModule ?\n\t\tfunction() { return module['default']; } :\n\t\tfunction() { return module; };\n\t__webpack_require__.d(getter, { a: getter });\n\treturn getter;\n};","// define getter functions for harmony exports\n__webpack_require__.d = function(exports, definition) {\n\tfor(var key in definition) {\n\t\tif(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {\n\t\t\tObject.defineProperty(exports, key, { enumerable: true, get: definition[key] });\n\t\t}\n\t}\n};","__webpack_require__.g = (function() {\n\tif (typeof globalThis === 'object') return globalThis;\n\ttry {\n\t\treturn this || new Function('return this')();\n\t} catch (e) {\n\t\tif (typeof window === 'object') return window;\n\t}\n})();","__webpack_require__.o = function(obj, prop) { return Object.prototype.hasOwnProperty.call(obj, prop); }","// define __esModule on exports\n__webpack_require__.r = function(exports) {\n\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n\t}\n\tObject.defineProperty(exports, '__esModule', { value: true });\n};","import {\n  OktaAuthOptionsConstructor,\n} from '../base';\n\nimport {\n  IdxStorageManagerConstructor,\n  IdxTransactionManagerConstructor,\n  OktaAuthIdxOptions,\n  createIdxTransactionManager,\n  createOktaAuthIdx,\n  createIdxStorageManager,\n  createIdxOptionsConstructor\n} from '../idx';\n\nconst OptionsConstructor: OktaAuthOptionsConstructor<OktaAuthIdxOptions> = createIdxOptionsConstructor();\nconst StorageManager: IdxStorageManagerConstructor = createIdxStorageManager();\nconst TransactionManager: IdxTransactionManagerConstructor = createIdxTransactionManager();\n\n\nconst OktaAuthIdx = createOktaAuthIdx(StorageManager, OptionsConstructor, TransactionManager);\n\n// eslint-disable-next-line @typescript-eslint/no-empty-interface\nexport interface OktaAuthOptions extends OktaAuthIdxOptions {}\n\nclass OktaAuth extends OktaAuthIdx {\n  constructor(options: OktaAuthOptions) {\n    super(options);\n  }\n}\n\nexport default OktaAuth;\nexport { OktaAuth };\nexport * from './common';\nexport * from '../idx';\n"],"names":["root","factory","exports","module","define","amd","self","createOktaAuthBase","OptionsConstructor","OktaAuthBase","options","length","this","removeNils","emitter","Emitter","features","constants","prototype","Object","assign","createBaseOptionsConstructor","args","devMode","target","i","arguments","source","key","api","init","converter","defaultAttributes","set","value","attributes","document","expires","Date","now","toUTCString","encodeURIComponent","replace","decodeURIComponent","escape","stringifiedAttributes","attributeName","split","cookie","write","create","get","cookies","jar","parts","slice","join","foundKey","read","e","remove","withAttributes","withConverter","freeze","path","storageUtil","browserHasLocalStorage","storage","getLocalStorage","testStorage","browserHasSessionStorage","getSessionStorage","testStorageType","storageType","supported","getStorageByType","storageProvider","getCookieStorage","getInMemoryStorage","AuthSdkError","findStorageType","types","curType","nextType","shift","warn","isIE11OrLess","window","onstorage","localStorage","sessionStorage","secure","sameSite","sessionCookie","getItem","setItem","expiresAt","removeItem","delete","useSeparateCookies","data","keys","forEach","k","indexOf","JSON","parse","stringify","existingValues","storageKey","valueToStore","inMemoryStore","name","cookieOptions","Cookies","isMessageFromCorrectSource","iframe","event","contentWindow","fingerprint","sdk","isFingerprintSupported","Promise","reject","timeout","listener","container","body","resolve","createElement","style","display","origin","getIssuerOrigin","msg","err","type","postMessage","addListener","src","appendChild","setTimeout","finally","clearTimeout","removeListener","contains","parentElement","removeChild","STATE_TOKEN_KEY_NAME","DEFAULT_POLLING_DELAY","DEFAULT_MAX_CLOCK_SKEW","DEFAULT_CACHE_DURATION","TOKEN_STORAGE_NAME","CACHE_STORAGE_NAME","PKCE_STORAGE_NAME","TRANSACTION_STORAGE_NAME","SHARED_TRANSACTION_STORAGE_NAME","ORIGINAL_URI_STORAGE_NAME","IDX_RESPONSE_STORAGE_NAME","ACCESS_TOKEN_STORAGE_KEY","ID_TOKEN_STORAGE_KEY","REFRESH_TOKEN_STORAGE_KEY","REFERRER_PATH_STORAGE_KEY","MIN_VERIFIER_LENGTH","MAX_VERIFIER_LENGTH","DEFAULT_CODE_CHALLENGE_METHOD","IDX_API_VERSION","INITIAL_AUTH_STATE","DEFAULT_PENDING","updateAuthStatePromise","canceledTimes","EVENT_AUTH_STATE_CHANGE","AuthStateManager","_sdk","_pending","_authState","_logOptions","_prevAuthState","_transformQueue","PromiseQueue","quiet","tokenManager","on","EVENT_ADDED","token","_setLogOptions","updateAuthState","EVENT_REMOVED","transformAuthState","log","status","getConsole","group","groupEnd","emitAuthStateChange","authState","prevState","state","isAuthenticated","idToken","accessToken","error","emit","finalPromise","origPromise","then","curPromise","getAuthState","cancel","cancelablePromise","PCancelable","_","onCancel","shouldReject","emitAndResolve","isCanceled","getTokensSync","refreshToken","push","catch","handler","off","PROMISE_RESOLVED_TRUE","PROMISE_RESOLVED_VOID","sleep","time","resolveWith","res","randomToken","Math","random","toString","substring","lastMs","additional","microSeconds","ms","getTime","NativeMethod","channelName","messagesCallback","bc","BroadcastChannel","subFns","onmessage","close","channelState","onMessage","fn","messageJson","canBeUsed","_pubkey","Error","averageResponseTime","ObliviousSet","ttl","map","Map","_to","has","add","_this","obliviousSet","olderThen","iterator","Symbol","next","removeTooOldValues","clear","originalOptions","undefined","webWorkerSupport","idb","fallbackInterval","onclose","localstorage","removeTimeout","methods","node","maxParallelWrites","useFastPath","OBJECT_STORE_ID","TRANSACTION_SETTINGS","durability","getIdb","indexedDB","mozIndexedDB","webkitIndexedDB","msIndexedDB","commitIndexedDBTransaction","tx","commit","_readLoop","closed","readNewMessages","db","lastCursorId","transaction","objectStore","ret","keyRangeValue","IDBKeyRange","bound","Infinity","getAll","getAllRequest","rej","onerror","onsuccess","result","openCursorRequest","openCursor","ev","cursor","id","getMessagesHigherThan","newerMessages","useMessages","filter","msgObj","uuid","eMIs","messagesCallbackTime","_filterMessage","sort","msgObjA","msgObjB","IndexedDBMethod","dbName","openRequest","open","onupgradeneeded","createObjectStore","keyPath","autoIncrement","createDatabase","writeBlockPromise","readQueuePromises","readerUuid","writeObject","oncomplete","writeMessage","floor","msgObk","tooOld","ids","all","deleteRequest","removeMessagesById","cleanOldMessages","ls","LocalstorageMethod","newValue","addEventListener","addStorageEventListener","removeEventListener","writeObj","createEvent","initEvent","dispatchEvent","userAgent","navigator","toLowerCase","includes","defaultTime","SIMULATE_CHANNELS","Set","SimulateMethod","Array","from","channel","METHODS","OPEN_BROADCAST_CHANNELS","lastId","maybePromise","obj","method","chooseMethods","concat","Boolean","find","m","useMethod","_iL","_onML","_addEL","message","internal","_uMP","_befC","_prepP","s","_state","_post","broadcastChannel","sendPromise","_hasMessageListeners","_addListenerObject","listenerFn","listenerObject","minMessageTime","_startListening","_removeListenerObject","o","_stopListening","postInternal","listenObj","awaitPrepare","isClosed","USE_METHOD","call","process","exit","console","trace","WorkerGlobalScope","oldClose","bind","LISTENERS","startedListening","runAll","promises","sendLeaderMessage","leaderElector","action","msgJson","context","beLeader","isLeader","_hasLeader","unloadFn","run","die","_unl","isLeaderListener","_dpLC","_dpL","_lstns","LeaderElectionWebLock","_options","isDead","_wKMC","lN","hasLeader","_this2","locks","query","relevantLocks","held","lock","awaitLeadership","_this3","_wLMP","c","AbortController","returnPromise","request","signal","onduplicate","_fn","_this4","uFn","abort","LeaderElection","_aplQ","_aplQC","hasLeaderListener","createLeaderElection","_leaderElector","responseTime","elector","applyOnce","isFromFallbackInterval","stopCriteriaPromiseResolve","stopCriteria","stopCriteriaPromise","handleMessage","waitForAnswerTime","race","applyRun","_aLP","resolved","finish","whenDeathListener","tryOnFallBack","LeaderElectionService","onLeaderDuplicate","onLeader","canStart","electionChannelName","started","isBrowser","AutoRenewService","renewTimeQueue","onTokenExpiredHandler","firstTime","syncStorage","tokens","getStorage","isRefreshToken","hasExpired","autoRenew","shouldThrottleRenew","emitError","renew","autoRemove","EVENT_EXPIRED","isStarted","processExpiredTokens","SyncStorageService","onTokenAddedHandler","onTokenRemovedHandler","onTokenRenewedHandler","onSetStorageHandler","onSyncMessageHandler","syncChannelName","EVENT_RENEWED","EVENT_SET_STORAGE","enablePostMessage","oldToken","setStorage","emitAdded","setExpireEventTimeout","clearExpireEventTimeout","emitRemoved","emitRenewed","getNow","RenewOnTabActivationService","onPageVisbilityChange","_onPageVisbilityChange","hidden","lastHidden","tabInactivityDuration","getStorageKeyByType","renewOnTabActivation","AUTO_RENEW","SYNC_STORAGE","LEADER_ELECTION","RENEW_ON_TAB_ACTIVATION","ServiceManager","getOptions","broadcastChannelName","defaultOptions","clientId","services","knownServices","svc","createService","startServices","getService","values","some","srv","requiresLeadership","stopServices","entries","canStartService","start","stop","isLeaderRequired","service","createOktaAuthCore","StorageManagerConstructor","TransactionManagerConstructor","Base","WithStorage","mixinStorage","WithHttp","mixinHttp","WithSession","mixinSession","WithOAuth","mixinOAuth","mixinCore","authStateManager","serviceManager","isLoginRedirect","originalUri","handleLoginRedirect","setTokens","getOriginalUri","parseOAuthResponseFromUrl","oAuthResponse","storeTokensFromRedirect","removeOriginalUri","restoreOriginalUri","location","createCoreOptionsConstructor","createOAuthOptionsConstructor","createCoreStorageManager","createOAuthStorageManager","stringToBase64Url","str","base64ToBase64Url","btoa","b64","base64UrlToBase64","b64u","base64UrlToString","utf8","atob","stringToBuffer","buffer","Uint8Array","charCodeAt","base64UrlDecode","base64UrlToBuffer","bufferToBase64Url","bin","reduce","byte","String","fromCharCode","a","b","crypto","getOidcHash","TextEncoder","encode","webcrypto","arrayBuffer","firstHalf","hash","apply","verifyToken","clone","algo","use","cryptoKey","jwt","payload","b64Signature","signature","AuthApiError","xhr","meta","errorSummary","errorCode","errorLink","errorId","errorCauses","CustomError","AuthPollStopError","_construct","Parent","Class","Reflect","construct","sham","Proxy","valueOf","instance","Function","setPrototypeOf","_wrapNativeSuper","_cache","TypeError","Wrapper","getPrototypeOf","constructor","enumerable","writable","configurable","OAuthError","summary","resp","error_description","WWWAuthError","scheme","parameters","UNKNOWN_ERROR","errorDescription","realm","header","match","regex","firstSpace","remaining","params","exec","headers","isFunction","isAuthApiError","isOAuthError","isWWWAuthError","isWindowsPhone","documentMode","getUserAgent","agent","test","isPopupPostMessageSupported","isIE8or9","isWebCryptoSubtleSupported","isTokenVerifySupported","hasTextEncoder","isPKCESupported","isHTTPS","protocol","isLocalhost","hostname","isDPoPSupported","isIOS","MSStream","OktaUserAgent","environments","SDK_VERSION","maybeAddNodeEnvironment","env","versions","version","setRequestHeader","authClient","headerName","headerValue","_oktaUserAgent","http","issuer","opts","url","toQueryString","appJsonContentTypeRegex","contentType","param","fetchPromise","global","fetch","crossFetch","credentials","withCredentials","response","ok","json","text","readData","isObject","pair","responseText","responseType","responseJSON","formatResult","createHttpOptionsConstructor","transformErrorXHR","httpRequestClient","fetchRequest","httpRequestInterceptors","createStorageOptionsConstructor","formatError","serverErr","isString","wwwAuthHeader","wwwAuthErr","max_age","acr_values","httpRequest","interceptor","saveAuthnState","httpCache","storageManager","getHttpCache","cacheResponse","cachedResponse","getHttpHeader","ajaxOptions","isArray","item","stateToken","updateStorage","isAbsoluteUrl","post","postOptions","createIdxTransactionManager","clearIdxResponse","saveLastResponse","getIdxResponseStorage","storedValue","isRawIdxResponse","rawIdxResponse","stateHandle","interactionHandle","useGenericRemediator","clearStorage","createTransactionManager","authenticate","password","authenticator","AuthenticatorKey","flow","Authenticator","OktaPassword","passcode","revokeSessions","idxRemediationValue","inputs","form","required","input","label","formatAuthenticator","incoming","isAuthenticator","compareAuthenticators","auth1","auth2","findMatchedOption","authenticators","option","relatesTo","transactionManager","load","flowSpec","getFlowSpecification","actions","EmailVerifyCallbackError","otp","isEmailVerifyCallbackError","isEmailVerifyCallback","urlPath","parseEmailVerifyCallback","urlParamsToObject","handleEmailVerifyCallback","search","idx","canProceed","proceed","createOktaAuthIdx","Core","mixinIdx","createIdxAPI","setRemediatorsCtx","remediators","boundStartTransaction","startTransaction","interact","introspect","makeIdxResponse","makeIdxState","register","poll","recoverPassword","handleInteractionCodeRedirect","isInteractionRequired","isInteractionRequiredError","getSavedTransactionMeta","createTransactionMeta","getTransactionMeta","saveTransactionMeta","clearTransactionMeta","isTransactionMetaValid","setFlow","getFlow","unlockAccount","AuthenticationFlow","Identify","SelectAuthenticatorAuthenticate","SelectAuthenticatorEnroll","AuthenticatorEnrollmentData","AuthenticatorVerificationData","EnrollAuthenticator","ChallengeAuthenticator","ChallengePoll","ReEnrollAuthenticator","ReEnrollAuthenticatorWarning","EnrollPoll","SelectEnrollmentChannel","EnrollmentChannelData","RedirectIdp","Skip","PasswordRecoveryFlow","ResetAuthenticator","RegistrationFlow","SelectEnrollProfile","EnrollProfile","AccountUnlockFlow","SelectAuthenticatorUnlockAccount","oktaAuth","codeVerifier","savedState","URL","searchParams","interactionCode","exchangeCodeForTokens","isFieldMutable","field","mutable","divideSingleActionParamsByMutability","defaultParamsForAction","neededParamsForAction","immutableParamsForAction","generateDirectFetch","actionDefinition","toPersist","href","accepts","idxResponse","stepUp","generator","actionList","neededParams","defaultParams","immutableParams","divideActionParamsByMutability","jsonpathRegex","SKIP_FIELDS","expandRelatesTo","steps","step","groups","index","lastStep","pop","curr","hasOwnProperty","jsonpath","innerValue","parseIdxResponse","remediationData","remediation","authenticatorChallenge","remediations","rel","remediationActions","remediationValue","generateIdxAction","generateRemediationFunctions","actionFn","convertRemediationAction","fieldValue","info","subField","parseNonRemediations","requestDidSucceed","neededToProceed","remediationChoice","paramsFromUser","remediationChoiceObject","rawIdxState","successWithInteractionCode","parsersForVersion","v1","validateVersionConfig","mixinMinimalIdx","webauthn","mixinMinimalOAuth","prepareTokenParams","decode","decodeToken","pkce","hasResponseType","createMinimalOktaAuthIdx","getResponse","baseUrl","getOAuthBaseUrl","redirectUri","scopes","codeChallenge","codeChallengeMethod","activationToken","recoveryToken","maxAge","acrValues","nonce","clientSecret","client_id","scope","redirect_uri","code_challenge","code_challenge_method","activation_token","recovery_token","client_secret","interaction_handle","newMeta","savedIdxResponse","loadIdxResponse","domain","getOAuthDomain","Accept","createIdxOptionsConstructor","startPolling","availablePollingRemeditaions","Number","isInteger","refresh","nextStep","hasSavedInteractionHandle","autoRemediate","enabledFeatures","IdxFeature","authenticatorData","getAuthenticatorData","getAuthenticatorFromRemediation","methodType","phoneNumber","val","AuthenticatorData","valueKey","getAuthenticator","formatAuthenticatorData","authenticatorsData","mapAuthenticatorDataFromValues","enrollmentId","Remediator","formatAuthenticators","existing","acc","getRequiredValues","hasData","getAllValues","getData","titleCase","entry","_authClient","_context","getName","getInputs","inputFromRemediation","visible","messages","alias","aliases","inputsFromRemediation","inputsFromRemediator","authenticatorFromRemediation","SelectAuthenticator","matchedOption","isCurrentAuthenticator","currentAuthenticator","isCurrentAuthenticatorEnrollment","currentAuthenticatorEnrollment","selectedAuthenticator","selectedOption","VerificationCodeAuthenticator","verificationCode","OktaVerifyTotp","totp","SecurityQuestionEnrollment","questionKey","answer","question","SecurityQuestionVerification","contextualData","enrolledQuestion","WebauthnEnrollment","clientData","attestation","WebauthnVerification","signatureData","VerifyAuthenticator","challengeData","authenticatorEnrollments","canVerify","mapCredentials","common","getCredentialsFromRemediation","userProfileFromValues","userProfile","canRemediate","attributeValues","errorRemediation","errors","email","unwrapFormValue","formKeys","unwrappedForm","GenericRemediator","endsWith","produces","rest","identifier","newPassword","idp","isRecoveryFlow","authenticatorMap","methodTypeOption","methodTypeValue","filterKey","skip","idxRemediation","r","cur","charAt","toUpperCase","getActionFromValues","resend","removeActionFromValues","removeActionFromOptions","actionName","remediate","remediator","getRemediator","actionFromValues","actionFromOptions","valuesWithoutExecutedAction","optionsWithoutExecutedAction","handleFailedResponse","canceled","terminal","isTerminalResponse","filterValuesForRemediation","getNextStep","getValuesAfterProceed","gr","initializeValues","initializeData","IdxStatus","getDataFromIntrospect","interactResponse","getDataFromRemediate","idxResponseFromRemediation","getTokens","ignoreSignature","urls","tokenResponse","finalizeData","shouldSaveResponse","shouldClearTransaction","clearSharedStorage","getEnabledFeatures","availableSteps","getAvailableSteps","getMessagesFromResponse","hasActions","hasErrors","class","saveIdxResponse","createIdxStorageManager","storageManagerOptions","transactionStorage","getTransactionStorage","SavedObject","tokenParams","pkceMeta","createOAuthMeta","savedMeta","validExistingMeta","save","muteWarning","isTransactionMetaValidForOptions","isTransactionMetaValidForFlow","ctx","_oktaAuth","newCtx","getMessagesFromIdxRemediationValue","messagesFromForm","optionValues","messagesFromOptions","globalMessages","fieldMessages","seen","filtered","i18n","remediatorMap","remediatorClass","remediationName","T","getRemediatorClass","stepObj","startsWith","split2","part1","part2","actionObj","idxRemediations","remediatorCandidates","canSkip","canSkipFn","canResend","canResendFn","getEnrolledCredentials","enrollement","credentialId","buildCredentialCreationOptions","activationData","publicKey","rp","user","displayName","challenge","pubKeyCredParams","authenticatorSelection","excludeCredentials","buildCredentialRequestOptions","userVerification","allowCredentials","getAttestation","credential","clientDataJSON","attestationObject","getAssertion","SdkClock","localOffset","parseInt","DEFAULT_OPTIONS","clearPendingRemoveTokens","expireEarlySeconds","TokenManager","storageOptions","getTokenStorage","clock","expireTimeouts","renewPromise","setExpireEventTimeoutAll","clearExpireEventTimeoutAll","getExpireTime","freshToken","EVENT_ERROR","expireTime","expireEventWait","max","expireEventTimeout","emitExpired","tokenStorage","validateToken","emitSetStorageEvent","getSync","isAccessToken","isIDToken","accessTokenCb","idTokenCb","refreshTokenCb","handleTokenCallback","getTokenType","handleAdded","handleRemoved","existingTokens","newToken","existingToken","removedToken","shouldRenew","refreshKey","renewTokens","tokenKey","removedTokens","pendingRemove","MAX_ENTRY_LIFETIME","enableSharedStorage","sharedStorage","getSharedTansactionStorage","clearTransactionFromSharedStorage","isTransactionMeta","dateCreated","saveTransactionToSharedStorage","loadTransactionFromSharedStorage","decodedToken","INDEXEDDB_NAME","DB_KEY","isDPoPNonceError","createJwt","claims","signingKey","head","algorithm","cryptoRandomValue","byteLen","v","generateKeyPair","modulusLength","publicExponent","hashAccessToken","invokeStoreMethod","req","store","storeKeyPair","pairId","keyPair","findKeyPair","clearDPoPKeyPair","clearAllDPoPKeyPairs","createDPoPKeyPair","keyPairId","clearDPoPKeyPairAfterRevoke","revokedToken","shouldClear","tokenType","dpopPairId","generateDPoPProof","kty","crv","n","x","y","alg","typ","jwk","htm","htu","iat","jti","ath","privateKey","generateDPoPForTokenRequest","convertTokenParamsToOAuthParams","oauthParams","idpScope","loginHint","prompt","responseMode","sessionToken","enrollAmrValues","mayBeArray","buildAuthorizeParams","oauthQueryParams","extraParams","validateOptions","authorizationCode","getPostData","code","makeTokenRequest","dpopKeyPair","dpop","proof","DPoP","dpopNonce","postToTokenEndpoint","tokenUrl","postRefreshToken","grant_type","refresh_token","getWellKnown","authServerUri","getKey","kid","wellKnown","jwksUri","cachedKey","getOAuthUrls","getDefaultTokenParams","getTokenOptions","handleResponseOptions","oauthResponse","handleOAuthResponse","enrollAuthenticator","prepareEnrollAuthenticatorParams","createEnrollAuthenticatorMeta","requestUrl","authorizeUrl","setLocation","createTokenAPI","queue","useQueue","getWithRedirectFn","getWithRedirect","parseFromUrlFn","parseFromUrl","parseFromUrlApi","_getHistory","history","_getLocation","_getDocument","getWithoutPrompt","getWithPopup","revoke","revokeToken","renewToken","renewTokensWithRefresh","getUserInfo","accessTokenObject","idTokenObject","verify","oidcIntrospect","createEndpoints","authorize","createOktaAuthOAuth","getToken","popupWindow","iframePromise","addPostMessageListener","iframeEl","loadFrame","oauthPromise","closePoller","setInterval","clearInterval","userinfoUrl","getDPoPAuthorizationHeaders","userInfo","sub","loadPopup","validateResponse","token_type","interaction_code","tokenDict","expiresIn","expires_in","access_token","id_token","accessJwt","idJwt","idTokenObj","exp","validationParams","hintMap","kind","TokenKind","iss","introspectUrl","introspection_endpoint","authHeader","token_type_hint","WithOriginalUri","browserStorage","getOriginalUriStorage","PKCE","generateVerifier","computeChallenge","handleLogin","_tokenQueue","endpoints","onExpiredToken","shouldRemove","additionalParams","setOriginalUri","accessTokenKey","refreshTokenKey","postLogoutRedirectUri","logoutUrl","idTokenHint","logoutUri","defaultUri","currentUri","revokeAccessToken","revokeRefreshToken","getSignOutRedirectUrl","closeSession","sessionClosed","append","clearTokensBeforeRedirect","addPendingRemoveFlags","Authorization","Dpop","wwwAuth","wwwErr","RegExp","assertValidConfig","removeTrailingSlash","revokeUrl","toAbsoluteUrl","ignoreLifetime","maxClockSkew","getResponseMode","defaultResponseMode","paramStr","nativeLoc","cleanOAuthResponseFromUrl","nativeHistory","nativeDoc","replaceState","title","pathname","removeSearch","removeHash","throwInvalidTokenError","getSingleToken","originalToken","refreshTokenObject","renewTokenParams","endpointParams","isSameRefreshToken","updateRefreshToken","isRefreshTokenInvalidError","removeRefreshToken","creds","getOptionsForSection","logServerSideMemoryStorageWarning","BaseStorageManager","isToken","isObjectWithProperties","isOAuthTransactionMeta","isPKCETransactionMeta","isIdxTransactionMeta","isCustomAuthTransactionMeta","eventTarget","attachEvent","detachEvent","popupTitle","responseHandler","timeoutId","getDefaultEnrollAuthenticatorParams","defaultRedirectUri","generateState","generateNonce","isAuthorizationCodeError","errorResponse","hasTokensInHash","hasAuthorizationCode","hashOrSearch","hasInteractionCode","hasErrorInUrl","isRedirectUri","uri","authParams","isCodeFlow","getHashOrSearch","codeFlow","genRandomString","getIssuer","oauthMeta","dec2hex","dec","substr","prefix","verifier","ceil","prepareParams","assertPKCESupport","errorMessage","validateCodeChallengeMethod","preparePKCE","defaults","isRefreshTokenError","plus2space","paramSplit","fragment","validateClaims","aud","acr","configuredIssuer","validationOptions","sdkCrypto","at_hash","sessionExists","session","getSession","omit","getLink","refreshSession","setCookieAndRedirect","redirectUrl","checkAccountSetupComplete","createSessionApi","exists","sectionName","overrideOptions","storageTypes","storageName","storageString","StorageManager","STORAGE_MANAGER_OPTIONS","cache","cookieSettings","getCookieSettings","running","thisObject","queueItem","isPromise","getNativeConsole","nativeConsole","deprecate","deprecateWrap","isoToUTCString","isoTime","UTC","randomCharset","delay","delim","splice","additionalArgs","extend","obj1","prop","cleaned","newobj","props","p","collection","found","linkName","altName","_links","link","isNumber","toRelativeUrl","trimmed","CancelError","reason","executor","_cancelHandlers","_isPending","_isCanceled","_rejectOnCancel","_promise","_reject","defineProperties","boolean","onFulfilled","onRejected","onFinally","userFn","arguments_","__self__","F","DOMException","support","iterable","blob","Blob","formData","viewClasses","isArrayBufferView","ArrayBuffer","isView","normalizeName","normalizeValue","iteratorFor","items","done","Headers","getOwnPropertyNames","consumed","bodyUsed","fileReaderReady","reader","onload","readBlobAsArrayBuffer","FileReader","promise","readAsArrayBuffer","bufferClone","buf","view","byteLength","Body","_initBody","_bodyInit","_bodyText","isPrototypeOf","_bodyBlob","FormData","_bodyFormData","URLSearchParams","DataView","_bodyArrayBuffer","rejected","readAsText","chars","readArrayBufferAsText","oldValue","callback","thisArg","Request","upcased","mode","referrer","trim","bytes","Response","bodyInit","statusText","redirectStatuses","redirect","RangeError","stack","aborted","XMLHttpRequest","abortXhr","rawHeaders","getAllResponseHeaders","line","responseURL","ontimeout","onabort","onreadystatechange","readyState","send","polyfill","defineProperty","ponyfill","E","once","evtArr","len","evts","liveEvents","ReferenceError","__esModule","Constructor","isNativeReflectConstruct","_defineProperties","descriptor","protoProps","staticProps","_getPrototypeOf","__proto__","subClass","superClass","_typeof","assertThisInitialized","_regeneratorRuntime","Op","hasOwn","$Symbol","iteratorSymbol","asyncIteratorSymbol","asyncIterator","toStringTagSymbol","toStringTag","wrap","innerFn","outerFn","tryLocsList","protoGenerator","Generator","Context","_invoke","arg","delegate","delegateResult","maybeInvokeDelegate","ContinueSentinel","sent","_sent","dispatchException","abrupt","record","tryCatch","GeneratorFunction","GeneratorFunctionPrototype","IteratorPrototype","getProto","NativeIteratorPrototype","Gp","defineIteratorMethods","AsyncIterator","PromiseImpl","invoke","__await","unwrapped","previousPromise","callInvokeWithMethodAndArg","resultName","nextLoc","pushTryEntry","locs","tryLoc","catchLoc","finallyLoc","afterLoc","tryEntries","resetTryEntry","completion","reset","iteratorMethod","isNaN","doneResult","isGeneratorFunction","genFun","ctor","mark","awrap","async","iter","object","reverse","skipTempReset","prev","rootRecord","rval","exception","handle","loc","caught","hasCatch","hasFinally","finallyEntry","complete","thrown","delegateYield","_setPrototypeOf","isNativeFunction","runtime","regeneratorRuntime","accidentalStrictMode","globalThis","_arrayLikeToArray","arr","arr2","_assertThisInitialized","asyncGeneratorStep","gen","_next","_throw","_asyncToGenerator","_classCallCheck","_createClass","_defineProperty","_get","property","receiver","base","desc","getOwnPropertyDescriptor","_inherits","_objectWithoutProperties","excluded","sourceKeys","getOwnPropertySymbols","sourceSymbolKeys","propertyIsEnumerable","_possibleConstructorReturn","_slicedToArray","_i","_s","_e","_arr","_n","_d","unsupportedIterableToArray","_toConsumableArray","arrayLikeToArray","_unsupportedIterableToArray","minLen","__webpack_module_cache__","__webpack_require__","moduleId","cachedModule","__webpack_modules__","getter","d","definition","g","TransactionManager","OktaAuth"],"sourceRoot":""}